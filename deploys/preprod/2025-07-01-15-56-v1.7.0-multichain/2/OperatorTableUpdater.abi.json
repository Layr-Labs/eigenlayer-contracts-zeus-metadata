{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_bn254CertificateVerifier",
          "type": "address",
          "internalType": "contract IBN254CertificateVerifier"
        },
        {
          "name": "_ecdsaCertificateVerifier",
          "type": "address",
          "internalType": "contract IECDSACertificateVerifier"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "GLOBAL_TABLE_ROOT_CERT_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "INITIAL_GLOBAL_TABLE_ROOT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_BPS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "bn254CertificateVerifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IBN254CertificateVerifier"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "confirmGlobalTableRoot",
      "inputs": [
        {
          "name": "globalTableRootCert",
          "type": "tuple",
          "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
          "components": [
            {
              "name": "referenceTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "messageHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "signature",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "apk",
              "type": "tuple",
              "internalType": "struct BN254.G2Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                }
              ]
            },
            {
              "name": "nonSignerWitnesses",
              "type": "tuple[]",
              "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
              "components": [
                {
                  "name": "operatorIndex",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "operatorInfoProof",
                  "type": "bytes",
                  "internalType": "bytes"
                },
                {
                  "name": "operatorInfo",
                  "type": "tuple",
                  "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                  "components": [
                    {
                      "name": "pubkey",
                      "type": "tuple",
                      "internalType": "struct BN254.G1Point",
                      "components": [
                        {
                          "name": "X",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "Y",
                          "type": "uint256",
                          "internalType": "uint256"
                        }
                      ]
                    },
                    {
                      "name": "weights",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "disableRoot",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ecdsaCertificateVerifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IECDSACertificateVerifier"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCertificateVerifier",
      "inputs": [
        {
          "name": "curveType",
          "type": "uint8",
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentGlobalTableRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGenerator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGeneratorReferenceTimestamp",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGlobalTableRootByTimestamp",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGlobalTableUpdateMessageHash",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getLatestReferenceBlockNumber",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLatestReferenceTimestamp",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReferenceBlockNumberByTimestamp",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReferenceTimestampByBlockNumber",
      "inputs": [
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "globalRootConfirmationThreshold",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_generator",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "_globalRootConfirmationThreshold",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "generatorInfo",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
          "components": [
            {
              "name": "operatorInfoTreeRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "numOperators",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "aggregatePubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWeights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "generatorConfig",
          "type": "tuple",
          "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
          "components": [
            {
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "maxStalenessPeriod",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isRootValid",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRootValidByTimestamp",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGenerator",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGlobalRootConfirmationThreshold",
      "inputs": [
        {
          "name": "bps",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateGenerator",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "generatorInfo",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
          "components": [
            {
              "name": "operatorInfoTreeRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "numOperators",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "aggregatePubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWeights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "generatorConfig",
          "type": "tuple",
          "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
          "components": [
            {
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "maxStalenessPeriod",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateOperatorTable",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "operatorSetIndex",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "proof",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "operatorTableBytes",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "GeneratorUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GlobalRootConfirmationThresholdUpdated",
      "inputs": [
        {
          "name": "bps",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GlobalRootDisabled",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NewGlobalTableRoot",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "indexed": true,
          "internalType": "uint32"
        },
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "CertificateInvalid",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "GlobalTableRootInFuture",
      "inputs": []
    },
    {
      "type": "error",
      "name": "GlobalTableRootStale",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidConfirmationThreshold",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCurveType",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidGlobalTableRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMessageHash",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSetProof",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidProofLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignatureLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "TableUpdateForPastTimestamp",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610100604052348015610010575f5ffd5b5060405161280438038061280483398101604081905261002f916101b9565b808484846001600160a01b03811661005a576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b0390811660805291821660a0521660c05261007b81610090565b60e052506100876100d6565b505050506102fe565b5f5f829050601f815111156100c3578260405163305a27a960e01b81526004016100ba91906102a3565b60405180910390fd5b80516100ce826102d8565b179392505050565b5f54610100900460ff161561013d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b60648201526084016100ba565b5f5460ff9081161461018c575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146101a2575f5ffd5b50565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f608085870312156101cc575f5ffd5b84516101d78161018e565b60208601519094506101e88161018e565b60408601519093506101f98161018e565b60608601519092506001600160401b03811115610214575f5ffd5b8501601f81018713610224575f5ffd5b80516001600160401b0381111561023d5761023d6101a5565b604051601f8201601f19908116603f011681016001600160401b038111828210171561026b5761026b6101a5565b604052818152828201602001891015610282575f5ffd5b8160208401602083015e5f6020838301015280935050505092959194509250565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156102f8575f198160200360031b1b821691505b50919050565b60805160a05160c05160e0516124946103705f395f61065801525f81816104e6015281816106f201526109b801525f818161050d015281816106b20152818161075e0152818161091301528181610c0a015261142201525f818161049b0152818161105c015261149201526124945ff3fe608060405234801561000f575f5ffd5b5060043610610208575f3560e01c8063715018a61161011f578063c3621f0a116100a9578063eaaed9d511610079578063eaaed9d5146105ae578063ed90dc60146105c1578063f2fde38b146105d4578063fabc1cbc146105e7578063fd967f47146105fa575f5ffd5b8063c3621f0a14610550578063c3be1e3314610563578063c5916a3914610576578063e944e0a81461059b575f5ffd5b80638da5cb5b116100ef5780638da5cb5b146104bd5780639ea94778146104ce578063ad0f9582146104e1578063b8c1430614610508578063c252aa221461052f575f5ffd5b8063715018a6146104735780637551ba341461047b57806377d90e9414610483578063886f119514610496575f5ffd5b80633ef6cd7a116101a0578063595c6a6711610170578063595c6a67146103e05780635ac86ab7146103e85780635c975abb1461040b57806364e1df84146104135780636f728c5014610448575f5ffd5b80633ef6cd7a146103695780634624e6a3146103905780634af81d7a146103a457806354fd4d50146103cb575f5ffd5b806323b7b5b2116101db57806323b7b5b2146102be57806328522d79146102e657806330ef41b41461031257806331a599d214610344575f5ffd5b8063136439dd1461020c578063193b79f3146102215780631e2ca260146102635780632370356c146102ab575b5f5ffd5b61021f61021a366004611655565b610603565b005b61024961022f36600461167d565b63ffffffff9081165f908152609b60205260409020541690565b60405163ffffffff90911681526020015b60405180910390f35b6040805180820182525f80825260209182015281518083019092526098546001600160a01b0381168352600160a01b900463ffffffff169082015260405161025a91906116bd565b61021f6102b93660046116dc565b61063d565b6102496102cc36600461167d565b63ffffffff9081165f908152609a60205260409020541690565b60975462010000900463ffffffff165f908152609960205260409020545b60405190815260200161025a565b610334610320366004611655565b5f908152609c602052604090205460ff1690565b604051901515815260200161025a565b60975462010000900463ffffffff9081165f908152609a602052604090205416610249565b6103047f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc81565b60975462010000900463ffffffff16610249565b6103047f2eddfa6e51c2e0ba986436883fbc224e895ba21e8fc61421f6b10d11e25d008e81565b6103d3610651565b60405161025a91906116f5565b61021f610681565b6103346103f636600461172a565b606654600160ff9092169190911b9081161490565b606654610304565b61033461042136600461167d565b63ffffffff165f908152609960209081526040808320548352609c90915290205460ff1690565b61045b610456366004611758565b610695565b6040516001600160a01b03909116815260200161025a565b61021f610734565b610249610745565b61021f610491366004611787565b6107d3565b61045b7f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b031661045b565b61021f6104dc3660046117e5565b6107e4565b61045b7f000000000000000000000000000000000000000000000000000000000000000081565b61045b7f000000000000000000000000000000000000000000000000000000000000000081565b60975461053d9061ffff1681565b60405161ffff909116815260200161025a565b61021f61055e366004611655565b610a1e565b610304610571366004611880565b610a93565b61030461058436600461167d565b63ffffffff165f9081526099602052604090205490565b61021f6105a93660046118cf565b610afb565b61021f6105bc36600461192b565b610b13565b61021f6105cf3660046119ab565b610d50565b61021f6105e2366004611a45565b610f64565b61021f6105f5366004611655565b610fda565b61053d61271081565b61060b611047565b60665481811681146106305760405163c61dca5d60e01b815260040160405180910390fd5b610639826110ea565b5050565b610645611127565b61064e81611181565b50565b606061067c7f00000000000000000000000000000000000000000000000000000000000000006111f3565b905090565b610689611047565b6106935f196110ea565b565b5f60028260028111156106aa576106aa611a60565b036106d657507f0000000000000000000000000000000000000000000000000000000000000000919050565b60018260028111156106ea576106ea611a60565b0361071657507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405163fdea7c0960e01b815260040160405180910390fd5b919050565b61073c611127565b6106935f611230565b604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b9061079490609890600401611a74565b602060405180830381865afa1580156107af573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061067c9190611a9b565b6107db611127565b61064e81611281565b60016107ef816112c0565b5f5f5f5f6107fd87876112eb565b5f8f8152609c60205260409020549397509195509350915060ff166108355760405163504570e360e01b815260040160405180910390fd5b61083e83610695565b6001600160a01b0316635ddb9b5b856040518263ffffffff1660e01b815260040161086991906116bd565b602060405180830381865afa158015610884573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a89190611a9b565b63ffffffff168c63ffffffff16116108d35760405163207617df60e01b815260040160405180910390fd5b6108f88c8c8c8c8c8c8c6040516108eb929190611ab6565b6040518091039020611332565b600283600281111561090c5761090c611a60565b0361099d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636738c40b858e61094b856113d3565b866040518563ffffffff1660e01b815260040161096b9493929190611aff565b5f604051808303815f87803b158015610982575f5ffd5b505af1158015610994573d5f5f3e3d5ffd5b50505050610a10565b60018360028111156109b1576109b1611a60565b03610716577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166356d482f5858e6109f0856113f5565b866040518563ffffffff1660e01b815260040161096b9493929190611b7b565b505050505050505050505050565b610a26611047565b5f818152609c602052604090205460ff16610a545760405163504570e360e01b815260040160405180910390fd5b5f818152609c6020526040808220805460ff191690555182917f8bd43de1250f58fe6ec9a78671a8b78dba70f0018656d157a3aeaabec389df3491a250565b604080517f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc602082015290810184905263ffffffff8084166060830152821660808201525f9060a0016040516020818303038152906040528051906020012090509392505050565b610b03611127565b610b0e83838361140b565b505050565b5f610b1d816112c0565b428363ffffffff161115610b4457604051635a119db560e11b815260040160405180910390fd5b60975463ffffffff62010000909104811690841611610b765760405163037fa86b60e31b815260040160405180910390fd5b610b81848484610a93565b856020013514610ba457604051638b56642d60e01b815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683375050609754825192935061ffff16918391505f90610bdf57610bdf611c34565b61ffff90921660209283029190910190910152604051625f5e5d60e21b81525f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063017d797490610c44906098908b908790600401611d66565b6020604051808303815f875af1158015610c60573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c849190611ef3565b905080610ca457604051633042041f60e21b815260040160405180910390fd5b6097805463ffffffff80881662010000810265ffffffff000019909316929092179092555f818152609a602090815260408083208054958a1663ffffffff1996871681179091558352609b825280832080549095168417909455828252609981528382208a9055898252609c9052828120805460ff19166001179055915188927f010dcbe0d1e019c93357711f7bb6287d543b7ff7de74f29df3fb5ecceec8d36991a350505050505050565b5f54610100900460ff1615808015610d6e57505f54600160ff909116105b80610d875750303b158015610d8757505f5460ff166001145b610def5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff191660011790558015610e10575f805461ff0019166101001790555b610e1988611230565b610e22876110ea565b610e2b86611281565b610e3485611181565b610e3f84848461140b565b63ffffffff8481165f8181526099602090815260408083207f2eddfa6e51c2e0ba986436883fbc224e895ba21e8fc61421f6b10d11e25d008e908190557fd6e1a24cb7e68b47373042d0900dfd69bffcfc2c807e706164b25b408655b71f805460ff19166001179055609a835281842080544390971663ffffffff1997881681179091558452609b909252808320805490951684179094556097805462010000850265ffffffff00001990911617905592517f010dcbe0d1e019c93357711f7bb6287d543b7ff7de74f29df3fb5ecceec8d3699190a38015610f5a575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b610f6c611127565b6001600160a01b038116610fd15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610de6565b61064e81611230565b610fe2611490565b606654801982198116146110095760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156110a9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110cd9190611ef3565b61069357604051631d77d47760e21b815260040160405180910390fd5b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b6033546001600160a01b031633146106935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610de6565b61271061ffff821611156111a8576040516307336f0360e11b815260040160405180910390fd5b6097805461ffff191661ffff83169081179091556040519081527ff5d1836df8fcd7c1e54047e94ac8773d2855395603e2ef9ba5f5f16905f22592906020015b60405180910390a150565b60605f6111ff83611541565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80609861128e8282611f12565b9050507f3463431b09dfd43dec7349f8f24acfa753fe4cf40a26235402d213373df15856816040516111e89190611fa3565b606654600160ff83161b9081160361064e5760405163840a48d560e01b815260040160405180910390fd5b604080518082019091525f8082526020820152604080518082019091525f808252602082018190529060606113228587018761206b565b9299919850965090945092505050565b63ffffffff86165f9081526099602052604090205485146113665760405163639d09b560e11b815260040160405180910390fd5b6113ae83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508992508591505063ffffffff8816611568565b6113cb5760405163afa42ca760e01b815260040160405180910390fd5b505050505050565b6113db611616565b818060200190518101906113ef91906121bc565b92915050565b6060818060200190518101906113ef919061226b565b604051636738c40b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636738c40b9061145e9060989087908790879060040161236c565b5f604051808303815f87803b158015611475575f5ffd5b505af1158015611487573d5f5f3e3d5ffd5b50505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114ec573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115109190612405565b6001600160a01b0316336001600160a01b0316146106935760405163794821ff60e01b815260040160405180910390fd5b5f60ff8216601f8111156113ef57604051632cd44ac360e21b815260040160405180910390fd5b5f8361157586858561157f565b1495945050505050565b5f6020845161158e9190612420565b156115ac576040516313717da960e21b815260040160405180910390fd5b8260205b8551811161160d576115c3600285612420565b5f036115e457815f528086015160205260405f2091506002840493506115fb565b808601515f528160205260405f2091506002840493505b61160660208261243f565b90506115b0565b50949350505050565b60405180608001604052805f81526020015f815260200161164860405180604001604052805f81526020015f81525090565b8152602001606081525090565b5f60208284031215611665575f5ffd5b5035919050565b63ffffffff8116811461064e575f5ffd5b5f6020828403121561168d575f5ffd5b81356116988161166c565b9392505050565b80516001600160a01b0316825260209081015163ffffffff16910152565b604081016113ef828461169f565b803561ffff8116811461072f575f5ffd5b5f602082840312156116ec575f5ffd5b611698826116cb565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f6020828403121561173a575f5ffd5b813560ff81168114611698575f5ffd5b80356003811061072f575f5ffd5b5f60208284031215611768575f5ffd5b6116988261174a565b5f60408284031215611781575f5ffd5b50919050565b5f60408284031215611797575f5ffd5b6116988383611771565b5f5f83601f8401126117b1575f5ffd5b5081356001600160401b038111156117c7575f5ffd5b6020830191508360208285010111156117de575f5ffd5b9250929050565b5f5f5f5f5f5f5f60a0888a0312156117fb575f5ffd5b87356118068161166c565b965060208801359550604088013561181d8161166c565b945060608801356001600160401b03811115611837575f5ffd5b6118438a828b016117a1565b90955093505060808801356001600160401b03811115611861575f5ffd5b61186d8a828b016117a1565b989b979a50959850939692959293505050565b5f5f5f60608486031215611892575f5ffd5b8335925060208401356118a48161166c565b915060408401356118b48161166c565b809150509250925092565b5f60a08284031215611781575f5ffd5b5f5f5f608084860312156118e1575f5ffd5b83356118ec8161166c565b925060208401356001600160401b03811115611906575f5ffd5b611912868287016118bf565b9250506119228560408601611771565b90509250925092565b5f5f5f5f6080858703121561193e575f5ffd5b84356001600160401b03811115611953575f5ffd5b85016101208188031215611965575f5ffd5b935060208501359250604085013561197c8161166c565b9150606085013561198c8161166c565b939692955090935050565b6001600160a01b038116811461064e575f5ffd5b5f5f5f5f5f5f5f610120888a0312156119c2575f5ffd5b87356119cd81611997565b9650602088013595506119e38960408a01611771565b94506119f1608089016116cb565b935060a0880135611a018161166c565b925060c08801356001600160401b03811115611a1b575f5ffd5b611a278a828b016118bf565b925050611a378960e08a01611771565b905092959891949750929550565b5f60208284031215611a55575f5ffd5b813561169881611997565b634e487b7160e01b5f52602160045260245ffd5b604081016113ef8284546001600160a01b038116825260a01c63ffffffff16602090910152565b5f60208284031215611aab575f5ffd5b81516116988161166c565b818382375f9101908152919050565b5f8151808452602084019350602083015f5b82811015611af5578151865260209586019590910190600101611ad7565b5093949350505050565b611b09818661169f565b63ffffffff8416604082015260c06060820152825160c0820152602083015160e08201525f60408401518051610100840152602081015161012084015250606084015160a0610140840152611b62610160840182611ac5565b915050611b72608083018461169f565b95945050505050565b5f60c08201611b8a838861169f565b63ffffffff8616604084015260c0606084015280855180835260e08501915060e08160051b8601019250602087015f5b82811015611c0b5786850360df19018452815180516001600160a01b03168652602090810151604091870182905290611bf590870182611ac5565b9550506020938401939190910190600101611bba565b5050505080915050611b72608083018461169f565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f5f8335601e19843603018112611c5d575f5ffd5b83016020810192503590506001600160401b03811115611c7b575f5ffd5b8060051b36038213156117de575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f8235605e19833603018112611cc8575f5ffd5b90910192915050565b8183525f6001600160fb1b03831115611ce8575f5ffd5b8260051b80836020870137939093016020019392505050565b80358252602080820135908301525f611d1d6040830183611c48565b60606040860152611b72606086018284611cd1565b5f8151808452602084019350602083015f5b82811015611af557815161ffff16865260209586019590910190600101611d44565b611d898185546001600160a01b038116825260a01c63ffffffff16602090910152565b608060408201525f6101a082018435611da18161166c565b63ffffffff166080840152602085013560a0840152604085013560c0840152606085013560e0840152604060808601610100850137604060c08601610140850137611df0610100860186611c48565b610120610180860152828184526101c0860190506101c08260051b8701019350825f5b83811015611ed2578786036101bf19018352611e2f8286611cb4565b8035611e3a8161166c565b63ffffffff168752602081013536829003601e19018112611e59575f5ffd5b81016020810190356001600160401b03811115611e74575f5ffd5b803603821315611e82575f5ffd5b606060208a0152611e9760608a018284611c8c565b915050611ea76040830183611cb4565b91508781036040890152611ebb8183611d01565b975050506020928301929190910190600101611e13565b50505050508281036060840152611ee98185611d32565b9695505050505050565b5f60208284031215611f03575f5ffd5b81518015158114611698575f5ffd5b8135611f1d81611997565b81546001600160a01b031981166001600160a01b039290921691821783556020840135611f498161166c565b6001600160c01b03199190911690911760a09190911b63ffffffff60a01b1617905550565b8035611f7981611997565b6001600160a01b031682526020810135611f928161166c565b63ffffffff81166020840152505050565b604081016113ef8284611f6e565b604080519081016001600160401b0381118282101715611fd357611fd3611c20565b60405290565b604051608081016001600160401b0381118282101715611fd357611fd3611c20565b604051601f8201601f191681016001600160401b038111828210171561202357612023611c20565b604052919050565b5f6040828403121561203b575f5ffd5b612043611fb1565b9050813561205081611997565b815260208201356120608161166c565b602082015292915050565b5f5f5f5f60c0858703121561207e575f5ffd5b612088868661202b565b93506120966040860161174a565b92506120a5866060870161202b565b915060a08501356001600160401b038111156120bf575f5ffd5b8501601f810187136120cf575f5ffd5b80356001600160401b038111156120e8576120e8611c20565b6120fb601f8201601f1916602001611ffb565b81815288602083850101111561210f575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b5f6001600160401b0382111561214857612148611c20565b5060051b60200190565b5f82601f830112612161575f5ffd5b815161217461216f82612130565b611ffb565b8082825260208201915060208360051b860101925085831115612195575f5ffd5b602085015b838110156121b257805183526020928301920161219a565b5095945050505050565b5f602082840312156121cc575f5ffd5b81516001600160401b038111156121e1575f5ffd5b820180840360a08112156121f3575f5ffd5b6121fb611fd9565b82518152602080840151908201526040603f198301121561221a575f5ffd5b612222611fb1565b604084810151825260608501516020830152820152608083015191506001600160401b03821115612251575f5ffd5b61225d86838501612152565b606082015295945050505050565b5f6020828403121561227b575f5ffd5b81516001600160401b03811115612290575f5ffd5b8201601f810184136122a0575f5ffd5b80516122ae61216f82612130565b8082825260208201915060208360051b8501019250868311156122cf575f5ffd5b602084015b838110156123615780516001600160401b038111156122f1575f5ffd5b85016040818a03601f19011215612306575f5ffd5b61230e611fb1565b602082015161231c81611997565b815260408201516001600160401b03811115612336575f5ffd5b6123458b602083860101612152565b60208301525080855250506020830192506020810190506122d4565b509695505050505050565b61238f8186546001600160a01b038116825260a01c63ffffffff16602090910152565b63ffffffff841660408281019190915260c06060808401829052853591840191909152602085013560e0840152908401356101008301528301356101208201525f6123dd6080850185611c48565b60a06101408501526123f461016085018284611cd1565b92505050611b726080830184611f6e565b5f60208284031215612415575f5ffd5b815161169881611997565b5f8261243a57634e487b7160e01b5f52601260045260245ffd5b500690565b808201808211156113ef57634e487b7160e01b5f52601160045260245ffdfea26469706673582212201fe17c0ed71f9239aa45686929b837dd6e3ee278cc220260aa328faef8efbfee64736f6c634300081b0033",
    "sourceMap": "363:15363:181:-:0;;;592:410;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;949:8;841:25;868;912:15;-1:-1:-1;;;;;3618:38:185;;3610:67;;;;-1:-1:-1;;;3610:67:185;;;;;;;;;;;;-1:-1:-1;;;;;3687:32:185;;;;;2505:52:182;;;;;2567;;;961:24:173;:8;:22;:24::i;:::-;950:35;;-1:-1:-1;973:22:181::3;:20;:22::i;:::-;592:410:::0;;;;363:15363;;1711:286:38;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:38;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:38:o;5939:280:27:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:27;;2749:2:322;5998:66:27;;;2731:21:322;2788:2;2768:18;;;2761:30;2827:34;2807:18;;;2800:62;-1:-1:-1;;;2878:18:322;;;2871:37;2925:19;;5998:66:27;2547:403:322;5998:66:27;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:27;6140:15;6125:30;;;;;;6174:28;;3097:36:322;;;6174:28:27;;3085:2:322;3070:18;6174:28:27;;;;;;;6074:139;5939:280::o;14:158:322:-;-1:-1:-1;;;;;116:31:322;;106:42;;96:70;;162:1;159;152:12;96:70;14:158;:::o;177:127::-;238:10;233:3;229:20;226:1;219:31;269:4;266:1;259:15;293:4;290:1;283:15;309:1508;511:6;519;527;535;588:3;576:9;567:7;563:23;559:33;556:53;;;605:1;602;595:12;556:53;637:9;631:16;656:58;708:5;656:58;:::i;:::-;783:2;768:18;;762:25;733:5;;-1:-1:-1;796:60:322;762:25;796:60;:::i;:::-;927:2;912:18;;906:25;875:7;;-1:-1:-1;940:60:322;906:25;940:60;:::i;:::-;1070:2;1055:18;;1049:25;1019:7;;-1:-1:-1;;;;;;1086:30:322;;1083:50;;;1129:1;1126;1119:12;1083:50;1152:22;;1205:4;1197:13;;1193:27;-1:-1:-1;1183:55:322;;1234:1;1231;1224:12;1183:55;1261:9;;-1:-1:-1;;;;;1282:30:322;;1279:56;;;1315:18;;:::i;:::-;1364:2;1358:9;1456:2;1418:17;;-1:-1:-1;;1414:31:322;;;1447:2;1410:40;1406:54;1394:67;;-1:-1:-1;;;;;1476:34:322;;1512:22;;;1473:62;1470:88;;;1538:18;;:::i;:::-;1574:2;1567:22;1598;;;1639:15;;;1656:2;1635:24;1632:37;-1:-1:-1;1629:57:322;;;1682:1;1679;1672:12;1629:57;1731:6;1726:2;1722;1718:11;1713:2;1705:6;1701:15;1695:43;1784:1;1779:2;1770:6;1762;1758:19;1754:28;1747:39;1805:6;1795:16;;;;;309:1508;;;;;;;:::o;1822:418::-;1971:2;1960:9;1953:21;1934:4;2003:6;1997:13;2046:6;2041:2;2030:9;2026:18;2019:34;2105:6;2100:2;2092:6;2088:15;2083:2;2072:9;2068:18;2062:50;2161:1;2156:2;2147:6;2136:9;2132:22;2128:31;2121:42;2231:2;2224;2220:7;2215:2;2207:6;2203:15;2199:29;2188:9;2184:45;2180:54;2172:62;;;1822:418;;;;:::o;2245:297::-;2363:12;;2410:4;2399:16;;;2393:23;;2363:12;2428:16;;2425:111;;;2522:1;2518:6;2508;2502:4;2498:17;2495:1;2491:25;2487:38;2480:5;2476:50;2467:59;;2425:111;;2245:297;;;:::o;2955:184::-;363:15363:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b5060043610610208575f3560e01c8063715018a61161011f578063c3621f0a116100a9578063eaaed9d511610079578063eaaed9d5146105ae578063ed90dc60146105c1578063f2fde38b146105d4578063fabc1cbc146105e7578063fd967f47146105fa575f5ffd5b8063c3621f0a14610550578063c3be1e3314610563578063c5916a3914610576578063e944e0a81461059b575f5ffd5b80638da5cb5b116100ef5780638da5cb5b146104bd5780639ea94778146104ce578063ad0f9582146104e1578063b8c1430614610508578063c252aa221461052f575f5ffd5b8063715018a6146104735780637551ba341461047b57806377d90e9414610483578063886f119514610496575f5ffd5b80633ef6cd7a116101a0578063595c6a6711610170578063595c6a67146103e05780635ac86ab7146103e85780635c975abb1461040b57806364e1df84146104135780636f728c5014610448575f5ffd5b80633ef6cd7a146103695780634624e6a3146103905780634af81d7a146103a457806354fd4d50146103cb575f5ffd5b806323b7b5b2116101db57806323b7b5b2146102be57806328522d79146102e657806330ef41b41461031257806331a599d214610344575f5ffd5b8063136439dd1461020c578063193b79f3146102215780631e2ca260146102635780632370356c146102ab575b5f5ffd5b61021f61021a366004611655565b610603565b005b61024961022f36600461167d565b63ffffffff9081165f908152609b60205260409020541690565b60405163ffffffff90911681526020015b60405180910390f35b6040805180820182525f80825260209182015281518083019092526098546001600160a01b0381168352600160a01b900463ffffffff169082015260405161025a91906116bd565b61021f6102b93660046116dc565b61063d565b6102496102cc36600461167d565b63ffffffff9081165f908152609a60205260409020541690565b60975462010000900463ffffffff165f908152609960205260409020545b60405190815260200161025a565b610334610320366004611655565b5f908152609c602052604090205460ff1690565b604051901515815260200161025a565b60975462010000900463ffffffff9081165f908152609a602052604090205416610249565b6103047f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc81565b60975462010000900463ffffffff16610249565b6103047f2eddfa6e51c2e0ba986436883fbc224e895ba21e8fc61421f6b10d11e25d008e81565b6103d3610651565b60405161025a91906116f5565b61021f610681565b6103346103f636600461172a565b606654600160ff9092169190911b9081161490565b606654610304565b61033461042136600461167d565b63ffffffff165f908152609960209081526040808320548352609c90915290205460ff1690565b61045b610456366004611758565b610695565b6040516001600160a01b03909116815260200161025a565b61021f610734565b610249610745565b61021f610491366004611787565b6107d3565b61045b7f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b031661045b565b61021f6104dc3660046117e5565b6107e4565b61045b7f000000000000000000000000000000000000000000000000000000000000000081565b61045b7f000000000000000000000000000000000000000000000000000000000000000081565b60975461053d9061ffff1681565b60405161ffff909116815260200161025a565b61021f61055e366004611655565b610a1e565b610304610571366004611880565b610a93565b61030461058436600461167d565b63ffffffff165f9081526099602052604090205490565b61021f6105a93660046118cf565b610afb565b61021f6105bc36600461192b565b610b13565b61021f6105cf3660046119ab565b610d50565b61021f6105e2366004611a45565b610f64565b61021f6105f5366004611655565b610fda565b61053d61271081565b61060b611047565b60665481811681146106305760405163c61dca5d60e01b815260040160405180910390fd5b610639826110ea565b5050565b610645611127565b61064e81611181565b50565b606061067c7f00000000000000000000000000000000000000000000000000000000000000006111f3565b905090565b610689611047565b6106935f196110ea565b565b5f60028260028111156106aa576106aa611a60565b036106d657507f0000000000000000000000000000000000000000000000000000000000000000919050565b60018260028111156106ea576106ea611a60565b0361071657507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405163fdea7c0960e01b815260040160405180910390fd5b919050565b61073c611127565b6106935f611230565b604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b9061079490609890600401611a74565b602060405180830381865afa1580156107af573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061067c9190611a9b565b6107db611127565b61064e81611281565b60016107ef816112c0565b5f5f5f5f6107fd87876112eb565b5f8f8152609c60205260409020549397509195509350915060ff166108355760405163504570e360e01b815260040160405180910390fd5b61083e83610695565b6001600160a01b0316635ddb9b5b856040518263ffffffff1660e01b815260040161086991906116bd565b602060405180830381865afa158015610884573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a89190611a9b565b63ffffffff168c63ffffffff16116108d35760405163207617df60e01b815260040160405180910390fd5b6108f88c8c8c8c8c8c8c6040516108eb929190611ab6565b6040518091039020611332565b600283600281111561090c5761090c611a60565b0361099d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636738c40b858e61094b856113d3565b866040518563ffffffff1660e01b815260040161096b9493929190611aff565b5f604051808303815f87803b158015610982575f5ffd5b505af1158015610994573d5f5f3e3d5ffd5b50505050610a10565b60018360028111156109b1576109b1611a60565b03610716577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166356d482f5858e6109f0856113f5565b866040518563ffffffff1660e01b815260040161096b9493929190611b7b565b505050505050505050505050565b610a26611047565b5f818152609c602052604090205460ff16610a545760405163504570e360e01b815260040160405180910390fd5b5f818152609c6020526040808220805460ff191690555182917f8bd43de1250f58fe6ec9a78671a8b78dba70f0018656d157a3aeaabec389df3491a250565b604080517f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc602082015290810184905263ffffffff8084166060830152821660808201525f9060a0016040516020818303038152906040528051906020012090509392505050565b610b03611127565b610b0e83838361140b565b505050565b5f610b1d816112c0565b428363ffffffff161115610b4457604051635a119db560e11b815260040160405180910390fd5b60975463ffffffff62010000909104811690841611610b765760405163037fa86b60e31b815260040160405180910390fd5b610b81848484610a93565b856020013514610ba457604051638b56642d60e01b815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683375050609754825192935061ffff16918391505f90610bdf57610bdf611c34565b61ffff90921660209283029190910190910152604051625f5e5d60e21b81525f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063017d797490610c44906098908b908790600401611d66565b6020604051808303815f875af1158015610c60573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c849190611ef3565b905080610ca457604051633042041f60e21b815260040160405180910390fd5b6097805463ffffffff80881662010000810265ffffffff000019909316929092179092555f818152609a602090815260408083208054958a1663ffffffff1996871681179091558352609b825280832080549095168417909455828252609981528382208a9055898252609c9052828120805460ff19166001179055915188927f010dcbe0d1e019c93357711f7bb6287d543b7ff7de74f29df3fb5ecceec8d36991a350505050505050565b5f54610100900460ff1615808015610d6e57505f54600160ff909116105b80610d875750303b158015610d8757505f5460ff166001145b610def5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff191660011790558015610e10575f805461ff0019166101001790555b610e1988611230565b610e22876110ea565b610e2b86611281565b610e3485611181565b610e3f84848461140b565b63ffffffff8481165f8181526099602090815260408083207f2eddfa6e51c2e0ba986436883fbc224e895ba21e8fc61421f6b10d11e25d008e908190557fd6e1a24cb7e68b47373042d0900dfd69bffcfc2c807e706164b25b408655b71f805460ff19166001179055609a835281842080544390971663ffffffff1997881681179091558452609b909252808320805490951684179094556097805462010000850265ffffffff00001990911617905592517f010dcbe0d1e019c93357711f7bb6287d543b7ff7de74f29df3fb5ecceec8d3699190a38015610f5a575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b610f6c611127565b6001600160a01b038116610fd15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610de6565b61064e81611230565b610fe2611490565b606654801982198116146110095760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156110a9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110cd9190611ef3565b61069357604051631d77d47760e21b815260040160405180910390fd5b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b6033546001600160a01b031633146106935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610de6565b61271061ffff821611156111a8576040516307336f0360e11b815260040160405180910390fd5b6097805461ffff191661ffff83169081179091556040519081527ff5d1836df8fcd7c1e54047e94ac8773d2855395603e2ef9ba5f5f16905f22592906020015b60405180910390a150565b60605f6111ff83611541565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80609861128e8282611f12565b9050507f3463431b09dfd43dec7349f8f24acfa753fe4cf40a26235402d213373df15856816040516111e89190611fa3565b606654600160ff83161b9081160361064e5760405163840a48d560e01b815260040160405180910390fd5b604080518082019091525f8082526020820152604080518082019091525f808252602082018190529060606113228587018761206b565b9299919850965090945092505050565b63ffffffff86165f9081526099602052604090205485146113665760405163639d09b560e11b815260040160405180910390fd5b6113ae83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508992508591505063ffffffff8816611568565b6113cb5760405163afa42ca760e01b815260040160405180910390fd5b505050505050565b6113db611616565b818060200190518101906113ef91906121bc565b92915050565b6060818060200190518101906113ef919061226b565b604051636738c40b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636738c40b9061145e9060989087908790879060040161236c565b5f604051808303815f87803b158015611475575f5ffd5b505af1158015611487573d5f5f3e3d5ffd5b50505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114ec573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115109190612405565b6001600160a01b0316336001600160a01b0316146106935760405163794821ff60e01b815260040160405180910390fd5b5f60ff8216601f8111156113ef57604051632cd44ac360e21b815260040160405180910390fd5b5f8361157586858561157f565b1495945050505050565b5f6020845161158e9190612420565b156115ac576040516313717da960e21b815260040160405180910390fd5b8260205b8551811161160d576115c3600285612420565b5f036115e457815f528086015160205260405f2091506002840493506115fb565b808601515f528160205260405f2091506002840493505b61160660208261243f565b90506115b0565b50949350505050565b60405180608001604052805f81526020015f815260200161164860405180604001604052805f81526020015f81525090565b8152602001606081525090565b5f60208284031215611665575f5ffd5b5035919050565b63ffffffff8116811461064e575f5ffd5b5f6020828403121561168d575f5ffd5b81356116988161166c565b9392505050565b80516001600160a01b0316825260209081015163ffffffff16910152565b604081016113ef828461169f565b803561ffff8116811461072f575f5ffd5b5f602082840312156116ec575f5ffd5b611698826116cb565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f6020828403121561173a575f5ffd5b813560ff81168114611698575f5ffd5b80356003811061072f575f5ffd5b5f60208284031215611768575f5ffd5b6116988261174a565b5f60408284031215611781575f5ffd5b50919050565b5f60408284031215611797575f5ffd5b6116988383611771565b5f5f83601f8401126117b1575f5ffd5b5081356001600160401b038111156117c7575f5ffd5b6020830191508360208285010111156117de575f5ffd5b9250929050565b5f5f5f5f5f5f5f60a0888a0312156117fb575f5ffd5b87356118068161166c565b965060208801359550604088013561181d8161166c565b945060608801356001600160401b03811115611837575f5ffd5b6118438a828b016117a1565b90955093505060808801356001600160401b03811115611861575f5ffd5b61186d8a828b016117a1565b989b979a50959850939692959293505050565b5f5f5f60608486031215611892575f5ffd5b8335925060208401356118a48161166c565b915060408401356118b48161166c565b809150509250925092565b5f60a08284031215611781575f5ffd5b5f5f5f608084860312156118e1575f5ffd5b83356118ec8161166c565b925060208401356001600160401b03811115611906575f5ffd5b611912868287016118bf565b9250506119228560408601611771565b90509250925092565b5f5f5f5f6080858703121561193e575f5ffd5b84356001600160401b03811115611953575f5ffd5b85016101208188031215611965575f5ffd5b935060208501359250604085013561197c8161166c565b9150606085013561198c8161166c565b939692955090935050565b6001600160a01b038116811461064e575f5ffd5b5f5f5f5f5f5f5f610120888a0312156119c2575f5ffd5b87356119cd81611997565b9650602088013595506119e38960408a01611771565b94506119f1608089016116cb565b935060a0880135611a018161166c565b925060c08801356001600160401b03811115611a1b575f5ffd5b611a278a828b016118bf565b925050611a378960e08a01611771565b905092959891949750929550565b5f60208284031215611a55575f5ffd5b813561169881611997565b634e487b7160e01b5f52602160045260245ffd5b604081016113ef8284546001600160a01b038116825260a01c63ffffffff16602090910152565b5f60208284031215611aab575f5ffd5b81516116988161166c565b818382375f9101908152919050565b5f8151808452602084019350602083015f5b82811015611af5578151865260209586019590910190600101611ad7565b5093949350505050565b611b09818661169f565b63ffffffff8416604082015260c06060820152825160c0820152602083015160e08201525f60408401518051610100840152602081015161012084015250606084015160a0610140840152611b62610160840182611ac5565b915050611b72608083018461169f565b95945050505050565b5f60c08201611b8a838861169f565b63ffffffff8616604084015260c0606084015280855180835260e08501915060e08160051b8601019250602087015f5b82811015611c0b5786850360df19018452815180516001600160a01b03168652602090810151604091870182905290611bf590870182611ac5565b9550506020938401939190910190600101611bba565b5050505080915050611b72608083018461169f565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f5f8335601e19843603018112611c5d575f5ffd5b83016020810192503590506001600160401b03811115611c7b575f5ffd5b8060051b36038213156117de575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f8235605e19833603018112611cc8575f5ffd5b90910192915050565b8183525f6001600160fb1b03831115611ce8575f5ffd5b8260051b80836020870137939093016020019392505050565b80358252602080820135908301525f611d1d6040830183611c48565b60606040860152611b72606086018284611cd1565b5f8151808452602084019350602083015f5b82811015611af557815161ffff16865260209586019590910190600101611d44565b611d898185546001600160a01b038116825260a01c63ffffffff16602090910152565b608060408201525f6101a082018435611da18161166c565b63ffffffff166080840152602085013560a0840152604085013560c0840152606085013560e0840152604060808601610100850137604060c08601610140850137611df0610100860186611c48565b610120610180860152828184526101c0860190506101c08260051b8701019350825f5b83811015611ed2578786036101bf19018352611e2f8286611cb4565b8035611e3a8161166c565b63ffffffff168752602081013536829003601e19018112611e59575f5ffd5b81016020810190356001600160401b03811115611e74575f5ffd5b803603821315611e82575f5ffd5b606060208a0152611e9760608a018284611c8c565b915050611ea76040830183611cb4565b91508781036040890152611ebb8183611d01565b975050506020928301929190910190600101611e13565b50505050508281036060840152611ee98185611d32565b9695505050505050565b5f60208284031215611f03575f5ffd5b81518015158114611698575f5ffd5b8135611f1d81611997565b81546001600160a01b031981166001600160a01b039290921691821783556020840135611f498161166c565b6001600160c01b03199190911690911760a09190911b63ffffffff60a01b1617905550565b8035611f7981611997565b6001600160a01b031682526020810135611f928161166c565b63ffffffff81166020840152505050565b604081016113ef8284611f6e565b604080519081016001600160401b0381118282101715611fd357611fd3611c20565b60405290565b604051608081016001600160401b0381118282101715611fd357611fd3611c20565b604051601f8201601f191681016001600160401b038111828210171561202357612023611c20565b604052919050565b5f6040828403121561203b575f5ffd5b612043611fb1565b9050813561205081611997565b815260208201356120608161166c565b602082015292915050565b5f5f5f5f60c0858703121561207e575f5ffd5b612088868661202b565b93506120966040860161174a565b92506120a5866060870161202b565b915060a08501356001600160401b038111156120bf575f5ffd5b8501601f810187136120cf575f5ffd5b80356001600160401b038111156120e8576120e8611c20565b6120fb601f8201601f1916602001611ffb565b81815288602083850101111561210f575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b5f6001600160401b0382111561214857612148611c20565b5060051b60200190565b5f82601f830112612161575f5ffd5b815161217461216f82612130565b611ffb565b8082825260208201915060208360051b860101925085831115612195575f5ffd5b602085015b838110156121b257805183526020928301920161219a565b5095945050505050565b5f602082840312156121cc575f5ffd5b81516001600160401b038111156121e1575f5ffd5b820180840360a08112156121f3575f5ffd5b6121fb611fd9565b82518152602080840151908201526040603f198301121561221a575f5ffd5b612222611fb1565b604084810151825260608501516020830152820152608083015191506001600160401b03821115612251575f5ffd5b61225d86838501612152565b606082015295945050505050565b5f6020828403121561227b575f5ffd5b81516001600160401b03811115612290575f5ffd5b8201601f810184136122a0575f5ffd5b80516122ae61216f82612130565b8082825260208201915060208360051b8501019250868311156122cf575f5ffd5b602084015b838110156123615780516001600160401b038111156122f1575f5ffd5b85016040818a03601f19011215612306575f5ffd5b61230e611fb1565b602082015161231c81611997565b815260408201516001600160401b03811115612336575f5ffd5b6123458b602083860101612152565b60208301525080855250506020830192506020810190506122d4565b509695505050505050565b61238f8186546001600160a01b038116825260a01c63ffffffff16602090910152565b63ffffffff841660408281019190915260c06060808401829052853591840191909152602085013560e0840152908401356101008301528301356101208201525f6123dd6080850185611c48565b60a06101408501526123f461016085018284611cd1565b92505050611b726080830184611f6e565b5f60208284031215612415575f5ffd5b815161169881611997565b5f8261243a57634e487b7160e01b5f52601260045260245ffd5b500690565b808201808211156113ef57634e487b7160e01b5f52601160045260245ffdfea26469706673582212201fe17c0ed71f9239aa45686929b837dd6e3ee278cc220260aa328faef8efbfee64736f6c634300081b0033",
    "sourceMap": "363:15363:181:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3762:401:185;;;;;;:::i;:::-;;:::i;:::-;;9763:184:181;;;;;;:::i;:::-;9898:42;;;;9873:6;9898:42;;;:20;:42;;;;;;;;9763:184;;;;795:10:322;783:23;;;765:42;;753:2;738:18;9763:184:181;;;;;;;;8603:101;-1:-1:-1;;;;;;;;;;;;;;;;;8680:17:181;;;;;;;;8687:10;8680:17;-1:-1:-1;;;;;8680:17:181;;;;-1:-1:-1;;;8680:17:181;;;;;;;;8603:101;;;;;;:::i;7248:146::-;;;;;;:::i;:::-;;:::i;9533:182::-;;;;;;:::i;:::-;9666:42;;;;9641:6;9666:42;;;:22;:42;;;;;;;;9533:182;8418:137;8522:25;;;;;;;8478:7;8504:44;;;:17;:44;;;;;;8418:137;;;1782:25:322;;;1770:2;1755:18;8418:137:181;1636:177:322;10625:140:181;;;;;;:::i;:::-;10706:4;10729:29;;;:12;:29;;;;;;;;;10625:140;;;;2214:14:322;;2207:22;2189:41;;2177:2;2162:18;10625:140:181;2049:187:322;9340:145:181;9452:25;;;;;;;;;9404:6;9429:49;;;:22;:49;;;;;;;9340:145;;588:177:182;;654:111;588:177;;9173:119:181;9260:25;;;;;;;9173:119;;962:90:182;;1014:38;962:90;;1031:106:173;;;:::i;:::-;;;;;;;:::i;4199:85:185:-;;;:::i;4933:163::-;;;;;;:::i;:::-;5065:7;;5036:1;:10;;;;;;;;5065:14;;;5064:24;;4933:163;4810:87;4883:7;;4810:87;;10813:177:181;;;;;;:::i;:::-;10945:37;;10909:4;10945:37;;;:17;:37;;;;;;;;;10932:51;;:12;:51;;;;;;;;;10813:177;8752:373;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3652:32:322;;;3634:51;;3622:2;3607:18;8752:373:181;3488:203:322;2064:101:20;;;:::i;10384:193:181:-;;;:::i;7068:132::-;;;;;;:::i;:::-;;:::i;1964:47:185:-;;;;;1441:85:20;1513:6;;-1:-1:-1;;;;;1513:6:20;1441:85;;5103:1847:181;;;;;;:::i;:::-;;:::i;1253:67:182:-;;;;;1132;;;;;1440:45;;;;;;;;;;;;6468:6:322;6456:19;;;6438:38;;6426:2;6411:18;1440:45:182;6294:188:322;7442:314:181;;;;;;:::i;:::-;;:::i;9995:341::-;;;;;;:::i;:::-;;:::i;8197:173::-;;;;;;:::i;:::-;8326:37;;8300:7;8326:37;;;:17;:37;;;;;;;8197:173;7804:275;;;;;;:::i;:::-;;:::i;3422:1633::-;;;;;;:::i;:::-;;:::i;1907:1397::-;;;;;;:::i;:::-;;:::i;2314:198:20:-;;;;;;:::i;:::-;;:::i;4320:454:185:-;;;;;;:::i;:::-;;:::i;810:39:182:-;;843:6;810:39;;3762:401:185;2390:18;:16;:18::i;:::-;3876:7:::1;::::0;4025:37;;::::1;4024:62:::0;::::1;4016:97;;;;-1:-1:-1::0;;;4016:97:185::1;;;;;;;;;;;;4123:33;4140:15;4123:16;:33::i;:::-;3836:327;3762:401:::0;:::o;7248:146:181:-;1334:13:20;:11;:13::i;:::-;7347:40:181::1;7383:3;7347:35;:40::i;:::-;7248:146:::0;:::o;1031:106:173:-;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;4199:85:185:-;2390:18;:16;:18::i;:::-;4249:28:::1;-1:-1:-1::0;;4249:16:185::1;:28::i;:::-;4199:85::o:0;8752:373:181:-;8840:7;8876:15;8863:9;:28;;;;;;;;:::i;:::-;;8859:260;;-1:-1:-1;8922:24:181;;8752:373;-1:-1:-1;8752:373:181:o;8859:260::-;8981:15;8968:9;:28;;;;;;;;:::i;:::-;;8964:155;;-1:-1:-1;9027:24:181;;8752:373;-1:-1:-1;8752:373:181:o;8964:155::-;9090:18;;-1:-1:-1;;;9090:18:181;;;;;;;;;;;8964:155;8752:373;;;:::o;2064:101:20:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;10384:193:181:-:0;10474:96;;-1:-1:-1;;;10474:96:181;;10449:6;;-1:-1:-1;;;;;10507:24:181;10474:84;;;;:96;;10559:10;;10474:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7068:132::-;1334:13:20;:11;:13::i;:::-;7167:26:181::1;7181:11;7167:13;:26::i;5103:1847::-:0;580:1:182;2960:30:185;2984:5;2960:23;:30::i;:::-;5393::181::1;5437:19;5470:42;5526:30;5569:45;5595:18;;5569:25;:45::i;:::-;5693:29;::::0;;;:12:::1;:29;::::0;;;;;5379:235;;-1:-1:-1;5379:235:181;;-1:-1:-1;5379:235:181;-1:-1:-1;5379:235:181;-1:-1:-1;5693:29:181::1;;5685:53;;;;-1:-1:-1::0;;;5685:53:181::1;;;;;;;;;;;;5926:33;5949:9;5926:22;:33::i;:::-;-1:-1:-1::0;;;;;5901:84:181::1;;5986:11;5901:97;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5864:134;;:18;:134;;;5843:208;;;;-1:-1:-1::0;;;5843:208:181::1;;;;;;;;;;;;6106:274;6167:18;6216:15;6263:16;6300:5;;6350:18;;6340:29;;;;;;;:::i;:::-;;;;;;;;6106:26;:274::i;:::-;6445:15;6432:9;:28;;;;;;;;:::i;:::-;::::0;6428:516:::1;;6476:24;-1:-1:-1::0;;;;;6476:44:181::1;;6538:11;6551:18;6571:40;6593:17;6571:21;:40::i;:::-;6613:17;6476:168;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6428:516;;;6678:15;6665:9;:28;;;;;;;;:::i;:::-;::::0;6661:283:::1;;6709:24;-1:-1:-1::0;;;;;6709:44:181::1;;6771:11;6784:18;6804:40;6826:17;6804:21;:40::i;:::-;6846:17;6709:168;;;;;;;;;;;;;;;;;;:::i;6661:283::-;5369:1581;;;;5103:1847:::0;;;;;;;;:::o;7442:314::-;2390:18:185;:16;:18::i;:::-;7606:29:181::1;::::0;;;:12:::1;:29;::::0;;;;;::::1;;7598:53;;;;-1:-1:-1::0;;;7598:53:181::1;;;;;;;;;;;;7694:5;7662:29:::0;;;:12:::1;:29;::::0;;;;;:37;;-1:-1:-1;;7662:37:181::1;::::0;;7714:35;7675:15;;7714:35:::1;::::0;::::1;7442:314:::0;:::o;9995:341::-;10217:102;;;654:111:182;10217:102:181;;;14541:25:322;14582:18;;;14575:34;;;14657:10;14645:23;;;14625:18;;;14618:51;14705:23;;14685:18;;;14678:51;10168:7:181;;14513:19:322;;10217:102:181;;;;;;;;;;;;10194:135;;;;;;10187:142;;9995:341;;;;;:::o;7804:275::-;1334:13:20;:11;:13::i;:::-;8004:68:181::1;8021:18;8041:13;8056:15;8004:16;:68::i;:::-;7804:275:::0;;;:::o;3422:1633::-;444:1:182;2960:30:185;2984:5;2960:23;:30::i;:::-;3829:15:181::1;3807:18;:37;;;;3799:73;;;;-1:-1:-1::0;;;3799:73:181::1;;;;;;;;;;;;3911:25;::::0;::::1;::::0;;;::::1;::::0;::::1;3890:46:::0;;::::1;;3882:79;;;;-1:-1:-1::0;;;3882:79:181::1;;;;;;;;;;;;4043:90;4075:15;4092:18;4112:20;4043:31;:90::i;:::-;3992:19;:31;;;:141;3971:206;;;;-1:-1:-1::0;;;3971:206:181::1;;;;;;;;;;;;4303:15;::::0;;4316:1:::1;4303:15:::0;;;;;::::1;::::0;;;4259:41:::1;::::0;4303:15:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;4359:31:181::1;::::0;4328:28;;;;-1:-1:-1;4359:31:181::1;;::::0;4328:28;;-1:-1:-1;4359:31:181::1;::::0;4328:28:::1;;;;:::i;:::-;:62;::::0;;::::1;:28;::::0;;::::1;::::0;;;;;;;:62;4415:134:::1;::::0;-1:-1:-1;;;4415:134:181;;4400:12:::1;::::0;-1:-1:-1;;;;;4415:24:181::1;:52;::::0;::::1;::::0;:134:::1;::::0;4481:10:::1;::::0;4493:19;;4514:25;;4415:134:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4400:149;;4568:7;4560:38;;;;-1:-1:-1::0;;;4560:38:181::1;;;;;;;;;;;;4672:25;:46:::0;;::::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;4672:46:181;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;4728:42:181;;;:22:::1;:42;::::0;;;;;;;:65;;;;::::1;-1:-1:-1::0;;4728:65:181;;::::1;::::0;::::1;::::0;;;4803:42;;:20:::1;:42:::0;;;;;:63;;;;::::1;::::0;::::1;::::0;;;4876:37;;;:17:::1;:37:::0;;;;;:55;;;4941:29;;;:12:::1;:29:::0;;;;;:36;;-1:-1:-1;;4941:36:181::1;-1:-1:-1::0;4941:36:181::1;::::0;;4993:55;;4916:15;;4993:55:::1;::::0;::::1;3674:1381;;3422:1633:::0;;;;;:::o;1907:1397::-;3279:19:27;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:27;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:27;1713:19:35;:23;;;3387:66:27;;-1:-1:-1;3436:12:27;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:27;;20856:2:322;3325:201:27;;;20838:21:322;20895:2;20875:18;;;20868:30;20934:34;20914:18;;;20907:62;-1:-1:-1;;;20985:18:322;;;20978:44;21039:19;;3325:201:27;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:27;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:27;;;;;3562:65;2254:25:181::1;2273:5;2254:18;:25::i;:::-;2289:37;2306:19;2289:16;:37::i;:::-;2336:25;2350:10;2336:13;:25::i;:::-;2371:69;2407:32;2371:35;:69::i;:::-;2450:68;2467:18;2487:13;2502:15;2450:16;:68::i;:::-;2792:37;::::0;;::::1;;::::0;;;:17:::1;:37;::::0;;;;;;;1014:38:182::1;2792:65:181::0;;;;2867:39;:46;;-1:-1:-1;;2867:46:181::1;2909:4;2867:46;::::0;;2923:22:::1;:42:::0;;;;;:65;;2975:12:::1;2923:65:::0;;::::1;-1:-1:-1::0;;2923:65:181;;::::1;::::0;::::1;::::0;;;2998:42;;:20:::1;:42:::0;;;;;;:63;;;;::::1;::::0;::::1;::::0;;;3118:25:::1;:46:::0;;;;::::1;-1:-1:-1::0;;3118:46:181;;::::1;;::::0;;3232:65;;::::1;::::0;2792:37;3232:65:::1;3651:14:27::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:27;;;3721:14;;-1:-1:-1;21221:36:322;;3721:14:27;;21209:2:322;21194:18;3721:14:27;;;;;;;3647:99;3269:483;1907:1397:181;;;;;;;:::o;2314:198:20:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:20;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:20;;21470:2:322;2394:73:20::1;::::0;::::1;21452:21:322::0;21509:2;21489:18;;;21482:30;21548:34;21528:18;;;21521:62;-1:-1:-1;;;21599:18:322;;;21592:36;21645:19;;2394:73:20::1;21268:402:322::0;2394:73:20::1;2477:28;2496:8;2477:18;:28::i;4320:454:185:-:0;2558:20;:18;:20::i;:::-;4438:7:::1;::::0;4632:20;::::1;4609:16:::0;::::1;4583:43:::0;::::1;4582:71;4574:106;;;;-1:-1:-1::0;;;4574:106:185::1;;;;;;;;;;;;4690:7;:25:::0;;;4730:37:::1;::::0;1782:25:322;;;4739:10:185::1;::::0;4730:37:::1;::::0;1770:2:322;1755:18;4730:37:185::1;;;;;;;4398:376;4320:454:::0;:::o;3014:117::-;3074:35;;-1:-1:-1;;;3074:35:185;;3098:10;3074:35;;;3634:51:322;3074:14:185;-1:-1:-1;;;;;3074:23:185;;;;3607:18:322;;3074:35:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3066:58;;;;-1:-1:-1;;;3066:58:185;;;;;;;;;;;5200:157;5281:7;:22;;;5318:32;;1782:25:322;;;5325:10:185;;5318:32;;1770:2:322;1755:18;5318:32:185;;;;;;;5200:157;:::o;1599:130:20:-;1513:6;;-1:-1:-1;;;;;1513:6:20;929:10:36;1662:23:20;1654:68;;;;-1:-1:-1;;;1654:68:20;;21877:2:322;1654:68:20;;;21859:21:322;;;21896:18;;;21889:30;21955:34;21935:18;;;21928:62;22007:18;;1654:68:20;21675:356:322;12944:257:181;843:6:182;13042:14:181;;;;;13034:55;;;;-1:-1:-1;;;13034:55:181;;;;;;;;;;;;13099:31;:37;;-1:-1:-1;;13099:37:181;;;;;;;;;;13151:43;;6438:38:322;;;13151:43:181;;6426:2:322;6411:18;13151:43:181;;;;;;;;12944:257;:::o;2081:405:38:-;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:38;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:38;;;-1:-1:-1;2438:4:38;2429:14;;2422:28;;;;-1:-1:-1;2393:16:38;2081:405::o;2666:187:20:-;2758:6;;;-1:-1:-1;;;;;2774:17:20;;;-1:-1:-1;;;;;;2774:17:20;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;12607:165:181:-;12710:11;12697:10;:24;12710:11;12697:10;:24;:::i;:::-;;;;12736:29;12753:11;12736:29;;;;;;:::i;3380:133:185:-;5065:7;;5036:1;:10;;;;5065:14;;;5064:24;3464:42;;;;-1:-1:-1;;;3464:42:185;;;;;;;;;;;14343:484:181;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;14526:19:181;-1:-1:-1;;;;;;;;;14526:19:181;14613:30;14743:77;;;;14754:13;14743:77;:::i;:::-;14668:152;;;;-1:-1:-1;14668:152:181;-1:-1:-1;14668:152:181;;-1:-1:-1;14343:484:181;-1:-1:-1;;;14343:484:181:o;11683:773::-;12002:37;;;;;;;:17;:37;;;;;;:56;;11994:91;;;;-1:-1:-1;;;11994:91:181;;;;;;;;;;;;12203:197;12257:5;;12203:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12286:15:181;;-1:-1:-1;12325:19:181;;-1:-1:-1;;12203:197:181;;;:28;:197::i;:::-;12182:267;;;;-1:-1:-1;;;12182:267:181;;;;;;;;;;;;11683:773;;;;;;:::o;15058:222::-;15166:27;;:::i;:::-;15223:25;15212:61;;;;;;;;;;;;:::i;:::-;15205:68;15058:222;-1:-1:-1;;15058:222:181:o;15510:214::-;15615:26;15671:22;15660:57;;;;;;;;;;;;:::i;13553:306::-;13744:108;;-1:-1:-1;;;13744:108:181;;-1:-1:-1;;;;;13744:24:181;:44;;;;:108;;13789:10;;13801:18;;13821:13;;13836:15;;13744:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13553:306;;;:::o;3137:125:185:-;3213:14;-1:-1:-1;;;;;3213:23:185;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3199:39:185;:10;-1:-1:-1;;;;;3199:39:185;;3191:64;;;;-1:-1:-1;;;3191:64:185;;;;;;;;;;;2558:245:38;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:38;;;;;;;;;;;1273:240:167;1428:4;1502;1451:47;1479:5;1486:4;1492:5;1451:27;:47::i;:::-;:55;;1273:240;-1:-1:-1;;;;;1273:240:167:o;2030:1081::-;2169:7;2211:2;2196:5;:12;:17;;;;:::i;:::-;:22;2188:53;;;;-1:-1:-1;;;2188:53:167;;;;;;;;;;;;2274:4;2305:2;2288:788;2314:5;:12;2309:1;:17;2288:788;;2355:9;2363:1;2355:5;:9;:::i;:::-;2368:1;2355:14;2351:715;;2514:12;2508:4;2501:26;2578:1;2571:5;2567:13;2561:20;2555:4;2548:34;2635:4;2629;2619:21;2603:37;;2681:1;2674:5;2670:13;2661:22;;2351:715;;;2882:1;2875:5;2871:13;2865:20;2859:4;2852:34;2920:12;2914:4;2907:26;2986:4;2980;2970:21;2954:37;;3032:1;3025:5;3021:13;3012:22;;2351:715;2328:7;2333:2;2328:7;;:::i;:::-;;;2288:788;;;-1:-1:-1;3092:12:167;2030:1081;-1:-1:-1;;;;2030:1081:167:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:226:322:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:322;;14:226;-1:-1:-1;14:226:322:o;245:121::-;330:10;323:5;319:22;312:5;309:33;299:61;;356:1;353;346:12;371:245;429:6;482:2;470:9;461:7;457:23;453:32;450:52;;;498:1;495;488:12;450:52;537:9;524:23;556:30;580:5;556:30;:::i;:::-;605:5;371:245;-1:-1:-1;;;371:245:322:o;818:195::-;899:12;;-1:-1:-1;;;;;895:38:322;883:51;;987:4;976:16;;;970:23;995:10;966:40;950:14;;943:64;818:195::o;1018:260::-;1212:2;1197:18;;1224:48;1201:9;1254:6;1224:48;:::i;1283:159::-;1350:20;;1410:6;1399:18;;1389:29;;1379:57;;1432:1;1429;1422:12;1447:184;1505:6;1558:2;1546:9;1537:7;1533:23;1529:32;1526:52;;;1574:1;1571;1564:12;1526:52;1597:28;1615:9;1597:28;:::i;2241:418::-;2390:2;2379:9;2372:21;2353:4;2422:6;2416:13;2465:6;2460:2;2449:9;2445:18;2438:34;2524:6;2519:2;2511:6;2507:15;2502:2;2491:9;2487:18;2481:50;2580:1;2575:2;2566:6;2555:9;2551:22;2547:31;2540:42;2650:2;2643;2639:7;2634:2;2626:6;2622:15;2618:29;2607:9;2603:45;2599:54;2591:62;;;2241:418;;;;:::o;2664:269::-;2721:6;2774:2;2762:9;2753:7;2749:23;2745:32;2742:52;;;2790:1;2787;2780:12;2742:52;2829:9;2816:23;2879:4;2872:5;2868:16;2861:5;2858:27;2848:55;;2899:1;2896;2889:12;3120:150;3195:20;;3244:1;3234:12;;3224:40;;3260:1;3257;3250:12;3275:208;3349:6;3402:2;3390:9;3381:7;3377:23;3373:32;3370:52;;;3418:1;3415;3408:12;3370:52;3441:36;3467:9;3441:36;:::i;3696:159::-;3760:5;3805:2;3796:6;3791:3;3787:16;3783:25;3780:45;;;3821:1;3818;3811:12;3780:45;-1:-1:-1;3843:6:322;3696:159;-1:-1:-1;3696:159:322:o;3860:247::-;3951:6;4004:2;3992:9;3983:7;3979:23;3975:32;3972:52;;;4020:1;4017;4010:12;3972:52;4043:58;4093:7;4082:9;4043:58;:::i;4345:347::-;4396:8;4406:6;4460:3;4453:4;4445:6;4441:17;4437:27;4427:55;;4478:1;4475;4468:12;4427:55;-1:-1:-1;4501:20:322;;-1:-1:-1;;;;;4533:30:322;;4530:50;;;4576:1;4573;4566:12;4530:50;4613:4;4605:6;4601:17;4589:29;;4665:3;4658:4;4649:6;4641;4637:19;4633:30;4630:39;4627:59;;;4682:1;4679;4672:12;4627:59;4345:347;;;;;:::o;4697:1106::-;4812:6;4820;4828;4836;4844;4852;4860;4913:3;4901:9;4892:7;4888:23;4884:33;4881:53;;;4930:1;4927;4920:12;4881:53;4969:9;4956:23;4988:30;5012:5;4988:30;:::i;:::-;5037:5;-1:-1:-1;5115:2:322;5100:18;;5087:32;;-1:-1:-1;5197:2:322;5182:18;;5169:32;5210;5169;5210;:::i;:::-;5261:7;-1:-1:-1;5319:2:322;5304:18;;5291:32;-1:-1:-1;;;;;5335:30:322;;5332:50;;;5378:1;5375;5368:12;5332:50;5417:58;5467:7;5458:6;5447:9;5443:22;5417:58;:::i;:::-;5494:8;;-1:-1:-1;5391:84:322;-1:-1:-1;;5582:3:322;5567:19;;5554:33;-1:-1:-1;;;;;5599:32:322;;5596:52;;;5644:1;5641;5634:12;5596:52;5683:60;5735:7;5724:8;5713:9;5709:24;5683:60;:::i;:::-;4697:1106;;;;-1:-1:-1;4697:1106:322;;-1:-1:-1;4697:1106:322;;;;5657:86;;-1:-1:-1;;;4697:1106:322:o;6487:504::-;6562:6;6570;6578;6631:2;6619:9;6610:7;6606:23;6602:32;6599:52;;;6647:1;6644;6637:12;6599:52;6692:23;;;-1:-1:-1;6791:2:322;6776:18;;6763:32;6804;6763;6804;:::i;:::-;6855:7;-1:-1:-1;6914:2:322;6899:18;;6886:32;6927;6886;6927;:::i;:::-;6978:7;6968:17;;;6487:504;;;;;:::o;6996:169::-;7069:5;7114:3;7105:6;7100:3;7096:16;7092:26;7089:46;;;7131:1;7128;7121:12;7170:658;7325:6;7333;7341;7394:3;7382:9;7373:7;7369:23;7365:33;7362:53;;;7411:1;7408;7401:12;7362:53;7450:9;7437:23;7469:30;7493:5;7469:30;:::i;:::-;7518:5;-1:-1:-1;7574:2:322;7559:18;;7546:32;-1:-1:-1;;;;;7590:30:322;;7587:50;;;7633:1;7630;7623:12;7587:50;7656:80;7728:7;7719:6;7708:9;7704:22;7656:80;:::i;:::-;7646:90;;;7755:67;7814:7;7809:2;7798:9;7794:18;7755:67;:::i;:::-;7745:77;;7170:658;;;;;:::o;7833:790::-;7954:6;7962;7970;7978;8031:3;8019:9;8010:7;8006:23;8002:33;7999:53;;;8048:1;8045;8038:12;7999:53;8088:9;8075:23;-1:-1:-1;;;;;8113:6:322;8110:30;8107:50;;;8153:1;8150;8143:12;8107:50;8176:22;;8232:3;8214:16;;;8210:26;8207:46;;;8249:1;8246;8239:12;8207:46;8272:2;-1:-1:-1;8343:2:322;8328:18;;8315:32;;-1:-1:-1;8423:2:322;8408:18;;8395:32;8436;8395;8436;:::i;:::-;8487:7;-1:-1:-1;8546:2:322;8531:18;;8518:32;8559;8518;8559;:::i;:::-;7833:790;;;;-1:-1:-1;7833:790:322;;-1:-1:-1;;7833:790:322:o;8628:131::-;-1:-1:-1;;;;;8703:31:322;;8693:42;;8683:70;;8749:1;8746;8739:12;8764:1130;8986:6;8994;9002;9010;9018;9026;9034;9087:3;9075:9;9066:7;9062:23;9058:33;9055:53;;;9104:1;9101;9094:12;9055:53;9143:9;9130:23;9162:31;9187:5;9162:31;:::i;:::-;9212:5;-1:-1:-1;9290:2:322;9275:18;;9262:32;;-1:-1:-1;9339:67:322;9398:7;9393:2;9378:18;;9339:67;:::i;:::-;9329:77;;9425:38;9458:3;9447:9;9443:19;9425:38;:::i;:::-;9415:48;;9515:3;9504:9;9500:19;9487:33;9529:32;9553:7;9529:32;:::i;:::-;9580:7;-1:-1:-1;9638:3:322;9623:19;;9610:33;-1:-1:-1;;;;;9655:30:322;;9652:50;;;9698:1;9695;9688:12;9652:50;9721:80;9793:7;9784:6;9773:9;9769:22;9721:80;:::i;:::-;9711:90;;;9820:68;9880:7;9874:3;9863:9;9859:19;9820:68;:::i;:::-;9810:78;;8764:1130;;;;;;;;;;:::o;9899:247::-;9958:6;10011:2;9999:9;9990:7;9986:23;9982:32;9979:52;;;10027:1;10024;10017:12;9979:52;10066:9;10053:23;10085:31;10110:5;10085:31;:::i;10151:127::-;10212:10;10207:3;10203:20;10200:1;10193:31;10243:4;10240:1;10233:15;10267:4;10264:1;10257:15;10522:265;10713:2;10698:18;;10725:56;10702:9;10763:6;10373:12;-1:-1:-1;;;;;10406:35:322;;10394:48;;10429:3;10478:19;10499:10;10474:36;10467:4;10458:14;;;10451:60;10283:234;10792:249;10861:6;10914:2;10902:9;10893:7;10889:23;10885:32;10882:52;;;10930:1;10927;10920:12;10882:52;10962:9;10956:16;10981:30;11005:5;10981:30;:::i;11046:271::-;11229:6;11221;11216:3;11203:33;11185:3;11255:16;;11280:13;;;11255:16;11046:271;-1:-1:-1;11046:271:322:o;11322:420::-;11375:3;11413:5;11407:12;11440:6;11435:3;11428:19;11472:4;11467:3;11463:14;11456:21;;11511:4;11504:5;11500:16;11534:1;11544:173;11558:6;11555:1;11552:13;11544:173;;;11619:13;;11607:26;;11662:4;11653:14;;;;11690:17;;;;11580:1;11573:9;11544:173;;;-1:-1:-1;11733:3:322;;11322:420;-1:-1:-1;;;;11322:420:322:o;11747:1091::-;12150:48;12188:9;12180:6;12150:48;:::i;:::-;12246:10;12238:6;12234:23;12229:2;12218:9;12214:18;12207:51;12294:3;12289:2;12278:9;12274:18;12267:31;12341:6;12335:13;12329:3;12318:9;12314:19;12307:42;12404:4;12396:6;12392:17;12386:24;12380:3;12369:9;12365:19;12358:53;12131:4;12458:2;12450:6;12446:15;12440:22;12505:12;12499:19;12493:3;12482:9;12478:19;12471:48;12580:4;12566:12;12562:23;12556:30;12550:3;12539:9;12535:19;12528:59;;12636:2;12628:6;12624:15;12618:22;12677:4;12671:3;12660:9;12656:19;12649:33;12699:65;12759:3;12748:9;12744:19;12728:14;12699:65;:::i;:::-;12691:73;;;12773:59;12826:4;12815:9;12811:20;12803:6;12773:59;:::i;:::-;11747:1091;;;;;;;:::o;12843:1466::-;13271:4;13319:3;13308:9;13304:19;13332:48;13370:9;13362:6;13332:48;:::i;:::-;13428:10;13420:6;13416:23;13411:2;13400:9;13396:18;13389:51;13476:3;13471:2;13460:9;13456:18;13449:31;13500:6;13535;13529:13;13566:6;13558;13551:22;13604:3;13593:9;13589:19;13582:26;;13667:3;13657:6;13654:1;13650:14;13639:9;13635:30;13631:40;13617:54;;13706:4;13698:6;13694:17;13729:1;13739:474;13753:6;13750:1;13747:13;13739:474;;;13818:22;;;-1:-1:-1;;13814:37:322;13802:50;;13875:13;;13920:9;;-1:-1:-1;;;;;13916:35:322;13901:51;;13999:4;13991:13;;;13985:20;14044:2;14025:17;;;14018:29;;;13985:20;14070:59;;14113:15;;13985:20;14070:59;:::i;:::-;14060:69;-1:-1:-1;;14164:4:322;14189:14;;;;14152:17;;;;;13775:1;13768:9;13739:474;;;13743:3;;;;14230:6;14222:14;;;14245:58;14298:3;14287:9;14283:19;14275:6;14245:58;:::i;14740:127::-;14801:10;14796:3;14792:20;14789:1;14782:31;14832:4;14829:1;14822:15;14856:4;14853:1;14846:15;14872:127;14933:10;14928:3;14924:20;14921:1;14914:31;14964:4;14961:1;14954:15;14988:4;14985:1;14978:15;15284:553;15387:5;15394:6;15454:3;15441:17;15540:2;15536:7;15525:8;15509:14;15505:29;15501:43;15481:18;15477:68;15467:96;;15559:1;15556;15549:12;15467:96;15587:33;;15691:4;15678:18;;;-1:-1:-1;15639:21:322;;-1:-1:-1;;;;;;15708:30:322;;15705:50;;;15751:1;15748;15741:12;15705:50;15805:6;15802:1;15798:14;15782;15778:35;15771:5;15767:47;15764:67;;;15827:1;15824;15817:12;15842:266;15930:6;15925:3;15918:19;15982:6;15975:5;15968:4;15963:3;15959:14;15946:43;-1:-1:-1;16034:1:322;16009:16;;;16027:4;16005:27;;;15998:38;;;;16090:2;16069:15;;;-1:-1:-1;;16065:29:322;16056:39;;;16052:50;;15842:266::o;16113:302::-;16190:5;16249:3;16236:17;16335:2;16331:7;16320:8;16304:14;16300:29;16296:43;16276:18;16272:68;16262:96;;16354:1;16351;16344:12;16262:96;16376:33;;;;16113:302;-1:-1:-1;;16113:302:322:o;16420:311::-;16508:19;;;16490:3;-1:-1:-1;;;;;16539:31:322;;16536:51;;;16583:1;16580;16573:12;16536:51;16619:6;16616:1;16612:14;16671:8;16664:5;16657:4;16652:3;16648:14;16635:45;16700:18;;;;16720:4;16696:29;;16420:311;-1:-1:-1;;;16420:311:322:o;16736:416::-;15110:19;;15138:20;;15227:4;15216:16;;;15203:30;15249:14;;;15242:31;16805:3;16912:100;17006:4;16999:5;16995:16;16988:5;16912:100;:::i;:::-;17044:4;17037;17032:3;17028:14;17021:28;17065:81;17140:4;17135:3;17131:14;17117:12;17103;17065:81;:::i;17157:432::-;17209:3;17247:5;17241:12;17274:6;17269:3;17262:19;17306:4;17301:3;17297:14;17290:21;;17345:4;17338:5;17334:16;17368:1;17378:186;17392:6;17389:1;17386:13;17378:186;;;17457:13;;17472:6;17453:26;17441:39;;17509:4;17500:14;;;;17537:17;;;;17414:1;17407:9;17378:186;;17594:2773;17938:56;17984:9;17976:6;10373:12;-1:-1:-1;;;;;10406:35:322;;10394:48;;10429:3;10478:19;10499:10;10474:36;10467:4;10458:14;;;10451:60;10283:234;17938:56;18030:3;18025:2;18014:9;18010:18;18003:31;17919:4;18072:3;18061:9;18057:19;18111:6;18098:20;18127:30;18151:5;18127:30;:::i;:::-;18205:10;18194:22;18188:3;18173:19;;18166:51;18287:4;18275:17;;18262:31;18324:3;18309:19;;18302:36;18394:2;18382:15;;15110:19;18414:3;18399:19;;15138:20;15216:16;;;15203:30;15249:14;;;15242:31;18480:2;18474:3;18466:6;18462:16;18456:3;18445:9;18441:19;18428:55;18544:2;18538:3;18530:6;18526:16;18520:3;18509:9;18505:19;18492:55;18590:101;18686:3;18678:6;18674:16;18666:6;18590:101;:::i;:::-;18728:6;18722:3;18711:9;18707:19;18700:35;18755:6;18785:12;18777:6;18770:28;18829:3;18818:9;18814:19;18807:26;;18898:3;18882:12;18879:1;18875:20;18864:9;18860:36;18856:46;18842:60;;18925:12;18955:1;18965:1275;18979:12;18976:1;18973:19;18965:1275;;;19050:22;;;-1:-1:-1;;19046:37:322;19034:50;;19107:71;19171:6;19157:12;19107:71;:::i;:::-;19219:2;19206:16;19235:32;19259:7;19235:32;:::i;:::-;19308:10;19295:24;19280:40;;19380:4;19372:13;;19359:27;19441:14;19437:23;;;-1:-1:-1;;19433:37:322;19409:62;;19399:90;;19485:1;19482;19475:12;19399:90;19517:27;;19633:4;19620:18;;;19571:21;-1:-1:-1;;;;;19654:30:322;;19651:50;;;19697:1;19694;19687:12;19651:50;19750:6;19734:14;19730:27;19721:7;19717:41;19714:61;;;19771:1;19768;19761:12;19714:61;19814:4;19807;19799:6;19795:17;19788:31;19846:61;19901:4;19893:6;19889:17;19881:6;19872:7;19846:61;:::i;:::-;19832:75;;;19942:66;20004:2;20000;19996:11;19992:2;19942:66;:::i;:::-;19920:88;;20057:6;20049;20045:19;20040:2;20032:6;20028:15;20021:44;20088:68;20149:6;20133:14;20088:68;:::i;:::-;20078:78;-1:-1:-1;;;20191:4:322;20216:14;;;;20179:17;;;;;19007:1;19000:9;18965:1275;;;18969:3;;;;;20290:9;20282:6;20278:22;20271:4;20260:9;20256:20;20249:52;20318:43;20354:6;20346;20318:43;:::i;:::-;20310:51;17594:2773;-1:-1:-1;;;;;;17594:2773:322:o;20372:277::-;20439:6;20492:2;20480:9;20471:7;20467:23;20463:32;20460:52;;;20508:1;20505;20498:12;20460:52;20540:9;20534:16;20593:5;20586:13;20579:21;20572:5;20569:32;20559:60;;20615:1;20612;20605:12;22036:598;22211:5;22198:19;22226:33;22251:7;22226:33;:::i;:::-;22330:11;;-1:-1:-1;;;;;;22366:45:322;;-1:-1:-1;;;;;22278:33:322;;;;22363:53;;;22350:67;;22465:2;22454:14;;22441:28;22478:32;22441:28;22478:32;:::i;:::-;-1:-1:-1;;;;;;22538:37:322;;;;22535:45;;;22609:3;22586:17;;;;-1:-1:-1;;;22582:44:322;22532:95;22519:109;;-1:-1:-1;22036:598:322:o;22639:363::-;22741:5;22728:19;22756:33;22781:7;22756:33;:::i;:::-;-1:-1:-1;;;;;22810:33:322;22798:46;;22892:4;22881:16;;22868:30;22907:32;22868:30;22907:32;:::i;:::-;22984:10;22975:7;22971:24;22964:4;22959:3;22955:14;22948:48;;22639:363;;:::o;23007:271::-;23203:2;23188:18;;23215:57;23192:9;23254:6;23215:57;:::i;23283:257::-;23355:4;23349:11;;;23387:17;;-1:-1:-1;;;;;23419:34:322;;23455:22;;;23416:62;23413:88;;;23481:18;;:::i;:::-;23517:4;23510:24;23283:257;:::o;23545:253::-;23617:2;23611:9;23659:4;23647:17;;-1:-1:-1;;;;;23679:34:322;;23715:22;;;23676:62;23673:88;;;23741:18;;:::i;23803:275::-;23874:2;23868:9;23939:2;23920:13;;-1:-1:-1;;23916:27:322;23904:40;;-1:-1:-1;;;;;23959:34:322;;23995:22;;;23956:62;23953:88;;;24021:18;;:::i;:::-;24057:2;24050:22;23803:275;;-1:-1:-1;23803:275:322:o;24083:431::-;24141:5;24189:4;24177:9;24172:3;24168:19;24164:30;24161:50;;;24207:1;24204;24197:12;24161:50;24229:22;;:::i;:::-;24220:31;;24288:9;24275:23;24307:33;24332:7;24307:33;:::i;:::-;24349:22;;24423:2;24408:18;;24395:32;24436;24395;24436;:::i;:::-;24495:2;24484:14;;24477:31;24488:5;24083:431;-1:-1:-1;;24083:431:322:o;24519:1127::-;24695:6;24703;24711;24719;24772:3;24760:9;24751:7;24747:23;24743:33;24740:53;;;24789:1;24786;24779:12;24740:53;24812:49;24853:7;24842:9;24812:49;:::i;:::-;24802:59;;24880:45;24921:2;24910:9;24906:18;24880:45;:::i;:::-;24870:55;;24944:58;24994:7;24989:2;24978:9;24974:18;24944:58;:::i;:::-;24934:68;;25053:3;25042:9;25038:19;25025:33;-1:-1:-1;;;;;25073:6:322;25070:30;25067:50;;;25113:1;25110;25103:12;25067:50;25136:22;;25189:4;25181:13;;25177:27;-1:-1:-1;25167:55:322;;25218:1;25215;25208:12;25167:55;25258:2;25245:16;-1:-1:-1;;;;;25276:6:322;25273:30;25270:56;;;25306:18;;:::i;:::-;25348:59;25395:2;25372:17;;-1:-1:-1;;25368:31:322;25401:4;25364:42;25348:59;:::i;:::-;25430:6;25423:5;25416:21;25480:7;25473:4;25464:6;25460:2;25456:15;25452:26;25449:39;25446:59;;;25501:1;25498;25491:12;25446:59;25560:6;25553:4;25549:2;25545:13;25538:4;25531:5;25527:16;25514:53;25614:1;25607:4;25598:6;25591:5;25587:18;25583:29;25576:40;25635:5;25625:15;;;;;24519:1127;;;;;;;:::o;25651:183::-;25711:4;-1:-1:-1;;;;;25736:6:322;25733:30;25730:56;;;25766:18;;:::i;:::-;-1:-1:-1;25811:1:322;25807:14;25823:4;25803:25;;25651:183::o;25839:720::-;25904:5;25957:3;25950:4;25942:6;25938:17;25934:27;25924:55;;25975:1;25972;25965:12;25924:55;26008:6;26002:13;26035:64;26051:47;26091:6;26051:47;:::i;:::-;26035:64;:::i;:::-;26123:3;26147:6;26142:3;26135:19;26179:4;26174:3;26170:14;26163:21;;26240:4;26230:6;26227:1;26223:14;26215:6;26211:27;26207:38;26193:52;;26268:3;26260:6;26257:15;26254:35;;;26285:1;26282;26275:12;26254:35;26321:4;26313:6;26309:17;26335:193;26351:6;26346:3;26343:15;26335:193;;;26443:10;;26466:18;;26513:4;26504:14;;;;26368;26335:193;;;-1:-1:-1;26546:7:322;25839:720;-1:-1:-1;;;;;25839:720:322:o;26564:1155::-;26673:6;26726:2;26714:9;26705:7;26701:23;26697:32;26694:52;;;26742:1;26739;26732:12;26694:52;26775:9;26769:16;-1:-1:-1;;;;;26800:6:322;26797:30;26794:50;;;26840:1;26837;26830:12;26794:50;26863:22;;26904:16;;;26940:4;26932:13;;26929:33;;;26958:1;26955;26948:12;26929:33;26984:22;;:::i;:::-;27029:9;;27015:24;;27098:2;27090:11;;;27084:18;27118:14;;;27111:31;27176:2;-1:-1:-1;;27158:16:322;;27154:25;27151:45;;;27192:1;27189;27182:12;27151:45;27220:22;;:::i;:::-;27301:2;27293:11;;;27287:18;27314:24;;27397:2;27389:11;;27383:18;27430:2;27417:16;;27410:33;27459:14;;27452:31;27522:4;27514:13;;27508:20;;-1:-1:-1;;;;;;27540:32:322;;27537:52;;;27585:1;27582;27575:12;27537:52;27621:67;27680:7;27669:8;27665:2;27661:17;27621:67;:::i;:::-;27616:2;27605:14;;27598:91;27609:5;26564:1155;-1:-1:-1;;;;;26564:1155:322:o;27724:1536::-;27855:6;27908:2;27896:9;27887:7;27883:23;27879:32;27876:52;;;27924:1;27921;27914:12;27876:52;27957:9;27951:16;-1:-1:-1;;;;;27982:6:322;27979:30;27976:50;;;28022:1;28019;28012:12;27976:50;28045:22;;28098:4;28090:13;;28086:27;-1:-1:-1;28076:55:322;;28127:1;28124;28117:12;28076:55;28160:2;28154:9;28183:64;28199:47;28239:6;28199:47;:::i;28183:64::-;28269:3;28293:6;28288:3;28281:19;28325:2;28320:3;28316:12;28309:19;;28380:2;28370:6;28367:1;28363:14;28359:2;28355:23;28351:32;28337:46;;28406:7;28398:6;28395:19;28392:39;;;28427:1;28424;28417:12;28392:39;28459:2;28455;28451:11;28471:759;28487:6;28482:3;28479:15;28471:759;;;28566:3;28560:10;-1:-1:-1;;;;;28589:11:322;28586:35;28583:55;;;28634:1;28631;28624:12;28583:55;28661:20;;28733:4;28705:16;;;-1:-1:-1;;28701:30:322;28697:41;28694:61;;;28751:1;28748;28741:12;28694:61;28781:22;;:::i;:::-;28845:2;28841;28837:11;28831:18;28862:33;28887:7;28862:33;:::i;:::-;28908:22;;28973:4;28965:13;;28959:20;-1:-1:-1;;;;;28995:32:322;;28992:52;;;29040:1;29037;29030:12;28992:52;29080:76;29148:7;29143:2;29132:8;29128:2;29124:17;29120:26;29080:76;:::i;:::-;29075:2;29068:5;29064:14;29057:100;;29182:5;29177:3;29170:18;;;29217:2;29212:3;29208:12;29201:19;;28513:2;28508:3;28504:12;28497:19;;28471:759;;;-1:-1:-1;29249:5:322;27724:1536;-1:-1:-1;;;;;;27724:1536:322:o;29265:1239::-;29669:56;29715:9;29707:6;10373:12;-1:-1:-1;;;;;10406:35:322;;10394:48;;10429:3;10478:19;10499:10;10474:36;10467:4;10458:14;;;10451:60;10283:234;29669:56;29773:10;29761:23;;29756:2;29741:18;;;29734:51;;;;29821:3;29816:2;29801:18;;;29794:31;;;29866:20;;29902:19;;;29895:34;;;;29999:4;29987:17;;29974:31;30036:3;30021:19;;30014:36;30094:15;;;15110:19;30126:3;30111:19;;15138:20;15216:16;;15203:30;15249:14;;;15242:31;-1:-1:-1;30174:102:322;30270:4;30262:6;30258:17;30250:6;30174:102;:::i;:::-;30313:4;30307:3;30296:9;30292:19;30285:33;30335:86;30416:3;30405:9;30401:19;30387:12;30373;30335:86;:::i;:::-;30327:94;;;;30430:68;30492:4;30481:9;30477:20;30469:6;30430:68;:::i;30509:251::-;30579:6;30632:2;30620:9;30611:7;30607:23;30603:32;30600:52;;;30648:1;30645;30638:12;30600:52;30680:9;30674:16;30699:31;30724:5;30699:31;:::i;30765:209::-;30797:1;30823;30813:132;;30867:10;30862:3;30858:20;30855:1;30848:31;30902:4;30899:1;30892:15;30930:4;30927:1;30920:15;30813:132;-1:-1:-1;30959:9:322;;30765:209::o;30979:222::-;31044:9;;;31065:10;;;31062:133;;;31117:10;31112:3;31108:20;31105:1;31098:31;31152:4;31149:1;31142:15;31180:4;31177:1;31170:15",
    "linkReferences": {},
    "immutableReferences": {
      "93131": [
        {
          "start": 1624,
          "length": 32
        }
      ],
      "97408": [
        {
          "start": 1293,
          "length": 32
        },
        {
          "start": 1714,
          "length": 32
        },
        {
          "start": 1886,
          "length": 32
        },
        {
          "start": 2323,
          "length": 32
        },
        {
          "start": 3082,
          "length": 32
        },
        {
          "start": 5154,
          "length": 32
        }
      ],
      "97412": [
        {
          "start": 1254,
          "length": 32
        },
        {
          "start": 1778,
          "length": 32
        },
        {
          "start": 2488,
          "length": 32
        }
      ],
      "98615": [
        {
          "start": 1179,
          "length": 32
        },
        {
          "start": 4188,
          "length": 32
        },
        {
          "start": 5266,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "GLOBAL_TABLE_ROOT_CERT_TYPEHASH()": "3ef6cd7a",
    "INITIAL_GLOBAL_TABLE_ROOT()": "4af81d7a",
    "MAX_BPS()": "fd967f47",
    "bn254CertificateVerifier()": "b8c14306",
    "confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)": "eaaed9d5",
    "disableRoot(bytes32)": "c3621f0a",
    "ecdsaCertificateVerifier()": "ad0f9582",
    "getCertificateVerifier(uint8)": "6f728c50",
    "getCurrentGlobalTableRoot()": "28522d79",
    "getGenerator()": "1e2ca260",
    "getGeneratorReferenceTimestamp()": "7551ba34",
    "getGlobalTableRootByTimestamp(uint32)": "c5916a39",
    "getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)": "c3be1e33",
    "getLatestReferenceBlockNumber()": "31a599d2",
    "getLatestReferenceTimestamp()": "4624e6a3",
    "getReferenceBlockNumberByTimestamp(uint32)": "23b7b5b2",
    "getReferenceTimestampByBlockNumber(uint32)": "193b79f3",
    "globalRootConfirmationThreshold()": "c252aa22",
    "initialize(address,uint256,(address,uint32),uint16,uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))": "ed90dc60",
    "isRootValid(bytes32)": "30ef41b4",
    "isRootValidByTimestamp(uint32)": "64e1df84",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "renounceOwnership()": "715018a6",
    "setGenerator((address,uint32))": "77d90e94",
    "setGlobalRootConfirmationThreshold(uint16)": "2370356c",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "updateGenerator(uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))": "e944e0a8",
    "updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)": "9ea94778",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBN254CertificateVerifier\",\"name\":\"_bn254CertificateVerifier\",\"type\":\"address\"},{\"internalType\":\"contract IECDSACertificateVerifier\",\"name\":\"_ecdsaCertificateVerifier\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CertificateInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GlobalTableRootInFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GlobalTableRootStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConfirmationThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurveType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGlobalTableRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSetProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProofLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TableUpdateForPastTimestamp\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"GeneratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"bps\",\"type\":\"uint16\"}],\"name\":\"GlobalRootConfirmationThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"GlobalRootDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"NewGlobalTableRoot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GLOBAL_TABLE_ROOT_CERT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_GLOBAL_TABLE_ROOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bn254CertificateVerifier\",\"outputs\":[{\"internalType\":\"contract IBN254CertificateVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"operatorInfoProof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254Certificate\",\"name\":\"globalTableRootCert\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"confirmGlobalTableRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"disableRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecdsaCertificateVerifier\",\"outputs\":[{\"internalType\":\"contract IECDSACertificateVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"getCertificateVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGlobalTableRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGenerator\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGeneratorReferenceTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getGlobalTableRootByTimestamp\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"getGlobalTableUpdateMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestReferenceBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestReferenceTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getReferenceBlockNumberByTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"getReferenceTimestampByBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalRootConfirmationThreshold\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"_generator\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"_globalRootConfirmationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"generatorInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct ICrossChainRegistryTypes.OperatorSetConfig\",\"name\":\"generatorConfig\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"isRootValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"isRootValidByTimestamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"setGenerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"bps\",\"type\":\"uint16\"}],\"name\":\"setGlobalRootConfirmationThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"generatorInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct ICrossChainRegistryTypes.OperatorSetConfig\",\"name\":\"generatorConfig\",\"type\":\"tuple\"}],\"name\":\"updateGenerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorTableBytes\",\"type\":\"bytes\"}],\"name\":\"updateOperatorTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}]},\"events\":{\"GeneratorUpdated((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet which certifies against global roots\"}},\"GlobalRootConfirmationThresholdUpdated(uint16)\":{\"params\":{\"bps\":\"The threshold, in bps, for a global root to be signed off on and updated\"}},\"GlobalRootDisabled(bytes32)\":{\"params\":{\"globalTableRoot\":\"the global table root that was disabled\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"NewGlobalTableRoot(uint32,bytes32)\":{\"params\":{\"globalTableRoot\":\"the root of the global table\",\"referenceTimestamp\":\"the timestamp of the global table root\"}}},\"kind\":\"dev\",\"methods\":{\"confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)\":{\"details\":\"Any entity can submit with a valid certificate signed off by the `Generator`The `msgHash` in the `globalOperatorTableRootCert` is the hash of the `globalOperatorTableRoot`\",\"params\":{\"globalTableRoot\":\"merkle root of all operatorSet tables\",\"globalTableRootCert\":\"certificate of the root\",\"referenceBlockNumber\":\"block number of the root\",\"referenceTimestamp\":\"timestamp of the root\"}},\"disableRoot(bytes32)\":{\"details\":\"Only callable by the pauser\",\"params\":{\"globalTableRoot\":\"the global table root to disable\"}},\"getCertificateVerifier(uint8)\":{\"params\":{\"curveType\":\"The curve type\"},\"returns\":{\"_0\":\"The certificate verifier for the given key type\"}},\"getCurrentGlobalTableRoot()\":{\"returns\":{\"_0\":\"the current global table root\"}},\"getGenerator()\":{\"returns\":{\"_0\":\"The operatorSet which certifies against global roots\"}},\"getGeneratorReferenceTimestamp()\":{\"details\":\"In V1, we only update the table of the generator on initial deployment, and never update it again.\",\"returns\":{\"_0\":\"The reference timestamp of the generator\"}},\"getGlobalTableRootByTimestamp(uint32)\":{\"params\":{\"referenceTimestamp\":\"the timestamp of the table root\"},\"returns\":{\"_0\":\"the table root at the given timestamp\"}},\"getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)\":{\"params\":{\"globalTableRoot\":\"the global table root\",\"referenceBlockNumber\":\"the reference block number\",\"referenceTimestamp\":\"the reference timestamp\"},\"returns\":{\"_0\":\"The message hash for a global table root\"}},\"getLatestReferenceBlockNumber()\":{\"returns\":{\"_0\":\"The latest reference block number\"}},\"getLatestReferenceTimestamp()\":{\"returns\":{\"_0\":\"The latest reference timestamp\"}},\"getReferenceBlockNumberByTimestamp(uint32)\":{\"params\":{\"referenceTimestamp\":\"the reference timestamp\"},\"returns\":{\"_0\":\"The reference block number for the given reference timestamp\"}},\"getReferenceTimestampByBlockNumber(uint32)\":{\"params\":{\"referenceBlockNumber\":\"the reference block number\"},\"returns\":{\"_0\":\"The reference timestamp for the given reference block number\"}},\"initialize(address,uint256,(address,uint32),uint16,uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))\":{\"details\":\"We also update the operator table for the global root confirmer set, to begin signing off on global rootsUses INITIAL_GLOBAL_TABLE_ROOT constant to break circular dependency for certificate verification\",\"params\":{\"_generator\":\"The operatorSet which certifies against global roots\",\"_globalRootConfirmationThreshold\":\"The threshold, in bps, for a global root to be signed off on and updated\",\"generatorConfig\":\"The operatorSetConfig for the global root confirmer set\",\"generatorInfo\":\"The operatorSetInfo for the global root confirmer set\",\"initialPausedStatus\":\"The initial paused status of the OperatorTableUpdater\",\"owner\":\"The owner of the OperatorTableUpdater\",\"referenceTimestamp\":\"The reference timestamp for the global root confirmer set\"}},\"isRootValid(bytes32)\":{\"params\":{\"globalTableRoot\":\"the global table root\"},\"returns\":{\"_0\":\"The validity status of the global table root\"}},\"isRootValidByTimestamp(uint32)\":{\"params\":{\"referenceTimestamp\":\"the reference timestamp\"},\"returns\":{\"_0\":\"The validity status of the global table root\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setGenerator((address,uint32))\":{\"details\":\"The `operatorSet` is used to verify the certificate of the global table rootOnly callable by the owner of the contract\",\"params\":{\"operatorSet\":\"the operatorSet which certifies against global roots\"}},\"setGlobalRootConfirmationThreshold(uint16)\":{\"details\":\"Only callable by the owner of the contract\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateGenerator(uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))\":{\"details\":\"We have a separate function for updating this operatorSet since it's not transported and updated      in the same way as the other operatorSetsOnly callable by the owner of the contract\",\"params\":{\"GeneratorConfig\":\"The operatorSetConfig for the generator\",\"GeneratorInfo\":\"The operatorSetInfo for the generator\",\"referenceTimestamp\":\"The reference timestamp of the operator table update\"}},\"updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)\":{\"details\":\"Depending on the decoded KeyType, the tableInfo will be decoded\",\"params\":{\"globalTableRoot\":\"the new globalTableRoot\",\"operatorSetIndex\":\"the index of the given operatorSet being updated\",\"operatorTableBytes\":\"the bytes of the operator table\",\"proof\":\"the proof of the leaf at index against the globalTableRoot\",\"referenceTimestamp\":\"the reference block number of the globalTableRoot\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CertificateInvalid()\":[{\"notice\":\"Thrown when the GlobalTableRoot update fails\"}],\"GlobalTableRootInFuture()\":[{\"notice\":\"Thrown when the global table root is in the future\"}],\"GlobalTableRootStale()\":[{\"notice\":\"Thrown when the global table root is stale\"}],\"InvalidConfirmationThreshold()\":[{\"notice\":\"Thrown when the confirmation threshold is invalid\"}],\"InvalidCurveType()\":[{\"notice\":\"Thrown when the curve type is invalid\"}],\"InvalidGlobalTableRoot()\":[{\"notice\":\"Thrown when the global table root does not match what is in storage\"}],\"InvalidMessageHash()\":[{\"notice\":\"Thrown when the table root does not match what is in the certificate\"}],\"InvalidOperatorSetProof()\":[{\"notice\":\"Thrown when the operator set proof is invalid\"}],\"InvalidRoot()\":[{\"notice\":\"Thrown when a root is invalid\"}],\"TableUpdateForPastTimestamp()\":[{\"notice\":\"Thrown when the table has been updated for the timestamp\"}]},\"events\":{\"GeneratorUpdated((address,uint32))\":{\"notice\":\"Emitted when the generator is updated\"},\"GlobalRootConfirmationThresholdUpdated(uint16)\":{\"notice\":\"Emitted when the global root confirmation threshold is updated\"},\"GlobalRootDisabled(bytes32)\":{\"notice\":\"Emitted when a global table root is disabled\"},\"NewGlobalTableRoot(uint32,bytes32)\":{\"notice\":\"Emitted when a new global table root is set\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"INITIAL_GLOBAL_TABLE_ROOT()\":{\"notice\":\"Dummy initial global table root to break circular dependency for certificate verification\"},\"MAX_BPS()\":{\"notice\":\"The maximum BPS value\"},\"bn254CertificateVerifier()\":{\"notice\":\"The BN254 certificate verifier\"},\"confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)\":{\"notice\":\"Confirms Global operator table root\"},\"constructor\":{\"notice\":\"INITIALIZING FUNCTIONS\"},\"disableRoot(bytes32)\":{\"notice\":\"Disables a global table root\"},\"ecdsaCertificateVerifier()\":{\"notice\":\"The ECDSA certificate verifier\"},\"getCertificateVerifier(uint8)\":{\"notice\":\"Get the certificate verifier for a given key type\"},\"getCurrentGlobalTableRoot()\":{\"notice\":\"Get the current global table root\"},\"getGenerator()\":{\"notice\":\"Get the operatorSet which certifies against global roots\"},\"getGeneratorReferenceTimestamp()\":{\"notice\":\"Get the reference timestamp of the generator\"},\"getGlobalTableRootByTimestamp(uint32)\":{\"notice\":\"Get the table root by timestamp\"},\"getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)\":{\"notice\":\"Get the message hash for the certificate of a global table root update\"},\"getLatestReferenceBlockNumber()\":{\"notice\":\"Get the latest reference block number\"},\"getLatestReferenceTimestamp()\":{\"notice\":\"Get the latest reference timestamp\"},\"getReferenceBlockNumberByTimestamp(uint32)\":{\"notice\":\"Get the reference block number for a given reference timestamp\"},\"getReferenceTimestampByBlockNumber(uint32)\":{\"notice\":\"Get the reference timestamp for a given reference block number\"},\"globalRootConfirmationThreshold()\":{\"notice\":\"The threshold, in bps, for a global root to be signed off on and updated\"},\"initialize(address,uint256,(address,uint32),uint16,uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))\":{\"notice\":\"Initializes the OperatorTableUpdater\"},\"isRootValid(bytes32)\":{\"notice\":\"Get the validity status of a global table root\"},\"isRootValidByTimestamp(uint32)\":{\"notice\":\"Get the validity status of a global table root by timestamp\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"setGenerator((address,uint32))\":{\"notice\":\"Set the operatorSet which certifies against global roots\"},\"setGlobalRootConfirmationThreshold(uint16)\":{\"notice\":\"The threshold, in bps, for a global root to be signed off on and updated\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateGenerator(uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))\":{\"notice\":\"Updates the operator table for the generator\"},\"updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)\":{\"notice\":\"Updates an operator table\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/multichain/OperatorTableUpdater.sol\":\"OperatorTableUpdater\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"src/contracts/interfaces/IBN254CertificateVerifier.sol\":{\"keccak256\":\"0xb03cbcf4b6102abd378ff223100c08adc3ac30fd37bbff34b217ef22d80f690a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5fd602c78df1927bf4a4daecf24144678b6650bca607c39e29fb65d587d4a912\",\"dweb:/ipfs/QmR9eruhpjXczLHURUEHHZfvi8axAZ3YRbNsz8xQ416ksN\"]},\"src/contracts/interfaces/IBaseCertificateVerifier.sol\":{\"keccak256\":\"0x6f0ef3e573cf4e92e1b071755373fb7738cef79049575f45e6fcd6d835e887ea\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a4fb251ce933d5661643594822fd40761b26a905733ade0ea33b0a8ead306391\",\"dweb:/ipfs/QmRkCwHmHPWLDPRmJdPnV2Gb8wPrL1vzAfS96S3uEYUg1a\"]},\"src/contracts/interfaces/ICrossChainRegistry.sol\":{\"keccak256\":\"0x0f8b182e2ce900f6cddc7e1e4addd0df858acf847796d6f823a6486628ae34b4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://25cca26efa67086bb5f57eb31aab36f1e1a63b93eb9690072774c6ea965a8591\",\"dweb:/ipfs/Qmduc74dW679rh2h9d9m3ShW3uWakk7Adcj8VuKEq5nDyL\"]},\"src/contracts/interfaces/IECDSACertificateVerifier.sol\":{\"keccak256\":\"0xf1fcb2f8e6b48f8a0e6f0c7252da5a1bf4381f888adb52dd2a7664469c7e74ab\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://330cd704da2dfec20a903e27038cb0cc826adee0206aa01d95e55195c9ffad2a\",\"dweb:/ipfs/QmVn7Q4QbLo3Jx4a4BsLMYs21JwXy3xWtnFn4nMAY9Jjop\"]},\"src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0xa667d4377331e23b31ac28a4c4f1ab0dfa24911d93b6f05cb772330cdf264d53\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://82a02653db3332887a018ce6dce4a760ff35d0d5393a416103d8fbd88c7c7bb9\",\"dweb:/ipfs/QmV5rUxZdr8x2sF5MU6RLXySMr9GJkHemEex3tF3QyFYjg\"]},\"src/contracts/interfaces/IOperatorTableCalculator.sol\":{\"keccak256\":\"0xfd8827a2210442970cb6cfc3d2c999bebefcbc51b0b854f076d24a2594f8ab68\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a6fdc6703726e2bfdc14018fd08d1366438065fae01407d2e73b9d38f4e6c934\",\"dweb:/ipfs/QmT3AU8aV3R7vCGf86sqyWqV94hMHEfYbho84XxuDKceNH\"]},\"src/contracts/interfaces/IOperatorTableUpdater.sol\":{\"keccak256\":\"0x24a6b11b4c77524a4f1bc156d85e453f07c9ed9d796683c9d2e8a870dc8eb08a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://249cccbe440018875433659c5a020e5b51dc9834038adeb947fbb833052c6139\",\"dweb:/ipfs/QmVjEgZbhb2taQg2C3P9Sb8QFeAiSoy9T7gTSUgxj4REvL\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xfea37c052df354d4bd9a1f312dfec81abc8718de41d7cd0c8bd22241887ed246\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bdc6ab1ef26a39e7db1219e5ecfbbf137473ef4d531a31eed4827b5099c063\",\"dweb:/ipfs/QmVgSDqpMH5dP3rwR1fL59syT9o2tTuwaT7BfWjRY3YhPZ\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/multichain/OperatorTableUpdater.sol\":{\"keccak256\":\"0xa1c1dd41fb96fac5456b2102e52535cf0c73be548742b428a9a4c818a9befead\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e6b66579fe09e0b61f3846afe126679e49ca379d0d4180773fd87d869e437626\",\"dweb:/ipfs/Qmac5WKLgcRK8DvrH3SnY7aAAa71M3eHAw3rQ42Yo75zjr\"]},\"src/contracts/multichain/OperatorTableUpdaterStorage.sol\":{\"keccak256\":\"0x937dc17bb61c5b84513ef4b69a367f8d71e2890b9d8d2e147b53cb492f0e7635\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fadddb098019ef93b9da3f1f58ec2253ec9eab594071fe47178c312db2c7298c\",\"dweb:/ipfs/QmbFLgKrYaoyqpSRe6iiFebUWAsXkijUz6PbbPVJsgjUNX\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99\",\"dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBN254CertificateVerifier",
              "name": "_bn254CertificateVerifier",
              "type": "address"
            },
            {
              "internalType": "contract IECDSACertificateVerifier",
              "name": "_ecdsaCertificateVerifier",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CertificateInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GlobalTableRootInFuture"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GlobalTableRootStale"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidConfirmationThreshold"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCurveType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidGlobalTableRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMessageHash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSetProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidProofLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignatureLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TableUpdateForPastTimestamp"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GeneratorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GlobalRootConfirmationThresholdUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GlobalRootDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewGlobalTableRoot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GLOBAL_TABLE_ROOT_CERT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "INITIAL_GLOBAL_TABLE_ROOT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BPS",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bn254CertificateVerifier",
          "outputs": [
            {
              "internalType": "contract IBN254CertificateVerifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
              "name": "globalTableRootCert",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "signature",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apk",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
                  "name": "nonSignerWitnesses",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operatorIndex",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "operatorInfoProof",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                      "name": "operatorInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct BN254.G1Point",
                          "name": "pubkey",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "X",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "Y",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "weights",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmGlobalTableRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableRoot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ecdsaCertificateVerifier",
          "outputs": [
            {
              "internalType": "contract IECDSACertificateVerifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCertificateVerifier",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentGlobalTableRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGenerator",
          "outputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGeneratorReferenceTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalTableRootByTimestamp",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getGlobalTableUpdateMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestReferenceBlockNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestReferenceTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReferenceBlockNumberByTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReferenceTimestampByBlockNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "globalRootConfirmationThreshold",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "_generator",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint16",
              "name": "_globalRootConfirmationThreshold",
              "type": "uint16"
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
              "name": "generatorInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorInfoTreeRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "numOperators",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "aggregatePubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "totalWeights",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
              "name": "generatorConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "maxStalenessPeriod",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRootValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRootValidByTimestamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGenerator"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGlobalRootConfirmationThreshold"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
              "name": "generatorInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorInfoTreeRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "numOperators",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "aggregatePubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "totalWeights",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
              "name": "generatorConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "maxStalenessPeriod",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateGenerator"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetIndex",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "proof",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorTableBytes",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorTable"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)": {
            "details": "Any entity can submit with a valid certificate signed off by the `Generator`The `msgHash` in the `globalOperatorTableRootCert` is the hash of the `globalOperatorTableRoot`",
            "params": {
              "globalTableRoot": "merkle root of all operatorSet tables",
              "globalTableRootCert": "certificate of the root",
              "referenceBlockNumber": "block number of the root",
              "referenceTimestamp": "timestamp of the root"
            }
          },
          "disableRoot(bytes32)": {
            "details": "Only callable by the pauser",
            "params": {
              "globalTableRoot": "the global table root to disable"
            }
          },
          "getCertificateVerifier(uint8)": {
            "params": {
              "curveType": "The curve type"
            },
            "returns": {
              "_0": "The certificate verifier for the given key type"
            }
          },
          "getCurrentGlobalTableRoot()": {
            "returns": {
              "_0": "the current global table root"
            }
          },
          "getGenerator()": {
            "returns": {
              "_0": "The operatorSet which certifies against global roots"
            }
          },
          "getGeneratorReferenceTimestamp()": {
            "details": "In V1, we only update the table of the generator on initial deployment, and never update it again.",
            "returns": {
              "_0": "The reference timestamp of the generator"
            }
          },
          "getGlobalTableRootByTimestamp(uint32)": {
            "params": {
              "referenceTimestamp": "the timestamp of the table root"
            },
            "returns": {
              "_0": "the table root at the given timestamp"
            }
          },
          "getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)": {
            "params": {
              "globalTableRoot": "the global table root",
              "referenceBlockNumber": "the reference block number",
              "referenceTimestamp": "the reference timestamp"
            },
            "returns": {
              "_0": "The message hash for a global table root"
            }
          },
          "getLatestReferenceBlockNumber()": {
            "returns": {
              "_0": "The latest reference block number"
            }
          },
          "getLatestReferenceTimestamp()": {
            "returns": {
              "_0": "The latest reference timestamp"
            }
          },
          "getReferenceBlockNumberByTimestamp(uint32)": {
            "params": {
              "referenceTimestamp": "the reference timestamp"
            },
            "returns": {
              "_0": "The reference block number for the given reference timestamp"
            }
          },
          "getReferenceTimestampByBlockNumber(uint32)": {
            "params": {
              "referenceBlockNumber": "the reference block number"
            },
            "returns": {
              "_0": "The reference timestamp for the given reference block number"
            }
          },
          "initialize(address,uint256,(address,uint32),uint16,uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))": {
            "details": "We also update the operator table for the global root confirmer set, to begin signing off on global rootsUses INITIAL_GLOBAL_TABLE_ROOT constant to break circular dependency for certificate verification",
            "params": {
              "_generator": "The operatorSet which certifies against global roots",
              "_globalRootConfirmationThreshold": "The threshold, in bps, for a global root to be signed off on and updated",
              "generatorConfig": "The operatorSetConfig for the global root confirmer set",
              "generatorInfo": "The operatorSetInfo for the global root confirmer set",
              "initialPausedStatus": "The initial paused status of the OperatorTableUpdater",
              "owner": "The owner of the OperatorTableUpdater",
              "referenceTimestamp": "The reference timestamp for the global root confirmer set"
            }
          },
          "isRootValid(bytes32)": {
            "params": {
              "globalTableRoot": "the global table root"
            },
            "returns": {
              "_0": "The validity status of the global table root"
            }
          },
          "isRootValidByTimestamp(uint32)": {
            "params": {
              "referenceTimestamp": "the reference timestamp"
            },
            "returns": {
              "_0": "The validity status of the global table root"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setGenerator((address,uint32))": {
            "details": "The `operatorSet` is used to verify the certificate of the global table rootOnly callable by the owner of the contract",
            "params": {
              "operatorSet": "the operatorSet which certifies against global roots"
            }
          },
          "setGlobalRootConfirmationThreshold(uint16)": {
            "details": "Only callable by the owner of the contract"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateGenerator(uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))": {
            "details": "We have a separate function for updating this operatorSet since it's not transported and updated      in the same way as the other operatorSetsOnly callable by the owner of the contract",
            "params": {
              "GeneratorConfig": "The operatorSetConfig for the generator",
              "GeneratorInfo": "The operatorSetInfo for the generator",
              "referenceTimestamp": "The reference timestamp of the operator table update"
            }
          },
          "updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)": {
            "details": "Depending on the decoded KeyType, the tableInfo will be decoded",
            "params": {
              "globalTableRoot": "the new globalTableRoot",
              "operatorSetIndex": "the index of the given operatorSet being updated",
              "operatorTableBytes": "the bytes of the operator table",
              "proof": "the proof of the leaf at index against the globalTableRoot",
              "referenceTimestamp": "the reference block number of the globalTableRoot"
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "INITIAL_GLOBAL_TABLE_ROOT()": {
            "notice": "Dummy initial global table root to break circular dependency for certificate verification"
          },
          "MAX_BPS()": {
            "notice": "The maximum BPS value"
          },
          "bn254CertificateVerifier()": {
            "notice": "The BN254 certificate verifier"
          },
          "confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)": {
            "notice": "Confirms Global operator table root"
          },
          "constructor": {
            "notice": "INITIALIZING FUNCTIONS"
          },
          "disableRoot(bytes32)": {
            "notice": "Disables a global table root"
          },
          "ecdsaCertificateVerifier()": {
            "notice": "The ECDSA certificate verifier"
          },
          "getCertificateVerifier(uint8)": {
            "notice": "Get the certificate verifier for a given key type"
          },
          "getCurrentGlobalTableRoot()": {
            "notice": "Get the current global table root"
          },
          "getGenerator()": {
            "notice": "Get the operatorSet which certifies against global roots"
          },
          "getGeneratorReferenceTimestamp()": {
            "notice": "Get the reference timestamp of the generator"
          },
          "getGlobalTableRootByTimestamp(uint32)": {
            "notice": "Get the table root by timestamp"
          },
          "getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)": {
            "notice": "Get the message hash for the certificate of a global table root update"
          },
          "getLatestReferenceBlockNumber()": {
            "notice": "Get the latest reference block number"
          },
          "getLatestReferenceTimestamp()": {
            "notice": "Get the latest reference timestamp"
          },
          "getReferenceBlockNumberByTimestamp(uint32)": {
            "notice": "Get the reference block number for a given reference timestamp"
          },
          "getReferenceTimestampByBlockNumber(uint32)": {
            "notice": "Get the reference timestamp for a given reference block number"
          },
          "globalRootConfirmationThreshold()": {
            "notice": "The threshold, in bps, for a global root to be signed off on and updated"
          },
          "initialize(address,uint256,(address,uint32),uint16,uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))": {
            "notice": "Initializes the OperatorTableUpdater"
          },
          "isRootValid(bytes32)": {
            "notice": "Get the validity status of a global table root"
          },
          "isRootValidByTimestamp(uint32)": {
            "notice": "Get the validity status of a global table root by timestamp"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "setGenerator((address,uint32))": {
            "notice": "Set the operatorSet which certifies against global roots"
          },
          "setGlobalRootConfirmationThreshold(uint16)": {
            "notice": "The threshold, in bps, for a global root to be signed off on and updated"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateGenerator(uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))": {
            "notice": "Updates the operator table for the generator"
          },
          "updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)": {
            "notice": "Updates an operator table"
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/multichain/OperatorTableUpdater.sol": "OperatorTableUpdater"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IBN254CertificateVerifier.sol": {
        "keccak256": "0xb03cbcf4b6102abd378ff223100c08adc3ac30fd37bbff34b217ef22d80f690a",
        "urls": [
          "bzz-raw://5fd602c78df1927bf4a4daecf24144678b6650bca607c39e29fb65d587d4a912",
          "dweb:/ipfs/QmR9eruhpjXczLHURUEHHZfvi8axAZ3YRbNsz8xQ416ksN"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IBaseCertificateVerifier.sol": {
        "keccak256": "0x6f0ef3e573cf4e92e1b071755373fb7738cef79049575f45e6fcd6d835e887ea",
        "urls": [
          "bzz-raw://a4fb251ce933d5661643594822fd40761b26a905733ade0ea33b0a8ead306391",
          "dweb:/ipfs/QmRkCwHmHPWLDPRmJdPnV2Gb8wPrL1vzAfS96S3uEYUg1a"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ICrossChainRegistry.sol": {
        "keccak256": "0x0f8b182e2ce900f6cddc7e1e4addd0df858acf847796d6f823a6486628ae34b4",
        "urls": [
          "bzz-raw://25cca26efa67086bb5f57eb31aab36f1e1a63b93eb9690072774c6ea965a8591",
          "dweb:/ipfs/Qmduc74dW679rh2h9d9m3ShW3uWakk7Adcj8VuKEq5nDyL"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IECDSACertificateVerifier.sol": {
        "keccak256": "0xf1fcb2f8e6b48f8a0e6f0c7252da5a1bf4381f888adb52dd2a7664469c7e74ab",
        "urls": [
          "bzz-raw://330cd704da2dfec20a903e27038cb0cc826adee0206aa01d95e55195c9ffad2a",
          "dweb:/ipfs/QmVn7Q4QbLo3Jx4a4BsLMYs21JwXy3xWtnFn4nMAY9Jjop"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IKeyRegistrar.sol": {
        "keccak256": "0xa667d4377331e23b31ac28a4c4f1ab0dfa24911d93b6f05cb772330cdf264d53",
        "urls": [
          "bzz-raw://82a02653db3332887a018ce6dce4a760ff35d0d5393a416103d8fbd88c7c7bb9",
          "dweb:/ipfs/QmV5rUxZdr8x2sF5MU6RLXySMr9GJkHemEex3tF3QyFYjg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableCalculator.sol": {
        "keccak256": "0xfd8827a2210442970cb6cfc3d2c999bebefcbc51b0b854f076d24a2594f8ab68",
        "urls": [
          "bzz-raw://a6fdc6703726e2bfdc14018fd08d1366438065fae01407d2e73b9d38f4e6c934",
          "dweb:/ipfs/QmT3AU8aV3R7vCGf86sqyWqV94hMHEfYbho84XxuDKceNH"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableUpdater.sol": {
        "keccak256": "0x24a6b11b4c77524a4f1bc156d85e453f07c9ed9d796683c9d2e8a870dc8eb08a",
        "urls": [
          "bzz-raw://249cccbe440018875433659c5a020e5b51dc9834038adeb947fbb833052c6139",
          "dweb:/ipfs/QmVjEgZbhb2taQg2C3P9Sb8QFeAiSoy9T7gTSUgxj4REvL"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BN254.sol": {
        "keccak256": "0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc",
        "urls": [
          "bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc",
          "dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0xfea37c052df354d4bd9a1f312dfec81abc8718de41d7cd0c8bd22241887ed246",
        "urls": [
          "bzz-raw://c5bdc6ab1ef26a39e7db1219e5ecfbbf137473ef4d531a31eed4827b5099c063",
          "dweb:/ipfs/QmVgSDqpMH5dP3rwR1fL59syT9o2tTuwaT7BfWjRY3YhPZ"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/OperatorTableUpdater.sol": {
        "keccak256": "0xa1c1dd41fb96fac5456b2102e52535cf0c73be548742b428a9a4c818a9befead",
        "urls": [
          "bzz-raw://e6b66579fe09e0b61f3846afe126679e49ca379d0d4180773fd87d869e437626",
          "dweb:/ipfs/Qmac5WKLgcRK8DvrH3SnY7aAAa71M3eHAw3rQ42Yo75zjr"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/OperatorTableUpdaterStorage.sol": {
        "keccak256": "0x937dc17bb61c5b84513ef4b69a367f8d71e2890b9d8d2e147b53cb492f0e7635",
        "urls": [
          "bzz-raw://fadddb098019ef93b9da3f1f58ec2253ec9eab594071fe47178c312db2c7298c",
          "dweb:/ipfs/QmbFLgKrYaoyqpSRe6iiFebUWAsXkijUz6PbbPVJsgjUNX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446",
        "urls": [
          "bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99",
          "dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 181
}