{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_bn254CertificateVerifier",
          "type": "address",
          "internalType": "contract IBN254CertificateVerifier"
        },
        {
          "name": "_ecdsaCertificateVerifier",
          "type": "address",
          "internalType": "contract IECDSACertificateVerifier"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "GENERATOR_GLOBAL_TABLE_ROOT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GENERATOR_MAX_STALENESS_PERIOD",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GENERATOR_REFERENCE_TIMESTAMP",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GLOBAL_TABLE_ROOT_CERT_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_BPS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "bn254CertificateVerifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IBN254CertificateVerifier"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "confirmGlobalTableRoot",
      "inputs": [
        {
          "name": "globalTableRootCert",
          "type": "tuple",
          "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
          "components": [
            {
              "name": "referenceTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "messageHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "signature",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "apk",
              "type": "tuple",
              "internalType": "struct BN254.G2Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                }
              ]
            },
            {
              "name": "nonSignerWitnesses",
              "type": "tuple[]",
              "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
              "components": [
                {
                  "name": "operatorIndex",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "operatorInfoProof",
                  "type": "bytes",
                  "internalType": "bytes"
                },
                {
                  "name": "operatorInfo",
                  "type": "tuple",
                  "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                  "components": [
                    {
                      "name": "pubkey",
                      "type": "tuple",
                      "internalType": "struct BN254.G1Point",
                      "components": [
                        {
                          "name": "X",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "Y",
                          "type": "uint256",
                          "internalType": "uint256"
                        }
                      ]
                    },
                    {
                      "name": "weights",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "disableRoot",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ecdsaCertificateVerifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IECDSACertificateVerifier"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCertificateVerifier",
      "inputs": [
        {
          "name": "curveType",
          "type": "uint8",
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentGlobalTableRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGenerator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGeneratorConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
          "components": [
            {
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "maxStalenessPeriod",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGeneratorReferenceTimestamp",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGlobalTableRootByTimestamp",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGlobalTableUpdateMessageHash",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getLatestReferenceBlockNumber",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLatestReferenceTimestamp",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReferenceBlockNumberByTimestamp",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReferenceTimestampByBlockNumber",
      "inputs": [
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "globalRootConfirmationThreshold",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_initialGenerator",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "_globalRootConfirmationThreshold",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "generatorInfo",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
          "components": [
            {
              "name": "operatorInfoTreeRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "numOperators",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "aggregatePubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWeights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isRootValid",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRootValidByTimestamp",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGlobalRootConfirmationThreshold",
      "inputs": [
        {
          "name": "bps",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateGenerator",
      "inputs": [
        {
          "name": "generator",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "generatorInfo",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
          "components": [
            {
              "name": "operatorInfoTreeRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "numOperators",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "aggregatePubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWeights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateOperatorTable",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "operatorSetIndex",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "proof",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "operatorTableBytes",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "GeneratorUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GlobalRootConfirmationThresholdUpdated",
      "inputs": [
        {
          "name": "bps",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GlobalRootDisabled",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NewGlobalTableRoot",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "indexed": true,
          "internalType": "uint32"
        },
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "CannotDisableGeneratorRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CertificateInvalid",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "GlobalTableRootInFuture",
      "inputs": []
    },
    {
      "type": "error",
      "name": "GlobalTableRootStale",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidConfirmationThreshold",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCurveType",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidGenerator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidGlobalTableRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMessageHash",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSetProof",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidProofLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "TableUpdateForPastTimestamp",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610100604052348015610010575f5ffd5b50604051612a12380380612a1283398101604081905261002f916101b9565b808484846001600160a01b03811661005a576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b0390811660805291821660a0521660c05261007b81610090565b60e052506100876100d6565b505050506102fe565b5f5f829050601f815111156100c3578260405163305a27a960e01b81526004016100ba91906102a3565b60405180910390fd5b80516100ce826102d8565b179392505050565b5f54610100900460ff161561013d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b60648201526084016100ba565b5f5460ff9081161461018c575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146101a2575f5ffd5b50565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f608085870312156101cc575f5ffd5b84516101d78161018e565b60208601519094506101e88161018e565b60408601519093506101f98161018e565b60608601519092506001600160401b03811115610214575f5ffd5b8501601f81018713610224575f5ffd5b80516001600160401b0381111561023d5761023d6101a5565b604051601f8201601f19908116603f011681016001600160401b038111828210171561026b5761026b6101a5565b604052818152828201602001891015610282575f5ffd5b8160208401602083015e5f6020838301015280935050505092959194509250565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156102f8575f198160200360031b1b821691505b50919050565b60805160a05160c05160e05161269b6103775f395f61088901525f8181610523015281816109230152610c6e01525f818161058a015281816108e30152818161098f01528181610bc901528181610f0c015281816111f501526112a701525f81816104c5015281816113d301526116c5015261269b5ff3fe608060405234801561000f575f5ffd5b506004361061021e575f3560e01c80636f728c501161012a578063b0cb3a24116100b4578063c5916a3911610079578063c5916a39146105f3578063eaaed9d514610618578063f2fde38b1461062b578063fabc1cbc1461063e578063fd967f4714610651575f5ffd5b8063b0cb3a2414610545578063b8c1430614610585578063c252aa22146105ac578063c3621f0a146105cd578063c3be1e33146105e0575f5ffd5b8063886f1195116100fa578063886f1195146104c05780638da5cb5b146104e75780639ea94778146104f85780639f7e206f1461050b578063ad0f95821461051e575f5ffd5b80636f728c501461047e578063715018a6146104a95780637551ba34146104b1578063790961ea146104b9575f5ffd5b806331a599d2116101ab578063595c6a671161017b578063595c6a671461040e5780635ac86ab7146104165780635c975abb14610439578063612abcb01461044157806364e1df8414610449575f5ffd5b806331a599d2146103995780633ef6cd7a146103be5780634624e6a3146103e557806354fd4d50146103f9575f5ffd5b80631e2ca260116101f15780631e2ca260146102c15780632370356c1461030a57806323b7b5b21461031d57806328522d791461034557806330ef41b414610367575f5ffd5b806306f5187514610222578063136439dd14610237578063193b79f31461024a5780631bdc0deb1461028c575b5f5ffd5b6102356102303660046118d3565b61065a565b005b610235610245366004611949565b610834565b610272610258366004611971565b63ffffffff9081165f908152609b60205260409020541690565b60405163ffffffff90911681526020015b60405180910390f35b6102b37fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a86981565b604051908152602001610283565b6040805180820182525f80825260209182015281518083019092526098546001600160a01b0381168352600160a01b900463ffffffff16908201525b60405161028391906119b1565b6102356103183660046119bf565b61086e565b61027261032b366004611971565b63ffffffff9081165f908152609a60205260409020541690565b60975462010000900463ffffffff165f908152609960205260409020546102b3565b610389610375366004611949565b5f908152609c602052604090205460ff1690565b6040519015158152602001610283565b60975462010000900463ffffffff9081165f908152609a602052604090205416610272565b6102b37f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc81565b60975462010000900463ffffffff16610272565b610401610882565b60405161028391906119d8565b6102356108b2565b610389610424366004611a0d565b606654600160ff9092169190911b9081161490565b6066546102b3565b610272600181565b610389610457366004611971565b63ffffffff165f908152609960209081526040808320548352609c90915290205460ff1690565b61049161048c366004611a3b565b6108c6565b6040516001600160a01b039091168152602001610283565b610235610965565b610272610976565b6102725f81565b6104917f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b0316610491565b610235610506366004611a98565b610a04565b610235610519366004611b33565b610cde565b6104917f000000000000000000000000000000000000000000000000000000000000000081565b6040805180820182525f8082526020918201528151808301909252609d546001600160a01b0381168352600160a01b900463ffffffff16908201526102fd565b6104917f000000000000000000000000000000000000000000000000000000000000000081565b6097546105ba9061ffff1681565b60405161ffff9091168152602001610283565b6102356105db366004611949565b610cf0565b6102b36105ee366004611b7e565b610da5565b6102b3610601366004611971565b63ffffffff165f9081526099602052604090205490565b610235610626366004611bbd565b610e0d565b610235610639366004611c29565b61105c565b61023561064c366004611949565b6110d2565b6105ba61271081565b5f54610100900460ff161580801561067857505f54600160ff909116105b806106915750303b15801561069157505f5460ff166001145b6106f95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff19166001179055801561071a575f805461ff0019166101001790555b6107238661113f565b61072c85611190565b61073684836111cd565b61073f8361134d565b7fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a8697fbb86fbc034f4e382929974bcd8419ed626b0ea647f962d89ba2fb6bd28785ab98190555f52609c6020527f38353ab40115e4013d688e07cff5857dde443bd05e72c49fcb5e684a9bb9efc4805460ff19166001179055609d80546001600160c01b03191630179055609780544263ffffffff16620100000265ffffffff000019909116179055801561082c575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b61083c6113be565b60665481811681146108615760405163c61dca5d60e01b815260040160405180910390fd5b61086a82611190565b5050565b610876611461565b61087f8161134d565b50565b60606108ad7f00000000000000000000000000000000000000000000000000000000000000006114bb565b905090565b6108ba6113be565b6108c45f19611190565b565b5f60028260028111156108db576108db611c44565b0361090757507f0000000000000000000000000000000000000000000000000000000000000000919050565b600182600281111561091b5761091b611c44565b0361094757507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405163fdea7c0960e01b815260040160405180910390fd5b919050565b61096d611461565b6108c45f61113f565b604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b906109c590609890600401611c58565b602060405180830381865afa1580156109e0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ad9190611c7f565b6001610a0f816114f8565b610a17611523565b5f5f5f5f610a25878761157c565b5f8f8152609c60205260409020549397509195509350915060ff16610a5d5760405163504570e360e01b815260040160405180910390fd5b604080518082019091526098546001600160a01b0381168252600160a01b900463ffffffff166020820152610a91906115c3565b610a9a856115c3565b03610ab857604051631fb1705560e21b815260040160405180910390fd5b610ac1836108c6565b6001600160a01b0316635ddb9b5b856040518263ffffffff1660e01b8152600401610aec91906119b1565b602060405180830381865afa158015610b07573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2b9190611c7f565b63ffffffff168c63ffffffff1611610b565760405163207617df60e01b815260040160405180910390fd5b63ffffffff8c165f908152609960205260409020548b14610b8a5760405163639d09b560e11b815260040160405180910390fd5b610bae8b8b8b8b8b8b604051610ba1929190611c9a565b604051809103902061162c565b6002836002811115610bc257610bc2611c44565b03610c53577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636738c40b858e610c0185611691565b866040518563ffffffff1660e01b8152600401610c219493929190611ce3565b5f604051808303815f87803b158015610c38575f5ffd5b505af1158015610c4a573d5f5f3e3d5ffd5b50505050610cc6565b6001836002811115610c6757610c67611c44565b03610947577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166356d482f5858e610ca6856116ad565b866040518563ffffffff1660e01b8152600401610c219493929190611d5f565b50505050610cd4600160c955565b5050505050505050565b610ce6611461565b61086a82826111cd565b610cf86113be565b5f818152609c602052604090205460ff16610d265760405163504570e360e01b815260040160405180910390fd5b7fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a8698103610d66576040516319920afd60e11b815260040160405180910390fd5b5f818152609c6020526040808220805460ff191690555182917f8bd43de1250f58fe6ec9a78671a8b78dba70f0018656d157a3aeaabec389df3491a250565b604080517f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc602082015290810184905263ffffffff8084166060830152821660808201525f9060a0016040516020818303038152906040528051906020012090509392505050565b5f610e17816114f8565b610e1f611523565b428363ffffffff161115610e4657604051635a119db560e11b815260040160405180910390fd5b60975463ffffffff62010000909104811690841611610e785760405163037fa86b60e31b815260040160405180910390fd5b610e83848484610da5565b856020013514610ea657604051638b56642d60e01b815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683375050609754825192935061ffff16918391505f90610ee157610ee1611e18565b61ffff90921660209283029190910190910152604051625f5e5d60e21b81525f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063017d797490610f46906098908b908790600401611f4a565b6020604051808303815f875af1158015610f62573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f8691906120d7565b905080610fa657604051633042041f60e21b815260040160405180910390fd5b6097805463ffffffff80881662010000810265ffffffff000019909316929092179092555f818152609a602090815260408083208054958a1663ffffffff1996871681179091558352609b825280832080549095168417909455828252609981528382208a9055898252609c9052828120805460ff19166001179055915188927f010dcbe0d1e019c93357711f7bb6287d543b7ff7de74f29df3fb5ecceec8d36991a35050611055600160c955565b5050505050565b611064611461565b6001600160a01b0381166110c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f0565b61087f8161113f565b6110da6116c3565b606654801982198116146111015760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b8160986111da82826120f6565b5050604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b9061122a908690600401612187565b602060405180830381865afa158015611245573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112699190611c7f565b905063ffffffff81161561129057604051636446f91760e01b815260040160405180910390fd5b604051636738c40b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636738c40b906112e49086906001908790609d90600401612195565b5f604051808303815f87803b1580156112fb575f5ffd5b505af115801561130d573d5f5f3e3d5ffd5b505050507f3463431b09dfd43dec7349f8f24acfa753fe4cf40a26235402d213373df15856836040516113409190612187565b60405180910390a1505050565b61271061ffff82161115611374576040516307336f0360e11b815260040160405180910390fd5b6097805461ffff191661ffff83169081179091556040519081527ff5d1836df8fcd7c1e54047e94ac8773d2855395603e2ef9ba5f5f16905f225929060200160405180910390a150565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611420573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061144491906120d7565b6108c457604051631d77d47760e21b815260040160405180910390fd5b6033546001600160a01b031633146108c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106f0565b60605f6114c783611774565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b606654600160ff83161b9081160361087f5760405163840a48d560e01b815260040160405180910390fd5b600260c954036115755760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106f0565b600260c955565b604080518082019091525f8082526020820152604080518082019091525f808252602082018190529060606115b3858701876122e8565b9299919850965090945092505050565b5f815f0151826020015163ffffffff1660405160200161160e92919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b604051602081830303815290604052611626906123ad565b92915050565b61167483838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508992508591505063ffffffff881661179b565b6110555760405163afa42ca760e01b815260040160405180910390fd5b611699611849565b81806020019051810190611626919061245c565b606081806020019051810190611626919061250b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561171f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611743919061260c565b6001600160a01b0316336001600160a01b0316146108c45760405163794821ff60e01b815260040160405180910390fd5b5f60ff8216601f81111561162657604051632cd44ac360e21b815260040160405180910390fd5b5f836117a88685856117b2565b1495945050505050565b5f602084516117c19190612627565b156117df576040516313717da960e21b815260040160405180910390fd5b8260205b85518111611840576117f6600285612627565b5f0361181757815f528086015160205260405f20915060028404935061182e565b808601515f528160205260405f2091506002840493505b611839602082612646565b90506117e3565b50949350505050565b60405180608001604052805f81526020015f815260200161187b60405180604001604052805f81526020015f81525090565b8152602001606081525090565b6001600160a01b038116811461087f575f5ffd5b5f604082840312156118ac575f5ffd5b50919050565b803561ffff81168114610960575f5ffd5b5f60a082840312156118ac575f5ffd5b5f5f5f5f5f60c086880312156118e7575f5ffd5b85356118f281611888565b945060208601359350611908876040880161189c565b9250611916608087016118b2565b915060a08601356001600160401b03811115611930575f5ffd5b61193c888289016118c3565b9150509295509295909350565b5f60208284031215611959575f5ffd5b5035919050565b63ffffffff8116811461087f575f5ffd5b5f60208284031215611981575f5ffd5b813561198c81611960565b9392505050565b80516001600160a01b0316825260209081015163ffffffff16910152565b604081016116268284611993565b5f602082840312156119cf575f5ffd5b61198c826118b2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215611a1d575f5ffd5b813560ff8116811461198c575f5ffd5b803560038110610960575f5ffd5b5f60208284031215611a4b575f5ffd5b61198c82611a2d565b5f5f83601f840112611a64575f5ffd5b5081356001600160401b03811115611a7a575f5ffd5b602083019150836020828501011115611a91575f5ffd5b9250929050565b5f5f5f5f5f5f5f60a0888a031215611aae575f5ffd5b8735611ab981611960565b9650602088013595506040880135611ad081611960565b945060608801356001600160401b03811115611aea575f5ffd5b611af68a828b01611a54565b90955093505060808801356001600160401b03811115611b14575f5ffd5b611b208a828b01611a54565b989b979a50959850939692959293505050565b5f5f60608385031215611b44575f5ffd5b611b4e848461189c565b915060408301356001600160401b03811115611b68575f5ffd5b611b74858286016118c3565b9150509250929050565b5f5f5f60608486031215611b90575f5ffd5b833592506020840135611ba281611960565b91506040840135611bb281611960565b809150509250925092565b5f5f5f5f60808587031215611bd0575f5ffd5b84356001600160401b03811115611be5575f5ffd5b85016101208188031215611bf7575f5ffd5b9350602085013592506040850135611c0e81611960565b91506060850135611c1e81611960565b939692955090935050565b5f60208284031215611c39575f5ffd5b813561198c81611888565b634e487b7160e01b5f52602160045260245ffd5b604081016116268284546001600160a01b038116825260a01c63ffffffff16602090910152565b5f60208284031215611c8f575f5ffd5b815161198c81611960565b818382375f9101908152919050565b5f8151808452602084019350602083015f5b82811015611cd9578151865260209586019590910190600101611cbb565b5093949350505050565b611ced8186611993565b63ffffffff8416604082015260c06060820152825160c0820152602083015160e08201525f60408401518051610100840152602081015161012084015250606084015160a0610140840152611d46610160840182611ca9565b915050611d566080830184611993565b95945050505050565b5f60c08201611d6e8388611993565b63ffffffff8616604084015260c0606084015280855180835260e08501915060e08160051b8601019250602087015f5b82811015611def5786850360df19018452815180516001600160a01b03168652602090810151604091870182905290611dd990870182611ca9565b9550506020938401939190910190600101611d9e565b5050505080915050611d566080830184611993565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f5f8335601e19843603018112611e41575f5ffd5b83016020810192503590506001600160401b03811115611e5f575f5ffd5b8060051b3603821315611a91575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f8235605e19833603018112611eac575f5ffd5b90910192915050565b8183525f6001600160fb1b03831115611ecc575f5ffd5b8260051b80836020870137939093016020019392505050565b80358252602080820135908301525f611f016040830183611e2c565b60606040860152611d56606086018284611eb5565b5f8151808452602084019350602083015f5b82811015611cd957815161ffff16865260209586019590910190600101611f28565b611f6d8185546001600160a01b038116825260a01c63ffffffff16602090910152565b608060408201525f6101a082018435611f8581611960565b63ffffffff166080840152602085013560a0840152604085013560c0840152606085013560e0840152604060808601610100850137604060c08601610140850137611fd4610100860186611e2c565b610120610180860152828184526101c0860190506101c08260051b8701019350825f5b838110156120b6578786036101bf190183526120138286611e98565b803561201e81611960565b63ffffffff168752602081013536829003601e1901811261203d575f5ffd5b81016020810190356001600160401b03811115612058575f5ffd5b803603821315612066575f5ffd5b606060208a015261207b60608a018284611e70565b91505061208b6040830183611e98565b9150878103604089015261209f8183611ee5565b975050506020928301929190910190600101611ff7565b505050505082810360608401526120cd8185611f16565b9695505050505050565b5f602082840312156120e7575f5ffd5b8151801515811461198c575f5ffd5b813561210181611888565b81546001600160a01b031981166001600160a01b03929092169182178355602084013561212d81611960565b6001600160c01b03199190911690911760a09190911b63ffffffff60a01b1617905550565b803561215d81611888565b6001600160a01b03168252602081013561217681611960565b63ffffffff81166020840152505050565b604081016116268284612152565b61219f8186612152565b63ffffffff841660408281019190915260c06060808401829052853591840191909152602085013560e0840152908401356101008301528301356101208201525f6121ed6080850185611e2c565b60a061014085015261220461016085018284611eb5565b92505050611d566080830184546001600160a01b038116825260a01c63ffffffff16602090910152565b604080519081016001600160401b038111828210171561225057612250611e04565b60405290565b604051608081016001600160401b038111828210171561225057612250611e04565b604051601f8201601f191681016001600160401b03811182821017156122a0576122a0611e04565b604052919050565b5f604082840312156122b8575f5ffd5b6122c061222e565b905081356122cd81611888565b815260208201356122dd81611960565b602082015292915050565b5f5f5f5f60c085870312156122fb575f5ffd5b61230586866122a8565b935061231360408601611a2d565b925061232286606087016122a8565b915060a08501356001600160401b0381111561233c575f5ffd5b8501601f8101871361234c575f5ffd5b80356001600160401b0381111561236557612365611e04565b612378601f8201601f1916602001612278565b81815288602083850101111561238c575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b805160208083015191908110156118ac575f1960209190910360031b1b16919050565b5f6001600160401b038211156123e8576123e8611e04565b5060051b60200190565b5f82601f830112612401575f5ffd5b815161241461240f826123d0565b612278565b8082825260208201915060208360051b860101925085831115612435575f5ffd5b602085015b8381101561245257805183526020928301920161243a565b5095945050505050565b5f6020828403121561246c575f5ffd5b81516001600160401b03811115612481575f5ffd5b820180840360a0811215612493575f5ffd5b61249b612256565b82518152602080840151908201526040603f19830112156124ba575f5ffd5b6124c261222e565b604084810151825260608501516020830152820152608083015191506001600160401b038211156124f1575f5ffd5b6124fd868385016123f2565b606082015295945050505050565b5f6020828403121561251b575f5ffd5b81516001600160401b03811115612530575f5ffd5b8201601f81018413612540575f5ffd5b805161254e61240f826123d0565b8082825260208201915060208360051b85010192508683111561256f575f5ffd5b602084015b838110156126015780516001600160401b03811115612591575f5ffd5b85016040818a03601f190112156125a6575f5ffd5b6125ae61222e565b60208201516125bc81611888565b815260408201516001600160401b038111156125d6575f5ffd5b6125e58b6020838601016123f2565b6020830152508085525050602083019250602081019050612574565b509695505050505050565b5f6020828403121561261c575f5ffd5b815161198c81611888565b5f8261264157634e487b7160e01b5f52601260045260245ffd5b500690565b8082018082111561162657634e487b7160e01b5f52601160045260245ffdfea26469706673582212208dc47ac9863a6b893abcce651289eef70c5d07cb7d5972f7b52e0f79383697ea64736f6c634300081b0033",
    "sourceMap": "446:15781:175:-:0;;;707:410;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1064:8;956:25;983;1027:15;-1:-1:-1;;;;;3618:38:179;;3610:67;;;;-1:-1:-1;;;3610:67:179;;;;;;;;;;;;-1:-1:-1;;;;;3687:32:179;;;;;3210:52:176;;;;;3272;;;961:24:167;:8;:22;:24::i;:::-;950:35;;-1:-1:-1;1088:22:175::3;:20;:22::i;:::-;707:410:::0;;;;446:15781;;1711:286:37;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:37;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:37:o;5939:280:26:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:26;;2749:2:318;5998:66:26;;;2731:21:318;2788:2;2768:18;;;2761:30;2827:34;2807:18;;;2800:62;-1:-1:-1;;;2878:18:318;;;2871:37;2925:19;;5998:66:26;2547:403:318;5998:66:26;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:26;6140:15;6125:30;;;;;;6174:28;;3097:36:318;;;6174:28:26;;3085:2:318;3070:18;6174:28:26;;;;;;;6074:139;5939:280::o;14:158:318:-;-1:-1:-1;;;;;116:31:318;;106:42;;96:70;;162:1;159;152:12;96:70;14:158;:::o;177:127::-;238:10;233:3;229:20;226:1;219:31;269:4;266:1;259:15;293:4;290:1;283:15;309:1508;511:6;519;527;535;588:3;576:9;567:7;563:23;559:33;556:53;;;605:1;602;595:12;556:53;637:9;631:16;656:58;708:5;656:58;:::i;:::-;783:2;768:18;;762:25;733:5;;-1:-1:-1;796:60:318;762:25;796:60;:::i;:::-;927:2;912:18;;906:25;875:7;;-1:-1:-1;940:60:318;906:25;940:60;:::i;:::-;1070:2;1055:18;;1049:25;1019:7;;-1:-1:-1;;;;;;1086:30:318;;1083:50;;;1129:1;1126;1119:12;1083:50;1152:22;;1205:4;1197:13;;1193:27;-1:-1:-1;1183:55:318;;1234:1;1231;1224:12;1183:55;1261:9;;-1:-1:-1;;;;;1282:30:318;;1279:56;;;1315:18;;:::i;:::-;1364:2;1358:9;1456:2;1418:17;;-1:-1:-1;;1414:31:318;;;1447:2;1410:40;1406:54;1394:67;;-1:-1:-1;;;;;1476:34:318;;1512:22;;;1473:62;1470:88;;;1538:18;;:::i;:::-;1574:2;1567:22;1598;;;1639:15;;;1656:2;1635:24;1632:37;-1:-1:-1;1629:57:318;;;1682:1;1679;1672:12;1629:57;1731:6;1726:2;1722;1718:11;1713:2;1705:6;1701:15;1695:43;1784:1;1779:2;1770:6;1762;1758:19;1754:28;1747:39;1805:6;1795:16;;;;;309:1508;;;;;;;:::o;1822:418::-;1971:2;1960:9;1953:21;1934:4;2003:6;1997:13;2046:6;2041:2;2030:9;2026:18;2019:34;2105:6;2100:2;2092:6;2088:15;2083:2;2072:9;2068:18;2062:50;2161:1;2156:2;2147:6;2136:9;2132:22;2128:31;2121:42;2231:2;2224;2220:7;2215:2;2207:6;2203:15;2199:29;2188:9;2184:45;2180:54;2172:62;;;1822:418;;;;:::o;2245:297::-;2363:12;;2410:4;2399:16;;;2393:23;;2363:12;2428:16;;2425:111;;;2522:1;2518:6;2508;2502:4;2498:17;2495:1;2491:25;2487:38;2480:5;2476:50;2467:59;;2425:111;;2245:297;;;:::o;2955:184::-;446:15781:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b506004361061021e575f3560e01c80636f728c501161012a578063b0cb3a24116100b4578063c5916a3911610079578063c5916a39146105f3578063eaaed9d514610618578063f2fde38b1461062b578063fabc1cbc1461063e578063fd967f4714610651575f5ffd5b8063b0cb3a2414610545578063b8c1430614610585578063c252aa22146105ac578063c3621f0a146105cd578063c3be1e33146105e0575f5ffd5b8063886f1195116100fa578063886f1195146104c05780638da5cb5b146104e75780639ea94778146104f85780639f7e206f1461050b578063ad0f95821461051e575f5ffd5b80636f728c501461047e578063715018a6146104a95780637551ba34146104b1578063790961ea146104b9575f5ffd5b806331a599d2116101ab578063595c6a671161017b578063595c6a671461040e5780635ac86ab7146104165780635c975abb14610439578063612abcb01461044157806364e1df8414610449575f5ffd5b806331a599d2146103995780633ef6cd7a146103be5780634624e6a3146103e557806354fd4d50146103f9575f5ffd5b80631e2ca260116101f15780631e2ca260146102c15780632370356c1461030a57806323b7b5b21461031d57806328522d791461034557806330ef41b414610367575f5ffd5b806306f5187514610222578063136439dd14610237578063193b79f31461024a5780631bdc0deb1461028c575b5f5ffd5b6102356102303660046118d3565b61065a565b005b610235610245366004611949565b610834565b610272610258366004611971565b63ffffffff9081165f908152609b60205260409020541690565b60405163ffffffff90911681526020015b60405180910390f35b6102b37fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a86981565b604051908152602001610283565b6040805180820182525f80825260209182015281518083019092526098546001600160a01b0381168352600160a01b900463ffffffff16908201525b60405161028391906119b1565b6102356103183660046119bf565b61086e565b61027261032b366004611971565b63ffffffff9081165f908152609a60205260409020541690565b60975462010000900463ffffffff165f908152609960205260409020546102b3565b610389610375366004611949565b5f908152609c602052604090205460ff1690565b6040519015158152602001610283565b60975462010000900463ffffffff9081165f908152609a602052604090205416610272565b6102b37f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc81565b60975462010000900463ffffffff16610272565b610401610882565b60405161028391906119d8565b6102356108b2565b610389610424366004611a0d565b606654600160ff9092169190911b9081161490565b6066546102b3565b610272600181565b610389610457366004611971565b63ffffffff165f908152609960209081526040808320548352609c90915290205460ff1690565b61049161048c366004611a3b565b6108c6565b6040516001600160a01b039091168152602001610283565b610235610965565b610272610976565b6102725f81565b6104917f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b0316610491565b610235610506366004611a98565b610a04565b610235610519366004611b33565b610cde565b6104917f000000000000000000000000000000000000000000000000000000000000000081565b6040805180820182525f8082526020918201528151808301909252609d546001600160a01b0381168352600160a01b900463ffffffff16908201526102fd565b6104917f000000000000000000000000000000000000000000000000000000000000000081565b6097546105ba9061ffff1681565b60405161ffff9091168152602001610283565b6102356105db366004611949565b610cf0565b6102b36105ee366004611b7e565b610da5565b6102b3610601366004611971565b63ffffffff165f9081526099602052604090205490565b610235610626366004611bbd565b610e0d565b610235610639366004611c29565b61105c565b61023561064c366004611949565b6110d2565b6105ba61271081565b5f54610100900460ff161580801561067857505f54600160ff909116105b806106915750303b15801561069157505f5460ff166001145b6106f95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff19166001179055801561071a575f805461ff0019166101001790555b6107238661113f565b61072c85611190565b61073684836111cd565b61073f8361134d565b7fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a8697fbb86fbc034f4e382929974bcd8419ed626b0ea647f962d89ba2fb6bd28785ab98190555f52609c6020527f38353ab40115e4013d688e07cff5857dde443bd05e72c49fcb5e684a9bb9efc4805460ff19166001179055609d80546001600160c01b03191630179055609780544263ffffffff16620100000265ffffffff000019909116179055801561082c575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b61083c6113be565b60665481811681146108615760405163c61dca5d60e01b815260040160405180910390fd5b61086a82611190565b5050565b610876611461565b61087f8161134d565b50565b60606108ad7f00000000000000000000000000000000000000000000000000000000000000006114bb565b905090565b6108ba6113be565b6108c45f19611190565b565b5f60028260028111156108db576108db611c44565b0361090757507f0000000000000000000000000000000000000000000000000000000000000000919050565b600182600281111561091b5761091b611c44565b0361094757507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405163fdea7c0960e01b815260040160405180910390fd5b919050565b61096d611461565b6108c45f61113f565b604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b906109c590609890600401611c58565b602060405180830381865afa1580156109e0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ad9190611c7f565b6001610a0f816114f8565b610a17611523565b5f5f5f5f610a25878761157c565b5f8f8152609c60205260409020549397509195509350915060ff16610a5d5760405163504570e360e01b815260040160405180910390fd5b604080518082019091526098546001600160a01b0381168252600160a01b900463ffffffff166020820152610a91906115c3565b610a9a856115c3565b03610ab857604051631fb1705560e21b815260040160405180910390fd5b610ac1836108c6565b6001600160a01b0316635ddb9b5b856040518263ffffffff1660e01b8152600401610aec91906119b1565b602060405180830381865afa158015610b07573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2b9190611c7f565b63ffffffff168c63ffffffff1611610b565760405163207617df60e01b815260040160405180910390fd5b63ffffffff8c165f908152609960205260409020548b14610b8a5760405163639d09b560e11b815260040160405180910390fd5b610bae8b8b8b8b8b8b604051610ba1929190611c9a565b604051809103902061162c565b6002836002811115610bc257610bc2611c44565b03610c53577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636738c40b858e610c0185611691565b866040518563ffffffff1660e01b8152600401610c219493929190611ce3565b5f604051808303815f87803b158015610c38575f5ffd5b505af1158015610c4a573d5f5f3e3d5ffd5b50505050610cc6565b6001836002811115610c6757610c67611c44565b03610947577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166356d482f5858e610ca6856116ad565b866040518563ffffffff1660e01b8152600401610c219493929190611d5f565b50505050610cd4600160c955565b5050505050505050565b610ce6611461565b61086a82826111cd565b610cf86113be565b5f818152609c602052604090205460ff16610d265760405163504570e360e01b815260040160405180910390fd5b7fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a8698103610d66576040516319920afd60e11b815260040160405180910390fd5b5f818152609c6020526040808220805460ff191690555182917f8bd43de1250f58fe6ec9a78671a8b78dba70f0018656d157a3aeaabec389df3491a250565b604080517f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc602082015290810184905263ffffffff8084166060830152821660808201525f9060a0016040516020818303038152906040528051906020012090509392505050565b5f610e17816114f8565b610e1f611523565b428363ffffffff161115610e4657604051635a119db560e11b815260040160405180910390fd5b60975463ffffffff62010000909104811690841611610e785760405163037fa86b60e31b815260040160405180910390fd5b610e83848484610da5565b856020013514610ea657604051638b56642d60e01b815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683375050609754825192935061ffff16918391505f90610ee157610ee1611e18565b61ffff90921660209283029190910190910152604051625f5e5d60e21b81525f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063017d797490610f46906098908b908790600401611f4a565b6020604051808303815f875af1158015610f62573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f8691906120d7565b905080610fa657604051633042041f60e21b815260040160405180910390fd5b6097805463ffffffff80881662010000810265ffffffff000019909316929092179092555f818152609a602090815260408083208054958a1663ffffffff1996871681179091558352609b825280832080549095168417909455828252609981528382208a9055898252609c9052828120805460ff19166001179055915188927f010dcbe0d1e019c93357711f7bb6287d543b7ff7de74f29df3fb5ecceec8d36991a35050611055600160c955565b5050505050565b611064611461565b6001600160a01b0381166110c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f0565b61087f8161113f565b6110da6116c3565b606654801982198116146111015760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b8160986111da82826120f6565b5050604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b9061122a908690600401612187565b602060405180830381865afa158015611245573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112699190611c7f565b905063ffffffff81161561129057604051636446f91760e01b815260040160405180910390fd5b604051636738c40b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636738c40b906112e49086906001908790609d90600401612195565b5f604051808303815f87803b1580156112fb575f5ffd5b505af115801561130d573d5f5f3e3d5ffd5b505050507f3463431b09dfd43dec7349f8f24acfa753fe4cf40a26235402d213373df15856836040516113409190612187565b60405180910390a1505050565b61271061ffff82161115611374576040516307336f0360e11b815260040160405180910390fd5b6097805461ffff191661ffff83169081179091556040519081527ff5d1836df8fcd7c1e54047e94ac8773d2855395603e2ef9ba5f5f16905f225929060200160405180910390a150565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611420573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061144491906120d7565b6108c457604051631d77d47760e21b815260040160405180910390fd5b6033546001600160a01b031633146108c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106f0565b60605f6114c783611774565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b606654600160ff83161b9081160361087f5760405163840a48d560e01b815260040160405180910390fd5b600260c954036115755760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106f0565b600260c955565b604080518082019091525f8082526020820152604080518082019091525f808252602082018190529060606115b3858701876122e8565b9299919850965090945092505050565b5f815f0151826020015163ffffffff1660405160200161160e92919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b604051602081830303815290604052611626906123ad565b92915050565b61167483838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508992508591505063ffffffff881661179b565b6110555760405163afa42ca760e01b815260040160405180910390fd5b611699611849565b81806020019051810190611626919061245c565b606081806020019051810190611626919061250b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561171f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611743919061260c565b6001600160a01b0316336001600160a01b0316146108c45760405163794821ff60e01b815260040160405180910390fd5b5f60ff8216601f81111561162657604051632cd44ac360e21b815260040160405180910390fd5b5f836117a88685856117b2565b1495945050505050565b5f602084516117c19190612627565b156117df576040516313717da960e21b815260040160405180910390fd5b8260205b85518111611840576117f6600285612627565b5f0361181757815f528086015160205260405f20915060028404935061182e565b808601515f528160205260405f2091506002840493505b611839602082612646565b90506117e3565b50949350505050565b60405180608001604052805f81526020015f815260200161187b60405180604001604052805f81526020015f81525090565b8152602001606081525090565b6001600160a01b038116811461087f575f5ffd5b5f604082840312156118ac575f5ffd5b50919050565b803561ffff81168114610960575f5ffd5b5f60a082840312156118ac575f5ffd5b5f5f5f5f5f60c086880312156118e7575f5ffd5b85356118f281611888565b945060208601359350611908876040880161189c565b9250611916608087016118b2565b915060a08601356001600160401b03811115611930575f5ffd5b61193c888289016118c3565b9150509295509295909350565b5f60208284031215611959575f5ffd5b5035919050565b63ffffffff8116811461087f575f5ffd5b5f60208284031215611981575f5ffd5b813561198c81611960565b9392505050565b80516001600160a01b0316825260209081015163ffffffff16910152565b604081016116268284611993565b5f602082840312156119cf575f5ffd5b61198c826118b2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215611a1d575f5ffd5b813560ff8116811461198c575f5ffd5b803560038110610960575f5ffd5b5f60208284031215611a4b575f5ffd5b61198c82611a2d565b5f5f83601f840112611a64575f5ffd5b5081356001600160401b03811115611a7a575f5ffd5b602083019150836020828501011115611a91575f5ffd5b9250929050565b5f5f5f5f5f5f5f60a0888a031215611aae575f5ffd5b8735611ab981611960565b9650602088013595506040880135611ad081611960565b945060608801356001600160401b03811115611aea575f5ffd5b611af68a828b01611a54565b90955093505060808801356001600160401b03811115611b14575f5ffd5b611b208a828b01611a54565b989b979a50959850939692959293505050565b5f5f60608385031215611b44575f5ffd5b611b4e848461189c565b915060408301356001600160401b03811115611b68575f5ffd5b611b74858286016118c3565b9150509250929050565b5f5f5f60608486031215611b90575f5ffd5b833592506020840135611ba281611960565b91506040840135611bb281611960565b809150509250925092565b5f5f5f5f60808587031215611bd0575f5ffd5b84356001600160401b03811115611be5575f5ffd5b85016101208188031215611bf7575f5ffd5b9350602085013592506040850135611c0e81611960565b91506060850135611c1e81611960565b939692955090935050565b5f60208284031215611c39575f5ffd5b813561198c81611888565b634e487b7160e01b5f52602160045260245ffd5b604081016116268284546001600160a01b038116825260a01c63ffffffff16602090910152565b5f60208284031215611c8f575f5ffd5b815161198c81611960565b818382375f9101908152919050565b5f8151808452602084019350602083015f5b82811015611cd9578151865260209586019590910190600101611cbb565b5093949350505050565b611ced8186611993565b63ffffffff8416604082015260c06060820152825160c0820152602083015160e08201525f60408401518051610100840152602081015161012084015250606084015160a0610140840152611d46610160840182611ca9565b915050611d566080830184611993565b95945050505050565b5f60c08201611d6e8388611993565b63ffffffff8616604084015260c0606084015280855180835260e08501915060e08160051b8601019250602087015f5b82811015611def5786850360df19018452815180516001600160a01b03168652602090810151604091870182905290611dd990870182611ca9565b9550506020938401939190910190600101611d9e565b5050505080915050611d566080830184611993565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f5f8335601e19843603018112611e41575f5ffd5b83016020810192503590506001600160401b03811115611e5f575f5ffd5b8060051b3603821315611a91575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f8235605e19833603018112611eac575f5ffd5b90910192915050565b8183525f6001600160fb1b03831115611ecc575f5ffd5b8260051b80836020870137939093016020019392505050565b80358252602080820135908301525f611f016040830183611e2c565b60606040860152611d56606086018284611eb5565b5f8151808452602084019350602083015f5b82811015611cd957815161ffff16865260209586019590910190600101611f28565b611f6d8185546001600160a01b038116825260a01c63ffffffff16602090910152565b608060408201525f6101a082018435611f8581611960565b63ffffffff166080840152602085013560a0840152604085013560c0840152606085013560e0840152604060808601610100850137604060c08601610140850137611fd4610100860186611e2c565b610120610180860152828184526101c0860190506101c08260051b8701019350825f5b838110156120b6578786036101bf190183526120138286611e98565b803561201e81611960565b63ffffffff168752602081013536829003601e1901811261203d575f5ffd5b81016020810190356001600160401b03811115612058575f5ffd5b803603821315612066575f5ffd5b606060208a015261207b60608a018284611e70565b91505061208b6040830183611e98565b9150878103604089015261209f8183611ee5565b975050506020928301929190910190600101611ff7565b505050505082810360608401526120cd8185611f16565b9695505050505050565b5f602082840312156120e7575f5ffd5b8151801515811461198c575f5ffd5b813561210181611888565b81546001600160a01b031981166001600160a01b03929092169182178355602084013561212d81611960565b6001600160c01b03199190911690911760a09190911b63ffffffff60a01b1617905550565b803561215d81611888565b6001600160a01b03168252602081013561217681611960565b63ffffffff81166020840152505050565b604081016116268284612152565b61219f8186612152565b63ffffffff841660408281019190915260c06060808401829052853591840191909152602085013560e0840152908401356101008301528301356101208201525f6121ed6080850185611e2c565b60a061014085015261220461016085018284611eb5565b92505050611d566080830184546001600160a01b038116825260a01c63ffffffff16602090910152565b604080519081016001600160401b038111828210171561225057612250611e04565b60405290565b604051608081016001600160401b038111828210171561225057612250611e04565b604051601f8201601f191681016001600160401b03811182821017156122a0576122a0611e04565b604052919050565b5f604082840312156122b8575f5ffd5b6122c061222e565b905081356122cd81611888565b815260208201356122dd81611960565b602082015292915050565b5f5f5f5f60c085870312156122fb575f5ffd5b61230586866122a8565b935061231360408601611a2d565b925061232286606087016122a8565b915060a08501356001600160401b0381111561233c575f5ffd5b8501601f8101871361234c575f5ffd5b80356001600160401b0381111561236557612365611e04565b612378601f8201601f1916602001612278565b81815288602083850101111561238c575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b805160208083015191908110156118ac575f1960209190910360031b1b16919050565b5f6001600160401b038211156123e8576123e8611e04565b5060051b60200190565b5f82601f830112612401575f5ffd5b815161241461240f826123d0565b612278565b8082825260208201915060208360051b860101925085831115612435575f5ffd5b602085015b8381101561245257805183526020928301920161243a565b5095945050505050565b5f6020828403121561246c575f5ffd5b81516001600160401b03811115612481575f5ffd5b820180840360a0811215612493575f5ffd5b61249b612256565b82518152602080840151908201526040603f19830112156124ba575f5ffd5b6124c261222e565b604084810151825260608501516020830152820152608083015191506001600160401b038211156124f1575f5ffd5b6124fd868385016123f2565b606082015295945050505050565b5f6020828403121561251b575f5ffd5b81516001600160401b03811115612530575f5ffd5b8201601f81018413612540575f5ffd5b805161254e61240f826123d0565b8082825260208201915060208360051b85010192508683111561256f575f5ffd5b602084015b838110156126015780516001600160401b03811115612591575f5ffd5b85016040818a03601f190112156125a6575f5ffd5b6125ae61222e565b60208201516125bc81611888565b815260408201516001600160401b038111156125d6575f5ffd5b6125e58b6020838601016123f2565b6020830152508085525050602083019250602081019050612574565b509695505050505050565b5f6020828403121561261c575f5ffd5b815161198c81611888565b5f8261264157634e487b7160e01b5f52601260045260245ffd5b500690565b8082018082111561162657634e487b7160e01b5f52601160045260245ffdfea26469706673582212208dc47ac9863a6b893abcce651289eef70c5d07cb7d5972f7b52e0f79383697ea64736f6c634300081b0033",
    "sourceMap": "446:15781:175:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:1242;;;;;;:::i;:::-;;:::i;:::-;;3762:401:179;;;;;;:::i;:::-;;:::i;9737:184:175:-;;;;;;:::i;:::-;9872:42;;;;9847:6;9872:42;;;:20;:42;;;;;;;;9737:184;;;;2286:10:318;2274:23;;;2256:42;;2244:2;2229:18;9737:184:175;;;;;;;;962:94:176;;1016:40;962:94;;;;;2455:25:318;;;2443:2;2428:18;962:94:176;2309:177:318;8577:101:175;-1:-1:-1;;;;;;;;;;;;;;;;;8654:17:175;;;;;;;;8661:10;8654:17;-1:-1:-1;;;;;8654:17:175;;;;-1:-1:-1;;;8654:17:175;;;;;;;;8577:101;;;;;;;:::i;7127:146::-;;;;;;:::i;:::-;;:::i;9507:182::-;;;;;;:::i;:::-;9640:42;;;;9615:6;9640:42;;;:22;:42;;;;;;;;9507:182;8392:137;8496:25;;;;;;;8452:7;8478:44;;;:17;:44;;;;;;8392:137;;10766:140;;;;;;:::i;:::-;10847:4;10870:29;;;:12;:29;;;;;;;;;10766:140;;;;3541:14:318;;3534:22;3516:41;;3504:2;3489:18;10766:140:175;3376:187:318;9314:145:175;9426:25;;;;;;;;;9378:6;9403:49;;;:22;:49;;;;;;;9314:145;;588:177:176;;654:111;588:177;;9147:119:175;9234:25;;;;;;;9147:119;;1031:106:167;;;:::i;:::-;;;;;;;:::i;4199:85:179:-;;;:::i;4933:163::-;;;;;;:::i;:::-;5065:7;;5036:1;:10;;;;;;;;5065:14;;;5064:24;;4933:163;4810:87;4883:7;;4810:87;;1121:56:176;;1176:1;1121:56;;10954:177:175;;;;;;:::i;:::-;11086:37;;11050:4;11086:37;;;:17;:37;;;;;;;;;11073:51;;:12;:51;;;;;;;;;10954:177;8726:373;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4979:32:318;;;4961:51;;4949:2;4934:18;8726:373:175;4815:203:318;2064:101:20;;;:::i;10358:193:175:-;;;:::i;1355:57:176:-;;1411:1;1355:57;;1964:47:179;;;;;1441:85:20;1513:6;;-1:-1:-1;;;;;1513:6:20;1441:85;;4884:2125:175;;;;;;:::i;:::-;;:::i;7851:202::-;;;;;;:::i;:::-;;:::i;1613:67:176:-;;;;;10599:119:175;-1:-1:-1;;;;;;;;;;;;;;;;;10688:23:175;;;;;;;;10695:16;10688:23;-1:-1:-1;;;;;10688:23:175;;;;-1:-1:-1;;;10688:23:175;;;;;;;;10599:119;;1492:67:176;;;;;1800:45;;;;;;;;;;;;8179:6:318;8167:19;;;8149:38;;8137:2;8122:18;1800:45:176;8005:188:318;7321:482:175;;;;;;:::i;:::-;;:::i;9969:341::-;;;;;;:::i;:::-;;:::i;8171:173::-;;;;;;:::i;:::-;8300:37;;8274:7;8300:37;;;:17;:37;;;;;;;8171:173;3190:1646;;;;;;:::i;:::-;;:::i;2314:198:20:-;;;;;;:::i;:::-;;:::i;4320:454:179:-;;;;;;:::i;:::-;;:::i;810:39:176:-;;843:6;810:39;;1830:1242:175;3279:19:26;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:26;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:26;1713:19:34;:23;;;3387:66:26;;-1:-1:-1;3436:12:26;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:26;;9956:2:318;3325:201:26;;;9938:21:318;9995:2;9975:18;;;9968:30;10034:34;10014:18;;;10007:62;-1:-1:-1;;;10085:18:318;;;10078:44;10139:19;;3325:201:26;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:26;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:26;;;;;3562:65;2098:26:175::1;2117:6;2098:18;:26::i;:::-;2134:37;2151:19;2134:16;:37::i;:::-;2181:50;2198:17;2217:13;2181:16;:50::i;:::-;2241:69;2277:32;2241:35;:69::i;:::-;1016:40:176;2593:48:175::0;:78;;;:48:::1;2681:41:::0;:12:::1;2593:48;2681:41:::0;;:48;;-1:-1:-1;;2681:48:175::1;1176:1:176;2681:48:175;::::0;;2799:16:::1;:68:::0;;-1:-1:-1;;;;;;2877:38:175;2910:4:::1;2877:38;::::0;;3014:25:::1;:51:::0;;3049:15:::1;2593:48;3014:51;::::0;::::1;-1:-1:-1::0;;3014:51:175;;::::1;;::::0;;3647:99:26;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:26;;;3721:14;;-1:-1:-1;10321:36:318;;3721:14:26;;10309:2:318;10294:18;3721:14:26;;;;;;;3647:99;3269:483;1830:1242:175;;;;;:::o;3762:401:179:-;2390:18;:16;:18::i;:::-;3876:7:::1;::::0;4025:37;;::::1;4024:62:::0;::::1;4016:97;;;;-1:-1:-1::0;;;4016:97:179::1;;;;;;;;;;;;4123:33;4140:15;4123:16;:33::i;:::-;3836:327;3762:401:::0;:::o;7127:146:175:-;1334:13:20;:11;:13::i;:::-;7226:40:175::1;7262:3;7226:35;:40::i;:::-;7127:146:::0;:::o;1031:106:167:-;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;4199:85:179:-;2390:18;:16;:18::i;:::-;4249:28:::1;-1:-1:-1::0;;4249:16:179::1;:28::i;:::-;4199:85::o:0;8726:373:175:-;8814:7;8850:15;8837:9;:28;;;;;;;;:::i;:::-;;8833:260;;-1:-1:-1;8896:24:175;;8726:373;-1:-1:-1;8726:373:175:o;8833:260::-;8955:15;8942:9;:28;;;;;;;;:::i;:::-;;8938:155;;-1:-1:-1;9001:24:175;;8726:373;-1:-1:-1;8726:373:175:o;8938:155::-;9064:18;;-1:-1:-1;;;9064:18:175;;;;;;;;;;;8938:155;8726:373;;;:::o;2064:101:20:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;10358:193:175:-:0;10448:96;;-1:-1:-1;;;10448:96:175;;10423:6;;-1:-1:-1;;;;;10481:24:175;10448:84;;;;:96;;10533:10;;10448:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4884:2125::-;580:1:176;2960:30:179;2984:5;2960:23;:30::i;:::-;2505:21:27::1;:19;:21::i;:::-;5187:30:175::2;5231:19;5264:42;5320:30;5363:45;5389:18;;5363:25;:45::i;:::-;5487:29;::::0;;;:12:::2;:29;::::0;;;;;5173:235;;-1:-1:-1;5173:235:175;;-1:-1:-1;5173:235:175;-1:-1:-1;5173:235:175;-1:-1:-1;5487:29:175::2;;5479:53;;;;-1:-1:-1::0;;;5479:53:175::2;;;;;;;;;;;;5635:14;::::0;;;;::::2;::::0;;;:10:::2;:14:::0;-1:-1:-1;;;;;5635:14:175;::::2;::::0;;-1:-1:-1;;;5635:14:175;::::2;;;;::::0;::::2;::::0;:16:::2;::::0;:14:::2;:16::i;:::-;5614:17;:11;:15;:17::i;:::-;:37:::0;5606:68:::2;;;;-1:-1:-1::0;;;5606:68:175::2;;;;;;;;;;;;5862:33;5885:9;5862:22;:33::i;:::-;-1:-1:-1::0;;;;;5837:84:175::2;;5922:11;5837:97;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5800:134;;:18;:134;;;5779:208;;;;-1:-1:-1::0;;;5779:208:175::2;;;;;;;;;;;;6083:37;::::0;::::2;;::::0;;;:17:::2;:37;::::0;;;;;:56;::::2;6075:91;;;;-1:-1:-1::0;;;6075:91:175::2;;;;;;;;;;;;6221:218;6275:15;6322:16;6359:5;;6409:18;;6399:29;;;;;;;:::i;:::-;;;;;;;;6221:22;:218::i;:::-;6504:15;6491:9;:28;;;;;;;;:::i;:::-;::::0;6487:516:::2;;6535:24;-1:-1:-1::0;;;;;6535:44:175::2;;6597:11;6610:18;6630:40;6652:17;6630:21;:40::i;:::-;6672:17;6535:168;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6487:516;;;6737:15;6724:9;:28;;;;;;;;:::i;:::-;::::0;6720:283:::2;;6768:24;-1:-1:-1::0;;;;;6768:44:175::2;;6830:11;6843:18;6863:40;6885:17;6863:21;:40::i;:::-;6905:17;6768:168;;;;;;;;;;;;;;;;;;:::i;6720:283::-;5163:1846;;;;2547:20:27::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;4884:2125:175::0;;;;;;;;:::o;7851:202::-;1334:13:20;:11;:13::i;:::-;8004:42:175::1;8021:9;8032:13;8004:16;:42::i;7321:482::-:0;2390:18:179;:16;:18::i;:::-;7485:29:175::1;::::0;;;:12:::1;:29;::::0;;;;;::::1;;7477:53;;;;-1:-1:-1::0;;;7477:53:175::1;;;;;;;;;;;;1016:40:176;7621:15:175;:46:::0;7613:85:::1;;;;-1:-1:-1::0;;;7613:85:175::1;;;;;;;;;;;;7741:5;7709:29:::0;;;:12:::1;:29;::::0;;;;;:37;;-1:-1:-1;;7709:37:175::1;::::0;;7761:35;7722:15;;7761:35:::1;::::0;::::1;7321:482:::0;:::o;9969:341::-;10191:102;;;654:111:176;10191:102:175;;;14758:25:318;14799:18;;;14792:34;;;14874:10;14862:23;;;14842:18;;;14835:51;14922:23;;14902:18;;;14895:51;10142:7:175;;14730:19:318;;10191:102:175;;;;;;;;;;;;10168:135;;;;;;10161:142;;9969:341;;;;;:::o;3190:1646::-;444:1:176;2960:30:179;2984:5;2960:23;:30::i;:::-;2505:21:27::1;:19;:21::i;:::-;3610:15:175::2;3588:18;:37;;;;3580:73;;;;-1:-1:-1::0;;;3580:73:175::2;;;;;;;;;;;;3692:25;::::0;::::2;::::0;;;::::2;::::0;::::2;3671:46:::0;;::::2;;3663:79;;;;-1:-1:-1::0;;;3663:79:175::2;;;;;;;;;;;;3824:90;3856:15;3873:18;3893:20;3824:31;:90::i;:::-;3773:19;:31;;;:141;3752:206;;;;-1:-1:-1::0;;;3752:206:175::2;;;;;;;;;;;;4084:15;::::0;;4097:1:::2;4084:15:::0;;;;;::::2;::::0;;;4040:41:::2;::::0;4084:15:::2;::::0;;::::2;::::0;;::::2;::::0;::::2;-1:-1:-1::0;;4140:31:175::2;::::0;4109:28;;;;-1:-1:-1;4140:31:175::2;;::::0;4109:28;;-1:-1:-1;4140:31:175::2;::::0;4109:28:::2;;;;:::i;:::-;:62;::::0;;::::2;:28;::::0;;::::2;::::0;;;;;;;:62;4196:134:::2;::::0;-1:-1:-1;;;4196:134:175;;4181:12:::2;::::0;-1:-1:-1;;;;;4196:24:175::2;:52;::::0;::::2;::::0;:134:::2;::::0;4262:10:::2;::::0;4274:19;;4295:25;;4196:134:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4181:149;;4349:7;4341:38;;;;-1:-1:-1::0;;;4341:38:175::2;;;;;;;;;;;;4453:25;:46:::0;;::::2;::::0;;::::2;::::0;;::::2;-1:-1:-1::0;;4453:46:175;;::::2;::::0;;;::::2;::::0;;;-1:-1:-1;4509:42:175;;;:22:::2;:42;::::0;;;;;;;:65;;;;::::2;-1:-1:-1::0;;4509:65:175;;::::2;::::0;::::2;::::0;;;4584:42;;:20:::2;:42:::0;;;;;:63;;;;::::2;::::0;::::2;::::0;;;4657:37;;;:17:::2;:37:::0;;;;;:55;;;4722:29;;;:12:::2;:29:::0;;;;;:36;;-1:-1:-1;;4722:36:175::2;-1:-1:-1::0;4722:36:175::2;::::0;;4774:55;;4697:15;;4774:55:::2;::::0;::::2;3455:1381;;2547:20:27::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;3190:1646:175::0;;;;;:::o;2314:198:20:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:20;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:20;;21073:2:318;2394:73:20::1;::::0;::::1;21055:21:318::0;21112:2;21092:18;;;21085:30;21151:34;21131:18;;;21124:62;-1:-1:-1;;;21202:18:318;;;21195:36;21248:19;;2394:73:20::1;20871:402:318::0;2394:73:20::1;2477:28;2496:8;2477:18;:28::i;4320:454:179:-:0;2558:20;:18;:20::i;:::-;4438:7:::1;::::0;4632:20;::::1;4609:16:::0;::::1;4583:43:::0;::::1;4582:71;4574:106;;;;-1:-1:-1::0;;;4574:106:179::1;;;;;;;;;;;;4690:7;:25:::0;;;4730:37:::1;::::0;2455:25:318;;;4739:10:179::1;::::0;4730:37:::1;::::0;2443:2:318;2428:18;4730:37:179::1;;;;;;;4398:376;4320:454:::0;:::o;2666:187:20:-;2758:6;;;-1:-1:-1;;;;;2774:17:20;;;-1:-1:-1;;;;;;2774:17:20;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;5200:157:179:-;5281:7;:22;;;5318:32;;2455:25:318;;;5325:10:179;;5318:32;;2443:2:318;2428:18;5318:32:179;;;;;;;5200:157;:::o;13705:655:175:-;13869:9;13856:10;:22;13869:9;13856:10;:22;:::i;:::-;-1:-1:-1;;13981:60:175;;-1:-1:-1;;;13981:60:175;;13953:25;;-1:-1:-1;;;;;13981:24:175;:49;;;;:60;;14031:9;;13981:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13953:88;-1:-1:-1;14059:23:175;;;;14051:52;;;;-1:-1:-1;;;14051:52:175;;;;;;;;;;;;14169:141;;-1:-1:-1;;;14169:141:175;;-1:-1:-1;;;;;14169:24:175;:44;;;;:141;;14227:9;;1176:1:176;;14269:13:175;;14284:16;;14169:141;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14326:27;14343:9;14326:27;;;;;;:::i;:::-;;;;;;;;13817:543;13705:655;;:::o;12465:257::-;843:6:176;12563:14:175;;;;;12555:55;;;;-1:-1:-1;;;12555:55:175;;;;;;;;;;;;12620:31;:37;;-1:-1:-1;;12620:37:175;;;;;;;;;;12672:43;;8149:38:318;;;12672:43:175;;8137:2:318;8122:18;12672:43:175;;;;;;;12465:257;:::o;3014:117:179:-;3074:35;;-1:-1:-1;;;3074:35:179;;3098:10;3074:35;;;4961:51:318;3074:14:179;-1:-1:-1;;;;;3074:23:179;;;;4934:18:318;;3074:35:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3066:58;;;;-1:-1:-1;;;3066:58:179;;;;;;;;;;;1599:130:20;1513:6;;-1:-1:-1;;;;;1513:6:20;929:10:35;1662:23:20;1654:68;;;;-1:-1:-1;;;1654:68:20;;23971:2:318;1654:68:20;;;23953:21:318;;;23990:18;;;23983:30;24049:34;24029:18;;;24022:62;24101:18;;1654:68:20;23769:356:318;2081:405:37;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:37;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:37;;;-1:-1:-1;2438:4:37;2429:14;;2422:28;;;;-1:-1:-1;2393:16:37;2081:405::o;3380:133:179:-;5065:7;;5036:1;:10;;;;5065:14;;;5064:24;3464:42;;;;-1:-1:-1;;;3464:42:179;;;;;;;;;;;2580:287:27;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:27;;24332:2:318;2704:63:27;;;24314:21:318;24371:2;24351:18;;;24344:30;24410:33;24390:18;;;24383:61;24461:18;;2704:63:27;24130:355:318;2704:63:27;1830:1;2842:7;:18;2580:287::o;14844:484:175:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;15027:19:175;-1:-1:-1;;;;;;;;;15027:19:175;15114:30;15244:77;;;;15255:13;15244:77;:::i;:::-;15169:152;;;;-1:-1:-1;15169:152:175;-1:-1:-1;15169:152:175;;-1:-1:-1;14844:484:175;-1:-1:-1;;;14844:484:175:o;399:154:162:-;472:7;523:2;:6;;;538:2;:5;;;531:13;;506:39;;;;;;;;27033:2:318;27029:15;;;;-1:-1:-1;;27025:53:318;27013:66;;27135:3;27113:16;-1:-1:-1;;;;;;27109:59:318;27104:2;27095:12;;27088:81;27194:2;27185:12;;26858:345;506:39:162;;;;;;;;;;;;;498:48;;;:::i;:::-;491:55;399:154;-1:-1:-1;;399:154:162:o;11738:555:175:-;12040:197;12094:5;;12040:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12123:15:175;;-1:-1:-1;12162:19:175;;-1:-1:-1;;12040:197:175;;;:28;:197::i;:::-;12019:267;;;;-1:-1:-1;;;12019:267:175;;;;;;;;;;;15559:222;15667:27;;:::i;:::-;15724:25;15713:61;;;;;;;;;;;;:::i;16011:214::-;16116:26;16172:22;16161:57;;;;;;;;;;;;:::i;3137:125:179:-;3213:14;-1:-1:-1;;;;;3213:23:179;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3199:39:179;:10;-1:-1:-1;;;;;3199:39:179;;3191:64;;;;-1:-1:-1;;;3191:64:179;;;;;;;;;;;2558:245:37;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:37;;;;;;;;;;;1273:240:161;1428:4;1502;1451:47;1479:5;1486:4;1492:5;1451:27;:47::i;:::-;:55;;1273:240;-1:-1:-1;;;;;1273:240:161:o;2030:1081::-;2169:7;2211:2;2196:5;:12;:17;;;;:::i;:::-;:22;2188:53;;;;-1:-1:-1;;;2188:53:161;;;;;;;;;;;;2274:4;2305:2;2288:788;2314:5;:12;2309:1;:17;2288:788;;2355:9;2363:1;2355:5;:9;:::i;:::-;2368:1;2355:14;2351:715;;2514:12;2508:4;2501:26;2578:1;2571:5;2567:13;2561:20;2555:4;2548:34;2635:4;2629;2619:21;2603:37;;2681:1;2674:5;2670:13;2661:22;;2351:715;;;2882:1;2875:5;2871:13;2865:20;2859:4;2852:34;2920:12;2914:4;2907:26;2986:4;2980;2970:21;2954:37;;3032:1;3025:5;3021:13;3012:22;;2351:715;2328:7;2333:2;2328:7;;:::i;:::-;;;2288:788;;;-1:-1:-1;3092:12:161;2030:1081;-1:-1:-1;;;;2030:1081:161:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:318:-;-1:-1:-1;;;;;89:31:318;;79:42;;69:70;;135:1;132;125:12;150:159;214:5;259:2;250:6;245:3;241:16;237:25;234:45;;;275:1;272;265:12;234:45;-1:-1:-1;297:6:318;150:159;-1:-1:-1;150:159:318:o;314:::-;381:20;;441:6;430:18;;420:29;;410:57;;463:1;460;453:12;478:169;551:5;596:3;587:6;582:3;578:16;574:26;571:46;;;613:1;610;603:12;652:848;819:6;827;835;843;851;904:3;892:9;883:7;879:23;875:33;872:53;;;921:1;918;911:12;872:53;960:9;947:23;979:31;1004:5;979:31;:::i;:::-;1029:5;-1:-1:-1;1107:2:318;1092:18;;1079:32;;-1:-1:-1;1156:67:318;1215:7;1210:2;1195:18;;1156:67;:::i;:::-;1146:77;;1242:38;1275:3;1264:9;1260:19;1242:38;:::i;:::-;1232:48;;1331:3;1320:9;1316:19;1303:33;-1:-1:-1;;;;;1351:6:318;1348:30;1345:50;;;1391:1;1388;1381:12;1345:50;1414:80;1486:7;1477:6;1466:9;1462:22;1414:80;:::i;:::-;1404:90;;;652:848;;;;;;;;:::o;1505:226::-;1564:6;1617:2;1605:9;1596:7;1592:23;1588:32;1585:52;;;1633:1;1630;1623:12;1585:52;-1:-1:-1;1678:23:318;;1505:226;-1:-1:-1;1505:226:318:o;1736:121::-;1821:10;1814:5;1810:22;1803:5;1800:33;1790:61;;1847:1;1844;1837:12;1862:245;1920:6;1973:2;1961:9;1952:7;1948:23;1944:32;1941:52;;;1989:1;1986;1979:12;1941:52;2028:9;2015:23;2047:30;2071:5;2047:30;:::i;:::-;2096:5;1862:245;-1:-1:-1;;;1862:245:318:o;2491:195::-;2572:12;;-1:-1:-1;;;;;2568:38:318;2556:51;;2660:4;2649:16;;;2643:23;2668:10;2639:40;2623:14;;2616:64;2491:195::o;2691:260::-;2885:2;2870:18;;2897:48;2874:9;2927:6;2897:48;:::i;2956:184::-;3014:6;3067:2;3055:9;3046:7;3042:23;3038:32;3035:52;;;3083:1;3080;3073:12;3035:52;3106:28;3124:9;3106:28;:::i;3568:418::-;3717:2;3706:9;3699:21;3680:4;3749:6;3743:13;3792:6;3787:2;3776:9;3772:18;3765:34;3851:6;3846:2;3838:6;3834:15;3829:2;3818:9;3814:18;3808:50;3907:1;3902:2;3893:6;3882:9;3878:22;3874:31;3867:42;3977:2;3970;3966:7;3961:2;3953:6;3949:15;3945:29;3934:9;3930:45;3926:54;3918:62;;;3568:418;;;;:::o;3991:269::-;4048:6;4101:2;4089:9;4080:7;4076:23;4072:32;4069:52;;;4117:1;4114;4107:12;4069:52;4156:9;4143:23;4206:4;4199:5;4195:16;4188:5;4185:27;4175:55;;4226:1;4223;4216:12;4447:150;4522:20;;4571:1;4561:12;;4551:40;;4587:1;4584;4577:12;4602:208;4676:6;4729:2;4717:9;4708:7;4704:23;4700:32;4697:52;;;4745:1;4742;4735:12;4697:52;4768:36;4794:9;4768:36;:::i;5256:347::-;5307:8;5317:6;5371:3;5364:4;5356:6;5352:17;5348:27;5338:55;;5389:1;5386;5379:12;5338:55;-1:-1:-1;5412:20:318;;-1:-1:-1;;;;;5444:30:318;;5441:50;;;5487:1;5484;5477:12;5441:50;5524:4;5516:6;5512:17;5500:29;;5576:3;5569:4;5560:6;5552;5548:19;5544:30;5541:39;5538:59;;;5593:1;5590;5583:12;5538:59;5256:347;;;;;:::o;5608:1106::-;5723:6;5731;5739;5747;5755;5763;5771;5824:3;5812:9;5803:7;5799:23;5795:33;5792:53;;;5841:1;5838;5831:12;5792:53;5880:9;5867:23;5899:30;5923:5;5899:30;:::i;:::-;5948:5;-1:-1:-1;6026:2:318;6011:18;;5998:32;;-1:-1:-1;6108:2:318;6093:18;;6080:32;6121;6080;6121;:::i;:::-;6172:7;-1:-1:-1;6230:2:318;6215:18;;6202:32;-1:-1:-1;;;;;6246:30:318;;6243:50;;;6289:1;6286;6279:12;6243:50;6328:58;6378:7;6369:6;6358:9;6354:22;6328:58;:::i;:::-;6405:8;;-1:-1:-1;6302:84:318;-1:-1:-1;;6493:3:318;6478:19;;6465:33;-1:-1:-1;;;;;6510:32:318;;6507:52;;;6555:1;6552;6545:12;6507:52;6594:60;6646:7;6635:8;6624:9;6620:24;6594:60;:::i;:::-;5608:1106;;;;-1:-1:-1;5608:1106:318;;-1:-1:-1;5608:1106:318;;;;6568:86;;-1:-1:-1;;;5608:1106:318:o;6719:518::-;6860:6;6868;6921:2;6909:9;6900:7;6896:23;6892:32;6889:52;;;6937:1;6934;6927:12;6889:52;6960:58;7010:7;6999:9;6960:58;:::i;:::-;6950:68;;7069:2;7058:9;7054:18;7041:32;-1:-1:-1;;;;;7088:6:318;7085:30;7082:50;;;7128:1;7125;7118:12;7082:50;7151:80;7223:7;7214:6;7203:9;7199:22;7151:80;:::i;:::-;7141:90;;;6719:518;;;;;:::o;8198:504::-;8273:6;8281;8289;8342:2;8330:9;8321:7;8317:23;8313:32;8310:52;;;8358:1;8355;8348:12;8310:52;8403:23;;;-1:-1:-1;8502:2:318;8487:18;;8474:32;8515;8474;8515;:::i;:::-;8566:7;-1:-1:-1;8625:2:318;8610:18;;8597:32;8638;8597;8638;:::i;:::-;8689:7;8679:17;;;8198:504;;;;;:::o;8707:790::-;8828:6;8836;8844;8852;8905:3;8893:9;8884:7;8880:23;8876:33;8873:53;;;8922:1;8919;8912:12;8873:53;8962:9;8949:23;-1:-1:-1;;;;;8987:6:318;8984:30;8981:50;;;9027:1;9024;9017:12;8981:50;9050:22;;9106:3;9088:16;;;9084:26;9081:46;;;9123:1;9120;9113:12;9081:46;9146:2;-1:-1:-1;9217:2:318;9202:18;;9189:32;;-1:-1:-1;9297:2:318;9282:18;;9269:32;9310;9269;9310;:::i;:::-;9361:7;-1:-1:-1;9420:2:318;9405:18;;9392:32;9433;9392;9433;:::i;:::-;8707:790;;;;-1:-1:-1;8707:790:318;;-1:-1:-1;;8707:790:318:o;9502:247::-;9561:6;9614:2;9602:9;9593:7;9589:23;9585:32;9582:52;;;9630:1;9627;9620:12;9582:52;9669:9;9656:23;9688:31;9713:5;9688:31;:::i;10368:127::-;10429:10;10424:3;10420:20;10417:1;10410:31;10460:4;10457:1;10450:15;10484:4;10481:1;10474:15;10739:265;10930:2;10915:18;;10942:56;10919:9;10980:6;10590:12;-1:-1:-1;;;;;10623:35:318;;10611:48;;10646:3;10695:19;10716:10;10691:36;10684:4;10675:14;;;10668:60;10500:234;11009:249;11078:6;11131:2;11119:9;11110:7;11106:23;11102:32;11099:52;;;11147:1;11144;11137:12;11099:52;11179:9;11173:16;11198:30;11222:5;11198:30;:::i;11263:271::-;11446:6;11438;11433:3;11420:33;11402:3;11472:16;;11497:13;;;11472:16;11263:271;-1:-1:-1;11263:271:318:o;11539:420::-;11592:3;11630:5;11624:12;11657:6;11652:3;11645:19;11689:4;11684:3;11680:14;11673:21;;11728:4;11721:5;11717:16;11751:1;11761:173;11775:6;11772:1;11769:13;11761:173;;;11836:13;;11824:26;;11879:4;11870:14;;;;11907:17;;;;11797:1;11790:9;11761:173;;;-1:-1:-1;11950:3:318;;11539:420;-1:-1:-1;;;;11539:420:318:o;11964:1091::-;12367:48;12405:9;12397:6;12367:48;:::i;:::-;12463:10;12455:6;12451:23;12446:2;12435:9;12431:18;12424:51;12511:3;12506:2;12495:9;12491:18;12484:31;12558:6;12552:13;12546:3;12535:9;12531:19;12524:42;12621:4;12613:6;12609:17;12603:24;12597:3;12586:9;12582:19;12575:53;12348:4;12675:2;12667:6;12663:15;12657:22;12722:12;12716:19;12710:3;12699:9;12695:19;12688:48;12797:4;12783:12;12779:23;12773:30;12767:3;12756:9;12752:19;12745:59;;12853:2;12845:6;12841:15;12835:22;12894:4;12888:3;12877:9;12873:19;12866:33;12916:65;12976:3;12965:9;12961:19;12945:14;12916:65;:::i;:::-;12908:73;;;12990:59;13043:4;13032:9;13028:20;13020:6;12990:59;:::i;:::-;11964:1091;;;;;;;:::o;13060:1466::-;13488:4;13536:3;13525:9;13521:19;13549:48;13587:9;13579:6;13549:48;:::i;:::-;13645:10;13637:6;13633:23;13628:2;13617:9;13613:18;13606:51;13693:3;13688:2;13677:9;13673:18;13666:31;13717:6;13752;13746:13;13783:6;13775;13768:22;13821:3;13810:9;13806:19;13799:26;;13884:3;13874:6;13871:1;13867:14;13856:9;13852:30;13848:40;13834:54;;13923:4;13915:6;13911:17;13946:1;13956:474;13970:6;13967:1;13964:13;13956:474;;;14035:22;;;-1:-1:-1;;14031:37:318;14019:50;;14092:13;;14137:9;;-1:-1:-1;;;;;14133:35:318;14118:51;;14216:4;14208:13;;;14202:20;14261:2;14242:17;;;14235:29;;;14202:20;14287:59;;14330:15;;14202:20;14287:59;:::i;:::-;14277:69;-1:-1:-1;;14381:4:318;14406:14;;;;14369:17;;;;;13992:1;13985:9;13956:474;;;13960:3;;;;14447:6;14439:14;;;14462:58;14515:3;14504:9;14500:19;14492:6;14462:58;:::i;14957:127::-;15018:10;15013:3;15009:20;15006:1;14999:31;15049:4;15046:1;15039:15;15073:4;15070:1;15063:15;15089:127;15150:10;15145:3;15141:20;15138:1;15131:31;15181:4;15178:1;15171:15;15205:4;15202:1;15195:15;15501:553;15604:5;15611:6;15671:3;15658:17;15757:2;15753:7;15742:8;15726:14;15722:29;15718:43;15698:18;15694:68;15684:96;;15776:1;15773;15766:12;15684:96;15804:33;;15908:4;15895:18;;;-1:-1:-1;15856:21:318;;-1:-1:-1;;;;;;15925:30:318;;15922:50;;;15968:1;15965;15958:12;15922:50;16022:6;16019:1;16015:14;15999;15995:35;15988:5;15984:47;15981:67;;;16044:1;16041;16034:12;16059:266;16147:6;16142:3;16135:19;16199:6;16192:5;16185:4;16180:3;16176:14;16163:43;-1:-1:-1;16251:1:318;16226:16;;;16244:4;16222:27;;;16215:38;;;;16307:2;16286:15;;;-1:-1:-1;;16282:29:318;16273:39;;;16269:50;;16059:266::o;16330:302::-;16407:5;16466:3;16453:17;16552:2;16548:7;16537:8;16521:14;16517:29;16513:43;16493:18;16489:68;16479:96;;16571:1;16568;16561:12;16479:96;16593:33;;;;16330:302;-1:-1:-1;;16330:302:318:o;16637:311::-;16725:19;;;16707:3;-1:-1:-1;;;;;16756:31:318;;16753:51;;;16800:1;16797;16790:12;16753:51;16836:6;16833:1;16829:14;16888:8;16881:5;16874:4;16869:3;16865:14;16852:45;16917:18;;;;16937:4;16913:29;;16637:311;-1:-1:-1;;;16637:311:318:o;16953:416::-;15327:19;;15355:20;;15444:4;15433:16;;;15420:30;15466:14;;;15459:31;17022:3;17129:100;17223:4;17216:5;17212:16;17205:5;17129:100;:::i;:::-;17261:4;17254;17249:3;17245:14;17238:28;17282:81;17357:4;17352:3;17348:14;17334:12;17320;17282:81;:::i;17374:432::-;17426:3;17464:5;17458:12;17491:6;17486:3;17479:19;17523:4;17518:3;17514:14;17507:21;;17562:4;17555:5;17551:16;17585:1;17595:186;17609:6;17606:1;17603:13;17595:186;;;17674:13;;17689:6;17670:26;17658:39;;17726:4;17717:14;;;;17754:17;;;;17631:1;17624:9;17595:186;;17811:2773;18155:56;18201:9;18193:6;10590:12;-1:-1:-1;;;;;10623:35:318;;10611:48;;10646:3;10695:19;10716:10;10691:36;10684:4;10675:14;;;10668:60;10500:234;18155:56;18247:3;18242:2;18231:9;18227:18;18220:31;18136:4;18289:3;18278:9;18274:19;18328:6;18315:20;18344:30;18368:5;18344:30;:::i;:::-;18422:10;18411:22;18405:3;18390:19;;18383:51;18504:4;18492:17;;18479:31;18541:3;18526:19;;18519:36;18611:2;18599:15;;15327:19;18631:3;18616:19;;15355:20;15433:16;;;15420:30;15466:14;;;15459:31;18697:2;18691:3;18683:6;18679:16;18673:3;18662:9;18658:19;18645:55;18761:2;18755:3;18747:6;18743:16;18737:3;18726:9;18722:19;18709:55;18807:101;18903:3;18895:6;18891:16;18883:6;18807:101;:::i;:::-;18945:6;18939:3;18928:9;18924:19;18917:35;18972:6;19002:12;18994:6;18987:28;19046:3;19035:9;19031:19;19024:26;;19115:3;19099:12;19096:1;19092:20;19081:9;19077:36;19073:46;19059:60;;19142:12;19172:1;19182:1275;19196:12;19193:1;19190:19;19182:1275;;;19267:22;;;-1:-1:-1;;19263:37:318;19251:50;;19324:71;19388:6;19374:12;19324:71;:::i;:::-;19436:2;19423:16;19452:32;19476:7;19452:32;:::i;:::-;19525:10;19512:24;19497:40;;19597:4;19589:13;;19576:27;19658:14;19654:23;;;-1:-1:-1;;19650:37:318;19626:62;;19616:90;;19702:1;19699;19692:12;19616:90;19734:27;;19850:4;19837:18;;;19788:21;-1:-1:-1;;;;;19871:30:318;;19868:50;;;19914:1;19911;19904:12;19868:50;19967:6;19951:14;19947:27;19938:7;19934:41;19931:61;;;19988:1;19985;19978:12;19931:61;20031:4;20024;20016:6;20012:17;20005:31;20063:61;20118:4;20110:6;20106:17;20098:6;20089:7;20063:61;:::i;:::-;20049:75;;;20159:66;20221:2;20217;20213:11;20209:2;20159:66;:::i;:::-;20137:88;;20274:6;20266;20262:19;20257:2;20249:6;20245:15;20238:44;20305:68;20366:6;20350:14;20305:68;:::i;:::-;20295:78;-1:-1:-1;;;20408:4:318;20433:14;;;;20396:17;;;;;19224:1;19217:9;19182:1275;;;19186:3;;;;;20507:9;20499:6;20495:22;20488:4;20477:9;20473:20;20466:52;20535:43;20571:6;20563;20535:43;:::i;:::-;20527:51;17811:2773;-1:-1:-1;;;;;;17811:2773:318:o;20589:277::-;20656:6;20709:2;20697:9;20688:7;20684:23;20680:32;20677:52;;;20725:1;20722;20715:12;20677:52;20757:9;20751:16;20810:5;20803:13;20796:21;20789:5;20786:32;20776:60;;20832:1;20829;20822:12;21278:598;21453:5;21440:19;21468:33;21493:7;21468:33;:::i;:::-;21572:11;;-1:-1:-1;;;;;;21608:45:318;;-1:-1:-1;;;;;21520:33:318;;;;21605:53;;;21592:67;;21707:2;21696:14;;21683:28;21720:32;21683:28;21720:32;:::i;:::-;-1:-1:-1;;;;;;21780:37:318;;;;21777:45;;;21851:3;21828:17;;;;-1:-1:-1;;;21824:44:318;21774:95;21761:109;;-1:-1:-1;21278:598:318:o;21881:363::-;21983:5;21970:19;21998:33;22023:7;21998:33;:::i;:::-;-1:-1:-1;;;;;22052:33:318;22040:46;;22134:4;22123:16;;22110:30;22149:32;22110:30;22149:32;:::i;:::-;22226:10;22217:7;22213:24;22206:4;22201:3;22197:14;22190:48;;21881:363;;:::o;22249:271::-;22445:2;22430:18;;22457:57;22434:9;22496:6;22457:57;:::i;22525:1239::-;22929:57;22976:9;22968:6;22929:57;:::i;:::-;23034:10;23022:23;;23017:2;23002:18;;;22995:51;;;;23082:3;23077:2;23062:18;;;23055:31;;;23127:20;;23163:19;;;23156:34;;;;23260:4;23248:17;;23235:31;23297:3;23282:19;;23275:36;23355:15;;;15327:19;23387:3;23372:19;;15355:20;15433:16;;15420:30;15466:14;;;15459:31;-1:-1:-1;23435:102:318;23531:4;23523:6;23519:17;23511:6;23435:102;:::i;:::-;23574:4;23568:3;23557:9;23553:19;23546:33;23596:86;23677:3;23666:9;23662:19;23648:12;23634;23596:86;:::i;:::-;23588:94;;;;23691:67;23752:4;23741:9;23737:20;23729:6;10590:12;-1:-1:-1;;;;;10623:35:318;;10611:48;;10646:3;10695:19;10716:10;10691:36;10684:4;10675:14;;;10668:60;10500:234;24490:257;24562:4;24556:11;;;24594:17;;-1:-1:-1;;;;;24626:34:318;;24662:22;;;24623:62;24620:88;;;24688:18;;:::i;:::-;24724:4;24717:24;24490:257;:::o;24752:253::-;24824:2;24818:9;24866:4;24854:17;;-1:-1:-1;;;;;24886:34:318;;24922:22;;;24883:62;24880:88;;;24948:18;;:::i;25010:275::-;25081:2;25075:9;25146:2;25127:13;;-1:-1:-1;;25123:27:318;25111:40;;-1:-1:-1;;;;;25166:34:318;;25202:22;;;25163:62;25160:88;;;25228:18;;:::i;:::-;25264:2;25257:22;25010:275;;-1:-1:-1;25010:275:318:o;25290:431::-;25348:5;25396:4;25384:9;25379:3;25375:19;25371:30;25368:50;;;25414:1;25411;25404:12;25368:50;25436:22;;:::i;:::-;25427:31;;25495:9;25482:23;25514:33;25539:7;25514:33;:::i;:::-;25556:22;;25630:2;25615:18;;25602:32;25643;25602;25643;:::i;:::-;25702:2;25691:14;;25684:31;25695:5;25290:431;-1:-1:-1;;25290:431:318:o;25726:1127::-;25902:6;25910;25918;25926;25979:3;25967:9;25958:7;25954:23;25950:33;25947:53;;;25996:1;25993;25986:12;25947:53;26019:49;26060:7;26049:9;26019:49;:::i;:::-;26009:59;;26087:45;26128:2;26117:9;26113:18;26087:45;:::i;:::-;26077:55;;26151:58;26201:7;26196:2;26185:9;26181:18;26151:58;:::i;:::-;26141:68;;26260:3;26249:9;26245:19;26232:33;-1:-1:-1;;;;;26280:6:318;26277:30;26274:50;;;26320:1;26317;26310:12;26274:50;26343:22;;26396:4;26388:13;;26384:27;-1:-1:-1;26374:55:318;;26425:1;26422;26415:12;26374:55;26465:2;26452:16;-1:-1:-1;;;;;26483:6:318;26480:30;26477:56;;;26513:18;;:::i;:::-;26555:59;26602:2;26579:17;;-1:-1:-1;;26575:31:318;26608:4;26571:42;26555:59;:::i;:::-;26637:6;26630:5;26623:21;26687:7;26680:4;26671:6;26667:2;26663:15;26659:26;26656:39;26653:59;;;26708:1;26705;26698:12;26653:59;26767:6;26760:4;26756:2;26752:13;26745:4;26738:5;26734:16;26721:53;26821:1;26814:4;26805:6;26798:5;26794:18;26790:29;26783:40;26842:5;26832:15;;;;;25726:1127;;;;;;;:::o;27208:297::-;27326:12;;27373:4;27362:16;;;27356:23;;27326:12;27391:16;;27388:111;;;-1:-1:-1;;27465:4:318;27461:17;;;;27458:1;27454:25;27450:38;27439:50;;27208:297;-1:-1:-1;27208:297:318:o;27510:183::-;27570:4;-1:-1:-1;;;;;27595:6:318;27592:30;27589:56;;;27625:18;;:::i;:::-;-1:-1:-1;27670:1:318;27666:14;27682:4;27662:25;;27510:183::o;27698:720::-;27763:5;27816:3;27809:4;27801:6;27797:17;27793:27;27783:55;;27834:1;27831;27824:12;27783:55;27867:6;27861:13;27894:64;27910:47;27950:6;27910:47;:::i;:::-;27894:64;:::i;:::-;27982:3;28006:6;28001:3;27994:19;28038:4;28033:3;28029:14;28022:21;;28099:4;28089:6;28086:1;28082:14;28074:6;28070:27;28066:38;28052:52;;28127:3;28119:6;28116:15;28113:35;;;28144:1;28141;28134:12;28113:35;28180:4;28172:6;28168:17;28194:193;28210:6;28205:3;28202:15;28194:193;;;28302:10;;28325:18;;28372:4;28363:14;;;;28227;28194:193;;;-1:-1:-1;28405:7:318;27698:720;-1:-1:-1;;;;;27698:720:318:o;28423:1155::-;28532:6;28585:2;28573:9;28564:7;28560:23;28556:32;28553:52;;;28601:1;28598;28591:12;28553:52;28634:9;28628:16;-1:-1:-1;;;;;28659:6:318;28656:30;28653:50;;;28699:1;28696;28689:12;28653:50;28722:22;;28763:16;;;28799:4;28791:13;;28788:33;;;28817:1;28814;28807:12;28788:33;28843:22;;:::i;:::-;28888:9;;28874:24;;28957:2;28949:11;;;28943:18;28977:14;;;28970:31;29035:2;-1:-1:-1;;29017:16:318;;29013:25;29010:45;;;29051:1;29048;29041:12;29010:45;29079:22;;:::i;:::-;29160:2;29152:11;;;29146:18;29173:24;;29256:2;29248:11;;29242:18;29289:2;29276:16;;29269:33;29318:14;;29311:31;29381:4;29373:13;;29367:20;;-1:-1:-1;;;;;;29399:32:318;;29396:52;;;29444:1;29441;29434:12;29396:52;29480:67;29539:7;29528:8;29524:2;29520:17;29480:67;:::i;:::-;29475:2;29464:14;;29457:91;29468:5;28423:1155;-1:-1:-1;;;;;28423:1155:318:o;29583:1536::-;29714:6;29767:2;29755:9;29746:7;29742:23;29738:32;29735:52;;;29783:1;29780;29773:12;29735:52;29816:9;29810:16;-1:-1:-1;;;;;29841:6:318;29838:30;29835:50;;;29881:1;29878;29871:12;29835:50;29904:22;;29957:4;29949:13;;29945:27;-1:-1:-1;29935:55:318;;29986:1;29983;29976:12;29935:55;30019:2;30013:9;30042:64;30058:47;30098:6;30058:47;:::i;30042:64::-;30128:3;30152:6;30147:3;30140:19;30184:2;30179:3;30175:12;30168:19;;30239:2;30229:6;30226:1;30222:14;30218:2;30214:23;30210:32;30196:46;;30265:7;30257:6;30254:19;30251:39;;;30286:1;30283;30276:12;30251:39;30318:2;30314;30310:11;30330:759;30346:6;30341:3;30338:15;30330:759;;;30425:3;30419:10;-1:-1:-1;;;;;30448:11:318;30445:35;30442:55;;;30493:1;30490;30483:12;30442:55;30520:20;;30592:4;30564:16;;;-1:-1:-1;;30560:30:318;30556:41;30553:61;;;30610:1;30607;30600:12;30553:61;30640:22;;:::i;:::-;30704:2;30700;30696:11;30690:18;30721:33;30746:7;30721:33;:::i;:::-;30767:22;;30832:4;30824:13;;30818:20;-1:-1:-1;;;;;30854:32:318;;30851:52;;;30899:1;30896;30889:12;30851:52;30939:76;31007:7;31002:2;30991:8;30987:2;30983:17;30979:26;30939:76;:::i;:::-;30934:2;30927:5;30923:14;30916:100;;31041:5;31036:3;31029:18;;;31076:2;31071:3;31067:12;31060:19;;30372:2;30367:3;30363:12;30356:19;;30330:759;;;-1:-1:-1;31108:5:318;29583:1536;-1:-1:-1;;;;;;29583:1536:318:o;31124:251::-;31194:6;31247:2;31235:9;31226:7;31222:23;31218:32;31215:52;;;31263:1;31260;31253:12;31215:52;31295:9;31289:16;31314:31;31339:5;31314:31;:::i;31380:209::-;31412:1;31438;31428:132;;31482:10;31477:3;31473:20;31470:1;31463:31;31517:4;31514:1;31507:15;31545:4;31542:1;31535:15;31428:132;-1:-1:-1;31574:9:318;;31380:209::o;31594:222::-;31659:9;;;31680:10;;;31677:133;;;31732:10;31727:3;31723:20;31720:1;31713:31;31767:4;31764:1;31757:15;31795:4;31792:1;31785:15",
    "linkReferences": {},
    "immutableReferences": {
      "91395": [
        {
          "start": 2185,
          "length": 32
        }
      ],
      "95546": [
        {
          "start": 1418,
          "length": 32
        },
        {
          "start": 2275,
          "length": 32
        },
        {
          "start": 2447,
          "length": 32
        },
        {
          "start": 3017,
          "length": 32
        },
        {
          "start": 3852,
          "length": 32
        },
        {
          "start": 4597,
          "length": 32
        },
        {
          "start": 4775,
          "length": 32
        }
      ],
      "95550": [
        {
          "start": 1315,
          "length": 32
        },
        {
          "start": 2339,
          "length": 32
        },
        {
          "start": 3182,
          "length": 32
        }
      ],
      "96790": [
        {
          "start": 1221,
          "length": 32
        },
        {
          "start": 5075,
          "length": 32
        },
        {
          "start": 5829,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "GENERATOR_GLOBAL_TABLE_ROOT()": "1bdc0deb",
    "GENERATOR_MAX_STALENESS_PERIOD()": "790961ea",
    "GENERATOR_REFERENCE_TIMESTAMP()": "612abcb0",
    "GLOBAL_TABLE_ROOT_CERT_TYPEHASH()": "3ef6cd7a",
    "MAX_BPS()": "fd967f47",
    "bn254CertificateVerifier()": "b8c14306",
    "confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)": "eaaed9d5",
    "disableRoot(bytes32)": "c3621f0a",
    "ecdsaCertificateVerifier()": "ad0f9582",
    "getCertificateVerifier(uint8)": "6f728c50",
    "getCurrentGlobalTableRoot()": "28522d79",
    "getGenerator()": "1e2ca260",
    "getGeneratorConfig()": "b0cb3a24",
    "getGeneratorReferenceTimestamp()": "7551ba34",
    "getGlobalTableRootByTimestamp(uint32)": "c5916a39",
    "getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)": "c3be1e33",
    "getLatestReferenceBlockNumber()": "31a599d2",
    "getLatestReferenceTimestamp()": "4624e6a3",
    "getReferenceBlockNumberByTimestamp(uint32)": "23b7b5b2",
    "getReferenceTimestampByBlockNumber(uint32)": "193b79f3",
    "globalRootConfirmationThreshold()": "c252aa22",
    "initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))": "06f51875",
    "isRootValid(bytes32)": "30ef41b4",
    "isRootValidByTimestamp(uint32)": "64e1df84",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "renounceOwnership()": "715018a6",
    "setGlobalRootConfirmationThreshold(uint16)": "2370356c",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))": "9f7e206f",
    "updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)": "9ea94778",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBN254CertificateVerifier\",\"name\":\"_bn254CertificateVerifier\",\"type\":\"address\"},{\"internalType\":\"contract IECDSACertificateVerifier\",\"name\":\"_ecdsaCertificateVerifier\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CannotDisableGeneratorRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CertificateInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GlobalTableRootInFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GlobalTableRootStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConfirmationThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurveType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGenerator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGlobalTableRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSetProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProofLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TableUpdateForPastTimestamp\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"GeneratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"bps\",\"type\":\"uint16\"}],\"name\":\"GlobalRootConfirmationThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"GlobalRootDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"NewGlobalTableRoot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GENERATOR_GLOBAL_TABLE_ROOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENERATOR_MAX_STALENESS_PERIOD\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENERATOR_REFERENCE_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GLOBAL_TABLE_ROOT_CERT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bn254CertificateVerifier\",\"outputs\":[{\"internalType\":\"contract IBN254CertificateVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"operatorInfoProof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254Certificate\",\"name\":\"globalTableRootCert\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"confirmGlobalTableRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"disableRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecdsaCertificateVerifier\",\"outputs\":[{\"internalType\":\"contract IECDSACertificateVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"getCertificateVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGlobalTableRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGenerator\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGeneratorConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct ICrossChainRegistryTypes.OperatorSetConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGeneratorReferenceTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getGlobalTableRootByTimestamp\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"getGlobalTableUpdateMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestReferenceBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestReferenceTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getReferenceBlockNumberByTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"getReferenceTimestampByBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalRootConfirmationThreshold\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"_initialGenerator\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"_globalRootConfirmationThreshold\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"generatorInfo\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"isRootValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"isRootValidByTimestamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"bps\",\"type\":\"uint16\"}],\"name\":\"setGlobalRootConfirmationThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"generator\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"generatorInfo\",\"type\":\"tuple\"}],\"name\":\"updateGenerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorTableBytes\",\"type\":\"bytes\"}],\"name\":\"updateOperatorTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}]},\"events\":{\"GeneratorUpdated((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet which certifies against global roots\"}},\"GlobalRootConfirmationThresholdUpdated(uint16)\":{\"params\":{\"bps\":\"The threshold, in bps, for a global root to be signed off on and updated\"}},\"GlobalRootDisabled(bytes32)\":{\"params\":{\"globalTableRoot\":\"the global table root that was disabled\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"NewGlobalTableRoot(uint32,bytes32)\":{\"params\":{\"globalTableRoot\":\"the root of the global table\",\"referenceTimestamp\":\"the timestamp of the global table root\"}}},\"kind\":\"dev\",\"methods\":{\"confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)\":{\"details\":\"Any entity can submit with a valid certificate signed off by the `Generator`The `msgHash` in the `globalOperatorTableRootCert` is the hash of the `globalTableRoot`, `referenceTimestamp`, and `referenceBlockNumber`The `referenceTimestamp` nested in the `globalTableRootCert` should be `getGeneratorReferenceTimestamp`, whereas      the `referenceTimestamp` passed directly in the calldata is the block timestamp at which the global table root was calculated\",\"params\":{\"globalTableRoot\":\"merkle root of all operatorSet tables\",\"globalTableRootCert\":\"certificate of the global table root, signed by the `Generator`\",\"referenceBlockNumber\":\"block number, corresponding to the `referenceTimestamp` of the global table root\",\"referenceTimestamp\":\"block timestamp at which the global table root was calculated\"}},\"disableRoot(bytes32)\":{\"details\":\"Only callable by the pauserCannot disable the GENERATOR_GLOBAL_TABLE_ROOT\",\"params\":{\"globalTableRoot\":\"the global table root to disable\"}},\"getCertificateVerifier(uint8)\":{\"params\":{\"curveType\":\"The curve type\"},\"returns\":{\"_0\":\"The certificate verifier for the given key type\"}},\"getCurrentGlobalTableRoot()\":{\"returns\":{\"_0\":\"the current global table root\"}},\"getGenerator()\":{\"returns\":{\"_0\":\"The operatorSet which certifies against global roots\"}},\"getGeneratorConfig()\":{\"details\":\"The Generator's config has maxStalenessPeriod = 0 and owner = address(operatorTableUpdater)\",\"returns\":{\"_0\":\"The operator set config for the Generator\"}},\"getGeneratorReferenceTimestamp()\":{\"details\":\"The `Generator's` referenceTimestamp is hardcoded to 1. See `GENERATOR_REFERENCE_TIMESTAMP` in `OperatorTableUpdaterStorage.sol`\",\"returns\":{\"_0\":\"The reference timestamp of the generator\"}},\"getGlobalTableRootByTimestamp(uint32)\":{\"params\":{\"referenceTimestamp\":\"the timestamp of the table root\"},\"returns\":{\"_0\":\"the table root at the given timestamp\"}},\"getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)\":{\"params\":{\"globalTableRoot\":\"the global table root\",\"referenceBlockNumber\":\"the reference block number\",\"referenceTimestamp\":\"the reference timestamp\"},\"returns\":{\"_0\":\"The message hash for a global table root\"}},\"getLatestReferenceBlockNumber()\":{\"returns\":{\"_0\":\"The latest reference block number\"}},\"getLatestReferenceTimestamp()\":{\"returns\":{\"_0\":\"The latest reference timestamp\"}},\"getReferenceBlockNumberByTimestamp(uint32)\":{\"params\":{\"referenceTimestamp\":\"the reference timestamp\"},\"returns\":{\"_0\":\"The reference block number for the given reference timestamp\"}},\"getReferenceTimestampByBlockNumber(uint32)\":{\"params\":{\"referenceBlockNumber\":\"the reference block number\"},\"returns\":{\"_0\":\"The reference timestamp for the given reference block number\"}},\"initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"details\":\"We also update the operator table for the Generator, to begin signing off on global rootsWe set the `_latestReferenceTimestamp` to the current timestamp, so that only *new* roots can be confirmed\",\"params\":{\"_globalRootConfirmationThreshold\":\"The threshold, in bps, for a global root to be signed off on and updated\",\"_initialGenerator\":\"The operatorSet which certifies against global roots\",\"_owner\":\"The owner of the OperatorTableUpdater\",\"generatorInfo\":\"The operatorSetInfo for the Generator\",\"initialPausedStatus\":\"The initial paused status of the OperatorTableUpdater\"}},\"isRootValid(bytes32)\":{\"params\":{\"globalTableRoot\":\"the global table root\"},\"returns\":{\"_0\":\"The validity status of the global table root\"}},\"isRootValidByTimestamp(uint32)\":{\"params\":{\"referenceTimestamp\":\"the reference timestamp\"},\"returns\":{\"_0\":\"The validity status of the global table root\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setGlobalRootConfirmationThreshold(uint16)\":{\"details\":\"Only callable by the owner of the contract\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"details\":\"We have a separate function for updating this operatorSet since it's not transported and updated      in the same way as the other operatorSetsOnly callable by the owner of the contractUses GENERATOR_GLOBAL_TABLE_ROOT constant to break circular dependency for certificate verificationWe ensure that there are no collisions with other reference timestamps because we expect the generator to have an initial reference timestamp of 0The `_latestReferenceTimestamp` is not updated since this root is ONLY used for the `Generator`The `_referenceBlockNumber` and `_referenceTimestamps` mappings are not updated since they are only used for introspection for official operatorSets\",\"params\":{\"generator\":\"The operatorSet which certifies against global roots\",\"generatorInfo\":\"The operatorSetInfo for the generator\"}},\"updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)\":{\"details\":\"This function calls `updateOperatorTable` on the `ECDSACertificateVerifier` or `BN254CertificateVerifier`      depending on the `KeyType` of the operatorSet, which is encoded in the `operatorTableBytes`\",\"params\":{\"globalTableRoot\":\"the new globalTableRoot\",\"operatorSetIndex\":\"the index of the given operatorSet being updated\",\"operatorTableBytes\":\"the bytes of the operator table\",\"proof\":\"the proof of the leaf at index against the globalTableRoot\",\"referenceTimestamp\":\"the reference timestamp of the globalTableRoot\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CannotDisableGeneratorRoot()\":[{\"notice\":\"Thrown when the generator's global table root is being disabled\"}],\"CertificateInvalid()\":[{\"notice\":\"Thrown when the GlobalTableRoot update fails\"}],\"GlobalTableRootInFuture()\":[{\"notice\":\"Thrown when the global table root is in the future\"}],\"GlobalTableRootStale()\":[{\"notice\":\"Thrown when the global table root is stale\"}],\"InvalidConfirmationThreshold()\":[{\"notice\":\"Thrown when the confirmation threshold is invalid\"}],\"InvalidCurveType()\":[{\"notice\":\"Thrown when the curve type is invalid\"}],\"InvalidGenerator()\":[{\"notice\":\"Thrown when the generator is invalid (via a non-zero reference timestamp)\"}],\"InvalidGlobalTableRoot()\":[{\"notice\":\"Thrown when the global table root does not match what is in storage\"}],\"InvalidMessageHash()\":[{\"notice\":\"Thrown when the table root does not match what is in the certificate\"}],\"InvalidOperatorSet()\":[{\"notice\":\"Thrown when the operator set to update is the generator\"}],\"InvalidOperatorSetProof()\":[{\"notice\":\"Thrown when the operator set proof is invalid\"}],\"InvalidRoot()\":[{\"notice\":\"Thrown when a root is invalid\"}],\"TableUpdateForPastTimestamp()\":[{\"notice\":\"Thrown when the table has been updated for the timestamp\"}]},\"events\":{\"GeneratorUpdated((address,uint32))\":{\"notice\":\"Emitted when the generator is updated\"},\"GlobalRootConfirmationThresholdUpdated(uint16)\":{\"notice\":\"Emitted when the global root confirmation threshold is updated\"},\"GlobalRootDisabled(bytes32)\":{\"notice\":\"Emitted when a global table root is disabled\"},\"NewGlobalTableRoot(uint32,bytes32)\":{\"notice\":\"Emitted when a new global table root is set\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"GENERATOR_GLOBAL_TABLE_ROOT()\":{\"notice\":\"Dummy initial global table root to break circular dependency for certificate verification\"},\"GENERATOR_MAX_STALENESS_PERIOD()\":{\"notice\":\"The `maxStalenessPeriods` for the generator\"},\"GENERATOR_REFERENCE_TIMESTAMP()\":{\"notice\":\"The reference timestamp for the generator\"},\"MAX_BPS()\":{\"notice\":\"The maximum BPS value\"},\"bn254CertificateVerifier()\":{\"notice\":\"The BN254 certificate verifier\"},\"confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)\":{\"notice\":\"Sets the global table root\"},\"constructor\":{\"notice\":\"INITIALIZING FUNCTIONS\"},\"disableRoot(bytes32)\":{\"notice\":\"Disables a global table root\"},\"ecdsaCertificateVerifier()\":{\"notice\":\"The ECDSA certificate verifier\"},\"getCertificateVerifier(uint8)\":{\"notice\":\"Get the certificate verifier for a given key type\"},\"getCurrentGlobalTableRoot()\":{\"notice\":\"Get the current global table root\"},\"getGenerator()\":{\"notice\":\"Get the operatorSet which certifies against global roots\"},\"getGeneratorConfig()\":{\"notice\":\"Get the operator set config for the Generator\"},\"getGeneratorReferenceTimestamp()\":{\"notice\":\"Get the reference timestamp of the generator\"},\"getGlobalTableRootByTimestamp(uint32)\":{\"notice\":\"Get the table root by timestamp\"},\"getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)\":{\"notice\":\"Get the message hash for the certificate of a global table root update\"},\"getLatestReferenceBlockNumber()\":{\"notice\":\"Get the latest reference block number\"},\"getLatestReferenceTimestamp()\":{\"notice\":\"Get the latest reference timestamp\"},\"getReferenceBlockNumberByTimestamp(uint32)\":{\"notice\":\"Get the reference block number for a given reference timestamp\"},\"getReferenceTimestampByBlockNumber(uint32)\":{\"notice\":\"Get the reference timestamp for a given reference block number\"},\"globalRootConfirmationThreshold()\":{\"notice\":\"The threshold, in bps, for a global root to be signed off on and updated\"},\"initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"notice\":\"Initializes the OperatorTableUpdater\"},\"isRootValid(bytes32)\":{\"notice\":\"Get the validity status of a global table root\"},\"isRootValidByTimestamp(uint32)\":{\"notice\":\"Get the validity status of a global table root by timestamp\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"setGlobalRootConfirmationThreshold(uint16)\":{\"notice\":\"The threshold, in bps, for a global root to be signed off on and updated\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"notice\":\"Updates the `Generator` to a new operatorSet\"},\"updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)\":{\"notice\":\"Updates an operator table\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/multichain/OperatorTableUpdater.sol\":\"OperatorTableUpdater\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"src/contracts/interfaces/IBN254CertificateVerifier.sol\":{\"keccak256\":\"0x7752b30f86aa336ef2fe520e4a44077c3ea8c7eab0e2d10ce72c7418447f11b4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a930bb2a3c66072b5387e1645a0bad9b867a6d0b4251a070cb32f2194d9dd63d\",\"dweb:/ipfs/Qmdpwp4j19P2WkmtYUTFj5GveCm35zHjfEU81zJqwJpmYr\"]},\"src/contracts/interfaces/IBaseCertificateVerifier.sol\":{\"keccak256\":\"0x73868ac5e03f51617288695fe3e78dbd9595f7131b4db32419ada6941e12711f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c94787fdcc69a43642d0b72c006994aae6dd26e0fcde7cfc175a44d8303b7565\",\"dweb:/ipfs/QmQeaQWds1kSCymh6HYPKBjFMfSDfHUCZREC6khbbNyLA4\"]},\"src/contracts/interfaces/ICrossChainRegistry.sol\":{\"keccak256\":\"0x0b14b4dec4978bd42a8a1483b430854a773f8cbbe09981833055fe260dd04750\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://42828bc630691170efa41caceecf8146f81f1b400cd3fbe2a49a1ab791a722d5\",\"dweb:/ipfs/QmaW3Hey61bXYLwFnBpRPATJqfKZKvZgzZyRtqkaKCGw51\"]},\"src/contracts/interfaces/IECDSACertificateVerifier.sol\":{\"keccak256\":\"0x3f92435ab10774d48d05ee7c76aca07b221dd6681d2d8384ad297a9c1f099a3e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a38a48bebad8614520d4d9e606b3f27d5375fb5827c7acd68a29f36a96f004d0\",\"dweb:/ipfs/QmPbTK68MEEnnzJytdH21oiLrRXE82Sdr8X3nxvsQmJHwf\"]},\"src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c\",\"dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF\"]},\"src/contracts/interfaces/IOperatorTableCalculator.sol\":{\"keccak256\":\"0xaf9b4bd05cbd4fbd5c466c50ed00f3a11d2f549449a3f247a82595497c39451b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d1a15978f7d282beea242a4e9771df4b5f8e2af4b38eaf04e3ab02510cafa51e\",\"dweb:/ipfs/QmVjaydhAzDgeJ1rxakWLoqo9WpGfVh7ajmFYsQZBrPQ16\"]},\"src/contracts/interfaces/IOperatorTableUpdater.sol\":{\"keccak256\":\"0x1f0c91e7c7453439b42fdcffe98c943744d486ff3a0fb42f55919dd6dc2907db\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://71d9476038c553db7ef8e01251b5924b19e4fea705959171c97d0f1c11d1f9bc\",\"dweb:/ipfs/QmaNZHaBn93mL7hextMFyr4PqnWPbaCaiHyFeHQZXCHEmz\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xfea37c052df354d4bd9a1f312dfec81abc8718de41d7cd0c8bd22241887ed246\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bdc6ab1ef26a39e7db1219e5ecfbbf137473ef4d531a31eed4827b5099c063\",\"dweb:/ipfs/QmVgSDqpMH5dP3rwR1fL59syT9o2tTuwaT7BfWjRY3YhPZ\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/multichain/OperatorTableUpdater.sol\":{\"keccak256\":\"0xe9fa83e25f0e09f350896a59975194dc776700807fd2a819ce2f92c6febf675f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9783bf281f255f77ff60da7810a995650b459efb105d108986f567cc2c31bd33\",\"dweb:/ipfs/QmUwzMM9cbhP2jgzT7yMiSaTefaziDNaKW2DYjj1MurVRB\"]},\"src/contracts/multichain/OperatorTableUpdaterStorage.sol\":{\"keccak256\":\"0x58f3341ae3869f575ddacaa755fe5ee099ff63eab01bec04c394534581b53c6f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5372f81a9b4a61e48b526c88a677f6e8039aada4d8e0ace5d24380b7d9e14ff0\",\"dweb:/ipfs/QmWBWykon67JbWNDpw2ZHe9rtdqazaGXZYjoKdz8B5uy4V\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99\",\"dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBN254CertificateVerifier",
              "name": "_bn254CertificateVerifier",
              "type": "address"
            },
            {
              "internalType": "contract IECDSACertificateVerifier",
              "name": "_ecdsaCertificateVerifier",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotDisableGeneratorRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CertificateInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GlobalTableRootInFuture"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GlobalTableRootStale"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidConfirmationThreshold"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCurveType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidGenerator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidGlobalTableRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMessageHash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSetProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidProofLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TableUpdateForPastTimestamp"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GeneratorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GlobalRootConfirmationThresholdUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GlobalRootDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewGlobalTableRoot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GENERATOR_GLOBAL_TABLE_ROOT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GENERATOR_MAX_STALENESS_PERIOD",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GENERATOR_REFERENCE_TIMESTAMP",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GLOBAL_TABLE_ROOT_CERT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BPS",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bn254CertificateVerifier",
          "outputs": [
            {
              "internalType": "contract IBN254CertificateVerifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
              "name": "globalTableRootCert",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "signature",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apk",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
                  "name": "nonSignerWitnesses",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operatorIndex",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "operatorInfoProof",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                      "name": "operatorInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct BN254.G1Point",
                          "name": "pubkey",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "X",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "Y",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "weights",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmGlobalTableRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableRoot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ecdsaCertificateVerifier",
          "outputs": [
            {
              "internalType": "contract IECDSACertificateVerifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCertificateVerifier",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentGlobalTableRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGenerator",
          "outputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGeneratorConfig",
          "outputs": [
            {
              "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "maxStalenessPeriod",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGeneratorReferenceTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalTableRootByTimestamp",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getGlobalTableUpdateMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestReferenceBlockNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestReferenceTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReferenceBlockNumberByTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReferenceTimestampByBlockNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "globalRootConfirmationThreshold",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "_initialGenerator",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint16",
              "name": "_globalRootConfirmationThreshold",
              "type": "uint16"
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
              "name": "generatorInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorInfoTreeRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "numOperators",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "aggregatePubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "totalWeights",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRootValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRootValidByTimestamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGlobalRootConfirmationThreshold"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "generator",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
              "name": "generatorInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorInfoTreeRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "numOperators",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "aggregatePubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "totalWeights",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateGenerator"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetIndex",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "proof",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorTableBytes",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorTable"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)": {
            "details": "Any entity can submit with a valid certificate signed off by the `Generator`The `msgHash` in the `globalOperatorTableRootCert` is the hash of the `globalTableRoot`, `referenceTimestamp`, and `referenceBlockNumber`The `referenceTimestamp` nested in the `globalTableRootCert` should be `getGeneratorReferenceTimestamp`, whereas      the `referenceTimestamp` passed directly in the calldata is the block timestamp at which the global table root was calculated",
            "params": {
              "globalTableRoot": "merkle root of all operatorSet tables",
              "globalTableRootCert": "certificate of the global table root, signed by the `Generator`",
              "referenceBlockNumber": "block number, corresponding to the `referenceTimestamp` of the global table root",
              "referenceTimestamp": "block timestamp at which the global table root was calculated"
            }
          },
          "disableRoot(bytes32)": {
            "details": "Only callable by the pauserCannot disable the GENERATOR_GLOBAL_TABLE_ROOT",
            "params": {
              "globalTableRoot": "the global table root to disable"
            }
          },
          "getCertificateVerifier(uint8)": {
            "params": {
              "curveType": "The curve type"
            },
            "returns": {
              "_0": "The certificate verifier for the given key type"
            }
          },
          "getCurrentGlobalTableRoot()": {
            "returns": {
              "_0": "the current global table root"
            }
          },
          "getGenerator()": {
            "returns": {
              "_0": "The operatorSet which certifies against global roots"
            }
          },
          "getGeneratorConfig()": {
            "details": "The Generator's config has maxStalenessPeriod = 0 and owner = address(operatorTableUpdater)",
            "returns": {
              "_0": "The operator set config for the Generator"
            }
          },
          "getGeneratorReferenceTimestamp()": {
            "details": "The `Generator's` referenceTimestamp is hardcoded to 1. See `GENERATOR_REFERENCE_TIMESTAMP` in `OperatorTableUpdaterStorage.sol`",
            "returns": {
              "_0": "The reference timestamp of the generator"
            }
          },
          "getGlobalTableRootByTimestamp(uint32)": {
            "params": {
              "referenceTimestamp": "the timestamp of the table root"
            },
            "returns": {
              "_0": "the table root at the given timestamp"
            }
          },
          "getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)": {
            "params": {
              "globalTableRoot": "the global table root",
              "referenceBlockNumber": "the reference block number",
              "referenceTimestamp": "the reference timestamp"
            },
            "returns": {
              "_0": "The message hash for a global table root"
            }
          },
          "getLatestReferenceBlockNumber()": {
            "returns": {
              "_0": "The latest reference block number"
            }
          },
          "getLatestReferenceTimestamp()": {
            "returns": {
              "_0": "The latest reference timestamp"
            }
          },
          "getReferenceBlockNumberByTimestamp(uint32)": {
            "params": {
              "referenceTimestamp": "the reference timestamp"
            },
            "returns": {
              "_0": "The reference block number for the given reference timestamp"
            }
          },
          "getReferenceTimestampByBlockNumber(uint32)": {
            "params": {
              "referenceBlockNumber": "the reference block number"
            },
            "returns": {
              "_0": "The reference timestamp for the given reference block number"
            }
          },
          "initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))": {
            "details": "We also update the operator table for the Generator, to begin signing off on global rootsWe set the `_latestReferenceTimestamp` to the current timestamp, so that only *new* roots can be confirmed",
            "params": {
              "_globalRootConfirmationThreshold": "The threshold, in bps, for a global root to be signed off on and updated",
              "_initialGenerator": "The operatorSet which certifies against global roots",
              "_owner": "The owner of the OperatorTableUpdater",
              "generatorInfo": "The operatorSetInfo for the Generator",
              "initialPausedStatus": "The initial paused status of the OperatorTableUpdater"
            }
          },
          "isRootValid(bytes32)": {
            "params": {
              "globalTableRoot": "the global table root"
            },
            "returns": {
              "_0": "The validity status of the global table root"
            }
          },
          "isRootValidByTimestamp(uint32)": {
            "params": {
              "referenceTimestamp": "the reference timestamp"
            },
            "returns": {
              "_0": "The validity status of the global table root"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setGlobalRootConfirmationThreshold(uint16)": {
            "details": "Only callable by the owner of the contract"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))": {
            "details": "We have a separate function for updating this operatorSet since it's not transported and updated      in the same way as the other operatorSetsOnly callable by the owner of the contractUses GENERATOR_GLOBAL_TABLE_ROOT constant to break circular dependency for certificate verificationWe ensure that there are no collisions with other reference timestamps because we expect the generator to have an initial reference timestamp of 0The `_latestReferenceTimestamp` is not updated since this root is ONLY used for the `Generator`The `_referenceBlockNumber` and `_referenceTimestamps` mappings are not updated since they are only used for introspection for official operatorSets",
            "params": {
              "generator": "The operatorSet which certifies against global roots",
              "generatorInfo": "The operatorSetInfo for the generator"
            }
          },
          "updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)": {
            "details": "This function calls `updateOperatorTable` on the `ECDSACertificateVerifier` or `BN254CertificateVerifier`      depending on the `KeyType` of the operatorSet, which is encoded in the `operatorTableBytes`",
            "params": {
              "globalTableRoot": "the new globalTableRoot",
              "operatorSetIndex": "the index of the given operatorSet being updated",
              "operatorTableBytes": "the bytes of the operator table",
              "proof": "the proof of the leaf at index against the globalTableRoot",
              "referenceTimestamp": "the reference timestamp of the globalTableRoot"
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "GENERATOR_GLOBAL_TABLE_ROOT()": {
            "notice": "Dummy initial global table root to break circular dependency for certificate verification"
          },
          "GENERATOR_MAX_STALENESS_PERIOD()": {
            "notice": "The `maxStalenessPeriods` for the generator"
          },
          "GENERATOR_REFERENCE_TIMESTAMP()": {
            "notice": "The reference timestamp for the generator"
          },
          "MAX_BPS()": {
            "notice": "The maximum BPS value"
          },
          "bn254CertificateVerifier()": {
            "notice": "The BN254 certificate verifier"
          },
          "confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)": {
            "notice": "Sets the global table root"
          },
          "constructor": {
            "notice": "INITIALIZING FUNCTIONS"
          },
          "disableRoot(bytes32)": {
            "notice": "Disables a global table root"
          },
          "ecdsaCertificateVerifier()": {
            "notice": "The ECDSA certificate verifier"
          },
          "getCertificateVerifier(uint8)": {
            "notice": "Get the certificate verifier for a given key type"
          },
          "getCurrentGlobalTableRoot()": {
            "notice": "Get the current global table root"
          },
          "getGenerator()": {
            "notice": "Get the operatorSet which certifies against global roots"
          },
          "getGeneratorConfig()": {
            "notice": "Get the operator set config for the Generator"
          },
          "getGeneratorReferenceTimestamp()": {
            "notice": "Get the reference timestamp of the generator"
          },
          "getGlobalTableRootByTimestamp(uint32)": {
            "notice": "Get the table root by timestamp"
          },
          "getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)": {
            "notice": "Get the message hash for the certificate of a global table root update"
          },
          "getLatestReferenceBlockNumber()": {
            "notice": "Get the latest reference block number"
          },
          "getLatestReferenceTimestamp()": {
            "notice": "Get the latest reference timestamp"
          },
          "getReferenceBlockNumberByTimestamp(uint32)": {
            "notice": "Get the reference block number for a given reference timestamp"
          },
          "getReferenceTimestampByBlockNumber(uint32)": {
            "notice": "Get the reference timestamp for a given reference block number"
          },
          "globalRootConfirmationThreshold()": {
            "notice": "The threshold, in bps, for a global root to be signed off on and updated"
          },
          "initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))": {
            "notice": "Initializes the OperatorTableUpdater"
          },
          "isRootValid(bytes32)": {
            "notice": "Get the validity status of a global table root"
          },
          "isRootValidByTimestamp(uint32)": {
            "notice": "Get the validity status of a global table root by timestamp"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "setGlobalRootConfirmationThreshold(uint16)": {
            "notice": "The threshold, in bps, for a global root to be signed off on and updated"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))": {
            "notice": "Updates the `Generator` to a new operatorSet"
          },
          "updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)": {
            "notice": "Updates an operator table"
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/multichain/OperatorTableUpdater.sol": "OperatorTableUpdater"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IBN254CertificateVerifier.sol": {
        "keccak256": "0x7752b30f86aa336ef2fe520e4a44077c3ea8c7eab0e2d10ce72c7418447f11b4",
        "urls": [
          "bzz-raw://a930bb2a3c66072b5387e1645a0bad9b867a6d0b4251a070cb32f2194d9dd63d",
          "dweb:/ipfs/Qmdpwp4j19P2WkmtYUTFj5GveCm35zHjfEU81zJqwJpmYr"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IBaseCertificateVerifier.sol": {
        "keccak256": "0x73868ac5e03f51617288695fe3e78dbd9595f7131b4db32419ada6941e12711f",
        "urls": [
          "bzz-raw://c94787fdcc69a43642d0b72c006994aae6dd26e0fcde7cfc175a44d8303b7565",
          "dweb:/ipfs/QmQeaQWds1kSCymh6HYPKBjFMfSDfHUCZREC6khbbNyLA4"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ICrossChainRegistry.sol": {
        "keccak256": "0x0b14b4dec4978bd42a8a1483b430854a773f8cbbe09981833055fe260dd04750",
        "urls": [
          "bzz-raw://42828bc630691170efa41caceecf8146f81f1b400cd3fbe2a49a1ab791a722d5",
          "dweb:/ipfs/QmaW3Hey61bXYLwFnBpRPATJqfKZKvZgzZyRtqkaKCGw51"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IECDSACertificateVerifier.sol": {
        "keccak256": "0x3f92435ab10774d48d05ee7c76aca07b221dd6681d2d8384ad297a9c1f099a3e",
        "urls": [
          "bzz-raw://a38a48bebad8614520d4d9e606b3f27d5375fb5827c7acd68a29f36a96f004d0",
          "dweb:/ipfs/QmPbTK68MEEnnzJytdH21oiLrRXE82Sdr8X3nxvsQmJHwf"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IKeyRegistrar.sol": {
        "keccak256": "0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8",
        "urls": [
          "bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c",
          "dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableCalculator.sol": {
        "keccak256": "0xaf9b4bd05cbd4fbd5c466c50ed00f3a11d2f549449a3f247a82595497c39451b",
        "urls": [
          "bzz-raw://d1a15978f7d282beea242a4e9771df4b5f8e2af4b38eaf04e3ab02510cafa51e",
          "dweb:/ipfs/QmVjaydhAzDgeJ1rxakWLoqo9WpGfVh7ajmFYsQZBrPQ16"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableUpdater.sol": {
        "keccak256": "0x1f0c91e7c7453439b42fdcffe98c943744d486ff3a0fb42f55919dd6dc2907db",
        "urls": [
          "bzz-raw://71d9476038c553db7ef8e01251b5924b19e4fea705959171c97d0f1c11d1f9bc",
          "dweb:/ipfs/QmaNZHaBn93mL7hextMFyr4PqnWPbaCaiHyFeHQZXCHEmz"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BN254.sol": {
        "keccak256": "0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc",
        "urls": [
          "bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc",
          "dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0xfea37c052df354d4bd9a1f312dfec81abc8718de41d7cd0c8bd22241887ed246",
        "urls": [
          "bzz-raw://c5bdc6ab1ef26a39e7db1219e5ecfbbf137473ef4d531a31eed4827b5099c063",
          "dweb:/ipfs/QmVgSDqpMH5dP3rwR1fL59syT9o2tTuwaT7BfWjRY3YhPZ"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/OperatorTableUpdater.sol": {
        "keccak256": "0xe9fa83e25f0e09f350896a59975194dc776700807fd2a819ce2f92c6febf675f",
        "urls": [
          "bzz-raw://9783bf281f255f77ff60da7810a995650b459efb105d108986f567cc2c31bd33",
          "dweb:/ipfs/QmUwzMM9cbhP2jgzT7yMiSaTefaziDNaKW2DYjj1MurVRB"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/OperatorTableUpdaterStorage.sol": {
        "keccak256": "0x58f3341ae3869f575ddacaa755fe5ee099ff63eab01bec04c394534581b53c6f",
        "urls": [
          "bzz-raw://5372f81a9b4a61e48b526c88a677f6e8039aada4d8e0ace5d24380b7d9e14ff0",
          "dweb:/ipfs/QmWBWykon67JbWNDpw2ZHe9rtdqazaGXZYjoKdz8B5uy4V"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446",
        "urls": [
          "bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99",
          "dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 175
}