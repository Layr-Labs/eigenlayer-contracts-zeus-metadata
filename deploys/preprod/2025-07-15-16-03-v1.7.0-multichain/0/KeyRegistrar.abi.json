{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_allocationManager",
          "type": "address",
          "internalType": "contract IAllocationManager"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "BN254_KEY_REGISTRATION_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ECDSA_KEY_REGISTRATION_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allocationManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAllocationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "configureOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "curveType",
          "type": "uint8",
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deregisterKey",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "domainSeparator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "encodeBN254KeyData",
      "inputs": [
        {
          "name": "g1Point",
          "type": "tuple",
          "internalType": "struct BN254.G1Point",
          "components": [
            {
              "name": "X",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "Y",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "g2Point",
          "type": "tuple",
          "internalType": "struct BN254.G2Point",
          "components": [
            {
              "name": "X",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            },
            {
              "name": "Y",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getBN254Key",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "g1Point",
          "type": "tuple",
          "internalType": "struct BN254.G1Point",
          "components": [
            {
              "name": "X",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "Y",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "g2Point",
          "type": "tuple",
          "internalType": "struct BN254.G2Point",
          "components": [
            {
              "name": "X",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            },
            {
              "name": "Y",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBN254KeyRegistrationMessageHash",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "keyData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getECDSAAddress",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getECDSAKey",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getECDSAKeyRegistrationMessageHash",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "keyAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKeyHash",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorFromSigningKey",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "keyData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetCurveType",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isKeyGloballyRegistered",
      "inputs": [
        {
          "name": "keyHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRegistered",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerKey",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "keyData",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "signature",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AggregateBN254KeyUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "newAggregateKey",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct BN254.G1Point",
          "components": [
            {
              "name": "X",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "Y",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KeyDeregistered",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "curveType",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KeyRegistered",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "curveType",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        },
        {
          "name": "pubkey",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetConfigured",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "curveType",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ConfigurationAlreadySet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECAddFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECMulFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECPairingFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ExpModFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCurveType",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidKeyFormat",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidKeypair",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "KeyAlreadyRegistered",
      "inputs": []
    },
    {
      "type": "error",
      "name": "KeyNotFound",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "OperatorSetNotConfigured",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorStillSlashable",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "SignatureExpired",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "ZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroPubkey",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561000f575f5ffd5b5060405161310838038061310883398101604081905261002e916100cb565b6001600160a01b03808316608052831660a052808061004c8161005a565b60c052506101fc9350505050565b5f5f829050601f8151111561008d578260405163305a27a960e01b815260040161008491906101a1565b60405180910390fd5b8051610098826101d6565b179392505050565b6001600160a01b03811681146100b4575f5ffd5b50565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f606084860312156100dd575f5ffd5b83516100e8816100a0565b60208501519093506100f9816100a0565b60408501519092506001600160401b03811115610114575f5ffd5b8401601f81018613610124575f5ffd5b80516001600160401b0381111561013d5761013d6100b7565b604051601f8201601f19908116603f011681016001600160401b038111828210171561016b5761016b6100b7565b604052818152828201602001881015610182575f5ffd5b8160208401602083015e5f602083830101528093505050509250925092565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156101f6575f198160200360031b1b821691505b50919050565b60805160a05160c051612ecd61023b5f395f81816103fa01526116ae01525f8181610195015261129f01525f818161033b015261061d0152612ecd5ff3fe608060405234801561000f575f5ffd5b5060043610610127575f3560e01c8063aa165c30116100a9578063d9f12db21161006e578063d9f12db214610370578063dab42d7e14610383578063ea0d8149146103a5578063ea194e2e146103b8578063f698da25146103cb575f5ffd5b8063aa165c30146102d9578063b05c8f6d146102ec578063bd30a0b914610313578063ca8aa7c714610336578063d40cda161461035d575f5ffd5b80637690e395116100ef5780637690e3951461023e5780637cffe48c146102515780638256909c1461027157806387ab86f4146102a35780639a43e3fb146102b8575f5ffd5b8063166aa1271461012b5780633b32a7bd146101655780634657e26a1461019057806350435add146101b757806354fd4d5014610236575b5f5ffd5b6101527f991b0a3376ce87f8ecc5d70962279ac09cdce934e8b5b9683e73c8ff087c7f8181565b6040519081526020015b60405180910390f35b61017861017336600461255a565b6103d3565b6040516001600160a01b03909116815260200161015c565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b6102296101c53660046125db565b8151602080840151835180519083015185840151805190850151604080519687019790975295850193909352606084810192909252608084015260a083019190915260c082019290925260e001604051602081830303815290604052905092915050565b60405161015c9190612686565b6102296103f3565b61015261024c3660046126d6565b610423565b61026461025f366004612734565b6104cb565b60405161015c9190612782565b61028461027f366004612790565b6104f1565b604080516001600160a01b03909316835290151560208301520161015c565b6102b66102b1366004612836565b6105df565b005b6102cb6102c636600461255a565b6108f0565b60405161015c929190612881565b6102296102e736600461255a565b610ad8565b6101527fda86e76deaed01641f80ff5f72c372a038fa5182697aeb967e8b1f9819d58d8181565b61032661032136600461255a565b610c15565b604051901515815260200161015c565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b6102b661036b3660046128be565b610c52565b61015261037e36600461294f565b610dc3565b610326610391366004612990565b5f9081526002602052604090205460ff1690565b6102b66103b33660046129a7565b610e5c565b6101526103c636600461255a565b610f9f565b6101526110c7565b5f6103de8383610ad8565b6103e7906129e0565b60601c90505b92915050565b606061041e7f0000000000000000000000000000000000000000000000000000000000000000611180565b905090565b5f5f7fda86e76deaed01641f80ff5f72c372a038fa5182697aeb967e8b1f9819d58d8186865f015187602001518787604051610460929190612a38565b6040805191829003822060208301969096526001600160a01b039485169082015292909116606083015263ffffffff16608082015260a081019190915260c0016040516020818303038152906040528051906020012090506104c1816111bd565b9695505050505050565b5f60015f6104d884611203565b815260208101919091526040015f205460ff1692915050565b5f5f5f60015f61050087611203565b815260208101919091526040015f9081205460ff169150600182600281111561052b5761052b61274e565b0361053d5750835160208501206105ae565b60028260028111156105515761055161274e565b03610595575f5f8680602001905181019061056c9190612a47565b60408051808201825283815260209081019283525f9384529151909152902092506105ae915050565b60405163fdea7c0960e01b815260040160405180910390fd5b5f818152600360205260409020546001600160a01b0316806105d08882610c15565b945094505050505b9250929050565b816105e981611261565b6106065760405163932d94f760e01b815260040160405180910390fd5b6040516309a961f360e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631352c3e6906106549086908690600401612a69565b602060405180830381865afa15801561066f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106939190612a9f565b15828490916106e057604051631070287960e01b815282516001600160a01b03908116600483015260209093015163ffffffff166024820152911660448201526064015b60405180910390fd5b50505f60015f6106ef85611203565b815260208101919091526040015f9081205460ff1691508160028111156107185761071861274e565b0361073657604051635cd3106d60e11b815260040160405180910390fd5b5f5f5f61074286611203565b815260208082019290925260409081015f9081206001600160a01b038916825283528190208151808301909252805460ff1615158252600181018054929391929184019161078f90612abe565b80601f01602080910402602001604051908101604052809291908181526020018280546107bb90612abe565b80156108065780601f106107dd57610100808354040283529160200191610806565b820191905f5260205f20905b8154815290600101906020018083116107e957829003601f168201915b5050505050815250509050805f01518486909161085c57604051632e40e18760e01b815282516001600160a01b03908116600483015260209093015163ffffffff166024820152911660448201526064016106d7565b50505f5f61086986611203565b815260208082019290925260409081015f9081206001600160a01b03891682529092528120805460ff19168155906108a4600183018261235f565b5050846001600160a01b03167f28d3c3cee49478ec6fd219cfd685cd15cd01d95cabf69b4b7b57f9eaa3eb644285846040516108e1929190612af6565b60405180910390a25050505050565b604080518082019091525f808252602082015261090b612399565b5f60015f61091887611203565b815260208101919091526040015f205460ff16905060028160028111156109415761094161274e565b1461095f5760405163fdea7c0960e01b815260040160405180910390fd5b5f5f5f61096b88611203565b815260208082019290925260409081015f9081206001600160a01b038916825283528190208151808301909252805460ff161515825260018101805492939192918401916109b890612abe565b80601f01602080910402602001604051908101604052809291908181526020018280546109e490612abe565b8015610a2f5780601f10610a0657610100808354040283529160200191610a2f565b820191905f5260205f20905b815481529060010190602001808311610a1257829003601f168201915b5050505050815250509050805f0151610a845750506040805180820182525f808252602080830182905283518085018552828152808201929092528351808501909452828452830191909152925090506105d8565b5f5f5f5f8460200151806020019051810190610aa09190612b68565b604080518082018252948552602080860194909452805180820190915291825291810191909152909b909a5098505050505050505050565b60605f60015f610ae786611203565b815260208101919091526040015f205460ff1690506001816002811115610b1057610b1061274e565b14610b2e5760405163fdea7c0960e01b815260040160405180910390fd5b5f5f5f610b3a87611203565b815260208082019290925260409081015f9081206001600160a01b038816825283528190208151808301909252805460ff16151582526001810180549293919291840191610b8790612abe565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb390612abe565b8015610bfe5780601f10610bd557610100808354040283529160200191610bfe565b820191905f5260205f20905b815481529060010190602001808311610be157829003601f168201915b505050919092525050506020015195945050505050565b5f5f5f610c2185611203565b815260208082019290925260409081015f9081206001600160a01b038616825290925290205460ff16905092915050565b85610c5c81611261565b610c795760405163932d94f760e01b815260040160405180910390fd5b5f60015f610c8689611203565b815260208101919091526040015f9081205460ff169150816002811115610caf57610caf61274e565b03610ccd57604051635cd3106d60e11b815260040160405180910390fd5b5f5f610cd889611203565b815260208082019290925260409081015f9081206001600160a01b038c16825290925290205460ff1615610d1f57604051630c7bc20160e11b815260040160405180910390fd5b6001816002811115610d3357610d3361274e565b03610d4b57610d4687898888888861130b565b610d72565b6002816002811115610d5f57610d5f61274e565b0361059557610d4687898888888861146c565b876001600160a01b03167f1201ce0c5e577111bce91e907fd99cb183da5edc1e3fb650ca40769e4e9176dd88838989604051610db19493929190612bae565b60405180910390a25050505050505050565b81516020808401516040515f938493610e30937f991b0a3376ce87f8ecc5d70962279ac09cdce934e8b5b9683e73c8ff087c7f81938a93928991019485526001600160a01b039384166020860152918316604085015263ffffffff16606084015216608082015260a00190565b604051602081830303815290604052805190602001209050610e51816111bd565b9150505b9392505050565b8151610e6781611261565b610e845760405163932d94f760e01b815260040160405180910390fd5b6001826002811115610e9857610e9861274e565b1480610eb557506002826002811115610eb357610eb361274e565b145b610ed25760405163fdea7c0960e01b815260040160405180910390fd5b5f60015f610edf86611203565b815260208101919091526040015f9081205460ff169150816002811115610f0857610f0861274e565b14610f25576040516281f09f60e01b815260040160405180910390fd5b8260015f610f3287611203565b815260208101919091526040015f20805460ff19166001836002811115610f5b57610f5b61274e565b02179055507fb2266cb118e57095fcdbedb24dabd9fc9f5127e2dbedf62ce6ee71696fb8b6e78484604051610f91929190612af6565b60405180910390a150505050565b5f5f5f5f610fac86611203565b815260208082019290925260409081015f9081206001600160a01b038716825283528190208151808301909252805460ff16151582526001810180549293919291840191610ff990612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461102590612abe565b80156110705780601f1061104757610100808354040283529160200191611070565b820191905f5260205f20905b81548152906001019060200180831161105357829003601f168201915b50505050508152505090505f60015f61108887611203565b815260208101919091526040015f2054825160ff90911691506110b057505f91506103ed9050565b6110be826020015182611625565b95945050505050565b60408051808201909152600a81526922b4b3b2b72630bcb2b960b11b6020909101525f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea6111346116a6565b805160209182012060408051928301949094529281019190915260608101919091524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60605f61118c8361171b565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f6111c66110c7565b60405161190160f01b6020820152602281019190915260428101839052606201604051602081830303815290604052805190602001209050919050565b5f815f0151826020015163ffffffff1660405160200161124992919060609290921b6001600160601b031916825260a01b6001600160a01b031916601482015260200190565b6040516020818303038152906040526103ed90612c0b565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af11580156112e7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ed9190612a9f565b6014831461132c5760405163d109118160e01b815260040160405180910390fd5b5f6113378486612c2e565b60601c90508061135a57604051634935505f60e01b815260040160405180910390fd5b5f61139c86868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525060019250611625915050565b5f8181526002602052604090205490915060ff16156113ce57604051630c7bc20160e11b815260040160405180910390fd5b5f6113da888a85610dc3565b905061141f838287878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505f199250611742915050565b611461898989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525088925061179a915050565b505050505050505050565b604080518082019091525f8082526020820152611487612399565b5f808080611497898b018b612c6c565b93509350935093506040518060400160405280858152602001848152509550835f1480156114c3575082155b156114e157604051634935505f60e01b815260040160405180910390fd5b60408051808201909152918252602082015292505f91506115069050888a8989610423565b90505f8061151686880188612ca6565b604080518082019091528281526020810182905291935091505f61153e858389898580611847565b9150508061155f57604051638baa579f60e01b815260040160405180910390fd5b5f6115a18c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525060029250611625915050565b5f8181526002602052604090205490915060ff16156115d357604051630c7bc20160e11b815260040160405180910390fd5b6116158e8e8e8e8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525087925061179a915050565b5050505050505050505050505050565b5f600182600281111561163a5761163a61274e565b0361164c5750815160208301206103ed565b60028260028111156116605761166061274e565b03610595575f5f8480602001905181019061167b9190612b68565b505060408051808201825283815260209081019283525f9384529151909152902092506103ed915050565b60605f6116d27f0000000000000000000000000000000000000000000000000000000000000000611180565b9050805f815181106116e6576116e6612a24565b016020908101516040516001600160f81b03199091169181019190915260210160405160208183030381529060405291505090565b5f60ff8216601f8111156103ed57604051632cd44ac360e21b815260040160405180910390fd5b4281101561176357604051630819bdcd60e01b815260040160405180910390fd5b6117776001600160a01b038516848461190f565b61179457604051638baa579f60e01b815260040160405180910390fd5b50505050565b6040805180820190915260018152602081018390525f806117ba87611203565b815260208082019290925260409081015f9081206001600160a01b03881682528352208251815460ff19169015151781559082015160018201906117fe9082612d12565b5050505f908152600260209081526040808320805460ff191660011790556003909152902080546001600160a01b039093166001600160a01b0319909316929092179091555050565b5f5f5f61185389611963565b90505f6118628a89898c6119ed565b90505f6118796118728a84611a98565b8b90611b08565b90505f6118bb6118b4846118ae6040805180820182525f80825260209182015281518083019092526001825260029082015290565b90611a98565b8590611b08565b905087156118e0576118d7826118cf611b7c565b838c8b611c3c565b96509450611900565b6118f3826118ec611b7c565b838c611e50565b9550851561190057600194505b50505050965096945050505050565b5f5f5f61191c8585612087565b90925090505f8160048111156119345761193461274e565b1480156119525750856001600160a01b0316826001600160a01b0316145b806104c157506104c18686866120c6565b604080518082019091525f80825260208201525f80806119905f516020612e785f395f51905f5286612dcd565b90505b61199c816121ad565b90935091505f516020612e785f395f51905f5282830983036119d4576040805180820190915290815260208101919091529392505050565b5f516020612e785f395f51905f52600182089050611993565b8251602080850151845180519083015186840151805190850151875188870151604080519889018e90528801989098526060870195909552608086019390935260a085019190915260c084015260e08301526101008201526101208101919091525f907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019061014001604051602081830303815290604052805190602001205f1c6110be9190612dcd565b604080518082019091525f8082526020820152611ab36123be565b835181526020808501519082015260408082018490525f908360608460076107d05a03fa90508080611ae157fe5b5080611b0057604051632319df1960e11b815260040160405180910390fd5b505092915050565b604080518082019091525f8082526020820152611b236123dc565b835181526020808501518183015283516040808401919091529084015160608301525f908360808460066107d05a03fa90508080611b5d57fe5b5080611b005760405163d4b68fd760e01b815260040160405180910390fd5b611b84612399565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820182528681526020808201869052825180840190935286835282018490525f91829190611c6d6123fa565b5f5b6002811015611e24575f611c84826006612e00565b9050848260028110611c9857611c98612a24565b60200201515183611ca9835f612e17565b600c8110611cb957611cb9612a24565b6020020152848260028110611cd057611cd0612a24565b60200201516020015183826001611ce79190612e17565b600c8110611cf757611cf7612a24565b6020020152838260028110611d0e57611d0e612a24565b6020020151515183611d21836002612e17565b600c8110611d3157611d31612a24565b6020020152838260028110611d4857611d48612a24565b6020020151516001602002015183611d61836003612e17565b600c8110611d7157611d71612a24565b6020020152838260028110611d8857611d88612a24565b6020020151602001515f60028110611da257611da2612a24565b602002015183611db3836004612e17565b600c8110611dc357611dc3612a24565b6020020152838260028110611dda57611dda612a24565b602002015160200151600160028110611df557611df5612a24565b602002015183611e06836005612e17565b600c8110611e1657611e16612a24565b602002015250600101611c6f565b50611e2d612419565b5f6020826101808560088cfa9151919c9115159b50909950505050505050505050565b6040805180820182528581526020808201859052825180840190935285835282018390525f91611e7e6123fa565b5f5b6002811015612035575f611e95826006612e00565b9050848260028110611ea957611ea9612a24565b60200201515183611eba835f612e17565b600c8110611eca57611eca612a24565b6020020152848260028110611ee157611ee1612a24565b60200201516020015183826001611ef89190612e17565b600c8110611f0857611f08612a24565b6020020152838260028110611f1f57611f1f612a24565b6020020151515183611f32836002612e17565b600c8110611f4257611f42612a24565b6020020152838260028110611f5957611f59612a24565b6020020151516001602002015183611f72836003612e17565b600c8110611f8257611f82612a24565b6020020152838260028110611f9957611f99612a24565b6020020151602001515f60028110611fb357611fb3612a24565b602002015183611fc4836004612e17565b600c8110611fd457611fd4612a24565b6020020152838260028110611feb57611feb612a24565b60200201516020015160016002811061200657612006612a24565b602002015183612017836005612e17565b600c811061202757612027612a24565b602002015250600101611e80565b5061203e612419565b5f6020826101808560086107d05a03fa9050808061205857fe5b5080612077576040516324ccc79360e21b815260040160405180910390fd5b5051151598975050505050505050565b5f5f82516041036120bb576020830151604084015160608501515f1a6120af87828585612229565b945094505050506105d8565b505f905060026105d8565b5f5f5f856001600160a01b0316631626ba7e60e01b86866040516024016120ee929190612e2a565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161212c9190612e4a565b5f60405180830381855afa9150503d805f8114612164576040519150601f19603f3d011682016040523d82523d5f602084013e612169565b606091505b509150915081801561217d57506020815110155b80156104c157508051630b135d3f60e11b906121a29083016020908101908401612e60565b149695505050505050565b5f80805f516020612e785f395f51905f5260035f516020612e785f395f51905f52865f516020612e785f395f51905f52888909090890505f61221d827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f525f516020612e785f395f51905f526122e6565b91959194509092505050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561225e57505f905060036122dd565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156122af573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b0381166122d7575f600192509250506122dd565b91505f90505b94509492505050565b5f5f6122f0612419565b6122f8612437565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828061233557fe5b50826123545760405163d51edae360e01b815260040160405180910390fd5b505195945050505050565b50805461236b90612abe565b5f825580601f1061237a575050565b601f0160209004905f5260205f20908101906123969190612455565b50565b60405180604001604052806123ac61246d565b81526020016123b961246d565b905290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b5b80821115612469575f8155600101612456565b5090565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156124c2576124c261248b565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156124f1576124f161248b565b604052919050565b80356001600160a01b038116811461250f575f5ffd5b919050565b5f60408284031215612524575f5ffd5b61252c61249f565b9050612537826124f9565b8152602082013563ffffffff8116811461254f575f5ffd5b602082015292915050565b5f5f6060838503121561256b575f5ffd5b6125758484612514565b9150612583604084016124f9565b90509250929050565b5f82601f83011261259b575f5ffd5b6125a560406124c8565b8060408401858111156125b6575f5ffd5b845b818110156125d05780358452602093840193016125b8565b509095945050505050565b5f5f82840360c08112156125ed575f5ffd5b60408112156125fa575f5ffd5b61260261249f565b843581526020808601359082015292506080603f1982011215612623575f5ffd5b5061262c61249f565b612639856040860161258c565b8152612648856080860161258c565b6020820152809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610e556020830184612658565b5f5f83601f8401126126a8575f5ffd5b50813567ffffffffffffffff8111156126bf575f5ffd5b6020830191508360208285010111156105d8575f5ffd5b5f5f5f5f608085870312156126e9575f5ffd5b6126f2856124f9565b93506127018660208701612514565b9250606085013567ffffffffffffffff81111561271c575f5ffd5b61272887828801612698565b95989497509550505050565b5f60408284031215612744575f5ffd5b610e558383612514565b634e487b7160e01b5f52602160045260245ffd5b6003811061277e57634e487b7160e01b5f52602160045260245ffd5b9052565b602081016103ed8284612762565b5f5f606083850312156127a1575f5ffd5b6127ab8484612514565b9150604083013567ffffffffffffffff8111156127c6575f5ffd5b8301601f810185136127d6575f5ffd5b803567ffffffffffffffff8111156127f0576127f061248b565b612803601f8201601f19166020016124c8565b818152866020838501011115612817575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f5f60608385031215612847575f5ffd5b612850836124f9565b91506125838460208501612514565b805f5b6002811015611794578151845260209384019390910190600101612862565b5f60c08201905083518252602084015160208301526128a460408301845161285f565b60208301516128b6608084018261285f565b509392505050565b5f5f5f5f5f5f60a087890312156128d3575f5ffd5b6128dc876124f9565b95506128eb8860208901612514565b9450606087013567ffffffffffffffff811115612906575f5ffd5b61291289828a01612698565b909550935050608087013567ffffffffffffffff811115612931575f5ffd5b61293d89828a01612698565b979a9699509497509295939492505050565b5f5f5f60808486031215612961575f5ffd5b61296a846124f9565b92506129798560208601612514565b9150612987606085016124f9565b90509250925092565b5f602082840312156129a0575f5ffd5b5035919050565b5f5f606083850312156129b8575f5ffd5b6129c28484612514565b91506040830135600381106129d5575f5ffd5b809150509250929050565b805160208201516001600160601b0319811691906014821015612a1d576001600160601b03196001600160601b03198360140360031b1b82161692505b5050919050565b634e487b7160e01b5f52603260045260245ffd5b818382375f9101908152919050565b5f5f60408385031215612a58575f5ffd5b505080516020909101519092909150565b6001600160a01b038316815260608101610e55602083018480516001600160a01b0316825260209081015163ffffffff16910152565b5f60208284031215612aaf575f5ffd5b81518015158114610e55575f5ffd5b600181811c90821680612ad257607f821691505b602082108103612af057634e487b7160e01b5f52602260045260245ffd5b50919050565b82516001600160a01b0316815260208084015163ffffffff169082015260608101610e556040830184612762565b5f82601f830112612b33575f5ffd5b612b3d60406124c8565b806040840185811115612b4e575f5ffd5b845b818110156125d0578051845260209384019301612b50565b5f5f5f5f60c08587031215612b7b575f5ffd5b845160208601519094509250612b948660408701612b24565b9150612ba38660808701612b24565b905092959194509250565b84516001600160a01b0316815260208086015163ffffffff1690820152612bd86040820185612762565b60806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f191601019392505050565b80516020808301519190811015612af0575f1960209190910360031b1b16919050565b80356001600160601b03198116906014841015612c65576001600160601b03196001600160601b03198560140360031b1b82161691505b5092915050565b5f5f5f5f60c08587031215612c7f575f5ffd5b8435935060208501359250612c97866040870161258c565b9150612ba3866080870161258c565b5f5f60408385031215612cb7575f5ffd5b50508035926020909101359150565b601f821115612d0d57805f5260205f20601f840160051c81016020851015612ceb5750805b601f840160051c820191505b81811015612d0a575f8155600101612cf7565b50505b505050565b815167ffffffffffffffff811115612d2c57612d2c61248b565b612d4081612d3a8454612abe565b84612cc6565b6020601f821160018114612d72575f8315612d5b5750848201515b5f19600385901b1c1916600184901b178455612d0a565b5f84815260208120601f198516915b82811015612da15787850151825560209485019460019092019101612d81565b5084821015612dbe57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82612de757634e487b7160e01b5f52601260045260245ffd5b500690565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176103ed576103ed612dec565b808201808211156103ed576103ed612dec565b828152604060208201525f612e426040830184612658565b949350505050565b5f82518060208501845e5f920191825250919050565b5f60208284031215612e70575f5ffd5b505191905056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a2646970667358221220efab4d1dc0ddf7aa8382c58b38b2d29d0cf0358cc095354ebdead4dd0754378a64736f6c634300081b0033",
    "sourceMap": "1063:13703:177:-:0;;;1837:299;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1073:38:178;;;;;501:44:166;;;;2120:8:177;;961:24:167;2120:8:177;961:22:167;:24::i;:::-;950:35;;-1:-1:-1;1063:13703:177;;-1:-1:-1;;;;1063:13703:177;1711:286:37;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:37;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:37:o;14:154:318:-;-1:-1:-1;;;;;112:31:318;;102:42;;92:70;;158:1;155;148:12;92:70;14:154;:::o;173:127::-;234:10;229:3;225:20;222:1;215:31;265:4;262:1;255:15;289:4;286:1;279:15;305:1302;462:6;470;478;531:2;519:9;510:7;506:23;502:32;499:52;;;547:1;544;537:12;499:52;579:9;573:16;598:54;646:5;598:54;:::i;:::-;721:2;706:18;;700:25;671:5;;-1:-1:-1;734:56:318;700:25;734:56;:::i;:::-;860:2;845:18;;839:25;809:7;;-1:-1:-1;;;;;;876:30:318;;873:50;;;919:1;916;909:12;873:50;942:22;;995:4;987:13;;983:27;-1:-1:-1;973:55:318;;1024:1;1021;1014:12;973:55;1051:9;;-1:-1:-1;;;;;1072:30:318;;1069:56;;;1105:18;;:::i;:::-;1154:2;1148:9;1246:2;1208:17;;-1:-1:-1;;1204:31:318;;;1237:2;1200:40;1196:54;1184:67;;-1:-1:-1;;;;;1266:34:318;;1302:22;;;1263:62;1260:88;;;1328:18;;:::i;:::-;1364:2;1357:22;1388;;;1429:15;;;1446:2;1425:24;1422:37;-1:-1:-1;1419:57:318;;;1472:1;1469;1462:12;1419:57;1521:6;1516:2;1512;1508:11;1503:2;1495:6;1491:15;1485:43;1574:1;1569:2;1560:6;1552;1548:19;1544:28;1537:39;1595:6;1585:16;;;;;305:1302;;;;;:::o;1612:418::-;1761:2;1750:9;1743:21;1724:4;1793:6;1787:13;1836:6;1831:2;1820:9;1816:18;1809:34;1895:6;1890:2;1882:6;1878:15;1873:2;1862:9;1858:18;1852:50;1951:1;1946:2;1937:6;1926:9;1922:22;1918:31;1911:42;2021:2;2014;2010:7;2005:2;1997:6;1993:15;1989:29;1978:9;1974:45;1970:54;1962:62;;;1612:418;;;;:::o;2035:297::-;2153:12;;2200:4;2189:16;;;2183:23;;2153:12;2218:16;;2215:111;;;2312:1;2308:6;2298;2292:4;2288:17;2285:1;2281:25;2277:38;2270:5;2266:50;2257:59;;2215:111;;2035:297;;;:::o;:::-;1063:13703:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b5060043610610127575f3560e01c8063aa165c30116100a9578063d9f12db21161006e578063d9f12db214610370578063dab42d7e14610383578063ea0d8149146103a5578063ea194e2e146103b8578063f698da25146103cb575f5ffd5b8063aa165c30146102d9578063b05c8f6d146102ec578063bd30a0b914610313578063ca8aa7c714610336578063d40cda161461035d575f5ffd5b80637690e395116100ef5780637690e3951461023e5780637cffe48c146102515780638256909c1461027157806387ab86f4146102a35780639a43e3fb146102b8575f5ffd5b8063166aa1271461012b5780633b32a7bd146101655780634657e26a1461019057806350435add146101b757806354fd4d5014610236575b5f5ffd5b6101527f991b0a3376ce87f8ecc5d70962279ac09cdce934e8b5b9683e73c8ff087c7f8181565b6040519081526020015b60405180910390f35b61017861017336600461255a565b6103d3565b6040516001600160a01b03909116815260200161015c565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b6102296101c53660046125db565b8151602080840151835180519083015185840151805190850151604080519687019790975295850193909352606084810192909252608084015260a083019190915260c082019290925260e001604051602081830303815290604052905092915050565b60405161015c9190612686565b6102296103f3565b61015261024c3660046126d6565b610423565b61026461025f366004612734565b6104cb565b60405161015c9190612782565b61028461027f366004612790565b6104f1565b604080516001600160a01b03909316835290151560208301520161015c565b6102b66102b1366004612836565b6105df565b005b6102cb6102c636600461255a565b6108f0565b60405161015c929190612881565b6102296102e736600461255a565b610ad8565b6101527fda86e76deaed01641f80ff5f72c372a038fa5182697aeb967e8b1f9819d58d8181565b61032661032136600461255a565b610c15565b604051901515815260200161015c565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b6102b661036b3660046128be565b610c52565b61015261037e36600461294f565b610dc3565b610326610391366004612990565b5f9081526002602052604090205460ff1690565b6102b66103b33660046129a7565b610e5c565b6101526103c636600461255a565b610f9f565b6101526110c7565b5f6103de8383610ad8565b6103e7906129e0565b60601c90505b92915050565b606061041e7f0000000000000000000000000000000000000000000000000000000000000000611180565b905090565b5f5f7fda86e76deaed01641f80ff5f72c372a038fa5182697aeb967e8b1f9819d58d8186865f015187602001518787604051610460929190612a38565b6040805191829003822060208301969096526001600160a01b039485169082015292909116606083015263ffffffff16608082015260a081019190915260c0016040516020818303038152906040528051906020012090506104c1816111bd565b9695505050505050565b5f60015f6104d884611203565b815260208101919091526040015f205460ff1692915050565b5f5f5f60015f61050087611203565b815260208101919091526040015f9081205460ff169150600182600281111561052b5761052b61274e565b0361053d5750835160208501206105ae565b60028260028111156105515761055161274e565b03610595575f5f8680602001905181019061056c9190612a47565b60408051808201825283815260209081019283525f9384529151909152902092506105ae915050565b60405163fdea7c0960e01b815260040160405180910390fd5b5f818152600360205260409020546001600160a01b0316806105d08882610c15565b945094505050505b9250929050565b816105e981611261565b6106065760405163932d94f760e01b815260040160405180910390fd5b6040516309a961f360e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631352c3e6906106549086908690600401612a69565b602060405180830381865afa15801561066f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106939190612a9f565b15828490916106e057604051631070287960e01b815282516001600160a01b03908116600483015260209093015163ffffffff166024820152911660448201526064015b60405180910390fd5b50505f60015f6106ef85611203565b815260208101919091526040015f9081205460ff1691508160028111156107185761071861274e565b0361073657604051635cd3106d60e11b815260040160405180910390fd5b5f5f5f61074286611203565b815260208082019290925260409081015f9081206001600160a01b038916825283528190208151808301909252805460ff1615158252600181018054929391929184019161078f90612abe565b80601f01602080910402602001604051908101604052809291908181526020018280546107bb90612abe565b80156108065780601f106107dd57610100808354040283529160200191610806565b820191905f5260205f20905b8154815290600101906020018083116107e957829003601f168201915b5050505050815250509050805f01518486909161085c57604051632e40e18760e01b815282516001600160a01b03908116600483015260209093015163ffffffff166024820152911660448201526064016106d7565b50505f5f61086986611203565b815260208082019290925260409081015f9081206001600160a01b03891682529092528120805460ff19168155906108a4600183018261235f565b5050846001600160a01b03167f28d3c3cee49478ec6fd219cfd685cd15cd01d95cabf69b4b7b57f9eaa3eb644285846040516108e1929190612af6565b60405180910390a25050505050565b604080518082019091525f808252602082015261090b612399565b5f60015f61091887611203565b815260208101919091526040015f205460ff16905060028160028111156109415761094161274e565b1461095f5760405163fdea7c0960e01b815260040160405180910390fd5b5f5f5f61096b88611203565b815260208082019290925260409081015f9081206001600160a01b038916825283528190208151808301909252805460ff161515825260018101805492939192918401916109b890612abe565b80601f01602080910402602001604051908101604052809291908181526020018280546109e490612abe565b8015610a2f5780601f10610a0657610100808354040283529160200191610a2f565b820191905f5260205f20905b815481529060010190602001808311610a1257829003601f168201915b5050505050815250509050805f0151610a845750506040805180820182525f808252602080830182905283518085018552828152808201929092528351808501909452828452830191909152925090506105d8565b5f5f5f5f8460200151806020019051810190610aa09190612b68565b604080518082018252948552602080860194909452805180820190915291825291810191909152909b909a5098505050505050505050565b60605f60015f610ae786611203565b815260208101919091526040015f205460ff1690506001816002811115610b1057610b1061274e565b14610b2e5760405163fdea7c0960e01b815260040160405180910390fd5b5f5f5f610b3a87611203565b815260208082019290925260409081015f9081206001600160a01b038816825283528190208151808301909252805460ff16151582526001810180549293919291840191610b8790612abe565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb390612abe565b8015610bfe5780601f10610bd557610100808354040283529160200191610bfe565b820191905f5260205f20905b815481529060010190602001808311610be157829003601f168201915b505050919092525050506020015195945050505050565b5f5f5f610c2185611203565b815260208082019290925260409081015f9081206001600160a01b038616825290925290205460ff16905092915050565b85610c5c81611261565b610c795760405163932d94f760e01b815260040160405180910390fd5b5f60015f610c8689611203565b815260208101919091526040015f9081205460ff169150816002811115610caf57610caf61274e565b03610ccd57604051635cd3106d60e11b815260040160405180910390fd5b5f5f610cd889611203565b815260208082019290925260409081015f9081206001600160a01b038c16825290925290205460ff1615610d1f57604051630c7bc20160e11b815260040160405180910390fd5b6001816002811115610d3357610d3361274e565b03610d4b57610d4687898888888861130b565b610d72565b6002816002811115610d5f57610d5f61274e565b0361059557610d4687898888888861146c565b876001600160a01b03167f1201ce0c5e577111bce91e907fd99cb183da5edc1e3fb650ca40769e4e9176dd88838989604051610db19493929190612bae565b60405180910390a25050505050505050565b81516020808401516040515f938493610e30937f991b0a3376ce87f8ecc5d70962279ac09cdce934e8b5b9683e73c8ff087c7f81938a93928991019485526001600160a01b039384166020860152918316604085015263ffffffff16606084015216608082015260a00190565b604051602081830303815290604052805190602001209050610e51816111bd565b9150505b9392505050565b8151610e6781611261565b610e845760405163932d94f760e01b815260040160405180910390fd5b6001826002811115610e9857610e9861274e565b1480610eb557506002826002811115610eb357610eb361274e565b145b610ed25760405163fdea7c0960e01b815260040160405180910390fd5b5f60015f610edf86611203565b815260208101919091526040015f9081205460ff169150816002811115610f0857610f0861274e565b14610f25576040516281f09f60e01b815260040160405180910390fd5b8260015f610f3287611203565b815260208101919091526040015f20805460ff19166001836002811115610f5b57610f5b61274e565b02179055507fb2266cb118e57095fcdbedb24dabd9fc9f5127e2dbedf62ce6ee71696fb8b6e78484604051610f91929190612af6565b60405180910390a150505050565b5f5f5f5f610fac86611203565b815260208082019290925260409081015f9081206001600160a01b038716825283528190208151808301909252805460ff16151582526001810180549293919291840191610ff990612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461102590612abe565b80156110705780601f1061104757610100808354040283529160200191611070565b820191905f5260205f20905b81548152906001019060200180831161105357829003601f168201915b50505050508152505090505f60015f61108887611203565b815260208101919091526040015f2054825160ff90911691506110b057505f91506103ed9050565b6110be826020015182611625565b95945050505050565b60408051808201909152600a81526922b4b3b2b72630bcb2b960b11b6020909101525f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea6111346116a6565b805160209182012060408051928301949094529281019190915260608101919091524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60605f61118c8361171b565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f6111c66110c7565b60405161190160f01b6020820152602281019190915260428101839052606201604051602081830303815290604052805190602001209050919050565b5f815f0151826020015163ffffffff1660405160200161124992919060609290921b6001600160601b031916825260a01b6001600160a01b031916601482015260200190565b6040516020818303038152906040526103ed90612c0b565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af11580156112e7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ed9190612a9f565b6014831461132c5760405163d109118160e01b815260040160405180910390fd5b5f6113378486612c2e565b60601c90508061135a57604051634935505f60e01b815260040160405180910390fd5b5f61139c86868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525060019250611625915050565b5f8181526002602052604090205490915060ff16156113ce57604051630c7bc20160e11b815260040160405180910390fd5b5f6113da888a85610dc3565b905061141f838287878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505f199250611742915050565b611461898989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525088925061179a915050565b505050505050505050565b604080518082019091525f8082526020820152611487612399565b5f808080611497898b018b612c6c565b93509350935093506040518060400160405280858152602001848152509550835f1480156114c3575082155b156114e157604051634935505f60e01b815260040160405180910390fd5b60408051808201909152918252602082015292505f91506115069050888a8989610423565b90505f8061151686880188612ca6565b604080518082019091528281526020810182905291935091505f61153e858389898580611847565b9150508061155f57604051638baa579f60e01b815260040160405180910390fd5b5f6115a18c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525060029250611625915050565b5f8181526002602052604090205490915060ff16156115d357604051630c7bc20160e11b815260040160405180910390fd5b6116158e8e8e8e8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525087925061179a915050565b5050505050505050505050505050565b5f600182600281111561163a5761163a61274e565b0361164c5750815160208301206103ed565b60028260028111156116605761166061274e565b03610595575f5f8480602001905181019061167b9190612b68565b505060408051808201825283815260209081019283525f9384529151909152902092506103ed915050565b60605f6116d27f0000000000000000000000000000000000000000000000000000000000000000611180565b9050805f815181106116e6576116e6612a24565b016020908101516040516001600160f81b03199091169181019190915260210160405160208183030381529060405291505090565b5f60ff8216601f8111156103ed57604051632cd44ac360e21b815260040160405180910390fd5b4281101561176357604051630819bdcd60e01b815260040160405180910390fd5b6117776001600160a01b038516848461190f565b61179457604051638baa579f60e01b815260040160405180910390fd5b50505050565b6040805180820190915260018152602081018390525f806117ba87611203565b815260208082019290925260409081015f9081206001600160a01b03881682528352208251815460ff19169015151781559082015160018201906117fe9082612d12565b5050505f908152600260209081526040808320805460ff191660011790556003909152902080546001600160a01b039093166001600160a01b0319909316929092179091555050565b5f5f5f61185389611963565b90505f6118628a89898c6119ed565b90505f6118796118728a84611a98565b8b90611b08565b90505f6118bb6118b4846118ae6040805180820182525f80825260209182015281518083019092526001825260029082015290565b90611a98565b8590611b08565b905087156118e0576118d7826118cf611b7c565b838c8b611c3c565b96509450611900565b6118f3826118ec611b7c565b838c611e50565b9550851561190057600194505b50505050965096945050505050565b5f5f5f61191c8585612087565b90925090505f8160048111156119345761193461274e565b1480156119525750856001600160a01b0316826001600160a01b0316145b806104c157506104c18686866120c6565b604080518082019091525f80825260208201525f80806119905f516020612e785f395f51905f5286612dcd565b90505b61199c816121ad565b90935091505f516020612e785f395f51905f5282830983036119d4576040805180820190915290815260208101919091529392505050565b5f516020612e785f395f51905f52600182089050611993565b8251602080850151845180519083015186840151805190850151875188870151604080519889018e90528801989098526060870195909552608086019390935260a085019190915260c084015260e08301526101008201526101208101919091525f907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019061014001604051602081830303815290604052805190602001205f1c6110be9190612dcd565b604080518082019091525f8082526020820152611ab36123be565b835181526020808501519082015260408082018490525f908360608460076107d05a03fa90508080611ae157fe5b5080611b0057604051632319df1960e11b815260040160405180910390fd5b505092915050565b604080518082019091525f8082526020820152611b236123dc565b835181526020808501518183015283516040808401919091529084015160608301525f908360808460066107d05a03fa90508080611b5d57fe5b5080611b005760405163d4b68fd760e01b815260040160405180910390fd5b611b84612399565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820182528681526020808201869052825180840190935286835282018490525f91829190611c6d6123fa565b5f5b6002811015611e24575f611c84826006612e00565b9050848260028110611c9857611c98612a24565b60200201515183611ca9835f612e17565b600c8110611cb957611cb9612a24565b6020020152848260028110611cd057611cd0612a24565b60200201516020015183826001611ce79190612e17565b600c8110611cf757611cf7612a24565b6020020152838260028110611d0e57611d0e612a24565b6020020151515183611d21836002612e17565b600c8110611d3157611d31612a24565b6020020152838260028110611d4857611d48612a24565b6020020151516001602002015183611d61836003612e17565b600c8110611d7157611d71612a24565b6020020152838260028110611d8857611d88612a24565b6020020151602001515f60028110611da257611da2612a24565b602002015183611db3836004612e17565b600c8110611dc357611dc3612a24565b6020020152838260028110611dda57611dda612a24565b602002015160200151600160028110611df557611df5612a24565b602002015183611e06836005612e17565b600c8110611e1657611e16612a24565b602002015250600101611c6f565b50611e2d612419565b5f6020826101808560088cfa9151919c9115159b50909950505050505050505050565b6040805180820182528581526020808201859052825180840190935285835282018390525f91611e7e6123fa565b5f5b6002811015612035575f611e95826006612e00565b9050848260028110611ea957611ea9612a24565b60200201515183611eba835f612e17565b600c8110611eca57611eca612a24565b6020020152848260028110611ee157611ee1612a24565b60200201516020015183826001611ef89190612e17565b600c8110611f0857611f08612a24565b6020020152838260028110611f1f57611f1f612a24565b6020020151515183611f32836002612e17565b600c8110611f4257611f42612a24565b6020020152838260028110611f5957611f59612a24565b6020020151516001602002015183611f72836003612e17565b600c8110611f8257611f82612a24565b6020020152838260028110611f9957611f99612a24565b6020020151602001515f60028110611fb357611fb3612a24565b602002015183611fc4836004612e17565b600c8110611fd457611fd4612a24565b6020020152838260028110611feb57611feb612a24565b60200201516020015160016002811061200657612006612a24565b602002015183612017836005612e17565b600c811061202757612027612a24565b602002015250600101611e80565b5061203e612419565b5f6020826101808560086107d05a03fa9050808061205857fe5b5080612077576040516324ccc79360e21b815260040160405180910390fd5b5051151598975050505050505050565b5f5f82516041036120bb576020830151604084015160608501515f1a6120af87828585612229565b945094505050506105d8565b505f905060026105d8565b5f5f5f856001600160a01b0316631626ba7e60e01b86866040516024016120ee929190612e2a565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161212c9190612e4a565b5f60405180830381855afa9150503d805f8114612164576040519150601f19603f3d011682016040523d82523d5f602084013e612169565b606091505b509150915081801561217d57506020815110155b80156104c157508051630b135d3f60e11b906121a29083016020908101908401612e60565b149695505050505050565b5f80805f516020612e785f395f51905f5260035f516020612e785f395f51905f52865f516020612e785f395f51905f52888909090890505f61221d827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f525f516020612e785f395f51905f526122e6565b91959194509092505050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561225e57505f905060036122dd565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156122af573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b0381166122d7575f600192509250506122dd565b91505f90505b94509492505050565b5f5f6122f0612419565b6122f8612437565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828061233557fe5b50826123545760405163d51edae360e01b815260040160405180910390fd5b505195945050505050565b50805461236b90612abe565b5f825580601f1061237a575050565b601f0160209004905f5260205f20908101906123969190612455565b50565b60405180604001604052806123ac61246d565b81526020016123b961246d565b905290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b5b80821115612469575f8155600101612456565b5090565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156124c2576124c261248b565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156124f1576124f161248b565b604052919050565b80356001600160a01b038116811461250f575f5ffd5b919050565b5f60408284031215612524575f5ffd5b61252c61249f565b9050612537826124f9565b8152602082013563ffffffff8116811461254f575f5ffd5b602082015292915050565b5f5f6060838503121561256b575f5ffd5b6125758484612514565b9150612583604084016124f9565b90509250929050565b5f82601f83011261259b575f5ffd5b6125a560406124c8565b8060408401858111156125b6575f5ffd5b845b818110156125d05780358452602093840193016125b8565b509095945050505050565b5f5f82840360c08112156125ed575f5ffd5b60408112156125fa575f5ffd5b61260261249f565b843581526020808601359082015292506080603f1982011215612623575f5ffd5b5061262c61249f565b612639856040860161258c565b8152612648856080860161258c565b6020820152809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610e556020830184612658565b5f5f83601f8401126126a8575f5ffd5b50813567ffffffffffffffff8111156126bf575f5ffd5b6020830191508360208285010111156105d8575f5ffd5b5f5f5f5f608085870312156126e9575f5ffd5b6126f2856124f9565b93506127018660208701612514565b9250606085013567ffffffffffffffff81111561271c575f5ffd5b61272887828801612698565b95989497509550505050565b5f60408284031215612744575f5ffd5b610e558383612514565b634e487b7160e01b5f52602160045260245ffd5b6003811061277e57634e487b7160e01b5f52602160045260245ffd5b9052565b602081016103ed8284612762565b5f5f606083850312156127a1575f5ffd5b6127ab8484612514565b9150604083013567ffffffffffffffff8111156127c6575f5ffd5b8301601f810185136127d6575f5ffd5b803567ffffffffffffffff8111156127f0576127f061248b565b612803601f8201601f19166020016124c8565b818152866020838501011115612817575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f5f60608385031215612847575f5ffd5b612850836124f9565b91506125838460208501612514565b805f5b6002811015611794578151845260209384019390910190600101612862565b5f60c08201905083518252602084015160208301526128a460408301845161285f565b60208301516128b6608084018261285f565b509392505050565b5f5f5f5f5f5f60a087890312156128d3575f5ffd5b6128dc876124f9565b95506128eb8860208901612514565b9450606087013567ffffffffffffffff811115612906575f5ffd5b61291289828a01612698565b909550935050608087013567ffffffffffffffff811115612931575f5ffd5b61293d89828a01612698565b979a9699509497509295939492505050565b5f5f5f60808486031215612961575f5ffd5b61296a846124f9565b92506129798560208601612514565b9150612987606085016124f9565b90509250925092565b5f602082840312156129a0575f5ffd5b5035919050565b5f5f606083850312156129b8575f5ffd5b6129c28484612514565b91506040830135600381106129d5575f5ffd5b809150509250929050565b805160208201516001600160601b0319811691906014821015612a1d576001600160601b03196001600160601b03198360140360031b1b82161692505b5050919050565b634e487b7160e01b5f52603260045260245ffd5b818382375f9101908152919050565b5f5f60408385031215612a58575f5ffd5b505080516020909101519092909150565b6001600160a01b038316815260608101610e55602083018480516001600160a01b0316825260209081015163ffffffff16910152565b5f60208284031215612aaf575f5ffd5b81518015158114610e55575f5ffd5b600181811c90821680612ad257607f821691505b602082108103612af057634e487b7160e01b5f52602260045260245ffd5b50919050565b82516001600160a01b0316815260208084015163ffffffff169082015260608101610e556040830184612762565b5f82601f830112612b33575f5ffd5b612b3d60406124c8565b806040840185811115612b4e575f5ffd5b845b818110156125d0578051845260209384019301612b50565b5f5f5f5f60c08587031215612b7b575f5ffd5b845160208601519094509250612b948660408701612b24565b9150612ba38660808701612b24565b905092959194509250565b84516001600160a01b0316815260208086015163ffffffff1690820152612bd86040820185612762565b60806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f191601019392505050565b80516020808301519190811015612af0575f1960209190910360031b1b16919050565b80356001600160601b03198116906014841015612c65576001600160601b03196001600160601b03198560140360031b1b82161691505b5092915050565b5f5f5f5f60c08587031215612c7f575f5ffd5b8435935060208501359250612c97866040870161258c565b9150612ba3866080870161258c565b5f5f60408385031215612cb7575f5ffd5b50508035926020909101359150565b601f821115612d0d57805f5260205f20601f840160051c81016020851015612ceb5750805b601f840160051c820191505b81811015612d0a575f8155600101612cf7565b50505b505050565b815167ffffffffffffffff811115612d2c57612d2c61248b565b612d4081612d3a8454612abe565b84612cc6565b6020601f821160018114612d72575f8315612d5b5750848201515b5f19600385901b1c1916600184901b178455612d0a565b5f84815260208120601f198516915b82811015612da15787850151825560209485019460019092019101612d81565b5084821015612dbe57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82612de757634e487b7160e01b5f52601260045260245ffd5b500690565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176103ed576103ed612dec565b808201808211156103ed576103ed612dec565b828152604060208201525f612e426040830184612658565b949350505050565b5f82518060208501845e5f920191825250919050565b5f60208284031215612e70575f5ffd5b505191905056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a2646970667358221220efab4d1dc0ddf7aa8382c58b38b2d29d0cf0358cc095354ebdead4dd0754378a64736f6c634300081b0033",
    "sourceMap": "1063:13703:177:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1225:169;;1291:103;1225:169;;;;;160:25:318;;;148:2;133:18;1225:169:177;;;;;;;;11770:183;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1929:32:318;;;1911:51;;1899:2;1884:18;11770:183:177;1765:203:318;354:59:166;;;;;14507:257:177;;;;;;:::i;:::-;14680:9;;14691;;;;;14702;;:12;;14716;;;;14730:9;;;;:12;;14744;;;;14669:88;;;;;;11771:25:318;;;;11812:18;;;11805:34;;;;14638:12:177;11855:18:318;;;11848:34;;;;11898:18;;;11891:34;11941:19;;;11934:35;;;;11985:19;;;11978:35;;;;11743:19;;14669:88:177;;;;;;;;;;;;14662:95;;14507:257;;;;;;;;;;;;:::i;1031:106:167:-;;;:::i;14059:408:177:-;;;;;;:::i;:::-;;:::i;10088:178::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12625:958::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7315:32:318;;;7297:51;;7391:14;;7384:22;7379:2;7364:18;;7357:50;7270:18;12625:958:177;7129:284:318;3825:809:177;;;;;;:::i;:::-;;:::i;:::-;;10306:934;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;11280:450::-;;;;;;:::i;:::-;;:::i;1401:164::-;;1467:98;1401:164;;9867:181;;;;;;:::i;:::-;;:::i;:::-;;;8780:14:318;;8773:22;8755:41;;8743:2;8728:18;9867:181:177;8615:187:318;290:53:178;;;;;2795:990:177;;;;;;:::i;:::-;;:::i;13623:396::-;;;;;;:::i;:::-;;:::i;11993:144::-;;;;;;:::i;:::-;12080:4;12103:27;;;:18;:27;;;;;;;;;11993:144;2176:579;;;;;;:::i;:::-;;:::i;12177:408::-;;;;;;:::i;:::-;;:::i;1826:433:168:-;;;:::i;11770:183:177:-;11868:7;11910:34;11922:11;11935:8;11910:11;:34::i;:::-;11902:43;;;:::i;:::-;11894:52;;11887:59;;11770:183;;;;;:::o;1031:106:167:-;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;14059:408:177:-;14228:7;14247:18;1467:98;14335:8;14345:11;:15;;;14362:11;:14;;;14388:7;;14378:18;;;;;;;:::i;:::-;;;;;;;;;;14291:106;;;12557:25:318;;;;-1:-1:-1;;;;;12618:32:318;;;12598:18;;;12591:60;12687:32;;;;12667:18;;;12660:60;12768:10;12756:23;12736:18;;;12729:51;12796:19;;;12789:35;;;;12529:19;;14291:106:177;;;;;;;;;;;;14268:139;;;;;;14247:160;;14424:36;14449:10;14424:24;:36::i;:::-;14417:43;14059:408;-1:-1:-1;;;;;;14059:408:177:o;10088:178::-;10190:9;10218:22;:41;10241:17;:11;:15;:17::i;:::-;10218:41;;;;;;;;;;;-1:-1:-1;10218:41:177;;;;;10088:178;-1:-1:-1;;10088:178:177:o;12625:958::-;12759:7;12768:4;12784:19;12806:22;:41;12829:17;:11;:15;:17::i;:::-;12806:41;;;;;;;;;;;-1:-1:-1;12806:41:177;;;;;;;-1:-1:-1;12806:41:177;13007:9;:28;;;;;;;;:::i;:::-;;13003:453;;-1:-1:-1;13061:18:177;;;;;;13003:453;;;13113:15;13100:9;:28;;;;;;;;:::i;:::-;;13096:360;;13256:11;13269;13295:7;13284:39;;;;;;;;;;;;:::i;:::-;13365:23;;;;;;;;;;;;;;;;;;-1:-1:-1;11178:20:157;;;11224;;11211:34;;;11270:18;;;-1:-1:-1;13096:360:177;;-1:-1:-1;;13096:360:177;;13427:18;;-1:-1:-1;;;13427:18:177;;;;;;;;;;;13096:360;13466:16;13485:27;;;:18;:27;;;;;;-1:-1:-1;;;;;13485:27:177;;13540:35;13553:11;13485:27;13540:12;:35::i;:::-;13522:54;;;;;;;12625:958;;;;;;:::o;3825:809::-;3920:8;713:22:166;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:166;;;;;;;;;;;;4051:60:177::1;::::0;-1:-1:-1;;;4051:60:177;;-1:-1:-1;;;;;4051:17:177::1;:37;::::0;::::1;::::0;:60:::1;::::0;4089:8;;4099:11;;4051:60:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4050:61;4136:11;4149:8;4029:139;;;;;::::0;-1:-1:-1;;;4029:139:177;;13264:12:318;;-1:-1:-1;;;;;13260:38:318;;;4029:139:177::1;::::0;::::1;13248:51:318::0;13352:4;13341:16;;;13335:23;13360:10;13331:40;13315:14;;;13308:64;14345:32;;14325:18;;;14318:60;14234:18;;4029:139:177::1;;;;;;;;;;;4179:19;4201:22;:41;4224:17;:11;:15;:17::i;:::-;4201:41:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4201:41:177;;;;::::1;;::::0;-1:-1:-1;4260:9:177::1;:27;;;;;;;;:::i;:::-;::::0;4252:64:::1;;;;-1:-1:-1::0;;;4252:64:177::1;;;;;;;;;;;;4327:22;4352:16;:35;4369:17;:11;:15;:17::i;:::-;4352:35:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;4352:35:177;;;-1:-1:-1;;;;;4352:45:177;::::1;::::0;;;;;;;4327:70;;;;::::1;::::0;;;;;::::1;;;;::::0;;;;::::1;::::0;;;;4352:45;;4327:70;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;4416:7;:20;;;4450:11;4463:8;4408:65;;;;;::::0;-1:-1:-1;;;4408:65:177;;13264:12:318;;-1:-1:-1;;;;;13260:38:318;;;4408:65:177::1;::::0;::::1;13248:51:318::0;13352:4;13341:16;;;13335:23;13360:10;13331:40;13315:14;;;13308:64;14345:32;;14325:18;;;14318:60;14234:18;;4408:65:177::1;14027:357:318::0;4408:65:177::1;;;4517:16;:35;4534:17;:11;:15;:17::i;:::-;4517:35:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;4517:35:177;;;-1:-1:-1;;;;;4517:45:177;::::1;::::0;;;;;;;4510:52;;-1:-1:-1;;4510:52:177::1;::::0;;4517:45;4510:52:::1;::::0;;::::1;-1:-1:-1::0;4510:52:177::1;:::i;:::-;;;4607:8;-1:-1:-1::0;;;;;4578:49:177::1;;4594:11;4617:9;4578:49;;;;;;;:::i;:::-;;;;;;;;3930:704;;3825:809:::0;;;:::o;10306:934::-;-1:-1:-1;;;;;;;;;;;;;;;;;10452:28:177;;:::i;:::-;10536:19;10558:22;:41;10581:17;:11;:15;:17::i;:::-;10558:41;;;;;;;;;;;-1:-1:-1;10558:41:177;;;;;-1:-1:-1;10630:15:177;10617:9;:28;;;;;;;;:::i;:::-;;10609:57;;;;-1:-1:-1;;;10609:57:177;;;;;;;;;;;;10677:22;10702:16;:35;10719:17;:11;:15;:17::i;:::-;10702:35;;;;;;;;;;;;;;-1:-1:-1;10702:35:177;;;-1:-1:-1;;;;;10702:45:177;;;;;;;;;10677:70;;;;;;;;;;;;;;;;;;;;;;;10702:45;;10677:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10763:7;:20;;;10758:239;;-1:-1:-1;;10853:54:177;;;;;;;;:27;:54;;;;;;;;;;10929:19;;;;;;;;;;;;;;;;;10950:35;;;;;;;;;;;;;;;;;10929:19;-1:-1:-1;10950:35:177;-1:-1:-1;10921:65:177;;10758:239;11008:11;11021;11034:21;11057;11105:7;:15;;;11094:71;;;;;;;;;;;;:::i;:::-;11184:23;;;;;;;;;;;;;;;;;;;11209;;;;;;;;;;;;;;;;;;11184;;11209;;-1:-1:-1;10306:934:177;-1:-1:-1;;;;;;;;;10306:934:177:o;11280:450::-;11372:12;11440:19;11462:22;:41;11485:17;:11;:15;:17::i;:::-;11462:41;;;;;;;;;;;-1:-1:-1;11462:41:177;;;;;-1:-1:-1;11462:41:177;11521:9;:28;;;;;;;;:::i;:::-;;11513:57;;;;-1:-1:-1;;;11513:57:177;;;;;;;;;;;;11581:22;11606:16;:35;11623:17;:11;:15;:17::i;:::-;11606:35;;;;;;;;;;;;;;-1:-1:-1;11606:35:177;;;-1:-1:-1;;;;;11606:45:177;;;;;;;;;11581:70;;;;;;;;;;;;;;;;;;;;;;;11606:45;;11581:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11581:70:177;;;;-1:-1:-1;;;11668:15:177;;;;11280:450;-1:-1:-1;;;;;11280:450:177:o;9867:181::-;9960:4;9983:16;:35;10000:17;:11;:15;:17::i;:::-;9983:35;;;;;;;;;;;;;;-1:-1:-1;9983:35:177;;;-1:-1:-1;;;;;9983:45:177;;;;;;;;;:58;;;;-1:-1:-1;9867:181:177;;;;:::o;2795:990::-;2976:8;713:22:166;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:166;;;;;;;;;;;;2996:19:177::1;3018:22;:41;3041:17;:11;:15;:17::i;:::-;3018:41:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3018:41:177;;;;::::1;;::::0;-1:-1:-1;3077:9:177::1;:27;;;;;;;;:::i;:::-;::::0;3069:64:::1;;;;-1:-1:-1::0;;;3069:64:177::1;;;;;;;;;;;;3227:16;:35;3244:17;:11;:15;:17::i;:::-;3227:35:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;3227:35:177;;;-1:-1:-1;;;;;3227:45:177;::::1;::::0;;;;;;;:58;::::1;;3226:59;3218:92;;;;-1:-1:-1::0;;;3218:92:177::1;;;;;;;;;;;;3424:15;3411:9;:28;;;;;;;;:::i;:::-;::::0;3407:300:::1;;3455:60;3473:11;3486:8;3496:7;;3505:9;;3455:17;:60::i;:::-;3407:300;;;3549:15;3536:9;:28;;;;;;;;:::i;:::-;::::0;3532:175:::1;;3580:60;3598:11;3611:8;3621:7;;3630:9;;3580:17;:60::i;3532:175::-;3749:8;-1:-1:-1::0;;;;;3722:56:177::1;;3736:11;3759:9;3770:7;;3722:56;;;;;;;;;:::i;:::-;;;;;;;;2986:799;2795:990:::0;;;;;;;:::o;13623:396::-;13905:15;;13922:14;;;;;13851:98;;13788:7;;;;13851:98;;1291:103;;13895:8;;13905:15;13938:10;;13851:98;17275:25:318;;;-1:-1:-1;;;;;17336:32:318;;;17331:2;17316:18;;17309:60;17405:32;;;17400:2;17385:18;;17378:60;17486:10;17474:23;17469:2;17454:18;;17447:51;17535:32;17529:3;17514:19;;17507:61;17262:3;17247:19;;17018:556;13851:98:177;;;;;;;;;;;;;13828:131;;;;;;13807:152;;13976:36;14001:10;13976:24;:36::i;:::-;13969:43;;;13623:396;;;;;;:::o;2176:579::-;2303:15;;713:22:166;2303:15:177;713:13:166;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:166;;;;;;;;;;;;2351:15:177::1;2338:9;:28;;;;;;;;:::i;:::-;;:60;;;-1:-1:-1::0;2383:15:177::1;2370:9;:28;;;;;;;;:::i;:::-;;2338:60;2330:89;;;;-1:-1:-1::0;;;2330:89:177::1;;;;;;;;;;;;2485:20;2508:22;:41;2531:17;:11;:15;:17::i;:::-;2508:41:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2508:41:177;;;;::::1;;::::0;-1:-1:-1;2567:10:177::1;:28;;;;;;;;:::i;:::-;;2559:64;;;;-1:-1:-1::0;;;2559:64:177::1;;;;;;;;;;;;2678:9;2634:22;:41;2657:17;:11;:15;:17::i;:::-;2634:41:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2634:41:177;:53;;-1:-1:-1;;2634:53:177::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;2703:45;2725:11;2738:9;2703:45;;;;;;;:::i;:::-;;;;;;;;2320:435;2176:579:::0;;;:::o;12177:408::-;12270:7;12289:22;12314:16;:35;12331:17;:11;:15;:17::i;:::-;12314:35;;;;;;;;;;;;;;-1:-1:-1;12314:35:177;;;-1:-1:-1;;;;;12314:45:177;;;;;;;;;12289:70;;;;;;;;;;;;;;;;;;;;;;;12314:45;;12289:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12369:19;12391:22;:41;12414:17;:11;:15;:17::i;:::-;12391:41;;;;;;;;;;;-1:-1:-1;12391:41:177;;12448:20;;12391:41;;;;;-1:-1:-1;12443:69:177;;-1:-1:-1;12499:1:177;;-1:-1:-1;12484:17:177;;-1:-1:-1;12484:17:177;12443:69;12529:49;12551:7;:15;;;12568:9;12529:21;:49::i;:::-;12522:56;12177:408;-1:-1:-1;;;;;12177:408:177:o;1826:433:168:-;2074:19;;;;;;;;;;;;-1:-1:-1;;;2074:19:168;;;;;1882:7;518:95;2064:30;2132:15;:13;:15::i;:::-;2116:33;;;;;;;1987:251;;;;;;17838:25:318;;;;17879:18;;;17872:34;;;;17922:18;;;17915:34;;;;2171:13:168;17965:18:318;;;17958:34;2215:4:168;18008:19:318;;;18001:61;17810:19;;1987:251:168;;;;;;;;;;;;1960:292;;;;;;1940:312;;1826:433;:::o;2081:405:37:-;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:37;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:37;;;-1:-1:-1;2438:4:37;2429:14;;2422:28;;;;-1:-1:-1;2393:16:37;2081:405::o;2757:182:168:-;2842:7;2907:17;:15;:17::i;:::-;2878:53;;-1:-1:-1;;;2878:53:168;;;18331:27:318;18374:11;;;18367:27;;;;18410:12;;;18403:28;;;18447:12;;2878:53:168;;;;;;;;;;;;2868:64;;;;;;2861:71;;2757:182;;;:::o;399:154:162:-;472:7;523:2;:6;;;538:2;:5;;;531:13;;506:39;;;;;;;;18645:2:318;18641:15;;;;-1:-1:-1;;;;;;18637:53:318;18625:66;;18747:3;18725:16;-1:-1:-1;;;;;;18721:59:318;18716:2;18707:12;;18700:81;18806:2;18797:12;;18470:345;506:39:162;;;;;;;;;;;;;498:48;;;:::i;1080:175:166:-;1175:73;;-1:-1:-1;;;1175:73:166;;-1:-1:-1;;;;;19369:32:318;;;1175:73:166;;;19351:51:318;1213:10:166;19418:18:318;;;19411:60;1233:4:166;19487:18:318;;;19480:60;1152:4:166;1240:7;;-1:-1:-1;;;;;;1240:7:166;19556:18:318;;;19549:61;1152:4:166;1175:20;:28;;;;;;19323:19:318;;1175:73:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5181:1027:177:-;5432:2;5414:20;;5406:49;;;;-1:-1:-1;;;5406:49:177;;;;;;;;;;;;5503:18;5532:16;5540:7;;5532:16;:::i;:::-;5524:25;;;-1:-1:-1;5524:25:177;5559:47;;;;-1:-1:-1;;;5559:47:177;;;;;;;;;;;;5665:15;5683:47;5705:7;;5683:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5714:15:177;;-1:-1:-1;5683:21:177;;-1:-1:-1;;5683:47:177:i;:::-;5785:27;;;;:18;:27;;;;;;5665:65;;-1:-1:-1;5785:27:177;;5784:28;5776:61;;;;-1:-1:-1;;;5776:61:177;;;;;;;;;;;;5922:22;5947:69;5982:8;5992:11;6005:10;5947:34;:69::i;:::-;5922:94;;6027:83;6053:10;6065:14;6081:9;;6027:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6092:17:177;-1:-1:-1;6027:25:177;;-1:-1:-1;;6027:83:177:i;:::-;6147:54;6161:11;6174:8;6184:7;;6147:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6193:7:177;;-1:-1:-1;6147:13:177;;-1:-1:-1;;6147:54:177:i;:::-;5355:853;;;5181:1027;;;;;;:::o;6663:1648::-;-1:-1:-1;;;;;;;;;;;;;;;;;6885:28:177;;:::i;:::-;7007:11;;;;7097:63;;;;7108:7;7097:63;:::i;:::-;7006:154;;;;;;;;7218:23;;;;;;;;7232:3;7218:23;;;;7237:3;7218:23;;;7208:33;;7265:3;7272:1;7265:8;:20;;;;-1:-1:-1;7277:8:177;;7265:20;7263:23;7255:46;;;;-1:-1:-1;;;7255:46:177;;;;;;;;;;;;7383:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;;7501:66:177;;-1:-1:-1;7536:8:177;7546:11;7559:7;;7501:34;:66::i;:::-;7476:91;-1:-1:-1;7630:12:177;;7660:41;;;;7671:9;7660:41;:::i;:::-;7749:25;;;;;;;;;;;;;;;;;;7629:72;;-1:-1:-1;7629:72:177;-1:-1:-1;7711:35:177;7854:98;7893:14;7749:25;7925:7;7934;7711:35;;7854:38;:98::i;:::-;7813:139;;;7970:17;7962:46;;;;-1:-1:-1;;;7962:46:177;;;;;;;;;;;;8077:15;8095:47;8117:7;;8095:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8126:15:177;;-1:-1:-1;8095:21:177;;-1:-1:-1;;8095:47:177:i;:::-;8161:27;;;;:18;:27;;;;;;8077:65;;-1:-1:-1;8161:27:177;;8160:28;8152:61;;;;-1:-1:-1;;;8152:61:177;;;;;;;;;;;;8250:54;8264:11;8277:8;8287:7;;8250:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8296:7:177;;-1:-1:-1;8250:13:177;;-1:-1:-1;;8250:54:177:i;:::-;6837:1474;;;;;;;;6663:1648;;;;;;:::o;9289:461::-;9385:7;9421:15;9408:9;:28;;;;;;;;:::i;:::-;;9404:304;;-1:-1:-1;9459:17:177;;;;;;9452:24;;9404:304;9510:15;9497:9;:28;;;;;;;;:::i;:::-;;9493:215;;9542:11;9555;9583:6;9572:62;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;9673:23:177;;;;;;;;;;;;;;;;;;-1:-1:-1;11178:20:157;;;11224;;11211:34;;;11270:18;;;-1:-1:-1;9648:49:177;;-1:-1:-1;;9648:49:177;1357:170:167;1405:13;1430:14;1453:19;:8;:17;:19::i;:::-;1430:43;;1514:1;1516;1514:4;;;;;;;;:::i;:::-;;;;;;;1497:22;;-1:-1:-1;;;;;;1514:4:167;;;1497:22;;;21055:39:318;;;;21110:11;;1497:22:167;;;;;;;;;;;;1483:37;;;1357:170;:::o;2558:245:37:-;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:37;;;;;;;;;;;3667:714:168;3997:15;3987:6;:25;;3979:54;;;;-1:-1:-1;;;3979:54:168;;;;;;;;;;;;4300:53;-1:-1:-1;;;;;4300:26:168;;4327:14;4343:9;4300:26;:53::i;:::-;4292:82;;;;-1:-1:-1;;;4292:82:168;;;;;;;;;;;;3667:714;;;;:::o;8572:474:177:-;8814:46;;;;;;;;;8837:4;8814:46;;;;;;;;-1:-1:-1;;8783:17:177;:11;:15;:17::i;:::-;8766:35;;;;;;;;;;;;;;-1:-1:-1;8766:35:177;;;-1:-1:-1;;;;;8766:45:177;;;;;;;:94;;;;-1:-1:-1;;8766:94:177;;;;;;;;;;;-1:-1:-1;8766:94:177;;;;;;;:::i;:::-;-1:-1:-1;;;8909:27:177;;;;:18;:27;;;;;;;;:34;;-1:-1:-1;;8909:34:177;8939:4;8909:34;;;9001:18;:27;;;;;:38;;-1:-1:-1;;;;;9001:38:177;;;-1:-1:-1;;;;;;9001:38:177;;;;;;;;;;-1:-1:-1;;8572:474:177:o;1065:1076:158:-;1316:12;1330:22;1364:33;1400:23;1415:7;1400:14;:23::i;:::-;1364:59;;1433:13;1449:55;1465:7;1474:8;1484;1494:9;1449:15;:55::i;:::-;1433:71;-1:-1:-1;1551:27:158;1581:42;1596:26;:8;1433:71;1596:19;:26::i;:::-;1581:9;;:14;:42::i;:::-;1551:72;;1633:28;1664:56;1682:37;1713:5;1682:19;-1:-1:-1;;;;;;;;;;;;;;;;;2862:13:157;;;;;;;;2870:1;2862:13;;2873:1;2862:13;;;;;2783:99;1682:19:158;:30;;:37::i;:::-;1664:12;;:17;:56::i;:::-;1633:87;;1735:11;1731:404;;;1856:80;1874:6;1882:22;:20;:22::i;:::-;1906:7;1915:8;1925:10;1856:17;:80::i;:::-;1809:127;-1:-1:-1;1809:127:158;-1:-1:-1;1731:404:158;;;1977:64;1991:6;1999:22;:20;:22::i;:::-;2023:7;2032:8;1977:13;:64::i;:::-;1967:74;;2059:7;2055:70;;;2106:4;2086:24;;2055:70;1354:787;;;;1065:1076;;;;;;;;;:::o;1047:399:42:-;1153:4;1170:17;1189:35;1228:44;1256:4;1262:9;1228:27;:44::i;:::-;1169:103;;-1:-1:-1;1169:103:42;-1:-1:-1;1311:37:42;1302:5;:46;;;;;;;;:::i;:::-;;:69;;;;;1365:6;-1:-1:-1;;;;;1352:19:42;:9;-1:-1:-1;;;;;1352:19:42;;1302:69;1301:138;;;;1388:51;1415:6;1423:4;1429:9;1388:26;:51::i;11698:464:157:-;-1:-1:-1;;;;;;;;;;;;;;;;;11791:12:157;;;11853:24;-1:-1:-1;;;;;;;;;;;11861:2:157;11853:24;:::i;:::-;11841:36;;11888:238;11927:13;11938:1;11927:10;:13::i;:::-;11915:25;;-1:-1:-1;11915:25:157;-1:-1:-1;;;;;;;;;;;;12004:1:157;12001;11994:24;11986:4;:32;11982:91;;12045:13;;;;;;;;;;;;;;;;;;;;11698:464;-1:-1:-1;;;11698:464:157:o;11982:91::-;-1:-1:-1;;;;;;;;;;;12101:1:157;12098;12091:24;12087:28;;11888:238;;2495:661:158;2840:10;;2872;;;;;2904;;:13;;2939;;;;2974:10;;;;:13;;3009;;;;3044:11;;3077;;;;2773:333;;;;;;23949:19:318;;;23984:12;;23977:28;;;;24021:12;;;24014:28;;;;24058:12;;;24051:28;;;;24095:13;;;24088:29;;;;24133:13;;;24126:29;24171:13;;;24164:29;24209:13;;;24202:29;24247:13;;;24240:29;;;;2692:13:158;;2062:102:157;;24285:13:318;;2773:333:158;;;;;;;;;;;;2746:374;;;;;;2725:405;;:424;;;;:::i;7788:550:157:-;-1:-1:-1;;;;;;;;;;;;;;;;;7888:23:157;;:::i;:::-;7932:3;;7921:14;;:8;7956:3;;;;7945:8;;;:14;7969:8;;;;:12;;;-1:-1:-1;;8156:1:157;8150:4;7921:14;8140:1;8133:4;8126:5;8122:16;8111:53;8100:64;-1:-1:-1;8100:64:157;;8234:47;8261:20;8270:9;8234:47;;8308:7;8300:31;;;;-1:-1:-1;;;8300:31:157;;;;;;;;;;;;7878:460;;7788:550;;;;:::o;5563:585::-;-1:-1:-1;;;;;;;;;;;;;;;;;5666:23:157;;:::i;:::-;5710:4;;5699:15;;:8;5735:4;;;;5724:8;;;:15;5760:4;;5749:8;;;;:15;;;;5785:4;;;;5774:8;;;:15;-1:-1:-1;;5965:1:157;5959:4;5699:15;5949:1;5942:4;5935:5;5931:16;5920:53;5909:64;-1:-1:-1;5909:64:157;;6043:47;6070:20;6079:9;6043:47;;6118:7;6110:31;;;;-1:-1:-1;;;6110:31:157;;;;;;;;;;;4804:128;4853:14;;:::i;:::-;-1:-1:-1;4886:39:157;;;;;;;;4245:102;4886:39;;;;;;4395:102;4886:39;;;;;;;;;;;;;;4545:102;4886:39;;4695:102;4886:39;;;;;;;;;;;;;;;4804:128::o;9829:1112::-;10037:31;;;;;;;;;;;;;;;;;;10078;;;;;;;;;;;;;;;;10015:4;;;;10037:31;10120:24;;:::i;:::-;10160:9;10155:302;10179:1;10175;:5;10155:302;;;10201:9;10213:5;:1;10217;10213:5;:::i;:::-;10201:17;;10247:2;10250:1;10247:5;;;;;;;:::i;:::-;;;;;:7;10232:5;10238;:1;10247:7;10238:5;:::i;:::-;10232:12;;;;;;;:::i;:::-;;;;:22;10283:2;10286:1;10283:5;;;;;;;:::i;:::-;;;;;:7;;;10268:5;10274:1;10278;10274:5;;;;:::i;:::-;10268:12;;;;;;;:::i;:::-;;;;:22;10319:2;10322:1;10319:5;;;;;;;:::i;:::-;;;;;:7;:10;10304:5;10310;:1;10314;10310:5;:::i;:::-;10304:12;;;;;;;:::i;:::-;;;;:25;10358:2;10361:1;10358:5;;;;;;;:::i;:::-;;;;;:7;10366:1;10358:10;;;;10343:5;10349;:1;10353;10349:5;:::i;:::-;10343:12;;;;;;;:::i;:::-;;;;:25;10397:2;10400:1;10397:5;;;;;;;:::i;:::-;;;;;:7;;;10405:1;10397:10;;;;;;;:::i;:::-;;;;;10382:5;10388;:1;10392;10388:5;:::i;:::-;10382:12;;;;;;;:::i;:::-;;;;:25;10436:2;10439:1;10436:5;;;;;;;:::i;:::-;;;;;:7;;;10444:1;10436:10;;;;;;;:::i;:::-;;;;;10421:5;10427;:1;10431;10427:5;:::i;:::-;10421:12;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;10182:3:157;;10155:302;;;;10467:21;;:::i;:::-;10498:12;10672:4;10667:3;10652:13;10645:5;10642:1;10630:10;10619:58;10922:6;;10608:69;;10922:11;;;;-1:-1:-1;10905:29:157;;-1:-1:-1;;;;;;;;;;9829:1112:157:o;8588:1024::-;8758:31;;;;;;;;;;;;;;;;;;8799;;;;;;;;;;;;;;;;8742:4;;8841:24;;:::i;:::-;8881:9;8876:302;8900:1;8896;:5;8876:302;;;8922:9;8934:5;:1;8938;8934:5;:::i;:::-;8922:17;;8968:2;8971:1;8968:5;;;;;;;:::i;:::-;;;;;:7;8953:5;8959;:1;8968:7;8959:5;:::i;:::-;8953:12;;;;;;;:::i;:::-;;;;:22;9004:2;9007:1;9004:5;;;;;;;:::i;:::-;;;;;:7;;;8989:5;8995:1;8999;8995:5;;;;:::i;:::-;8989:12;;;;;;;:::i;:::-;;;;:22;9040:2;9043:1;9040:5;;;;;;;:::i;:::-;;;;;:7;:10;9025:5;9031;:1;9035;9031:5;:::i;:::-;9025:12;;;;;;;:::i;:::-;;;;:25;9079:2;9082:1;9079:5;;;;;;;:::i;:::-;;;;;:7;9087:1;9079:10;;;;9064:5;9070;:1;9074;9070:5;:::i;:::-;9064:12;;;;;;;:::i;:::-;;;;:25;9118:2;9121:1;9118:5;;;;;;;:::i;:::-;;;;;:7;;;9126:1;9118:10;;;;;;;:::i;:::-;;;;;9103:5;9109;:1;9113;9109:5;:::i;:::-;9103:12;;;;;;;:::i;:::-;;;;:25;9157:2;9160:1;9157:5;;;;;;;:::i;:::-;;;;;:7;;;9165:1;9157:10;;;;;;;:::i;:::-;;;;;9142:5;9148;:1;9152;9148:5;:::i;:::-;9142:12;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;8903:3:157;;8876:302;;;;9188:21;;:::i;:::-;9219:12;9399:4;9394:3;9379:13;9372:5;9369:1;9362:4;9355:5;9351:16;9340:64;9329:75;-1:-1:-1;9329:75:157;;9474:47;9501:20;9510:9;9474:47;;9549:7;9541:35;;;;-1:-1:-1;;;9541:35:157;;;;;;;;;;;;-1:-1:-1;9594:6:157;:11;;;;-1:-1:-1;;;;;;;;8588:1024:157:o;2167:730:40:-;2248:7;2257:12;2285:9;:16;2305:2;2285:22;2281:610;;2621:4;2606:20;;2600:27;2670:4;2655:20;;2649:27;2727:4;2712:20;;2706:27;2323:9;2698:36;2768:25;2779:4;2698:36;2600:27;2649;2768:10;:25::i;:::-;2761:32;;;;;;;;;2281:610;-1:-1:-1;2840:1:40;;-1:-1:-1;2844:35:40;2824:56;;1852:495:42;1995:4;2012:12;2026:19;2049:6;-1:-1:-1;;;;;2049:17:42;2103:45;;;2150:4;2156:9;2080:86;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2080:86:42;;;;;;;;;;;;;;-1:-1:-1;;;;;2080:86:42;-1:-1:-1;;;;;;2080:86:42;;;;;;;;;;2049:127;;;;2080:86;2049:127;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:165;;;;2194:7;:42;;;;;2234:2;2217:6;:13;:19;;2194:42;:145;;;;-1:-1:-1;2252:29:42;;-1:-1:-1;;;2293:45:42;2252:29;;;;;;;;;;;;:::i;:::-;:87;;1852:495;-1:-1:-1;;;;;;1852:495:42:o;12283:447:157:-;12351:7;;;-1:-1:-1;;;;;;;;;;;12482:1:157;-1:-1:-1;;;;;;;;;;;12466:1:157;-1:-1:-1;;;;;;;;;;;12450:1:157;12447;12440:24;12433:47;12426:70;12411:85;;12593:9;12605:91;12612:4;12618:65;-1:-1:-1;;;;;;;;;;;12605:6:157;:91::i;:::-;12715:4;;12593:103;;-1:-1:-1;12283:447:157;;-1:-1:-1;;;12283:447:157:o;5031:1456:40:-;5119:7;;6043:66;6030:79;;6026:161;;;-1:-1:-1;6141:1:40;;-1:-1:-1;6145:30:40;6125:51;;6026:161;6298:24;;;6281:14;6298:24;;;;;;;;;25759:25:318;;;25832:4;25820:17;;25800:18;;;25793:45;;;;25854:18;;;25847:34;;;25897:18;;;25890:34;;;6298:24:40;;25731:19:318;;6298:24:40;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6298:24:40;;-1:-1:-1;;6298:24:40;;;-1:-1:-1;;;;;;;6336:20:40;;6332:101;;6388:1;6392:29;6372:50;;;;;;;6332:101;6451:6;-1:-1:-1;6459:20:40;;-1:-1:-1;5031:1456:40;;;;;;;;:::o;12736:835:157:-;12827:14;12853:12;12875:24;;:::i;:::-;12909:23;;:::i;:::-;12953:4;12942:15;;;13025:8;;;:15;;;13109:8;;;:15;;;13193:8;;;:16;;;13219:8;;;:20;;;13249:8;;;:19;;;13357:6;13351:4;12942:15;13255:1;13334:4;13327:5;13323:16;13312:58;13301:69;-1:-1:-1;13301:69:157;;13440:47;13467:20;13476:9;13440:47;;13514:7;13506:32;;;;-1:-1:-1;;;13506:32:157;;;;;;;;;;;;-1:-1:-1;13555:9:157;;;-1:-1:-1;;;;;12736:835:157:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:127:318:-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:257;400:4;394:11;;;432:17;;479:18;464:34;;500:22;;;461:62;458:88;;;526:18;;:::i;:::-;562:4;555:24;328:257;:::o;590:275::-;661:2;655:9;726:2;707:13;;-1:-1:-1;;703:27:318;691:40;;761:18;746:34;;782:22;;;743:62;740:88;;;808:18;;:::i;:::-;844:2;837:22;590:275;;-1:-1:-1;590:275:318:o;870:173::-;938:20;;-1:-1:-1;;;;;987:31:318;;977:42;;967:70;;1033:1;1030;1023:12;967:70;870:173;;;:::o;1048:397::-;1106:5;1154:4;1142:9;1137:3;1133:19;1129:30;1126:50;;;1172:1;1169;1162:12;1126:50;1194:22;;:::i;:::-;1185:31;;1239:29;1258:9;1239:29;:::i;:::-;1232:5;1225:44;1321:2;1310:9;1306:18;1293:32;1369:10;1360:7;1356:24;1347:7;1344:37;1334:65;;1395:1;1392;1385:12;1334:65;1426:2;1415:14;;1408:31;1419:5;1048:397;-1:-1:-1;;1048:397:318:o;1450:310::-;1548:6;1556;1609:2;1597:9;1588:7;1584:23;1580:32;1577:52;;;1625:1;1622;1615:12;1577:52;1648:49;1689:7;1678:9;1648:49;:::i;:::-;1638:59;;1716:38;1750:2;1739:9;1735:18;1716:38;:::i;:::-;1706:48;;1450:310;;;;;:::o;2212:616::-;2262:5;2315:3;2308:4;2300:6;2296:17;2292:27;2282:55;;2333:1;2330;2323:12;2282:55;2434:19;2412:2;2434:19;:::i;:::-;2477:3;2515:2;2507:6;2503:15;2541:3;2533:6;2530:15;2527:35;;;2558:1;2555;2548:12;2527:35;2582:6;2597:200;2613:6;2608:3;2605:15;2597:200;;;2705:17;;2735:18;;2782:4;2773:14;;;;2630;2597:200;;;-1:-1:-1;2815:7:318;;2212:616;-1:-1:-1;;;;;2212:616:318:o;2833:854::-;2953:6;2961;3005:9;2996:7;2992:23;3035:3;3031:2;3027:12;3024:32;;;3052:1;3049;3042:12;3024:32;3076:4;3072:2;3068:13;3065:33;;;3094:1;3091;3084:12;3065:33;3120:22;;:::i;:::-;3187:23;;3219:22;;3314:2;3299:18;;;3286:32;3334:14;;;3327:31;3226:5;-1:-1:-1;3416:4:318;-1:-1:-1;;3398:16:318;;3394:27;3391:47;;;3434:1;3431;3424:12;3391:47;;3462:22;;:::i;:::-;3509:55;3556:7;3549:4;3538:9;3534:20;3509:55;:::i;:::-;3500:7;3493:72;3599:55;3646:7;3639:4;3628:9;3624:20;3599:55;:::i;:::-;3594:2;3585:7;3581:16;3574:81;3674:7;3664:17;;;2833:854;;;;;:::o;3692:288::-;3733:3;3771:5;3765:12;3798:6;3793:3;3786:19;3854:6;3847:4;3840:5;3836:16;3829:4;3824:3;3820:14;3814:47;3906:1;3899:4;3890:6;3885:3;3881:16;3877:27;3870:38;3969:4;3962:2;3958:7;3953:2;3945:6;3941:15;3937:29;3932:3;3928:39;3924:50;3917:57;;;3692:288;;;;:::o;3985:217::-;4132:2;4121:9;4114:21;4095:4;4152:44;4192:2;4181:9;4177:18;4169:6;4152:44;:::i;4431:347::-;4482:8;4492:6;4546:3;4539:4;4531:6;4527:17;4523:27;4513:55;;4564:1;4561;4554:12;4513:55;-1:-1:-1;4587:20:318;;4630:18;4619:30;;4616:50;;;4662:1;4659;4652:12;4616:50;4699:4;4691:6;4687:17;4675:29;;4751:3;4744:4;4735:6;4727;4723:19;4719:30;4716:39;4713:59;;;4768:1;4765;4758:12;4783:608;4901:6;4909;4917;4925;4978:3;4966:9;4957:7;4953:23;4949:33;4946:53;;;4995:1;4992;4985:12;4946:53;5018:29;5037:9;5018:29;:::i;:::-;5008:39;;5066:58;5116:7;5111:2;5100:9;5096:18;5066:58;:::i;:::-;5056:68;;5175:2;5164:9;5160:18;5147:32;5202:18;5194:6;5191:30;5188:50;;;5234:1;5231;5224:12;5188:50;5273:58;5323:7;5314:6;5303:9;5299:22;5273:58;:::i;:::-;4783:608;;;;-1:-1:-1;5350:8:318;-1:-1:-1;;;;4783:608:318:o;5396:236::-;5485:6;5538:2;5526:9;5517:7;5513:23;5509:32;5506:52;;;5554:1;5551;5544:12;5506:52;5577:49;5618:7;5607:9;5577:49;:::i;5637:127::-;5698:10;5693:3;5689:20;5686:1;5679:31;5729:4;5726:1;5719:15;5753:4;5750:1;5743:15;5769:237;5850:1;5843:5;5840:12;5830:143;;5895:10;5890:3;5886:20;5883:1;5876:31;5930:4;5927:1;5920:15;5958:4;5955:1;5948:15;5830:143;5982:18;;5769:237::o;6011:209::-;6158:2;6143:18;;6170:44;6147:9;6196:6;6170:44;:::i;6225:899::-;6332:6;6340;6393:2;6381:9;6372:7;6368:23;6364:32;6361:52;;;6409:1;6406;6399:12;6361:52;6432:49;6473:7;6462:9;6432:49;:::i;:::-;6422:59;;6532:2;6521:9;6517:18;6504:32;6559:18;6551:6;6548:30;6545:50;;;6591:1;6588;6581:12;6545:50;6614:22;;6667:4;6659:13;;6655:27;-1:-1:-1;6645:55:318;;6696:1;6693;6686:12;6645:55;6736:2;6723:16;6762:18;6754:6;6751:30;6748:56;;;6784:18;;:::i;:::-;6826:59;6873:2;6850:17;;-1:-1:-1;;6846:31:318;6879:4;6842:42;6826:59;:::i;:::-;6908:6;6901:5;6894:21;6958:7;6951:4;6942:6;6938:2;6934:15;6930:26;6927:39;6924:59;;;6979:1;6976;6969:12;6924:59;7038:6;7031:4;7027:2;7023:13;7016:4;7009:5;7005:16;6992:53;7092:1;7085:4;7076:6;7069:5;7065:18;7061:29;7054:40;7113:5;7103:15;;;;;6225:899;;;;;:::o;7418:310::-;7516:6;7524;7577:2;7565:9;7556:7;7552:23;7548:32;7545:52;;;7593:1;7590;7583:12;7545:52;7616:29;7635:9;7616:29;:::i;:::-;7606:39;;7664:58;7714:7;7709:2;7698:9;7694:18;7664:58;:::i;7733:303::-;7826:5;7849:1;7859:171;7873:4;7870:1;7867:11;7859:171;;;7932:13;;7920:26;;7975:4;7966:14;;;;8003:17;;;;7893:1;7886:9;7859:171;;8041:569;8265:4;8307:3;8296:9;8292:19;8284:27;;8344:6;8338:13;8327:9;8320:32;8408:4;8400:6;8396:17;8390:24;8383:4;8372:9;8368:20;8361:54;8424:59;8479:2;8468:9;8464:18;8455:6;8449:13;8424:59;:::i;:::-;8530:4;8522:6;8518:17;8512:24;8545:59;8599:3;8588:9;8584:19;8570:12;8545:59;:::i;:::-;;8041:569;;;;;:::o;9043:912::-;9181:6;9189;9197;9205;9213;9221;9274:3;9262:9;9253:7;9249:23;9245:33;9242:53;;;9291:1;9288;9281:12;9242:53;9314:29;9333:9;9314:29;:::i;:::-;9304:39;;9362:58;9412:7;9407:2;9396:9;9392:18;9362:58;:::i;:::-;9352:68;;9471:2;9460:9;9456:18;9443:32;9498:18;9490:6;9487:30;9484:50;;;9530:1;9527;9520:12;9484:50;9569:58;9619:7;9610:6;9599:9;9595:22;9569:58;:::i;:::-;9646:8;;-1:-1:-1;9543:84:318;-1:-1:-1;;9734:3:318;9719:19;;9706:33;9764:18;9751:32;;9748:52;;;9796:1;9793;9786:12;9748:52;9835:60;9887:7;9876:8;9865:9;9861:24;9835:60;:::i;:::-;9043:912;;;;-1:-1:-1;9043:912:318;;-1:-1:-1;9043:912:318;;9914:8;;9043:912;-1:-1:-1;;;9043:912:318:o;9960:385::-;10067:6;10075;10083;10136:3;10124:9;10115:7;10111:23;10107:33;10104:53;;;10153:1;10150;10143:12;10104:53;10176:29;10195:9;10176:29;:::i;:::-;10166:39;;10224:58;10274:7;10269:2;10258:9;10254:18;10224:58;:::i;:::-;10214:68;;10301:38;10335:2;10324:9;10320:18;10301:38;:::i;:::-;10291:48;;9960:385;;;;;:::o;10350:180::-;10409:6;10462:2;10450:9;10441:7;10437:23;10433:32;10430:52;;;10478:1;10475;10468:12;10430:52;-1:-1:-1;10501:23:318;;10350:180;-1:-1:-1;10350:180:318:o;10535:395::-;10648:6;10656;10709:2;10697:9;10688:7;10684:23;10680:32;10677:52;;;10725:1;10722;10715:12;10677:52;10748:49;10789:7;10778:9;10748:49;:::i;:::-;10738:59;;10847:2;10836:9;10832:18;10819:32;10880:1;10873:5;10870:12;10860:40;;10896:1;10893;10886:12;10860:40;10919:5;10909:15;;;10535:395;;;;;:::o;10935:412::-;11053:12;;11101:4;11090:16;;11084:23;-1:-1:-1;;;;;;11125:40:318;;;11053:12;11188:2;11177:14;;11174:167;;;-1:-1:-1;;;;;11299:31:318;-1:-1:-1;;;;;11264:31:318;11254:6;11250:2;11246:15;11243:1;11239:23;11235:61;11231:2;11227:70;11223:108;11214:117;;11174:167;;;10935:412;;;:::o;11352:127::-;11413:10;11408:3;11404:20;11401:1;11394:31;11444:4;11441:1;11434:15;11468:4;11465:1;11458:15;12024:271;12207:6;12199;12194:3;12181:33;12163:3;12233:16;;12258:13;;;12233:16;12024:271;-1:-1:-1;12024:271:318:o;12835:343::-;12914:6;12922;12975:2;12963:9;12954:7;12950:23;12946:32;12943:52;;;12991:1;12988;12981:12;12943:52;-1:-1:-1;;13036:16:318;;13142:2;13127:18;;;13121:25;13036:16;;13121:25;;-1:-1:-1;12835:343:318:o;13383:357::-;-1:-1:-1;;;;;13635:32:318;;13617:51;;13605:2;13590:18;;13677:57;13730:2;13715:18;;13707:6;13264:12;;-1:-1:-1;;;;;13260:38:318;13248:51;;13352:4;13341:16;;;13335:23;13360:10;13331:40;13315:14;;13308:64;13183:195;13745:277;13812:6;13865:2;13853:9;13844:7;13840:23;13836:32;13833:52;;;13881:1;13878;13871:12;13833:52;13913:9;13907:16;13966:5;13959:13;13952:21;13945:5;13942:32;13932:60;;13988:1;13985;13978:12;14389:380;14468:1;14464:12;;;;14511;;;14532:61;;14586:4;14578:6;14574:17;14564:27;;14532:61;14639:2;14631:6;14628:14;14608:18;14605:38;14602:161;;14685:10;14680:3;14676:20;14673:1;14666:31;14720:4;14717:1;14710:15;14748:4;14745:1;14738:15;14602:161;;14389:380;;;:::o;14774:363::-;13264:12;;-1:-1:-1;;;;;13260:38:318;13248:51;;13352:4;13341:16;;;13335:23;13360:10;13331:40;13315:14;;;13308:64;15009:2;14994:18;;15078:53;15127:2;15116:9;15112:18;15104:6;15078:53;:::i;15142:620::-;15203:5;15256:3;15249:4;15241:6;15237:17;15233:27;15223:55;;15274:1;15271;15264:12;15223:55;15375:19;15353:2;15375:19;:::i;:::-;15418:3;15456:2;15448:6;15444:15;15482:3;15474:6;15471:15;15468:35;;;15499:1;15496;15489:12;15468:35;15523:6;15538:193;15554:6;15549:3;15546:15;15538:193;;;15646:10;;15669:18;;15716:4;15707:14;;;;15571;15538:193;;15767:591;15910:6;15918;15926;15934;15987:3;15975:9;15966:7;15962:23;15958:33;15955:53;;;16004:1;16001;15994:12;15955:53;16049:16;;16155:2;16140:18;;16134:25;16049:16;;-1:-1:-1;16134:25:318;-1:-1:-1;16204:64:318;16260:7;16255:2;16240:18;;16204:64;:::i;:::-;16194:74;;16287:65;16344:7;16338:3;16327:9;16323:19;16287:65;:::i;:::-;16277:75;;15767:591;;;;;;;:::o;16363:650::-;13264:12;;-1:-1:-1;;;;;13260:38:318;13248:51;;13352:4;13341:16;;;13335:23;13360:10;13331:40;13315:14;;;13308:64;16688:53;16737:2;16726:9;16722:18;16714:6;16688:53;:::i;:::-;16777:3;16772:2;16761:9;16757:18;16750:31;16818:6;16812:3;16801:9;16797:19;16790:35;16876:6;16868;16862:3;16851:9;16847:19;16834:49;16933:1;16903:22;;;16927:3;16899:32;;;16892:43;;;;16996:2;16975:15;;;-1:-1:-1;;16971:29:318;16956:45;16952:55;;16363:650;-1:-1:-1;;;16363:650:318:o;18820:297::-;18938:12;;18985:4;18974:16;;;18968:23;;18938:12;19003:16;;19000:111;;;-1:-1:-1;;19077:4:318;19073:17;;;;19070:1;19066:25;19062:38;19051:50;;18820:297;-1:-1:-1;18820:297:318:o;19621:374::-;19742:19;;-1:-1:-1;;;;;;19779:40:318;;;19839:2;19831:11;;19828:161;;;-1:-1:-1;;;;;19947:31:318;-1:-1:-1;;;;;19912:31:318;19905:3;19901:2;19897:12;19894:1;19890:20;19886:58;19882:2;19878:67;19874:105;19865:114;;19828:161;;19621:374;;;;:::o;20000:572::-;20132:6;20140;20148;20156;20209:3;20197:9;20188:7;20184:23;20180:33;20177:53;;;20226:1;20223;20216:12;20177:53;20271:23;;;-1:-1:-1;20391:2:318;20376:18;;20363:32;;-1:-1:-1;20440:53:318;20485:7;20480:2;20465:18;;20440:53;:::i;:::-;20430:63;;20512:54;20558:7;20552:3;20541:9;20537:19;20512:54;:::i;20577:346::-;20645:6;20653;20706:2;20694:9;20685:7;20681:23;20677:32;20674:52;;;20722:1;20719;20712:12;20674:52;-1:-1:-1;;20767:23:318;;;20887:2;20872:18;;;20859:32;;-1:-1:-1;20577:346:318:o;21257:517::-;21358:2;21353:3;21350:11;21347:421;;;21394:5;21391:1;21384:16;21438:4;21435:1;21425:18;21508:2;21496:10;21492:19;21489:1;21485:27;21479:4;21475:38;21544:4;21532:10;21529:20;21526:47;;;-1:-1:-1;21567:4:318;21526:47;21622:2;21617:3;21613:12;21610:1;21606:20;21600:4;21596:31;21586:41;;21677:81;21695:2;21688:5;21685:13;21677:81;;;21754:1;21740:16;;21721:1;21710:13;21677:81;;;21681:3;;21347:421;21257:517;;;:::o;21950:1295::-;22074:3;22068:10;22101:18;22093:6;22090:30;22087:56;;;22123:18;;:::i;:::-;22152:96;22241:6;22201:38;22233:4;22227:11;22201:38;:::i;:::-;22195:4;22152:96;:::i;:::-;22297:4;22328:2;22317:14;;22345:1;22340:648;;;;23032:1;23049:6;23046:89;;;-1:-1:-1;23101:19:318;;;23095:26;23046:89;-1:-1:-1;;21907:1:318;21903:11;;;21899:24;21895:29;21885:40;21931:1;21927:11;;;21882:57;23148:81;;22310:929;;22340:648;21204:1;21197:14;;;21241:4;21228:18;;-1:-1:-1;;22376:20:318;;;22493:222;22507:7;22504:1;22501:14;22493:222;;;22589:19;;;22583:26;22568:42;;22696:4;22681:20;;;;22649:1;22637:14;;;;22523:12;22493:222;;;22497:3;22743:6;22734:7;22731:19;22728:201;;;22804:19;;;22798:26;-1:-1:-1;;22887:1:318;22883:14;;;22899:3;22879:24;22875:37;22871:42;22856:58;22841:74;;22728:201;-1:-1:-1;;;;22975:1:318;22959:14;;;22955:22;22942:36;;-1:-1:-1;21950:1295:318:o;23382:209::-;23414:1;23440;23430:132;;23484:10;23479:3;23475:20;23472:1;23465:31;23519:4;23516:1;23509:15;23547:4;23544:1;23537:15;23430:132;-1:-1:-1;23576:9:318;;23382:209::o;24309:127::-;24370:10;24365:3;24361:20;24358:1;24351:31;24401:4;24398:1;24391:15;24425:4;24422:1;24415:15;24441:168;24514:9;;;24545;;24562:15;;;24556:22;;24542:37;24532:71;;24583:18;;:::i;24614:125::-;24679:9;;;24700:10;;;24697:36;;;24713:18;;:::i;24744:288::-;24919:6;24908:9;24901:25;24962:2;24957;24946:9;24942:18;24935:30;24882:4;24982:44;25022:2;25011:9;25007:18;24999:6;24982:44;:::i;:::-;24974:52;24744:288;-1:-1:-1;;;;24744:288:318:o;25037:301::-;25166:3;25204:6;25198:13;25250:6;25243:4;25235:6;25231:17;25226:3;25220:37;25312:1;25276:16;;25301:13;;;-1:-1:-1;25276:16:318;25037:301;-1:-1:-1;25037:301:318:o;25343:184::-;25413:6;25466:2;25454:9;25445:7;25441:23;25437:32;25434:52;;;25482:1;25479;25472:12;25434:52;-1:-1:-1;25505:16:318;;25343:184;-1:-1:-1;25343:184:318:o",
    "linkReferences": {},
    "immutableReferences": {
      "91333": [
        {
          "start": 405,
          "length": 32
        },
        {
          "start": 4767,
          "length": 32
        }
      ],
      "91395": [
        {
          "start": 1018,
          "length": 32
        },
        {
          "start": 5806,
          "length": 32
        }
      ],
      "96728": [
        {
          "start": 827,
          "length": 32
        },
        {
          "start": 1565,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BN254_KEY_REGISTRATION_TYPEHASH()": "b05c8f6d",
    "ECDSA_KEY_REGISTRATION_TYPEHASH()": "166aa127",
    "allocationManager()": "ca8aa7c7",
    "configureOperatorSet((address,uint32),uint8)": "ea0d8149",
    "deregisterKey(address,(address,uint32))": "87ab86f4",
    "domainSeparator()": "f698da25",
    "encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))": "50435add",
    "getBN254Key((address,uint32),address)": "9a43e3fb",
    "getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)": "7690e395",
    "getECDSAAddress((address,uint32),address)": "3b32a7bd",
    "getECDSAKey((address,uint32),address)": "aa165c30",
    "getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)": "d9f12db2",
    "getKeyHash((address,uint32),address)": "ea194e2e",
    "getOperatorFromSigningKey((address,uint32),bytes)": "8256909c",
    "getOperatorSetCurveType((address,uint32))": "7cffe48c",
    "isKeyGloballyRegistered(bytes32)": "dab42d7e",
    "isRegistered((address,uint32),address)": "bd30a0b9",
    "permissionController()": "4657e26a",
    "registerKey(address,(address,uint32),bytes,bytes)": "d40cda16",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"contract IAllocationManager\",\"name\":\"_allocationManager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ConfigurationAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECAddFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECMulFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECPairingFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpModFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurveType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKeyFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKeypair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KeyAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"KeyNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorSetNotConfigured\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorStillSlashable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPubkey\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct BN254.G1Point\",\"name\":\"newAggregateKey\",\"type\":\"tuple\"}],\"name\":\"AggregateBN254KeyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"KeyDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"}],\"name\":\"KeyRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"OperatorSetConfigured\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BN254_KEY_REGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ECDSA_KEY_REGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"configureOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"deregisterKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"g1Point\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"g2Point\",\"type\":\"tuple\"}],\"name\":\"encodeBN254KeyData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getBN254Key\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"g1Point\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"g2Point\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"keyData\",\"type\":\"bytes\"}],\"name\":\"getBN254KeyRegistrationMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getECDSAAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getECDSAKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"keyAddress\",\"type\":\"address\"}],\"name\":\"getECDSAKeyRegistrationMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getKeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"keyData\",\"type\":\"bytes\"}],\"name\":\"getOperatorFromSigningKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getOperatorSetCurveType\",\"outputs\":[{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"isKeyGloballyRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"keyData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"registerKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides registration and deregistration of keys with support for aggregate keys      Keys must be unique globally across all AVSs and operator sets      Operators call functions directly to manage their own keys      Aggregate keys are updated via callback from AVSRegistrar on registration and deregistration\",\"errors\":{\"ECAddFailed()\":[{\"details\":\"Thrown when the sum of two points of G1 fails\"}],\"ECMulFailed()\":[{\"details\":\"Thrown when the scalar multiplication of a point of G1 fails\"}],\"ECPairingFailed()\":[{\"details\":\"Thrown when the pairing check fails\"}],\"ExpModFailed()\":[{\"details\":\"Thrown when the exponentiation mod fails\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}]},\"kind\":\"dev\",\"methods\":{\"configureOperatorSet((address,uint32),uint8)\":{\"details\":\"Only authorized callers for the AVS can configure operator sets\",\"params\":{\"curveType\":\"Type of curve (ECDSA, BN254)\",\"operatorSet\":\"The operator set to configure\"}},\"constructor\":{\"details\":\"Constructor for the KeyRegistrar contract\",\"params\":{\"_allocationManager\":\"The allocation manager contract\",\"_permissionController\":\"The permission controller contract\",\"_version\":\"The version string for the contract\"}},\"deregisterKey(address,(address,uint32))\":{\"details\":\"Can be called by the operator directly or by addresses they've authorized via PermissionControllerReverts if key was not registeredReverts if operator is still slashable for the operator set (prevents key rotation while slashable)Keys remain in global key registry to prevent reuse\",\"params\":{\"operator\":\"Address of the operator to deregister key for\",\"operatorSet\":\"The operator set to deregister the key from\"}},\"domainSeparator()\":{\"details\":\"The domain separator is computed according to EIP-712 specification, using:      - The hardcoded name \\\"EigenLayer\\\"      - The contract's version string      - The current chain ID      - This contract's addressSee https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator.\",\"returns\":{\"_0\":\"The 32-byte domain separator hash used in EIP-712 structured data signing.\"}},\"encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))\":{\"params\":{\"g1Point\":\"The BN254 G1 public key\",\"g2Point\":\"The BN254 G2 public key\"},\"returns\":{\"_0\":\"The encoded key data\"}},\"getBN254Key((address,uint32),address)\":{\"details\":\"Reverts if the operatorSet is not configured for BN254\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"g1Point\":\"The BN254 G1 public key\",\"g2Point\":\"The BN254 G2 public key\"}},\"getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)\":{\"params\":{\"keyData\":\"The BN254 key data\",\"operator\":\"The operator address\",\"operatorSet\":\"The operator set\"},\"returns\":{\"_0\":\"The message hash for signing\"}},\"getECDSAAddress((address,uint32),address)\":{\"details\":\"Reverts if the operatorSet is not configured for ECDSA\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"_0\":\"pubkey The ECDSA public key in address format\"}},\"getECDSAKey((address,uint32),address)\":{\"details\":\"Reverts if the operatorSet is not configured for ECDSA\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"_0\":\"pubkey The ECDSA public key in bytes format\"}},\"getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)\":{\"params\":{\"keyAddress\":\"The address of the key\",\"operator\":\"The operator address\",\"operatorSet\":\"The operator set\"},\"returns\":{\"_0\":\"The message hash for signing\"}},\"getKeyHash((address,uint32),address)\":{\"details\":\"Reverts if the operatorSet is not configured\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key hash for\"},\"returns\":{\"_0\":\"keyHash The key hash\"}},\"getOperatorFromSigningKey((address,uint32),bytes)\":{\"details\":\"This function decodes the key data based on the curve type of the operator setThis function will return the operator address even if the operator is not registered for the operator set\",\"params\":{\"keyData\":\"The key data. For ECDSA, this is the signing key address. For BN254, this can be either the G1 key or the G1 and G2 key combined.\",\"operatorSet\":\"The operator set to get the operator for\"},\"returns\":{\"_0\":\"operator. Returns 0x0 if the key is not registered\",\"_1\":\"status registration status. Returns false if the key is not registered\"}},\"getOperatorSetCurveType((address,uint32))\":{\"params\":{\"operatorSet\":\"The operator set to get the curve type for\"},\"returns\":{\"_0\":\"The curve type, either ECDSA, BN254, or NONE\"}},\"isKeyGloballyRegistered(bytes32)\":{\"params\":{\"keyHash\":\"Hash of the key\"},\"returns\":{\"_0\":\"True if the key is globally registered\"}},\"isRegistered((address,uint32),address)\":{\"details\":\"If the operatorSet is not configured, this function will return false\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to check\"},\"returns\":{\"_0\":\"True if the key is registered, false otherwise\"}},\"registerKey(address,(address,uint32),bytes,bytes)\":{\"details\":\"Can be called by operator directly or by addresses they've authorized via PermissionControllerReverts if key is already registeredThere exist no restriction on the state of the operator with respect to the operatorSet. That is, an operator      does not have to be registered for the operator in the `AllocationManager` to register a key for it\",\"params\":{\"operator\":\"Address of the operator to register key for\",\"operatorSet\":\"The operator set to register the key for\",\"pubkey\":\"Public key bytes. For ECDSA, this is the address of the key. For BN254, this is the G1 and G2 key combined (see `encodeBN254KeyData`)\",\"signature\":\"Signature proving ownership. For ECDSA this is a signature of the `getECDSAKeyRegistrationMessageHash`. For BN254 this is a signature of the `getBN254KeyRegistrationMessageHash`.\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"title\":\"KeyRegistrar\",\"version\":1},\"userdoc\":{\"errors\":{\"ConfigurationAlreadySet()\":[{\"notice\":\"Error thrown when the configuration is already set\"}],\"InvalidCurveType()\":[{\"notice\":\"Error thrown when the curve type is invalid\"}],\"InvalidKeyFormat()\":[{\"notice\":\"Error thrown when the key format is invalid\"}],\"InvalidKeypair()\":[{\"notice\":\"Error thrown when the keypair is invalid\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when a signature is invalid.\"}],\"KeyAlreadyRegistered()\":[{\"notice\":\"Error thrown when a key is already registered\"}],\"KeyNotFound((address,uint32),address)\":[{\"notice\":\"Error thrown when the key is not found\"}],\"OperatorSetNotConfigured()\":[{\"notice\":\"Error thrown when the operator set is not configured\"}],\"OperatorStillSlashable((address,uint32),address)\":[{\"notice\":\"Error thrown when the operator is still slashable when trying to deregister a key\"}],\"SignatureExpired()\":[{\"notice\":\"Thrown when a signature has expired.\"}],\"ZeroAddress()\":[{\"notice\":\"Error thrown when the address is zero\"}],\"ZeroPubkey()\":[{\"notice\":\"Error thrown when the public key is zero\"}]},\"events\":{\"AggregateBN254KeyUpdated((address,uint32),(uint256,uint256))\":{\"notice\":\"Emitted when the aggregate BN254 key is updated\"},\"KeyDeregistered((address,uint32),address,uint8)\":{\"notice\":\"Emitted when a key is deregistered\"},\"KeyRegistered((address,uint32),address,uint8,bytes)\":{\"notice\":\"Emitted when a key is registered\"},\"OperatorSetConfigured((address,uint32),uint8)\":{\"notice\":\"Emitted when an operator set is configured\"}},\"kind\":\"user\",\"methods\":{\"configureOperatorSet((address,uint32),uint8)\":{\"notice\":\"Configures an operator set with curve type\"},\"deregisterKey(address,(address,uint32))\":{\"notice\":\"Deregisters a cryptographic key for an operator with a specific operator set\"},\"domainSeparator()\":{\"notice\":\"Computes the EIP-712 domain separator used for signature validation.\"},\"encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))\":{\"notice\":\"Encodes the BN254 key data into a bytes array\"},\"getBN254Key((address,uint32),address)\":{\"notice\":\"Gets the BN254 public key for an operator with a specific operator set\"},\"getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)\":{\"notice\":\"Returns the message hash for BN254 key registration\"},\"getECDSAAddress((address,uint32),address)\":{\"notice\":\"Gets the ECDSA public key for an operator with a specific operator set\"},\"getECDSAKey((address,uint32),address)\":{\"notice\":\"Gets the ECDSA public key for an operator with a specific operator set as bytes\"},\"getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)\":{\"notice\":\"Returns the message hash for ECDSA key registration\"},\"getKeyHash((address,uint32),address)\":{\"notice\":\"Gets the key hash for an operator with a specific operator set\"},\"getOperatorFromSigningKey((address,uint32),bytes)\":{\"notice\":\"Gets the operator from signing key\"},\"getOperatorSetCurveType((address,uint32))\":{\"notice\":\"Gets the curve type for an operator set\"},\"isKeyGloballyRegistered(bytes32)\":{\"notice\":\"Checks if a key hash is globally registered\"},\"isRegistered((address,uint32),address)\":{\"notice\":\"Checks if a key is registered for an operator with a specific operator set\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"registerKey(address,(address,uint32),bytes,bytes)\":{\"notice\":\"Registers a cryptographic key for an operator with a specific operator set\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"notice\":\"A core singleton contract that manages operator keys for different AVSs with global key uniqueness\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/permissions/KeyRegistrar.sol\":\"KeyRegistrar\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol\":{\"keccak256\":\"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d\",\"dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol\":{\"keccak256\":\"0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b\",\"dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0xc0d272c84e3c67c6398f73cb3676ba752d17d5db12cbd831a6ffaed1851b6343\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b445b5ea97ca59cf7d10f48b50ee36b3af6588a8f5ed3960f6e55d70e8a0d651\",\"dweb:/ipfs/QmUpmdkpqL8swHauqvoowfLN5xePtRNfefeFeBogFbQV5R\"]},\"src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c\",\"dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f\",\"dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e\",\"dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe\"]},\"src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"src/contracts/libraries/BN254SignatureVerifier.sol\":{\"keccak256\":\"0x92afd8306d1dc64e290600cce1da66435319c2b1bc8f9a926080c301ab61a839\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f6bae17ee733ad08e8e70724a56913d6add435c997ab64c2e922edebf7a7752b\",\"dweb:/ipfs/QmZDA3GEQ5nhn6dWTM3fKRDLF3pjLPYm8KLDXVgBjdUKXt\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add\",\"dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/mixins/SignatureUtilsMixin.sol\":{\"keccak256\":\"0x99633a417aaf4f3af1c9d432921f30a9723a4d7257546cf5c963dc23ca8f436a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ed3046a8aa6c4bbd5be361e8505c3c61c1f54f02d0337c8344d3f9bf1f745542\",\"dweb:/ipfs/QmPcJeQn5vMGaJEwkNCKoeDvEH1a1koMNUy6rgdsccVuky\"]},\"src/contracts/permissions/KeyRegistrar.sol\":{\"keccak256\":\"0x887cc57117f1aa075db78b6c933ef72c4c2a7134f8e90c831f882028f023646d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93517858b69ec8440d195068832182bc96e965750654140710b5b4399862d484\",\"dweb:/ipfs/QmbaNVnbA4f2rV2qbKU9DGdZTD9LKPFYMAdVPha34EgTAa\"]},\"src/contracts/permissions/KeyRegistrarStorage.sol\":{\"keccak256\":\"0x01ca105a988866dc2ba10cb64cf10fc34c75a3172d34f1dc787f931d6669388c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://741070a49a5062c66c5dbfc110dba2c9f5796c45b7df3a7b8f90281a2836156a\",\"dweb:/ipfs/QmZiYYSwLSoq2y4d3VwxXgu8yqVd7zhhBV77v7zdfghTBu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "contract IAllocationManager",
              "name": "_allocationManager",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ConfigurationAlreadySet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECAddFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECMulFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECPairingFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpModFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCurveType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidKeyFormat"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidKeypair"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "KeyAlreadyRegistered"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KeyNotFound"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorSetNotConfigured"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorStillSlashable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureExpired"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroPubkey"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct BN254.G1Point",
              "name": "newAggregateKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AggregateBN254KeyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "KeyDeregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "pubkey",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "KeyRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetConfigured",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BN254_KEY_REGISTRATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ECDSA_KEY_REGISTRATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allocationManager",
          "outputs": [
            {
              "internalType": "contract IAllocationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configureOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterKey"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BN254.G1Point",
              "name": "g1Point",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct BN254.G2Point",
              "name": "g2Point",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encodeBN254KeyData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBN254Key",
          "outputs": [
            {
              "internalType": "struct BN254.G1Point",
              "name": "g1Point",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct BN254.G2Point",
              "name": "g2Point",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "keyData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBN254KeyRegistrationMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getECDSAAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getECDSAKey",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "keyAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getECDSAKeyRegistrationMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKeyHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "keyData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorFromSigningKey",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetCurveType",
          "outputs": [
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "keyHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isKeyGloballyRegistered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRegistered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "keyData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerKey"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "configureOperatorSet((address,uint32),uint8)": {
            "details": "Only authorized callers for the AVS can configure operator sets",
            "params": {
              "curveType": "Type of curve (ECDSA, BN254)",
              "operatorSet": "The operator set to configure"
            }
          },
          "constructor": {
            "details": "Constructor for the KeyRegistrar contract",
            "params": {
              "_allocationManager": "The allocation manager contract",
              "_permissionController": "The permission controller contract",
              "_version": "The version string for the contract"
            }
          },
          "deregisterKey(address,(address,uint32))": {
            "details": "Can be called by the operator directly or by addresses they've authorized via PermissionControllerReverts if key was not registeredReverts if operator is still slashable for the operator set (prevents key rotation while slashable)Keys remain in global key registry to prevent reuse",
            "params": {
              "operator": "Address of the operator to deregister key for",
              "operatorSet": "The operator set to deregister the key from"
            }
          },
          "domainSeparator()": {
            "details": "The domain separator is computed according to EIP-712 specification, using:      - The hardcoded name \"EigenLayer\"      - The contract's version string      - The current chain ID      - This contract's addressSee https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator.",
            "returns": {
              "_0": "The 32-byte domain separator hash used in EIP-712 structured data signing."
            }
          },
          "encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))": {
            "params": {
              "g1Point": "The BN254 G1 public key",
              "g2Point": "The BN254 G2 public key"
            },
            "returns": {
              "_0": "The encoded key data"
            }
          },
          "getBN254Key((address,uint32),address)": {
            "details": "Reverts if the operatorSet is not configured for BN254",
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to get the key for"
            },
            "returns": {
              "g1Point": "The BN254 G1 public key",
              "g2Point": "The BN254 G2 public key"
            }
          },
          "getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)": {
            "params": {
              "keyData": "The BN254 key data",
              "operator": "The operator address",
              "operatorSet": "The operator set"
            },
            "returns": {
              "_0": "The message hash for signing"
            }
          },
          "getECDSAAddress((address,uint32),address)": {
            "details": "Reverts if the operatorSet is not configured for ECDSA",
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to get the key for"
            },
            "returns": {
              "_0": "pubkey The ECDSA public key in address format"
            }
          },
          "getECDSAKey((address,uint32),address)": {
            "details": "Reverts if the operatorSet is not configured for ECDSA",
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to get the key for"
            },
            "returns": {
              "_0": "pubkey The ECDSA public key in bytes format"
            }
          },
          "getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)": {
            "params": {
              "keyAddress": "The address of the key",
              "operator": "The operator address",
              "operatorSet": "The operator set"
            },
            "returns": {
              "_0": "The message hash for signing"
            }
          },
          "getKeyHash((address,uint32),address)": {
            "details": "Reverts if the operatorSet is not configured",
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to get the key hash for"
            },
            "returns": {
              "_0": "keyHash The key hash"
            }
          },
          "getOperatorFromSigningKey((address,uint32),bytes)": {
            "details": "This function decodes the key data based on the curve type of the operator setThis function will return the operator address even if the operator is not registered for the operator set",
            "params": {
              "keyData": "The key data. For ECDSA, this is the signing key address. For BN254, this can be either the G1 key or the G1 and G2 key combined.",
              "operatorSet": "The operator set to get the operator for"
            },
            "returns": {
              "_0": "operator. Returns 0x0 if the key is not registered",
              "_1": "status registration status. Returns false if the key is not registered"
            }
          },
          "getOperatorSetCurveType((address,uint32))": {
            "params": {
              "operatorSet": "The operator set to get the curve type for"
            },
            "returns": {
              "_0": "The curve type, either ECDSA, BN254, or NONE"
            }
          },
          "isKeyGloballyRegistered(bytes32)": {
            "params": {
              "keyHash": "Hash of the key"
            },
            "returns": {
              "_0": "True if the key is globally registered"
            }
          },
          "isRegistered((address,uint32),address)": {
            "details": "If the operatorSet is not configured, this function will return false",
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to check"
            },
            "returns": {
              "_0": "True if the key is registered, false otherwise"
            }
          },
          "registerKey(address,(address,uint32),bytes,bytes)": {
            "details": "Can be called by operator directly or by addresses they've authorized via PermissionControllerReverts if key is already registeredThere exist no restriction on the state of the operator with respect to the operatorSet. That is, an operator      does not have to be registered for the operator in the `AllocationManager` to register a key for it",
            "params": {
              "operator": "Address of the operator to register key for",
              "operatorSet": "The operator set to register the key for",
              "pubkey": "Public key bytes. For ECDSA, this is the address of the key. For BN254, this is the G1 and G2 key combined (see `encodeBN254KeyData`)",
              "signature": "Signature proving ownership. For ECDSA this is a signature of the `getECDSAKeyRegistrationMessageHash`. For BN254 this is a signature of the `getBN254KeyRegistrationMessageHash`."
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "configureOperatorSet((address,uint32),uint8)": {
            "notice": "Configures an operator set with curve type"
          },
          "deregisterKey(address,(address,uint32))": {
            "notice": "Deregisters a cryptographic key for an operator with a specific operator set"
          },
          "domainSeparator()": {
            "notice": "Computes the EIP-712 domain separator used for signature validation."
          },
          "encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))": {
            "notice": "Encodes the BN254 key data into a bytes array"
          },
          "getBN254Key((address,uint32),address)": {
            "notice": "Gets the BN254 public key for an operator with a specific operator set"
          },
          "getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)": {
            "notice": "Returns the message hash for BN254 key registration"
          },
          "getECDSAAddress((address,uint32),address)": {
            "notice": "Gets the ECDSA public key for an operator with a specific operator set"
          },
          "getECDSAKey((address,uint32),address)": {
            "notice": "Gets the ECDSA public key for an operator with a specific operator set as bytes"
          },
          "getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)": {
            "notice": "Returns the message hash for ECDSA key registration"
          },
          "getKeyHash((address,uint32),address)": {
            "notice": "Gets the key hash for an operator with a specific operator set"
          },
          "getOperatorFromSigningKey((address,uint32),bytes)": {
            "notice": "Gets the operator from signing key"
          },
          "getOperatorSetCurveType((address,uint32))": {
            "notice": "Gets the curve type for an operator set"
          },
          "isKeyGloballyRegistered(bytes32)": {
            "notice": "Checks if a key hash is globally registered"
          },
          "isRegistered((address,uint32),address)": {
            "notice": "Checks if a key is registered for an operator with a specific operator set"
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "registerKey(address,(address,uint32),bytes,bytes)": {
            "notice": "Registers a cryptographic key for an operator with a specific operator set"
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/permissions/KeyRegistrar.sol": "KeyRegistrar"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol": {
        "keccak256": "0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0",
        "urls": [
          "bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d",
          "dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol": {
        "keccak256": "0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df",
        "urls": [
          "bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b",
          "dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d",
        "urls": [
          "bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc",
          "dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0xc0d272c84e3c67c6398f73cb3676ba752d17d5db12cbd831a6ffaed1851b6343",
        "urls": [
          "bzz-raw://b445b5ea97ca59cf7d10f48b50ee36b3af6588a8f5ed3960f6e55d70e8a0d651",
          "dweb:/ipfs/QmUpmdkpqL8swHauqvoowfLN5xePtRNfefeFeBogFbQV5R"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IKeyRegistrar.sol": {
        "keccak256": "0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8",
        "urls": [
          "bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c",
          "dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f",
        "urls": [
          "bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f",
          "dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtilsMixin.sol": {
        "keccak256": "0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b",
        "urls": [
          "bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10",
          "dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5",
        "urls": [
          "bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e",
          "dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BN254.sol": {
        "keccak256": "0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc",
        "urls": [
          "bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc",
          "dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/BN254SignatureVerifier.sol": {
        "keccak256": "0x92afd8306d1dc64e290600cce1da66435319c2b1bc8f9a926080c301ab61a839",
        "urls": [
          "bzz-raw://f6bae17ee733ad08e8e70724a56913d6add435c997ab64c2e922edebf7a7752b",
          "dweb:/ipfs/QmZDA3GEQ5nhn6dWTM3fKRDLF3pjLPYm8KLDXVgBjdUKXt"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469",
        "urls": [
          "bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add",
          "dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SignatureUtilsMixin.sol": {
        "keccak256": "0x99633a417aaf4f3af1c9d432921f30a9723a4d7257546cf5c963dc23ca8f436a",
        "urls": [
          "bzz-raw://ed3046a8aa6c4bbd5be361e8505c3c61c1f54f02d0337c8344d3f9bf1f745542",
          "dweb:/ipfs/QmPcJeQn5vMGaJEwkNCKoeDvEH1a1koMNUy6rgdsccVuky"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/KeyRegistrar.sol": {
        "keccak256": "0x887cc57117f1aa075db78b6c933ef72c4c2a7134f8e90c831f882028f023646d",
        "urls": [
          "bzz-raw://93517858b69ec8440d195068832182bc96e965750654140710b5b4399862d484",
          "dweb:/ipfs/QmbaNVnbA4f2rV2qbKU9DGdZTD9LKPFYMAdVPha34EgTAa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/KeyRegistrarStorage.sol": {
        "keccak256": "0x01ca105a988866dc2ba10cb64cf10fc34c75a3172d34f1dc787f931d6669388c",
        "urls": [
          "bzz-raw://741070a49a5062c66c5dbfc110dba2c9f5796c45b7df3a7b8f90281a2836156a",
          "dweb:/ipfs/QmZiYYSwLSoq2y4d3VwxXgu8yqVd7zhhBV77v7zdfghTBu"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 177
}