{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_allocationManager",
          "type": "address",
          "internalType": "contract IAllocationManager"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "BN254_KEY_REGISTRATION_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ECDSA_KEY_REGISTRATION_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allocationManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAllocationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "checkKey",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "configureOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "curveType",
          "type": "uint8",
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deregisterKey",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "domainSeparator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "encodeBN254KeyData",
      "inputs": [
        {
          "name": "g1Point",
          "type": "tuple",
          "internalType": "struct BN254.G1Point",
          "components": [
            {
              "name": "X",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "Y",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "g2Point",
          "type": "tuple",
          "internalType": "struct BN254.G2Point",
          "components": [
            {
              "name": "X",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            },
            {
              "name": "Y",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getBN254Key",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "g1Point",
          "type": "tuple",
          "internalType": "struct BN254.G1Point",
          "components": [
            {
              "name": "X",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "Y",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "g2Point",
          "type": "tuple",
          "internalType": "struct BN254.G2Point",
          "components": [
            {
              "name": "X",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            },
            {
              "name": "Y",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBN254KeyRegistrationMessageHash",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "keyData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getECDSAAddress",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getECDSAKey",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getECDSAKeyRegistrationMessageHash",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "keyAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKeyHash",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetCurveType",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isKeyGloballyRegistered",
      "inputs": [
        {
          "name": "keyHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRegistered",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerKey",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "keyData",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "signature",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AggregateBN254KeyUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "newAggregateKey",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct BN254.G1Point",
          "components": [
            {
              "name": "X",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "Y",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KeyDeregistered",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "curveType",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KeyRegistered",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "curveType",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        },
        {
          "name": "pubkey",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetConfigured",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "curveType",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ConfigurationAlreadySet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECAddFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECMulFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECPairingFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ExpModFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCurveType",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidKeyFormat",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidKeypair",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "KeyAlreadyRegistered",
      "inputs": []
    },
    {
      "type": "error",
      "name": "KeyNotFound",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "OperatorSetNotConfigured",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorStillSlashable",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "SignatureExpired",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "ZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroPubkey",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561000f575f5ffd5b5060405161305f38038061305f83398101604081905261002e916100cb565b6001600160a01b03808316608052831660a052808061004c8161005a565b60c052506101fc9350505050565b5f5f829050601f8151111561008d578260405163305a27a960e01b815260040161008491906101a1565b60405180910390fd5b8051610098826101d6565b179392505050565b6001600160a01b03811681146100b4575f5ffd5b50565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f606084860312156100dd575f5ffd5b83516100e8816100a0565b60208501519093506100f9816100a0565b60408501519092506001600160401b03811115610114575f5ffd5b8401601f81018613610124575f5ffd5b80516001600160401b0381111561013d5761013d6100b7565b604051601f8201601f19908116603f011681016001600160401b038111828210171561016b5761016b6100b7565b604052818152828201602001881015610182575f5ffd5b8160208401602083015e5f602083830101528093505050509250925092565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156101f6575f198160200360031b1b821691505b50919050565b60805160a05160c051612e2461023b5f395f818161051501526116f601525f81816101b801526112e701525f818161031c015261064a0152612e245ff3fe608060405234801561000f575f5ffd5b5060043610610127575f3560e01c8063aa165c30116100a9578063d9f12db21161006e578063d9f12db214610351578063dab42d7e14610364578063ea0d814914610386578063ea194e2e14610399578063f698da25146103ac575f5ffd5b8063aa165c30146102ca578063b05c8f6d146102dd578063bd30a0b914610304578063ca8aa7c714610317578063d40cda161461033e575f5ffd5b806354fd4d50116100ef57806354fd4d50146102595780637690e395146102615780637cffe48c1461027457806387ab86f4146102945780639a43e3fb146102a9575f5ffd5b80630a6ac2641461012b578063166aa127146101535780633b32a7bd146101885780634657e26a146101b357806350435add146101da575b5f5ffd5b61013e610139366004612579565b6103b4565b60405190151581526020015b60405180910390f35b61017a7f991b0a3376ce87f8ecc5d70962279ac09cdce934e8b5b9683e73c8ff087c7f8181565b60405190815260200161014a565b61019b610196366004612579565b6104f0565b6040516001600160a01b03909116815260200161014a565b61019b7f000000000000000000000000000000000000000000000000000000000000000081565b61024c6101e83660046125fa565b8151602080840151835180519083015185840151805190850151604080519687019790975295850193909352606084810192909252608084015260a083019190915260c082019290925260e001604051602081830303815290604052905092915050565b60405161014a91906126a5565b61024c61050e565b61017a61026f3660046126f5565b61053e565b610287610282366004612753565b6105e6565b60405161014a91906127a1565b6102a76102a23660046127af565b61060c565b005b6102bc6102b7366004612579565b61091d565b60405161014a9291906127fa565b61024c6102d8366004612579565b610b07565b61017a7fda86e76deaed01641f80ff5f72c372a038fa5182697aeb967e8b1f9819d58d8181565b61013e610312366004612579565b610c44565b61019b7f000000000000000000000000000000000000000000000000000000000000000081565b6102a761034c366004612837565b610c81565b61017a61035f3660046128c8565b610e0b565b61013e610372366004612909565b5f9081526002602052604090205460ff1690565b6102a7610394366004612920565b610ea4565b61017a6103a7366004612579565b610fe7565b61017a61110f565b5f5f60015f6103c2866111c8565b815260208101919091526040015f9081205460ff1691508160028111156103eb576103eb61276d565b0361040957604051635cd3106d60e11b815260040160405180910390fd5b5f5f5f610415876111c8565b815260208082019290925260409081015f9081206001600160a01b038816825283528190208151808301909252805460ff1615158252600181018054929391929184019161046290612959565b80601f016020809104026020016040519081016040528092919081815260200182805461048e90612959565b80156104d95780601f106104b0576101008083540402835291602001916104d9565b820191905f5260205f20905b8154815290600101906020018083116104bc57829003601f168201915b505050919092525050905193505050505b92915050565b5f6104fb8383610b07565b61050490612991565b60601c9392505050565b60606105397f0000000000000000000000000000000000000000000000000000000000000000611226565b905090565b5f5f7fda86e76deaed01641f80ff5f72c372a038fa5182697aeb967e8b1f9819d58d8186865f01518760200151878760405161057b9291906129e9565b6040805191829003822060208301969096526001600160a01b039485169082015292909116606083015263ffffffff16608082015260a081019190915260c0016040516020818303038152906040528051906020012090506105dc81611263565b9695505050505050565b5f60015f6105f3846111c8565b815260208101919091526040015f205460ff1692915050565b81610616816112a9565b6106335760405163932d94f760e01b815260040160405180910390fd5b6040516309a961f360e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631352c3e69061068190869086906004016129f8565b602060405180830381865afa15801561069c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c09190612a2e565b158284909161070d57604051631070287960e01b815282516001600160a01b03908116600483015260209093015163ffffffff166024820152911660448201526064015b60405180910390fd5b50505f60015f61071c856111c8565b815260208101919091526040015f9081205460ff1691508160028111156107455761074561276d565b0361076357604051635cd3106d60e11b815260040160405180910390fd5b5f5f5f61076f866111c8565b815260208082019290925260409081015f9081206001600160a01b038916825283528190208151808301909252805460ff161515825260018101805492939192918401916107bc90612959565b80601f01602080910402602001604051908101604052809291908181526020018280546107e890612959565b80156108335780601f1061080a57610100808354040283529160200191610833565b820191905f5260205f20905b81548152906001019060200180831161081657829003601f168201915b5050505050815250509050805f01518486909161088957604051632e40e18760e01b815282516001600160a01b03908116600483015260209093015163ffffffff16602482015291166044820152606401610704565b50505f5f610896866111c8565b815260208082019290925260409081015f9081206001600160a01b03891682529092528120805460ff19168155906108d1600183018261237e565b5050846001600160a01b03167f28d3c3cee49478ec6fd219cfd685cd15cd01d95cabf69b4b7b57f9eaa3eb6442858460405161090e929190612a4d565b60405180910390a25050505050565b604080518082019091525f80825260208201526109386123b8565b5f60015f610945876111c8565b815260208101919091526040015f205460ff169050600281600281111561096e5761096e61276d565b1461098c5760405163fdea7c0960e01b815260040160405180910390fd5b5f5f5f610998886111c8565b815260208082019290925260409081015f9081206001600160a01b038916825283528190208151808301909252805460ff161515825260018101805492939192918401916109e590612959565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1190612959565b8015610a5c5780601f10610a3357610100808354040283529160200191610a5c565b820191905f5260205f20905b815481529060010190602001808311610a3f57829003601f168201915b5050505050815250509050805f0151610ab15750506040805180820182525f80825260208083018290528351808501855282815280820192909252835180850190945282845283019190915292509050610b00565b5f5f5f5f8460200151806020019051810190610acd9190612abf565b60408051808201825294855260208086019490945280518082019091529182529181019190915290985096505050505050505b9250929050565b60605f60015f610b16866111c8565b815260208101919091526040015f205460ff1690506001816002811115610b3f57610b3f61276d565b14610b5d5760405163fdea7c0960e01b815260040160405180910390fd5b5f5f5f610b69876111c8565b815260208082019290925260409081015f9081206001600160a01b038816825283528190208151808301909252805460ff16151582526001810180549293919291840191610bb690612959565b80601f0160208091040260200160405190810160405280929190818152602001828054610be290612959565b8015610c2d5780601f10610c0457610100808354040283529160200191610c2d565b820191905f5260205f20905b815481529060010190602001808311610c1057829003601f168201915b505050919092525050506020015195945050505050565b5f5f5f610c50856111c8565b815260208082019290925260409081015f9081206001600160a01b038616825290925290205460ff16905092915050565b85610c8b816112a9565b610ca85760405163932d94f760e01b815260040160405180910390fd5b5f60015f610cb5896111c8565b815260208101919091526040015f9081205460ff169150816002811115610cde57610cde61276d565b03610cfc57604051635cd3106d60e11b815260040160405180910390fd5b5f5f610d07896111c8565b815260208082019290925260409081015f9081206001600160a01b038c16825290925290205460ff1615610d4e57604051630c7bc20160e11b815260040160405180910390fd5b6001816002811115610d6257610d6261276d565b03610d7a57610d75878988888888611353565b610dba565b6002816002811115610d8e57610d8e61276d565b03610da157610d758789888888886114b4565b60405163fdea7c0960e01b815260040160405180910390fd5b876001600160a01b03167f1201ce0c5e577111bce91e907fd99cb183da5edc1e3fb650ca40769e4e9176dd88838989604051610df99493929190612b05565b60405180910390a25050505050505050565b81516020808401516040515f938493610e78937f991b0a3376ce87f8ecc5d70962279ac09cdce934e8b5b9683e73c8ff087c7f81938a93928991019485526001600160a01b039384166020860152918316604085015263ffffffff16606084015216608082015260a00190565b604051602081830303815290604052805190602001209050610e9981611263565b9150505b9392505050565b8151610eaf816112a9565b610ecc5760405163932d94f760e01b815260040160405180910390fd5b6001826002811115610ee057610ee061276d565b1480610efd57506002826002811115610efb57610efb61276d565b145b610f1a5760405163fdea7c0960e01b815260040160405180910390fd5b5f60015f610f27866111c8565b815260208101919091526040015f9081205460ff169150816002811115610f5057610f5061276d565b14610f6d576040516281f09f60e01b815260040160405180910390fd5b8260015f610f7a876111c8565b815260208101919091526040015f20805460ff19166001836002811115610fa357610fa361276d565b02179055507fb2266cb118e57095fcdbedb24dabd9fc9f5127e2dbedf62ce6ee71696fb8b6e78484604051610fd9929190612a4d565b60405180910390a150505050565b5f5f5f5f610ff4866111c8565b815260208082019290925260409081015f9081206001600160a01b038716825283528190208151808301909252805460ff1615158252600181018054929391929184019161104190612959565b80601f016020809104026020016040519081016040528092919081815260200182805461106d90612959565b80156110b85780601f1061108f576101008083540402835291602001916110b8565b820191905f5260205f20905b81548152906001019060200180831161109b57829003601f168201915b50505050508152505090505f60015f6110d0876111c8565b815260208101919091526040015f2054825160ff90911691506110f857505f91506104ea9050565b61110682602001518261166d565b95945050505050565b60408051808201909152600a81526922b4b3b2b72630bcb2b960b11b6020909101525f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea61117c6116ee565b805160209182012060408051928301949094529281019190915260608101919091524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b5f815f0151826020015163ffffffff1660405160200161120e92919060609290921b6001600160601b031916825260a01b6001600160a01b031916601482015260200190565b6040516020818303038152906040526104ea90612b62565b60605f61123283611763565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f61126c61110f565b60405161190160f01b6020820152602281019190915260428101839052606201604051602081830303815290604052805190602001209050919050565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af115801561132f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ea9190612a2e565b601483146113745760405163d109118160e01b815260040160405180910390fd5b5f61137f8486612b85565b60601c9050806113a257604051634935505f60e01b815260040160405180910390fd5b5f6113e486868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506001925061166d915050565b5f8181526002602052604090205490915060ff161561141657604051630c7bc20160e11b815260040160405180910390fd5b5f611422888a85610e0b565b9050611467838287878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505f19925061178a915050565b6114a9898989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508892506117e2915050565b505050505050505050565b604080518082019091525f80825260208201526114cf6123b8565b5f8080806114df898b018b612bc3565b93509350935093506040518060400160405280858152602001848152509550835f14801561150b575082155b1561152957604051634935505f60e01b815260040160405180910390fd5b60408051808201909152918252602082015292505f915061154e9050888a898961053e565b90505f8061155e86880188612bfd565b604080518082019091528281526020810182905291935091505f611586858389898580611866565b915050806115a757604051638baa579f60e01b815260040160405180910390fd5b5f6115e98c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506002925061166d915050565b5f8181526002602052604090205490915060ff161561161b57604051630c7bc20160e11b815260040160405180910390fd5b61165d8e8e8e8e8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508792506117e2915050565b5050505050505050505050505050565b5f60018260028111156116825761168261276d565b036116945750815160208301206104ea565b60028260028111156116a8576116a861276d565b03610da1575f5f848060200190518101906116c39190612abf565b505060408051808201825283815260209081019283525f9384529151909152902092506104ea915050565b60605f61171a7f0000000000000000000000000000000000000000000000000000000000000000611226565b9050805f8151811061172e5761172e6129d5565b016020908101516040516001600160f81b03199091169181019190915260210160405160208183030381529060405291505090565b5f60ff8216601f8111156104ea57604051632cd44ac360e21b815260040160405180910390fd5b428110156117ab57604051630819bdcd60e01b815260040160405180910390fd5b6117bf6001600160a01b038516848461192e565b6117dc57604051638baa579f60e01b815260040160405180910390fd5b50505050565b6040805180820190915260018152602081018390525f80611802876111c8565b815260208082019290925260409081015f9081206001600160a01b03881682528352208251815460ff19169015151781559082015160018201906118469082612c69565b5050505f908152600260205260409020805460ff19166001179055505050565b5f5f5f61187289611982565b90505f6118818a89898c611a0c565b90505f6118986118918a84611ab7565b8b90611b27565b90505f6118da6118d3846118cd6040805180820182525f80825260209182015281518083019092526001825260029082015290565b90611ab7565b8590611b27565b905087156118ff576118f6826118ee611b9b565b838c8b611c5b565b9650945061191f565b6119128261190b611b9b565b838c611e6f565b9550851561191f57600194505b50505050965096945050505050565b5f5f5f61193b85856120a6565b90925090505f8160048111156119535761195361276d565b1480156119715750856001600160a01b0316826001600160a01b0316145b806105dc57506105dc8686866120e5565b604080518082019091525f80825260208201525f80806119af5f516020612dcf5f395f51905f5286612d24565b90505b6119bb816121cc565b90935091505f516020612dcf5f395f51905f5282830983036119f3576040805180820190915290815260208101919091529392505050565b5f516020612dcf5f395f51905f526001820890506119b2565b8251602080850151845180519083015186840151805190850151875188870151604080519889018e90528801989098526060870195909552608086019390935260a085019190915260c084015260e08301526101008201526101208101919091525f907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019061014001604051602081830303815290604052805190602001205f1c6111069190612d24565b604080518082019091525f8082526020820152611ad26123dd565b835181526020808501519082015260408082018490525f908360608460076107d05a03fa90508080611b0057fe5b5080611b1f57604051632319df1960e11b815260040160405180910390fd5b505092915050565b604080518082019091525f8082526020820152611b426123fb565b835181526020808501518183015283516040808401919091529084015160608301525f908360808460066107d05a03fa90508080611b7c57fe5b5080611b1f5760405163d4b68fd760e01b815260040160405180910390fd5b611ba36123b8565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820182528681526020808201869052825180840190935286835282018490525f91829190611c8c612419565b5f5b6002811015611e43575f611ca3826006612d57565b9050848260028110611cb757611cb76129d5565b60200201515183611cc8835f612d6e565b600c8110611cd857611cd86129d5565b6020020152848260028110611cef57611cef6129d5565b60200201516020015183826001611d069190612d6e565b600c8110611d1657611d166129d5565b6020020152838260028110611d2d57611d2d6129d5565b6020020151515183611d40836002612d6e565b600c8110611d5057611d506129d5565b6020020152838260028110611d6757611d676129d5565b6020020151516001602002015183611d80836003612d6e565b600c8110611d9057611d906129d5565b6020020152838260028110611da757611da76129d5565b6020020151602001515f60028110611dc157611dc16129d5565b602002015183611dd2836004612d6e565b600c8110611de257611de26129d5565b6020020152838260028110611df957611df96129d5565b602002015160200151600160028110611e1457611e146129d5565b602002015183611e25836005612d6e565b600c8110611e3557611e356129d5565b602002015250600101611c8e565b50611e4c612438565b5f6020826101808560088cfa9151919c9115159b50909950505050505050505050565b6040805180820182528581526020808201859052825180840190935285835282018390525f91611e9d612419565b5f5b6002811015612054575f611eb4826006612d57565b9050848260028110611ec857611ec86129d5565b60200201515183611ed9835f612d6e565b600c8110611ee957611ee96129d5565b6020020152848260028110611f0057611f006129d5565b60200201516020015183826001611f179190612d6e565b600c8110611f2757611f276129d5565b6020020152838260028110611f3e57611f3e6129d5565b6020020151515183611f51836002612d6e565b600c8110611f6157611f616129d5565b6020020152838260028110611f7857611f786129d5565b6020020151516001602002015183611f91836003612d6e565b600c8110611fa157611fa16129d5565b6020020152838260028110611fb857611fb86129d5565b6020020151602001515f60028110611fd257611fd26129d5565b602002015183611fe3836004612d6e565b600c8110611ff357611ff36129d5565b602002015283826002811061200a5761200a6129d5565b602002015160200151600160028110612025576120256129d5565b602002015183612036836005612d6e565b600c8110612046576120466129d5565b602002015250600101611e9f565b5061205d612438565b5f6020826101808560086107d05a03fa9050808061207757fe5b5080612096576040516324ccc79360e21b815260040160405180910390fd5b5051151598975050505050505050565b5f5f82516041036120da576020830151604084015160608501515f1a6120ce87828585612248565b94509450505050610b00565b505f90506002610b00565b5f5f5f856001600160a01b0316631626ba7e60e01b868660405160240161210d929190612d81565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161214b9190612da1565b5f60405180830381855afa9150503d805f8114612183576040519150601f19603f3d011682016040523d82523d5f602084013e612188565b606091505b509150915081801561219c57506020815110155b80156105dc57508051630b135d3f60e11b906121c19083016020908101908401612db7565b149695505050505050565b5f80805f516020612dcf5f395f51905f5260035f516020612dcf5f395f51905f52865f516020612dcf5f395f51905f52888909090890505f61223c827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f525f516020612dcf5f395f51905f52612305565b91959194509092505050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561227d57505f905060036122fc565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156122ce573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b0381166122f6575f600192509250506122fc565b91505f90505b94509492505050565b5f5f61230f612438565b612317612456565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828061235457fe5b50826123735760405163d51edae360e01b815260040160405180910390fd5b505195945050505050565b50805461238a90612959565b5f825580601f10612399575050565b601f0160209004905f5260205f20908101906123b59190612474565b50565b60405180604001604052806123cb61248c565b81526020016123d861248c565b905290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b5b80821115612488575f8155600101612475565b5090565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156124e1576124e16124aa565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612510576125106124aa565b604052919050565b80356001600160a01b038116811461252e575f5ffd5b919050565b5f60408284031215612543575f5ffd5b61254b6124be565b905061255682612518565b8152602082013563ffffffff8116811461256e575f5ffd5b602082015292915050565b5f5f6060838503121561258a575f5ffd5b6125948484612533565b91506125a260408401612518565b90509250929050565b5f82601f8301126125ba575f5ffd5b6125c460406124e7565b8060408401858111156125d5575f5ffd5b845b818110156125ef5780358452602093840193016125d7565b509095945050505050565b5f5f82840360c081121561260c575f5ffd5b6040811215612619575f5ffd5b6126216124be565b843581526020808601359082015292506080603f1982011215612642575f5ffd5b5061264b6124be565b61265885604086016125ab565b815261266785608086016125ab565b6020820152809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610e9d6020830184612677565b5f5f83601f8401126126c7575f5ffd5b50813567ffffffffffffffff8111156126de575f5ffd5b602083019150836020828501011115610b00575f5ffd5b5f5f5f5f60808587031215612708575f5ffd5b61271185612518565b93506127208660208701612533565b9250606085013567ffffffffffffffff81111561273b575f5ffd5b612747878288016126b7565b95989497509550505050565b5f60408284031215612763575f5ffd5b610e9d8383612533565b634e487b7160e01b5f52602160045260245ffd5b6003811061279d57634e487b7160e01b5f52602160045260245ffd5b9052565b602081016104ea8284612781565b5f5f606083850312156127c0575f5ffd5b6127c983612518565b91506125a28460208501612533565b805f5b60028110156117dc5781518452602093840193909101906001016127db565b5f60c082019050835182526020840151602083015261281d6040830184516127d8565b602083015161282f60808401826127d8565b509392505050565b5f5f5f5f5f5f60a0878903121561284c575f5ffd5b61285587612518565b95506128648860208901612533565b9450606087013567ffffffffffffffff81111561287f575f5ffd5b61288b89828a016126b7565b909550935050608087013567ffffffffffffffff8111156128aa575f5ffd5b6128b689828a016126b7565b979a9699509497509295939492505050565b5f5f5f608084860312156128da575f5ffd5b6128e384612518565b92506128f28560208601612533565b915061290060608501612518565b90509250925092565b5f60208284031215612919575f5ffd5b5035919050565b5f5f60608385031215612931575f5ffd5b61293b8484612533565b915060408301356003811061294e575f5ffd5b809150509250929050565b600181811c9082168061296d57607f821691505b60208210810361298b57634e487b7160e01b5f52602260045260245ffd5b50919050565b805160208201516001600160601b03198116919060148210156129ce576001600160601b03196001600160601b03198360140360031b1b82161692505b5050919050565b634e487b7160e01b5f52603260045260245ffd5b818382375f9101908152919050565b6001600160a01b038316815260608101610e9d602083018480516001600160a01b0316825260209081015163ffffffff16910152565b5f60208284031215612a3e575f5ffd5b81518015158114610e9d575f5ffd5b82516001600160a01b0316815260208084015163ffffffff169082015260608101610e9d6040830184612781565b5f82601f830112612a8a575f5ffd5b612a9460406124e7565b806040840185811115612aa5575f5ffd5b845b818110156125ef578051845260209384019301612aa7565b5f5f5f5f60c08587031215612ad2575f5ffd5b845160208601519094509250612aeb8660408701612a7b565b9150612afa8660808701612a7b565b905092959194509250565b84516001600160a01b0316815260208086015163ffffffff1690820152612b2f6040820185612781565b60806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f191601019392505050565b8051602080830151919081101561298b575f1960209190910360031b1b16919050565b80356001600160601b03198116906014841015612bbc576001600160601b03196001600160601b03198560140360031b1b82161691505b5092915050565b5f5f5f5f60c08587031215612bd6575f5ffd5b8435935060208501359250612bee86604087016125ab565b9150612afa86608087016125ab565b5f5f60408385031215612c0e575f5ffd5b50508035926020909101359150565b601f821115612c6457805f5260205f20601f840160051c81016020851015612c425750805b601f840160051c820191505b81811015612c61575f8155600101612c4e565b50505b505050565b815167ffffffffffffffff811115612c8357612c836124aa565b612c9781612c918454612959565b84612c1d565b6020601f821160018114612cc9575f8315612cb25750848201515b5f19600385901b1c1916600184901b178455612c61565b5f84815260208120601f198516915b82811015612cf85787850151825560209485019460019092019101612cd8565b5084821015612d1557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82612d3e57634e487b7160e01b5f52601260045260245ffd5b500690565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176104ea576104ea612d43565b808201808211156104ea576104ea612d43565b828152604060208201525f612d996040830184612677565b949350505050565b5f82518060208501845e5f920191825250919050565b5f60208284031215612dc7575f5ffd5b505191905056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a26469706673582212204a73b0e905ca69f8d4cb09eb724c73d09df6abae039ad3012f177bb6208d901e64736f6c634300081b0033",
    "sourceMap": "1063:13020:182:-:0;;;1837:299;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1282:38:183;;;;;501:44:171;;;;2120:8:182;;961:24:172;2120:8:182;961:22:172;:24::i;:::-;950:35;;-1:-1:-1;1063:13020:182;;-1:-1:-1;;;;1063:13020:182;1711:286:38;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:38;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:38:o;14:154:321:-;-1:-1:-1;;;;;112:31:321;;102:42;;92:70;;158:1;155;148:12;92:70;14:154;:::o;173:127::-;234:10;229:3;225:20;222:1;215:31;265:4;262:1;255:15;289:4;286:1;279:15;305:1302;462:6;470;478;531:2;519:9;510:7;506:23;502:32;499:52;;;547:1;544;537:12;499:52;579:9;573:16;598:54;646:5;598:54;:::i;:::-;721:2;706:18;;700:25;671:5;;-1:-1:-1;734:56:321;700:25;734:56;:::i;:::-;860:2;845:18;;839:25;809:7;;-1:-1:-1;;;;;;876:30:321;;873:50;;;919:1;916;909:12;873:50;942:22;;995:4;987:13;;983:27;-1:-1:-1;973:55:321;;1024:1;1021;1014:12;973:55;1051:9;;-1:-1:-1;;;;;1072:30:321;;1069:56;;;1105:18;;:::i;:::-;1154:2;1148:9;1246:2;1208:17;;-1:-1:-1;;1204:31:321;;;1237:2;1200:40;1196:54;1184:67;;-1:-1:-1;;;;;1266:34:321;;1302:22;;;1263:62;1260:88;;;1328:18;;:::i;:::-;1364:2;1357:22;1388;;;1429:15;;;1446:2;1425:24;1422:37;-1:-1:-1;1419:57:321;;;1472:1;1469;1462:12;1419:57;1521:6;1516:2;1512;1508:11;1503:2;1495:6;1491:15;1485:43;1574:1;1569:2;1560:6;1552;1548:19;1544:28;1537:39;1595:6;1585:16;;;;;305:1302;;;;;:::o;1612:418::-;1761:2;1750:9;1743:21;1724:4;1793:6;1787:13;1836:6;1831:2;1820:9;1816:18;1809:34;1895:6;1890:2;1882:6;1878:15;1873:2;1862:9;1858:18;1852:50;1951:1;1946:2;1937:6;1926:9;1922:22;1918:31;1911:42;2021:2;2014;2010:7;2005:2;1997:6;1993:15;1989:29;1978:9;1974:45;1970:54;1962:62;;;1612:418;;;;:::o;2035:297::-;2153:12;;2200:4;2189:16;;;2183:23;;2153:12;2218:16;;2215:111;;;2312:1;2308:6;2298;2292:4;2288:17;2285:1;2281:25;2277:38;2270:5;2266:50;2257:59;;2215:111;;2035:297;;;:::o;:::-;1063:13020:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b5060043610610127575f3560e01c8063aa165c30116100a9578063d9f12db21161006e578063d9f12db214610351578063dab42d7e14610364578063ea0d814914610386578063ea194e2e14610399578063f698da25146103ac575f5ffd5b8063aa165c30146102ca578063b05c8f6d146102dd578063bd30a0b914610304578063ca8aa7c714610317578063d40cda161461033e575f5ffd5b806354fd4d50116100ef57806354fd4d50146102595780637690e395146102615780637cffe48c1461027457806387ab86f4146102945780639a43e3fb146102a9575f5ffd5b80630a6ac2641461012b578063166aa127146101535780633b32a7bd146101885780634657e26a146101b357806350435add146101da575b5f5ffd5b61013e610139366004612579565b6103b4565b60405190151581526020015b60405180910390f35b61017a7f991b0a3376ce87f8ecc5d70962279ac09cdce934e8b5b9683e73c8ff087c7f8181565b60405190815260200161014a565b61019b610196366004612579565b6104f0565b6040516001600160a01b03909116815260200161014a565b61019b7f000000000000000000000000000000000000000000000000000000000000000081565b61024c6101e83660046125fa565b8151602080840151835180519083015185840151805190850151604080519687019790975295850193909352606084810192909252608084015260a083019190915260c082019290925260e001604051602081830303815290604052905092915050565b60405161014a91906126a5565b61024c61050e565b61017a61026f3660046126f5565b61053e565b610287610282366004612753565b6105e6565b60405161014a91906127a1565b6102a76102a23660046127af565b61060c565b005b6102bc6102b7366004612579565b61091d565b60405161014a9291906127fa565b61024c6102d8366004612579565b610b07565b61017a7fda86e76deaed01641f80ff5f72c372a038fa5182697aeb967e8b1f9819d58d8181565b61013e610312366004612579565b610c44565b61019b7f000000000000000000000000000000000000000000000000000000000000000081565b6102a761034c366004612837565b610c81565b61017a61035f3660046128c8565b610e0b565b61013e610372366004612909565b5f9081526002602052604090205460ff1690565b6102a7610394366004612920565b610ea4565b61017a6103a7366004612579565b610fe7565b61017a61110f565b5f5f60015f6103c2866111c8565b815260208101919091526040015f9081205460ff1691508160028111156103eb576103eb61276d565b0361040957604051635cd3106d60e11b815260040160405180910390fd5b5f5f5f610415876111c8565b815260208082019290925260409081015f9081206001600160a01b038816825283528190208151808301909252805460ff1615158252600181018054929391929184019161046290612959565b80601f016020809104026020016040519081016040528092919081815260200182805461048e90612959565b80156104d95780601f106104b0576101008083540402835291602001916104d9565b820191905f5260205f20905b8154815290600101906020018083116104bc57829003601f168201915b505050919092525050905193505050505b92915050565b5f6104fb8383610b07565b61050490612991565b60601c9392505050565b60606105397f0000000000000000000000000000000000000000000000000000000000000000611226565b905090565b5f5f7fda86e76deaed01641f80ff5f72c372a038fa5182697aeb967e8b1f9819d58d8186865f01518760200151878760405161057b9291906129e9565b6040805191829003822060208301969096526001600160a01b039485169082015292909116606083015263ffffffff16608082015260a081019190915260c0016040516020818303038152906040528051906020012090506105dc81611263565b9695505050505050565b5f60015f6105f3846111c8565b815260208101919091526040015f205460ff1692915050565b81610616816112a9565b6106335760405163932d94f760e01b815260040160405180910390fd5b6040516309a961f360e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631352c3e69061068190869086906004016129f8565b602060405180830381865afa15801561069c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c09190612a2e565b158284909161070d57604051631070287960e01b815282516001600160a01b03908116600483015260209093015163ffffffff166024820152911660448201526064015b60405180910390fd5b50505f60015f61071c856111c8565b815260208101919091526040015f9081205460ff1691508160028111156107455761074561276d565b0361076357604051635cd3106d60e11b815260040160405180910390fd5b5f5f5f61076f866111c8565b815260208082019290925260409081015f9081206001600160a01b038916825283528190208151808301909252805460ff161515825260018101805492939192918401916107bc90612959565b80601f01602080910402602001604051908101604052809291908181526020018280546107e890612959565b80156108335780601f1061080a57610100808354040283529160200191610833565b820191905f5260205f20905b81548152906001019060200180831161081657829003601f168201915b5050505050815250509050805f01518486909161088957604051632e40e18760e01b815282516001600160a01b03908116600483015260209093015163ffffffff16602482015291166044820152606401610704565b50505f5f610896866111c8565b815260208082019290925260409081015f9081206001600160a01b03891682529092528120805460ff19168155906108d1600183018261237e565b5050846001600160a01b03167f28d3c3cee49478ec6fd219cfd685cd15cd01d95cabf69b4b7b57f9eaa3eb6442858460405161090e929190612a4d565b60405180910390a25050505050565b604080518082019091525f80825260208201526109386123b8565b5f60015f610945876111c8565b815260208101919091526040015f205460ff169050600281600281111561096e5761096e61276d565b1461098c5760405163fdea7c0960e01b815260040160405180910390fd5b5f5f5f610998886111c8565b815260208082019290925260409081015f9081206001600160a01b038916825283528190208151808301909252805460ff161515825260018101805492939192918401916109e590612959565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1190612959565b8015610a5c5780601f10610a3357610100808354040283529160200191610a5c565b820191905f5260205f20905b815481529060010190602001808311610a3f57829003601f168201915b5050505050815250509050805f0151610ab15750506040805180820182525f80825260208083018290528351808501855282815280820192909252835180850190945282845283019190915292509050610b00565b5f5f5f5f8460200151806020019051810190610acd9190612abf565b60408051808201825294855260208086019490945280518082019091529182529181019190915290985096505050505050505b9250929050565b60605f60015f610b16866111c8565b815260208101919091526040015f205460ff1690506001816002811115610b3f57610b3f61276d565b14610b5d5760405163fdea7c0960e01b815260040160405180910390fd5b5f5f5f610b69876111c8565b815260208082019290925260409081015f9081206001600160a01b038816825283528190208151808301909252805460ff16151582526001810180549293919291840191610bb690612959565b80601f0160208091040260200160405190810160405280929190818152602001828054610be290612959565b8015610c2d5780601f10610c0457610100808354040283529160200191610c2d565b820191905f5260205f20905b815481529060010190602001808311610c1057829003601f168201915b505050919092525050506020015195945050505050565b5f5f5f610c50856111c8565b815260208082019290925260409081015f9081206001600160a01b038616825290925290205460ff16905092915050565b85610c8b816112a9565b610ca85760405163932d94f760e01b815260040160405180910390fd5b5f60015f610cb5896111c8565b815260208101919091526040015f9081205460ff169150816002811115610cde57610cde61276d565b03610cfc57604051635cd3106d60e11b815260040160405180910390fd5b5f5f610d07896111c8565b815260208082019290925260409081015f9081206001600160a01b038c16825290925290205460ff1615610d4e57604051630c7bc20160e11b815260040160405180910390fd5b6001816002811115610d6257610d6261276d565b03610d7a57610d75878988888888611353565b610dba565b6002816002811115610d8e57610d8e61276d565b03610da157610d758789888888886114b4565b60405163fdea7c0960e01b815260040160405180910390fd5b876001600160a01b03167f1201ce0c5e577111bce91e907fd99cb183da5edc1e3fb650ca40769e4e9176dd88838989604051610df99493929190612b05565b60405180910390a25050505050505050565b81516020808401516040515f938493610e78937f991b0a3376ce87f8ecc5d70962279ac09cdce934e8b5b9683e73c8ff087c7f81938a93928991019485526001600160a01b039384166020860152918316604085015263ffffffff16606084015216608082015260a00190565b604051602081830303815290604052805190602001209050610e9981611263565b9150505b9392505050565b8151610eaf816112a9565b610ecc5760405163932d94f760e01b815260040160405180910390fd5b6001826002811115610ee057610ee061276d565b1480610efd57506002826002811115610efb57610efb61276d565b145b610f1a5760405163fdea7c0960e01b815260040160405180910390fd5b5f60015f610f27866111c8565b815260208101919091526040015f9081205460ff169150816002811115610f5057610f5061276d565b14610f6d576040516281f09f60e01b815260040160405180910390fd5b8260015f610f7a876111c8565b815260208101919091526040015f20805460ff19166001836002811115610fa357610fa361276d565b02179055507fb2266cb118e57095fcdbedb24dabd9fc9f5127e2dbedf62ce6ee71696fb8b6e78484604051610fd9929190612a4d565b60405180910390a150505050565b5f5f5f5f610ff4866111c8565b815260208082019290925260409081015f9081206001600160a01b038716825283528190208151808301909252805460ff1615158252600181018054929391929184019161104190612959565b80601f016020809104026020016040519081016040528092919081815260200182805461106d90612959565b80156110b85780601f1061108f576101008083540402835291602001916110b8565b820191905f5260205f20905b81548152906001019060200180831161109b57829003601f168201915b50505050508152505090505f60015f6110d0876111c8565b815260208101919091526040015f2054825160ff90911691506110f857505f91506104ea9050565b61110682602001518261166d565b95945050505050565b60408051808201909152600a81526922b4b3b2b72630bcb2b960b11b6020909101525f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea61117c6116ee565b805160209182012060408051928301949094529281019190915260608101919091524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b5f815f0151826020015163ffffffff1660405160200161120e92919060609290921b6001600160601b031916825260a01b6001600160a01b031916601482015260200190565b6040516020818303038152906040526104ea90612b62565b60605f61123283611763565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f61126c61110f565b60405161190160f01b6020820152602281019190915260428101839052606201604051602081830303815290604052805190602001209050919050565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af115801561132f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ea9190612a2e565b601483146113745760405163d109118160e01b815260040160405180910390fd5b5f61137f8486612b85565b60601c9050806113a257604051634935505f60e01b815260040160405180910390fd5b5f6113e486868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506001925061166d915050565b5f8181526002602052604090205490915060ff161561141657604051630c7bc20160e11b815260040160405180910390fd5b5f611422888a85610e0b565b9050611467838287878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505f19925061178a915050565b6114a9898989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508892506117e2915050565b505050505050505050565b604080518082019091525f80825260208201526114cf6123b8565b5f8080806114df898b018b612bc3565b93509350935093506040518060400160405280858152602001848152509550835f14801561150b575082155b1561152957604051634935505f60e01b815260040160405180910390fd5b60408051808201909152918252602082015292505f915061154e9050888a898961053e565b90505f8061155e86880188612bfd565b604080518082019091528281526020810182905291935091505f611586858389898580611866565b915050806115a757604051638baa579f60e01b815260040160405180910390fd5b5f6115e98c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506002925061166d915050565b5f8181526002602052604090205490915060ff161561161b57604051630c7bc20160e11b815260040160405180910390fd5b61165d8e8e8e8e8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508792506117e2915050565b5050505050505050505050505050565b5f60018260028111156116825761168261276d565b036116945750815160208301206104ea565b60028260028111156116a8576116a861276d565b03610da1575f5f848060200190518101906116c39190612abf565b505060408051808201825283815260209081019283525f9384529151909152902092506104ea915050565b60605f61171a7f0000000000000000000000000000000000000000000000000000000000000000611226565b9050805f8151811061172e5761172e6129d5565b016020908101516040516001600160f81b03199091169181019190915260210160405160208183030381529060405291505090565b5f60ff8216601f8111156104ea57604051632cd44ac360e21b815260040160405180910390fd5b428110156117ab57604051630819bdcd60e01b815260040160405180910390fd5b6117bf6001600160a01b038516848461192e565b6117dc57604051638baa579f60e01b815260040160405180910390fd5b50505050565b6040805180820190915260018152602081018390525f80611802876111c8565b815260208082019290925260409081015f9081206001600160a01b03881682528352208251815460ff19169015151781559082015160018201906118469082612c69565b5050505f908152600260205260409020805460ff19166001179055505050565b5f5f5f61187289611982565b90505f6118818a89898c611a0c565b90505f6118986118918a84611ab7565b8b90611b27565b90505f6118da6118d3846118cd6040805180820182525f80825260209182015281518083019092526001825260029082015290565b90611ab7565b8590611b27565b905087156118ff576118f6826118ee611b9b565b838c8b611c5b565b9650945061191f565b6119128261190b611b9b565b838c611e6f565b9550851561191f57600194505b50505050965096945050505050565b5f5f5f61193b85856120a6565b90925090505f8160048111156119535761195361276d565b1480156119715750856001600160a01b0316826001600160a01b0316145b806105dc57506105dc8686866120e5565b604080518082019091525f80825260208201525f80806119af5f516020612dcf5f395f51905f5286612d24565b90505b6119bb816121cc565b90935091505f516020612dcf5f395f51905f5282830983036119f3576040805180820190915290815260208101919091529392505050565b5f516020612dcf5f395f51905f526001820890506119b2565b8251602080850151845180519083015186840151805190850151875188870151604080519889018e90528801989098526060870195909552608086019390935260a085019190915260c084015260e08301526101008201526101208101919091525f907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019061014001604051602081830303815290604052805190602001205f1c6111069190612d24565b604080518082019091525f8082526020820152611ad26123dd565b835181526020808501519082015260408082018490525f908360608460076107d05a03fa90508080611b0057fe5b5080611b1f57604051632319df1960e11b815260040160405180910390fd5b505092915050565b604080518082019091525f8082526020820152611b426123fb565b835181526020808501518183015283516040808401919091529084015160608301525f908360808460066107d05a03fa90508080611b7c57fe5b5080611b1f5760405163d4b68fd760e01b815260040160405180910390fd5b611ba36123b8565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820182528681526020808201869052825180840190935286835282018490525f91829190611c8c612419565b5f5b6002811015611e43575f611ca3826006612d57565b9050848260028110611cb757611cb76129d5565b60200201515183611cc8835f612d6e565b600c8110611cd857611cd86129d5565b6020020152848260028110611cef57611cef6129d5565b60200201516020015183826001611d069190612d6e565b600c8110611d1657611d166129d5565b6020020152838260028110611d2d57611d2d6129d5565b6020020151515183611d40836002612d6e565b600c8110611d5057611d506129d5565b6020020152838260028110611d6757611d676129d5565b6020020151516001602002015183611d80836003612d6e565b600c8110611d9057611d906129d5565b6020020152838260028110611da757611da76129d5565b6020020151602001515f60028110611dc157611dc16129d5565b602002015183611dd2836004612d6e565b600c8110611de257611de26129d5565b6020020152838260028110611df957611df96129d5565b602002015160200151600160028110611e1457611e146129d5565b602002015183611e25836005612d6e565b600c8110611e3557611e356129d5565b602002015250600101611c8e565b50611e4c612438565b5f6020826101808560088cfa9151919c9115159b50909950505050505050505050565b6040805180820182528581526020808201859052825180840190935285835282018390525f91611e9d612419565b5f5b6002811015612054575f611eb4826006612d57565b9050848260028110611ec857611ec86129d5565b60200201515183611ed9835f612d6e565b600c8110611ee957611ee96129d5565b6020020152848260028110611f0057611f006129d5565b60200201516020015183826001611f179190612d6e565b600c8110611f2757611f276129d5565b6020020152838260028110611f3e57611f3e6129d5565b6020020151515183611f51836002612d6e565b600c8110611f6157611f616129d5565b6020020152838260028110611f7857611f786129d5565b6020020151516001602002015183611f91836003612d6e565b600c8110611fa157611fa16129d5565b6020020152838260028110611fb857611fb86129d5565b6020020151602001515f60028110611fd257611fd26129d5565b602002015183611fe3836004612d6e565b600c8110611ff357611ff36129d5565b602002015283826002811061200a5761200a6129d5565b602002015160200151600160028110612025576120256129d5565b602002015183612036836005612d6e565b600c8110612046576120466129d5565b602002015250600101611e9f565b5061205d612438565b5f6020826101808560086107d05a03fa9050808061207757fe5b5080612096576040516324ccc79360e21b815260040160405180910390fd5b5051151598975050505050505050565b5f5f82516041036120da576020830151604084015160608501515f1a6120ce87828585612248565b94509450505050610b00565b505f90506002610b00565b5f5f5f856001600160a01b0316631626ba7e60e01b868660405160240161210d929190612d81565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161214b9190612da1565b5f60405180830381855afa9150503d805f8114612183576040519150601f19603f3d011682016040523d82523d5f602084013e612188565b606091505b509150915081801561219c57506020815110155b80156105dc57508051630b135d3f60e11b906121c19083016020908101908401612db7565b149695505050505050565b5f80805f516020612dcf5f395f51905f5260035f516020612dcf5f395f51905f52865f516020612dcf5f395f51905f52888909090890505f61223c827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f525f516020612dcf5f395f51905f52612305565b91959194509092505050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561227d57505f905060036122fc565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156122ce573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b0381166122f6575f600192509250506122fc565b91505f90505b94509492505050565b5f5f61230f612438565b612317612456565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828061235457fe5b50826123735760405163d51edae360e01b815260040160405180910390fd5b505195945050505050565b50805461238a90612959565b5f825580601f10612399575050565b601f0160209004905f5260205f20908101906123b59190612474565b50565b60405180604001604052806123cb61248c565b81526020016123d861248c565b905290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b5b80821115612488575f8155600101612475565b5090565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156124e1576124e16124aa565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612510576125106124aa565b604052919050565b80356001600160a01b038116811461252e575f5ffd5b919050565b5f60408284031215612543575f5ffd5b61254b6124be565b905061255682612518565b8152602082013563ffffffff8116811461256e575f5ffd5b602082015292915050565b5f5f6060838503121561258a575f5ffd5b6125948484612533565b91506125a260408401612518565b90509250929050565b5f82601f8301126125ba575f5ffd5b6125c460406124e7565b8060408401858111156125d5575f5ffd5b845b818110156125ef5780358452602093840193016125d7565b509095945050505050565b5f5f82840360c081121561260c575f5ffd5b6040811215612619575f5ffd5b6126216124be565b843581526020808601359082015292506080603f1982011215612642575f5ffd5b5061264b6124be565b61265885604086016125ab565b815261266785608086016125ab565b6020820152809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610e9d6020830184612677565b5f5f83601f8401126126c7575f5ffd5b50813567ffffffffffffffff8111156126de575f5ffd5b602083019150836020828501011115610b00575f5ffd5b5f5f5f5f60808587031215612708575f5ffd5b61271185612518565b93506127208660208701612533565b9250606085013567ffffffffffffffff81111561273b575f5ffd5b612747878288016126b7565b95989497509550505050565b5f60408284031215612763575f5ffd5b610e9d8383612533565b634e487b7160e01b5f52602160045260245ffd5b6003811061279d57634e487b7160e01b5f52602160045260245ffd5b9052565b602081016104ea8284612781565b5f5f606083850312156127c0575f5ffd5b6127c983612518565b91506125a28460208501612533565b805f5b60028110156117dc5781518452602093840193909101906001016127db565b5f60c082019050835182526020840151602083015261281d6040830184516127d8565b602083015161282f60808401826127d8565b509392505050565b5f5f5f5f5f5f60a0878903121561284c575f5ffd5b61285587612518565b95506128648860208901612533565b9450606087013567ffffffffffffffff81111561287f575f5ffd5b61288b89828a016126b7565b909550935050608087013567ffffffffffffffff8111156128aa575f5ffd5b6128b689828a016126b7565b979a9699509497509295939492505050565b5f5f5f608084860312156128da575f5ffd5b6128e384612518565b92506128f28560208601612533565b915061290060608501612518565b90509250925092565b5f60208284031215612919575f5ffd5b5035919050565b5f5f60608385031215612931575f5ffd5b61293b8484612533565b915060408301356003811061294e575f5ffd5b809150509250929050565b600181811c9082168061296d57607f821691505b60208210810361298b57634e487b7160e01b5f52602260045260245ffd5b50919050565b805160208201516001600160601b03198116919060148210156129ce576001600160601b03196001600160601b03198360140360031b1b82161692505b5050919050565b634e487b7160e01b5f52603260045260245ffd5b818382375f9101908152919050565b6001600160a01b038316815260608101610e9d602083018480516001600160a01b0316825260209081015163ffffffff16910152565b5f60208284031215612a3e575f5ffd5b81518015158114610e9d575f5ffd5b82516001600160a01b0316815260208084015163ffffffff169082015260608101610e9d6040830184612781565b5f82601f830112612a8a575f5ffd5b612a9460406124e7565b806040840185811115612aa5575f5ffd5b845b818110156125ef578051845260209384019301612aa7565b5f5f5f5f60c08587031215612ad2575f5ffd5b845160208601519094509250612aeb8660408701612a7b565b9150612afa8660808701612a7b565b905092959194509250565b84516001600160a01b0316815260208086015163ffffffff1690820152612b2f6040820185612781565b60806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f191601019392505050565b8051602080830151919081101561298b575f1960209190910360031b1b16919050565b80356001600160601b03198116906014841015612bbc576001600160601b03196001600160601b03198560140360031b1b82161691505b5092915050565b5f5f5f5f60c08587031215612bd6575f5ffd5b8435935060208501359250612bee86604087016125ab565b9150612afa86608087016125ab565b5f5f60408385031215612c0e575f5ffd5b50508035926020909101359150565b601f821115612c6457805f5260205f20601f840160051c81016020851015612c425750805b601f840160051c820191505b81811015612c61575f8155600101612c4e565b50505b505050565b815167ffffffffffffffff811115612c8357612c836124aa565b612c9781612c918454612959565b84612c1d565b6020601f821160018114612cc9575f8315612cb25750848201515b5f19600385901b1c1916600184901b178455612c61565b5f84815260208120601f198516915b82811015612cf85787850151825560209485019460019092019101612cd8565b5084821015612d1557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82612d3e57634e487b7160e01b5f52601260045260245ffd5b500690565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176104ea576104ea612d43565b808201808211156104ea576104ea612d43565b828152604060208201525f612d996040830184612677565b949350505050565b5f82518060208501845e5f920191825250919050565b5f60208284031215612dc7575f5ffd5b505191905056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a26469706673582212204a73b0e905ca69f8d4cb09eb724c73d09df6abae039ad3012f177bb6208d901e64736f6c634300081b0033",
    "sourceMap": "1063:13020:182:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4674:369;;;;;;:::i;:::-;;:::i;:::-;;;1748:14:321;;1741:22;1723:41;;1711:2;1696:18;4674:369:182;;;;;;;;1225:169;;1291:103;1225:169;;;;;1921:25:321;;;1909:2;1894:18;1225:169:182;1775:177:321;12085:183:182;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2121:32:321;;;2103:51;;2091:2;2076:18;12085:183:182;1957:203:321;354:59:171;;;;;13824:257:182;;;;;;:::i;:::-;13997:9;;14008;;;;;14019;;:12;;14033;;;;14047:9;;;;:12;;14061;;;;13986:88;;;;;;10963:25:321;;;;11004:18;;;10997:34;;;;13955:12:182;11047:18:321;;;11040:34;;;;11090:18;;;11083:34;11133:19;;;11126:35;;;;11177:19;;;11170:35;;;;10935:19;;13986:88:182;;;;;;;;;;;;13979:95;;13824:257;;;;;;;;;;;;:::i;1031:106:172:-;;;:::i;13376:408:182:-;;;;;;:::i;:::-;;:::i;10403:178::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3825:809::-;;;;;;:::i;:::-;;:::i;:::-;;10621:934;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;11595:450::-;;;;;;:::i;:::-;;:::i;1401:164::-;;1467:98;1401:164;;10180:183;;;;;;:::i;:::-;;:::i;618:53:183:-;;;;;2795:990:182;;;;;;:::i;:::-;;:::i;12940:396::-;;;;;;:::i;:::-;;:::i;12308:144::-;;;;;;:::i;:::-;12395:4;12418:27;;;:18;:27;;;;;;;;;12308:144;2176:579;;;;;;:::i;:::-;;:::i;12492:408::-;;;;;;:::i;:::-;;:::i;1826:433:173:-;;;:::i;4674:369:182:-;4765:4;4781:19;4803:22;:41;4826:17;:11;:15;:17::i;:::-;4803:41;;;;;;;;;;;-1:-1:-1;4803:41:182;;;;;;;-1:-1:-1;4862:9:182;:27;;;;;;;;:::i;:::-;;4854:64;;;;-1:-1:-1;;;4854:64:182;;;;;;;;;;;;4929:22;4954:16;:35;4971:17;:11;:15;:17::i;:::-;4954:35;;;;;;;;;;;;;;-1:-1:-1;4954:35:182;;;-1:-1:-1;;;;;4954:45:182;;;;;;;;;4929:70;;;;;;;;;;;;;;;;;;;;;;;4954:45;;4929:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4929:70:182;;;;-1:-1:-1;;5016:20:182;;;-1:-1:-1;;;;4674:369:182;;;;;:::o;12085:183::-;12183:7;12225:34;12237:11;12250:8;12225:11;:34::i;:::-;12217:43;;;:::i;:::-;12209:52;;;12085:183;-1:-1:-1;;;12085:183:182:o;1031:106:172:-;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;13376:408:182:-;13545:7;13564:18;1467:98;13652:8;13662:11;:15;;;13679:11;:14;;;13705:7;;13695:18;;;;;;;:::i;:::-;;;;;;;;;;13608:106;;;11749:25:321;;;;-1:-1:-1;;;;;11810:32:321;;;11790:18;;;11783:60;11879:32;;;;11859:18;;;11852:60;11960:10;11948:23;11928:18;;;11921:51;11988:19;;;11981:35;;;;11721:19;;13608:106:182;;;;;;;;;;;;13585:139;;;;;;13564:160;;13741:36;13766:10;13741:24;:36::i;:::-;13734:43;13376:408;-1:-1:-1;;;;;;13376:408:182:o;10403:178::-;10505:9;10533:22;:41;10556:17;:11;:15;:17::i;:::-;10533:41;;;;;;;;;;;-1:-1:-1;10533:41:182;;;;;10403:178;-1:-1:-1;;10403:178:182:o;3825:809::-;3920:8;713:22:171;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:171;;;;;;;;;;;;4051:60:182::1;::::0;-1:-1:-1;;;4051:60:182;;-1:-1:-1;;;;;4051:17:182::1;:37;::::0;::::1;::::0;:60:::1;::::0;4089:8;;4099:11;;4051:60:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4050:61;4136:11;4149:8;4029:139;;;;;::::0;-1:-1:-1;;;4029:139:182;;12108:12:321;;-1:-1:-1;;;;;12104:38:321;;;4029:139:182::1;::::0;::::1;12092:51:321::0;12196:4;12185:16;;;12179:23;12204:10;12175:40;12159:14;;;12152:64;13189:32;;13169:18;;;13162:60;13078:18;;4029:139:182::1;;;;;;;;;;;4179:19;4201:22;:41;4224:17;:11;:15;:17::i;:::-;4201:41:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4201:41:182;;;;::::1;;::::0;-1:-1:-1;4260:9:182::1;:27;;;;;;;;:::i;:::-;::::0;4252:64:::1;;;;-1:-1:-1::0;;;4252:64:182::1;;;;;;;;;;;;4327:22;4352:16;:35;4369:17;:11;:15;:17::i;:::-;4352:35:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;4352:35:182;;;-1:-1:-1;;;;;4352:45:182;::::1;::::0;;;;;;;4327:70;;;;::::1;::::0;;;;;::::1;;;;::::0;;;;::::1;::::0;;;;4352:45;;4327:70;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;4416:7;:20;;;4450:11;4463:8;4408:65;;;;;::::0;-1:-1:-1;;;4408:65:182;;12108:12:321;;-1:-1:-1;;;;;12104:38:321;;;4408:65:182::1;::::0;::::1;12092:51:321::0;12196:4;12185:16;;;12179:23;12204:10;12175:40;12159:14;;;12152:64;13189:32;;13169:18;;;13162:60;13078:18;;4408:65:182::1;12871:357:321::0;4408:65:182::1;;;4517:16;:35;4534:17;:11;:15;:17::i;:::-;4517:35:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;4517:35:182;;;-1:-1:-1;;;;;4517:45:182;::::1;::::0;;;;;;;4510:52;;-1:-1:-1;;4510:52:182::1;::::0;;4517:45;4510:52:::1;::::0;;::::1;-1:-1:-1::0;4510:52:182::1;:::i;:::-;;;4607:8;-1:-1:-1::0;;;;;4578:49:182::1;;4594:11;4617:9;4578:49;;;;;;;:::i;:::-;;;;;;;;3930:704;;3825:809:::0;;;:::o;10621:934::-;-1:-1:-1;;;;;;;;;;;;;;;;;10767:28:182;;:::i;:::-;10851:19;10873:22;:41;10896:17;:11;:15;:17::i;:::-;10873:41;;;;;;;;;;;-1:-1:-1;10873:41:182;;;;;-1:-1:-1;10945:15:182;10932:9;:28;;;;;;;;:::i;:::-;;10924:57;;;;-1:-1:-1;;;10924:57:182;;;;;;;;;;;;10992:22;11017:16;:35;11034:17;:11;:15;:17::i;:::-;11017:35;;;;;;;;;;;;;;-1:-1:-1;11017:35:182;;;-1:-1:-1;;;;;11017:45:182;;;;;;;;;10992:70;;;;;;;;;;;;;;;;;;;;;;;11017:45;;10992:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11078:7;:20;;;11073:239;;-1:-1:-1;;11168:54:182;;;;;;;;:27;:54;;;;;;;;;;11244:19;;;;;;;;;;;;;;;;;11265:35;;;;;;;;;;;;;;;;;11244:19;-1:-1:-1;11265:35:182;-1:-1:-1;11236:65:182;;11073:239;11323:11;11336;11349:21;11372;11420:7;:15;;;11409:71;;;;;;;;;;;;:::i;:::-;11499:23;;;;;;;;;;;;;;;;;;;11524;;;;;;;;;;;;;;;;;;11499;;-1:-1:-1;11524:23:182;-1:-1:-1;;;;;;;10621:934:182;;;;;;:::o;11595:450::-;11687:12;11755:19;11777:22;:41;11800:17;:11;:15;:17::i;:::-;11777:41;;;;;;;;;;;-1:-1:-1;11777:41:182;;;;;-1:-1:-1;11777:41:182;11836:9;:28;;;;;;;;:::i;:::-;;11828:57;;;;-1:-1:-1;;;11828:57:182;;;;;;;;;;;;11896:22;11921:16;:35;11938:17;:11;:15;:17::i;:::-;11921:35;;;;;;;;;;;;;;-1:-1:-1;11921:35:182;;;-1:-1:-1;;;;;11921:45:182;;;;;;;;;11896:70;;;;;;;;;;;;;;;;;;;;;;;11921:45;;11896:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11896:70:182;;;;-1:-1:-1;;;11983:15:182;;;;11595:450;-1:-1:-1;;;;;11595:450:182:o;10180:183::-;10275:4;10298:16;:35;10315:17;:11;:15;:17::i;:::-;10298:35;;;;;;;;;;;;;;-1:-1:-1;10298:35:182;;;-1:-1:-1;;;;;10298:45:182;;;;;;;;;:58;;;;-1:-1:-1;10180:183:182;;;;:::o;2795:990::-;2976:8;713:22:171;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:171;;;;;;;;;;;;2996:19:182::1;3018:22;:41;3041:17;:11;:15;:17::i;:::-;3018:41:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3018:41:182;;;;::::1;;::::0;-1:-1:-1;3077:9:182::1;:27;;;;;;;;:::i;:::-;::::0;3069:64:::1;;;;-1:-1:-1::0;;;3069:64:182::1;;;;;;;;;;;;3227:16;:35;3244:17;:11;:15;:17::i;:::-;3227:35:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;3227:35:182;;;-1:-1:-1;;;;;3227:45:182;::::1;::::0;;;;;;;:58;::::1;;3226:59;3218:92;;;;-1:-1:-1::0;;;3218:92:182::1;;;;;;;;;;;;3424:15;3411:9;:28;;;;;;;;:::i;:::-;::::0;3407:300:::1;;3455:60;3473:11;3486:8;3496:7;;3505:9;;3455:17;:60::i;:::-;3407:300;;;3549:15;3536:9;:28;;;;;;;;:::i;:::-;::::0;3532:175:::1;;3580:60;3598:11;3611:8;3621:7;;3630:9;;3580:17;:60::i;3532:175::-;3678:18;;-1:-1:-1::0;;;3678:18:182::1;;;;;;;;;;;3532:175;3749:8;-1:-1:-1::0;;;;;3722:56:182::1;;3736:11;3759:9;3770:7;;3722:56;;;;;;;;;:::i;:::-;;;;;;;;2986:799;2795:990:::0;;;;;;;:::o;12940:396::-;13222:15;;13239:14;;;;;13168:98;;13105:7;;;;13168:98;;1291:103;;13212:8;;13222:15;13255:10;;13168:98;15734:25:321;;;-1:-1:-1;;;;;15795:32:321;;;15790:2;15775:18;;15768:60;15864:32;;;15859:2;15844:18;;15837:60;15945:10;15933:23;15928:2;15913:18;;15906:51;15994:32;15988:3;15973:19;;15966:61;15721:3;15706:19;;15477:556;13168:98:182;;;;;;;;;;;;;13145:131;;;;;;13124:152;;13293:36;13318:10;13293:24;:36::i;:::-;13286:43;;;12940:396;;;;;;:::o;2176:579::-;2303:15;;713:22:171;2303:15:182;713:13:171;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:171;;;;;;;;;;;;2351:15:182::1;2338:9;:28;;;;;;;;:::i;:::-;;:60;;;-1:-1:-1::0;2383:15:182::1;2370:9;:28;;;;;;;;:::i;:::-;;2338:60;2330:89;;;;-1:-1:-1::0;;;2330:89:182::1;;;;;;;;;;;;2485:20;2508:22;:41;2531:17;:11;:15;:17::i;:::-;2508:41:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2508:41:182;;;;::::1;;::::0;-1:-1:-1;2567:10:182::1;:28;;;;;;;;:::i;:::-;;2559:64;;;;-1:-1:-1::0;;;2559:64:182::1;;;;;;;;;;;;2678:9;2634:22;:41;2657:17;:11;:15;:17::i;:::-;2634:41:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2634:41:182;:53;;-1:-1:-1;;2634:53:182::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;2703:45;2725:11;2738:9;2703:45;;;;;;;:::i;:::-;;;;;;;;2320:435;2176:579:::0;;;:::o;12492:408::-;12585:7;12604:22;12629:16;:35;12646:17;:11;:15;:17::i;:::-;12629:35;;;;;;;;;;;;;;-1:-1:-1;12629:35:182;;;-1:-1:-1;;;;;12629:45:182;;;;;;;;;12604:70;;;;;;;;;;;;;;;;;;;;;;;12629:45;;12604:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12684:19;12706:22;:41;12729:17;:11;:15;:17::i;:::-;12706:41;;;;;;;;;;;-1:-1:-1;12706:41:182;;12763:20;;12706:41;;;;;-1:-1:-1;12758:69:182;;-1:-1:-1;12814:1:182;;-1:-1:-1;12799:17:182;;-1:-1:-1;12799:17:182;12758:69;12844:49;12866:7;:15;;;12883:9;12844:21;:49::i;:::-;12837:56;12492:408;-1:-1:-1;;;;;12492:408:182:o;1826:433:173:-;2074:19;;;;;;;;;;;;-1:-1:-1;;;2074:19:173;;;;;1882:7;518:95;2064:30;2132:15;:13;:15::i;:::-;2116:33;;;;;;;1987:251;;;;;;16297:25:321;;;;16338:18;;;16331:34;;;;16381:18;;;16374:34;;;;2171:13:173;16424:18:321;;;16417:34;2215:4:173;16467:19:321;;;16460:61;16269:19;;1987:251:173;;;;;;;;;;;;1960:292;;;;;;1940:312;;1826:433;:::o;399:154:167:-;472:7;523:2;:6;;;538:2;:5;;;531:13;;506:39;;;;;;;;16707:2:321;16703:15;;;;-1:-1:-1;;;;;;16699:53:321;16687:66;;16809:3;16787:16;-1:-1:-1;;;;;;16783:59:321;16778:2;16769:12;;16762:81;16868:2;16859:12;;16532:345;506:39:167;;;;;;;;;;;;;498:48;;;:::i;2081:405:38:-;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:38;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:38;;;-1:-1:-1;2438:4:38;2429:14;;2422:28;;;;-1:-1:-1;2393:16:38;2081:405::o;2757:182:173:-;2842:7;2907:17;:15;:17::i;:::-;2878:53;;-1:-1:-1;;;2878:53:173;;;17442:27:321;17485:11;;;17478:27;;;;17521:12;;;17514:28;;;17558:12;;2878:53:173;;;;;;;;;;;;2868:64;;;;;;2861:71;;2757:182;;;:::o;1080:175:171:-;1175:73;;-1:-1:-1;;;1175:73:171;;-1:-1:-1;;;;;17828:32:321;;;1175:73:171;;;17810:51:321;1213:10:171;17877:18:321;;;17870:60;1233:4:171;17946:18:321;;;17939:60;1152:4:171;1240:7;;-1:-1:-1;;;;;;1240:7:171;18015:18:321;;;18008:61;1152:4:171;1175:20;:28;;;;;;17782:19:321;;1175:73:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5590:1027:182:-;5841:2;5823:20;;5815:49;;;;-1:-1:-1;;;5815:49:182;;;;;;;;;;;;5912:18;5941:16;5949:7;;5941:16;:::i;:::-;5933:25;;;-1:-1:-1;5933:25:182;5968:47;;;;-1:-1:-1;;;5968:47:182;;;;;;;;;;;;6074:15;6092:47;6114:7;;6092:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6123:15:182;;-1:-1:-1;6092:21:182;;-1:-1:-1;;6092:47:182:i;:::-;6194:27;;;;:18;:27;;;;;;6074:65;;-1:-1:-1;6194:27:182;;6193:28;6185:61;;;;-1:-1:-1;;;6185:61:182;;;;;;;;;;;;6331:22;6356:69;6391:8;6401:11;6414:10;6356:34;:69::i;:::-;6331:94;;6436:83;6462:10;6474:14;6490:9;;6436:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6501:17:182;-1:-1:-1;6436:25:182;;-1:-1:-1;;6436:83:182:i;:::-;6556:54;6570:11;6583:8;6593:7;;6556:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6602:7:182;;-1:-1:-1;6556:13:182;;-1:-1:-1;;6556:54:182:i;:::-;5764:853;;;5590:1027;;;;;;:::o;7072:1648::-;-1:-1:-1;;;;;;;;;;;;;;;;;7294:28:182;;:::i;:::-;7416:11;;;;7506:63;;;;7517:7;7506:63;:::i;:::-;7415:154;;;;;;;;7627:23;;;;;;;;7641:3;7627:23;;;;7646:3;7627:23;;;7617:33;;7674:3;7681:1;7674:8;:20;;;;-1:-1:-1;7686:8:182;;7674:20;7672:23;7664:46;;;;-1:-1:-1;;;7664:46:182;;;;;;;;;;;;7792:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;;7910:66:182;;-1:-1:-1;7945:8:182;7955:11;7968:7;;7910:34;:66::i;:::-;7885:91;-1:-1:-1;8039:12:182;;8069:41;;;;8080:9;8069:41;:::i;:::-;8158:25;;;;;;;;;;;;;;;;;;8038:72;;-1:-1:-1;8038:72:182;-1:-1:-1;8120:35:182;8263:98;8302:14;8158:25;8334:7;8343;8120:35;;8263:38;:98::i;:::-;8222:139;;;8379:17;8371:46;;;;-1:-1:-1;;;8371:46:182;;;;;;;;;;;;8486:15;8504:47;8526:7;;8504:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8535:15:182;;-1:-1:-1;8504:21:182;;-1:-1:-1;;8504:47:182:i;:::-;8570:27;;;;:18;:27;;;;;;8486:65;;-1:-1:-1;8570:27:182;;8569:28;8561:61;;;;-1:-1:-1;;;8561:61:182;;;;;;;;;;;;8659:54;8673:11;8686:8;8696:7;;8659:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8705:7:182;;-1:-1:-1;8659:13:182;;-1:-1:-1;;8659:54:182:i;:::-;7246:1474;;;;;;;;7072:1648;;;;;;:::o;9602:461::-;9698:7;9734:15;9721:9;:28;;;;;;;;:::i;:::-;;9717:304;;-1:-1:-1;9772:17:182;;;;;;9765:24;;9717:304;9823:15;9810:9;:28;;;;;;;;:::i;:::-;;9806:215;;9855:11;9868;9896:6;9885:62;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;9986:23:182;;;;;;;;;;;;;;;;;;-1:-1:-1;11178:20:162;;;11224;;11211:34;;;11270:18;;;-1:-1:-1;9961:49:182;;-1:-1:-1;;9961:49:182;1357:170:172;1405:13;1430:14;1453:19;:8;:17;:19::i;:::-;1430:43;;1514:1;1516;1514:4;;;;;;;;:::i;:::-;;;;;;;1497:22;;-1:-1:-1;;;;;;1514:4:172;;;1497:22;;;19514:39:321;;;;19569:11;;1497:22:172;;;;;;;;;;;;1483:37;;;1357:170;:::o;2558:245:38:-;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:38;;;;;;;;;;;3667:714:173;3997:15;3987:6;:25;;3979:54;;;;-1:-1:-1;;;3979:54:173;;;;;;;;;;;;4300:53;-1:-1:-1;;;;;4300:26:173;;4327:14;4343:9;4300:26;:53::i;:::-;4292:82;;;;-1:-1:-1;;;4292:82:173;;;;;;;;;;;;3667:714;;;;:::o;8981:378:182:-;9223:46;;;;;;;;;9246:4;9223:46;;;;;;;;-1:-1:-1;;9192:17:182;:11;:15;:17::i;:::-;9175:35;;;;;;;;;;;;;;-1:-1:-1;9175:35:182;;;-1:-1:-1;;;;;9175:45:182;;;;;;;:94;;;;-1:-1:-1;;9175:94:182;;;;;;;;;;;-1:-1:-1;9175:94:182;;;;;;;:::i;:::-;-1:-1:-1;;;9318:27:182;;;;:18;:27;;;;;:34;;-1:-1:-1;;9318:34:182;9348:4;9318:34;;;-1:-1:-1;;;8981:378:182:o;1065:1076:163:-;1316:12;1330:22;1364:33;1400:23;1415:7;1400:14;:23::i;:::-;1364:59;;1433:13;1449:55;1465:7;1474:8;1484;1494:9;1449:15;:55::i;:::-;1433:71;-1:-1:-1;1551:27:163;1581:42;1596:26;:8;1433:71;1596:19;:26::i;:::-;1581:9;;:14;:42::i;:::-;1551:72;;1633:28;1664:56;1682:37;1713:5;1682:19;-1:-1:-1;;;;;;;;;;;;;;;;;2862:13:162;;;;;;;;2870:1;2862:13;;2873:1;2862:13;;;;;2783:99;1682:19:163;:30;;:37::i;:::-;1664:12;;:17;:56::i;:::-;1633:87;;1735:11;1731:404;;;1856:80;1874:6;1882:22;:20;:22::i;:::-;1906:7;1915:8;1925:10;1856:17;:80::i;:::-;1809:127;-1:-1:-1;1809:127:163;-1:-1:-1;1731:404:163;;;1977:64;1991:6;1999:22;:20;:22::i;:::-;2023:7;2032:8;1977:13;:64::i;:::-;1967:74;;2059:7;2055:70;;;2106:4;2086:24;;2055:70;1354:787;;;;1065:1076;;;;;;;;;:::o;1047:399:43:-;1153:4;1170:17;1189:35;1228:44;1256:4;1262:9;1228:27;:44::i;:::-;1169:103;;-1:-1:-1;1169:103:43;-1:-1:-1;1311:37:43;1302:5;:46;;;;;;;;:::i;:::-;;:69;;;;;1365:6;-1:-1:-1;;;;;1352:19:43;:9;-1:-1:-1;;;;;1352:19:43;;1302:69;1301:138;;;;1388:51;1415:6;1423:4;1429:9;1388:26;:51::i;11698:464:162:-;-1:-1:-1;;;;;;;;;;;;;;;;;11791:12:162;;;11853:24;-1:-1:-1;;;;;;;;;;;11861:2:162;11853:24;:::i;:::-;11841:36;;11888:238;11927:13;11938:1;11927:10;:13::i;:::-;11915:25;;-1:-1:-1;11915:25:162;-1:-1:-1;;;;;;;;;;;;12004:1:162;12001;11994:24;11986:4;:32;11982:91;;12045:13;;;;;;;;;;;;;;;;;;;;11698:464;-1:-1:-1;;;11698:464:162:o;11982:91::-;-1:-1:-1;;;;;;;;;;;12101:1:162;12098;12091:24;12087:28;;11888:238;;2495:661:163;2840:10;;2872;;;;;2904;;:13;;2939;;;;2974:10;;;;:13;;3009;;;;3044:11;;3077;;;;2773:333;;;;;;22408:19:321;;;22443:12;;22436:28;;;;22480:12;;;22473:28;;;;22517:12;;;22510:28;;;;22554:13;;;22547:29;;;;22592:13;;;22585:29;22630:13;;;22623:29;22668:13;;;22661:29;22706:13;;;22699:29;;;;2692:13:163;;2062:102:162;;22744:13:321;;2773:333:163;;;;;;;;;;;;2746:374;;;;;;2725:405;;:424;;;;:::i;7788:550:162:-;-1:-1:-1;;;;;;;;;;;;;;;;;7888:23:162;;:::i;:::-;7932:3;;7921:14;;:8;7956:3;;;;7945:8;;;:14;7969:8;;;;:12;;;-1:-1:-1;;8156:1:162;8150:4;7921:14;8140:1;8133:4;8126:5;8122:16;8111:53;8100:64;-1:-1:-1;8100:64:162;;8234:47;8261:20;8270:9;8234:47;;8308:7;8300:31;;;;-1:-1:-1;;;8300:31:162;;;;;;;;;;;;7878:460;;7788:550;;;;:::o;5563:585::-;-1:-1:-1;;;;;;;;;;;;;;;;;5666:23:162;;:::i;:::-;5710:4;;5699:15;;:8;5735:4;;;;5724:8;;;:15;5760:4;;5749:8;;;;:15;;;;5785:4;;;;5774:8;;;:15;-1:-1:-1;;5965:1:162;5959:4;5699:15;5949:1;5942:4;5935:5;5931:16;5920:53;5909:64;-1:-1:-1;5909:64:162;;6043:47;6070:20;6079:9;6043:47;;6118:7;6110:31;;;;-1:-1:-1;;;6110:31:162;;;;;;;;;;;4804:128;4853:14;;:::i;:::-;-1:-1:-1;4886:39:162;;;;;;;;4245:102;4886:39;;;;;;4395:102;4886:39;;;;;;;;;;;;;;4545:102;4886:39;;4695:102;4886:39;;;;;;;;;;;;;;;4804:128::o;9829:1112::-;10037:31;;;;;;;;;;;;;;;;;;10078;;;;;;;;;;;;;;;;10015:4;;;;10037:31;10120:24;;:::i;:::-;10160:9;10155:302;10179:1;10175;:5;10155:302;;;10201:9;10213:5;:1;10217;10213:5;:::i;:::-;10201:17;;10247:2;10250:1;10247:5;;;;;;;:::i;:::-;;;;;:7;10232:5;10238;:1;10247:7;10238:5;:::i;:::-;10232:12;;;;;;;:::i;:::-;;;;:22;10283:2;10286:1;10283:5;;;;;;;:::i;:::-;;;;;:7;;;10268:5;10274:1;10278;10274:5;;;;:::i;:::-;10268:12;;;;;;;:::i;:::-;;;;:22;10319:2;10322:1;10319:5;;;;;;;:::i;:::-;;;;;:7;:10;10304:5;10310;:1;10314;10310:5;:::i;:::-;10304:12;;;;;;;:::i;:::-;;;;:25;10358:2;10361:1;10358:5;;;;;;;:::i;:::-;;;;;:7;10366:1;10358:10;;;;10343:5;10349;:1;10353;10349:5;:::i;:::-;10343:12;;;;;;;:::i;:::-;;;;:25;10397:2;10400:1;10397:5;;;;;;;:::i;:::-;;;;;:7;;;10405:1;10397:10;;;;;;;:::i;:::-;;;;;10382:5;10388;:1;10392;10388:5;:::i;:::-;10382:12;;;;;;;:::i;:::-;;;;:25;10436:2;10439:1;10436:5;;;;;;;:::i;:::-;;;;;:7;;;10444:1;10436:10;;;;;;;:::i;:::-;;;;;10421:5;10427;:1;10431;10427:5;:::i;:::-;10421:12;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;10182:3:162;;10155:302;;;;10467:21;;:::i;:::-;10498:12;10672:4;10667:3;10652:13;10645:5;10642:1;10630:10;10619:58;10922:6;;10608:69;;10922:11;;;;-1:-1:-1;10905:29:162;;-1:-1:-1;;;;;;;;;;9829:1112:162:o;8588:1024::-;8758:31;;;;;;;;;;;;;;;;;;8799;;;;;;;;;;;;;;;;8742:4;;8841:24;;:::i;:::-;8881:9;8876:302;8900:1;8896;:5;8876:302;;;8922:9;8934:5;:1;8938;8934:5;:::i;:::-;8922:17;;8968:2;8971:1;8968:5;;;;;;;:::i;:::-;;;;;:7;8953:5;8959;:1;8968:7;8959:5;:::i;:::-;8953:12;;;;;;;:::i;:::-;;;;:22;9004:2;9007:1;9004:5;;;;;;;:::i;:::-;;;;;:7;;;8989:5;8995:1;8999;8995:5;;;;:::i;:::-;8989:12;;;;;;;:::i;:::-;;;;:22;9040:2;9043:1;9040:5;;;;;;;:::i;:::-;;;;;:7;:10;9025:5;9031;:1;9035;9031:5;:::i;:::-;9025:12;;;;;;;:::i;:::-;;;;:25;9079:2;9082:1;9079:5;;;;;;;:::i;:::-;;;;;:7;9087:1;9079:10;;;;9064:5;9070;:1;9074;9070:5;:::i;:::-;9064:12;;;;;;;:::i;:::-;;;;:25;9118:2;9121:1;9118:5;;;;;;;:::i;:::-;;;;;:7;;;9126:1;9118:10;;;;;;;:::i;:::-;;;;;9103:5;9109;:1;9113;9109:5;:::i;:::-;9103:12;;;;;;;:::i;:::-;;;;:25;9157:2;9160:1;9157:5;;;;;;;:::i;:::-;;;;;:7;;;9165:1;9157:10;;;;;;;:::i;:::-;;;;;9142:5;9148;:1;9152;9148:5;:::i;:::-;9142:12;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;8903:3:162;;8876:302;;;;9188:21;;:::i;:::-;9219:12;9399:4;9394:3;9379:13;9372:5;9369:1;9362:4;9355:5;9351:16;9340:64;9329:75;-1:-1:-1;9329:75:162;;9474:47;9501:20;9510:9;9474:47;;9549:7;9541:35;;;;-1:-1:-1;;;9541:35:162;;;;;;;;;;;;-1:-1:-1;9594:6:162;:11;;;;-1:-1:-1;;;;;;;;8588:1024:162:o;2167:730:41:-;2248:7;2257:12;2285:9;:16;2305:2;2285:22;2281:610;;2621:4;2606:20;;2600:27;2670:4;2655:20;;2649:27;2727:4;2712:20;;2706:27;2323:9;2698:36;2768:25;2779:4;2698:36;2600:27;2649;2768:10;:25::i;:::-;2761:32;;;;;;;;;2281:610;-1:-1:-1;2840:1:41;;-1:-1:-1;2844:35:41;2824:56;;1852:495:43;1995:4;2012:12;2026:19;2049:6;-1:-1:-1;;;;;2049:17:43;2103:45;;;2150:4;2156:9;2080:86;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2080:86:43;;;;;;;;;;;;;;-1:-1:-1;;;;;2080:86:43;-1:-1:-1;;;;;;2080:86:43;;;;;;;;;;2049:127;;;;2080:86;2049:127;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:165;;;;2194:7;:42;;;;;2234:2;2217:6;:13;:19;;2194:42;:145;;;;-1:-1:-1;2252:29:43;;-1:-1:-1;;;2293:45:43;2252:29;;;;;;;;;;;;:::i;:::-;:87;;1852:495;-1:-1:-1;;;;;;1852:495:43:o;12283:447:162:-;12351:7;;;-1:-1:-1;;;;;;;;;;;12482:1:162;-1:-1:-1;;;;;;;;;;;12466:1:162;-1:-1:-1;;;;;;;;;;;12450:1:162;12447;12440:24;12433:47;12426:70;12411:85;;12593:9;12605:91;12612:4;12618:65;-1:-1:-1;;;;;;;;;;;12605:6:162;:91::i;:::-;12715:4;;12593:103;;-1:-1:-1;12283:447:162;;-1:-1:-1;;;12283:447:162:o;5031:1456:41:-;5119:7;;6043:66;6030:79;;6026:161;;;-1:-1:-1;6141:1:41;;-1:-1:-1;6145:30:41;6125:51;;6026:161;6298:24;;;6281:14;6298:24;;;;;;;;;24218:25:321;;;24291:4;24279:17;;24259:18;;;24252:45;;;;24313:18;;;24306:34;;;24356:18;;;24349:34;;;6298:24:41;;24190:19:321;;6298:24:41;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6298:24:41;;-1:-1:-1;;6298:24:41;;;-1:-1:-1;;;;;;;6336:20:41;;6332:101;;6388:1;6392:29;6372:50;;;;;;;6332:101;6451:6;-1:-1:-1;6459:20:41;;-1:-1:-1;5031:1456:41;;;;;;;;:::o;12736:835:162:-;12827:14;12853:12;12875:24;;:::i;:::-;12909:23;;:::i;:::-;12953:4;12942:15;;;13025:8;;;:15;;;13109:8;;;:15;;;13193:8;;;:16;;;13219:8;;;:20;;;13249:8;;;:19;;;13357:6;13351:4;12942:15;13255:1;13334:4;13327:5;13323:16;13312:58;13301:69;-1:-1:-1;13301:69:162;;13440:47;13467:20;13476:9;13440:47;;13514:7;13506:32;;;;-1:-1:-1;;;13506:32:162;;;;;;;;;;;;-1:-1:-1;13555:9:162;;;-1:-1:-1;;;;;12736:835:162:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:321:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:257;218:4;212:11;;;250:17;;297:18;282:34;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:4;373:24;146:257;:::o;408:275::-;479:2;473:9;544:2;525:13;;-1:-1:-1;;521:27:321;509:40;;579:18;564:34;;600:22;;;561:62;558:88;;;626:18;;:::i;:::-;662:2;655:22;408:275;;-1:-1:-1;408:275:321:o;688:173::-;756:20;;-1:-1:-1;;;;;805:31:321;;795:42;;785:70;;851:1;848;841:12;785:70;688:173;;;:::o;866:397::-;924:5;972:4;960:9;955:3;951:19;947:30;944:50;;;990:1;987;980:12;944:50;1012:22;;:::i;:::-;1003:31;;1057:29;1076:9;1057:29;:::i;:::-;1050:5;1043:44;1139:2;1128:9;1124:18;1111:32;1187:10;1178:7;1174:24;1165:7;1162:37;1152:65;;1213:1;1210;1203:12;1152:65;1244:2;1233:14;;1226:31;1237:5;866:397;-1:-1:-1;;866:397:321:o;1268:310::-;1366:6;1374;1427:2;1415:9;1406:7;1402:23;1398:32;1395:52;;;1443:1;1440;1433:12;1395:52;1466:49;1507:7;1496:9;1466:49;:::i;:::-;1456:59;;1534:38;1568:2;1557:9;1553:18;1534:38;:::i;:::-;1524:48;;1268:310;;;;;:::o;2404:616::-;2454:5;2507:3;2500:4;2492:6;2488:17;2484:27;2474:55;;2525:1;2522;2515:12;2474:55;2626:19;2604:2;2626:19;:::i;:::-;2669:3;2707:2;2699:6;2695:15;2733:3;2725:6;2722:15;2719:35;;;2750:1;2747;2740:12;2719:35;2774:6;2789:200;2805:6;2800:3;2797:15;2789:200;;;2897:17;;2927:18;;2974:4;2965:14;;;;2822;2789:200;;;-1:-1:-1;3007:7:321;;2404:616;-1:-1:-1;;;;;2404:616:321:o;3025:854::-;3145:6;3153;3197:9;3188:7;3184:23;3227:3;3223:2;3219:12;3216:32;;;3244:1;3241;3234:12;3216:32;3268:4;3264:2;3260:13;3257:33;;;3286:1;3283;3276:12;3257:33;3312:22;;:::i;:::-;3379:23;;3411:22;;3506:2;3491:18;;;3478:32;3526:14;;;3519:31;3418:5;-1:-1:-1;3608:4:321;-1:-1:-1;;3590:16:321;;3586:27;3583:47;;;3626:1;3623;3616:12;3583:47;;3654:22;;:::i;:::-;3701:55;3748:7;3741:4;3730:9;3726:20;3701:55;:::i;:::-;3692:7;3685:72;3791:55;3838:7;3831:4;3820:9;3816:20;3791:55;:::i;:::-;3786:2;3777:7;3773:16;3766:81;3866:7;3856:17;;;3025:854;;;;;:::o;3884:288::-;3925:3;3963:5;3957:12;3990:6;3985:3;3978:19;4046:6;4039:4;4032:5;4028:16;4021:4;4016:3;4012:14;4006:47;4098:1;4091:4;4082:6;4077:3;4073:16;4069:27;4062:38;4161:4;4154:2;4150:7;4145:2;4137:6;4133:15;4129:29;4124:3;4120:39;4116:50;4109:57;;;3884:288;;;;:::o;4177:217::-;4324:2;4313:9;4306:21;4287:4;4344:44;4384:2;4373:9;4369:18;4361:6;4344:44;:::i;4623:347::-;4674:8;4684:6;4738:3;4731:4;4723:6;4719:17;4715:27;4705:55;;4756:1;4753;4746:12;4705:55;-1:-1:-1;4779:20:321;;4822:18;4811:30;;4808:50;;;4854:1;4851;4844:12;4808:50;4891:4;4883:6;4879:17;4867:29;;4943:3;4936:4;4927:6;4919;4915:19;4911:30;4908:39;4905:59;;;4960:1;4957;4950:12;4975:608;5093:6;5101;5109;5117;5170:3;5158:9;5149:7;5145:23;5141:33;5138:53;;;5187:1;5184;5177:12;5138:53;5210:29;5229:9;5210:29;:::i;:::-;5200:39;;5258:58;5308:7;5303:2;5292:9;5288:18;5258:58;:::i;:::-;5248:68;;5367:2;5356:9;5352:18;5339:32;5394:18;5386:6;5383:30;5380:50;;;5426:1;5423;5416:12;5380:50;5465:58;5515:7;5506:6;5495:9;5491:22;5465:58;:::i;:::-;4975:608;;;;-1:-1:-1;5542:8:321;-1:-1:-1;;;;4975:608:321:o;5588:236::-;5677:6;5730:2;5718:9;5709:7;5705:23;5701:32;5698:52;;;5746:1;5743;5736:12;5698:52;5769:49;5810:7;5799:9;5769:49;:::i;5829:127::-;5890:10;5885:3;5881:20;5878:1;5871:31;5921:4;5918:1;5911:15;5945:4;5942:1;5935:15;5961:237;6042:1;6035:5;6032:12;6022:143;;6087:10;6082:3;6078:20;6075:1;6068:31;6122:4;6119:1;6112:15;6150:4;6147:1;6140:15;6022:143;6174:18;;5961:237::o;6203:209::-;6350:2;6335:18;;6362:44;6339:9;6388:6;6362:44;:::i;6417:310::-;6515:6;6523;6576:2;6564:9;6555:7;6551:23;6547:32;6544:52;;;6592:1;6589;6582:12;6544:52;6615:29;6634:9;6615:29;:::i;:::-;6605:39;;6663:58;6713:7;6708:2;6697:9;6693:18;6663:58;:::i;6732:303::-;6825:5;6848:1;6858:171;6872:4;6869:1;6866:11;6858:171;;;6931:13;;6919:26;;6974:4;6965:14;;;;7002:17;;;;6892:1;6885:9;6858:171;;7040:569;7264:4;7306:3;7295:9;7291:19;7283:27;;7343:6;7337:13;7326:9;7319:32;7407:4;7399:6;7395:17;7389:24;7382:4;7371:9;7367:20;7360:54;7423:59;7478:2;7467:9;7463:18;7454:6;7448:13;7423:59;:::i;:::-;7529:4;7521:6;7517:17;7511:24;7544:59;7598:3;7587:9;7583:19;7569:12;7544:59;:::i;:::-;;7040:569;;;;;:::o;7850:912::-;7988:6;7996;8004;8012;8020;8028;8081:3;8069:9;8060:7;8056:23;8052:33;8049:53;;;8098:1;8095;8088:12;8049:53;8121:29;8140:9;8121:29;:::i;:::-;8111:39;;8169:58;8219:7;8214:2;8203:9;8199:18;8169:58;:::i;:::-;8159:68;;8278:2;8267:9;8263:18;8250:32;8305:18;8297:6;8294:30;8291:50;;;8337:1;8334;8327:12;8291:50;8376:58;8426:7;8417:6;8406:9;8402:22;8376:58;:::i;:::-;8453:8;;-1:-1:-1;8350:84:321;-1:-1:-1;;8541:3:321;8526:19;;8513:33;8571:18;8558:32;;8555:52;;;8603:1;8600;8593:12;8555:52;8642:60;8694:7;8683:8;8672:9;8668:24;8642:60;:::i;:::-;7850:912;;;;-1:-1:-1;7850:912:321;;-1:-1:-1;7850:912:321;;8721:8;;7850:912;-1:-1:-1;;;7850:912:321:o;8767:385::-;8874:6;8882;8890;8943:3;8931:9;8922:7;8918:23;8914:33;8911:53;;;8960:1;8957;8950:12;8911:53;8983:29;9002:9;8983:29;:::i;:::-;8973:39;;9031:58;9081:7;9076:2;9065:9;9061:18;9031:58;:::i;:::-;9021:68;;9108:38;9142:2;9131:9;9127:18;9108:38;:::i;:::-;9098:48;;8767:385;;;;;:::o;9157:180::-;9216:6;9269:2;9257:9;9248:7;9244:23;9240:32;9237:52;;;9285:1;9282;9275:12;9237:52;-1:-1:-1;9308:23:321;;9157:180;-1:-1:-1;9157:180:321:o;9342:395::-;9455:6;9463;9516:2;9504:9;9495:7;9491:23;9487:32;9484:52;;;9532:1;9529;9522:12;9484:52;9555:49;9596:7;9585:9;9555:49;:::i;:::-;9545:59;;9654:2;9643:9;9639:18;9626:32;9687:1;9680:5;9677:12;9667:40;;9703:1;9700;9693:12;9667:40;9726:5;9716:15;;;9342:395;;;;;:::o;9742:380::-;9821:1;9817:12;;;;9864;;;9885:61;;9939:4;9931:6;9927:17;9917:27;;9885:61;9992:2;9984:6;9981:14;9961:18;9958:38;9955:161;;10038:10;10033:3;10029:20;10026:1;10019:31;10073:4;10070:1;10063:15;10101:4;10098:1;10091:15;9955:161;;9742:380;;;:::o;10127:412::-;10245:12;;10293:4;10282:16;;10276:23;-1:-1:-1;;;;;;10317:40:321;;;10245:12;10380:2;10369:14;;10366:167;;;-1:-1:-1;;;;;10491:31:321;-1:-1:-1;;;;;10456:31:321;10446:6;10442:2;10438:15;10435:1;10431:23;10427:61;10423:2;10419:70;10415:108;10406:117;;10366:167;;;10127:412;;;:::o;10544:127::-;10605:10;10600:3;10596:20;10593:1;10586:31;10636:4;10633:1;10626:15;10660:4;10657:1;10650:15;11216:271;11399:6;11391;11386:3;11373:33;11355:3;11425:16;;11450:13;;;11425:16;11216:271;-1:-1:-1;11216:271:321:o;12227:357::-;-1:-1:-1;;;;;12479:32:321;;12461:51;;12449:2;12434:18;;12521:57;12574:2;12559:18;;12551:6;12108:12;;-1:-1:-1;;;;;12104:38:321;12092:51;;12196:4;12185:16;;;12179:23;12204:10;12175:40;12159:14;;12152:64;12027:195;12589:277;12656:6;12709:2;12697:9;12688:7;12684:23;12680:32;12677:52;;;12725:1;12722;12715:12;12677:52;12757:9;12751:16;12810:5;12803:13;12796:21;12789:5;12786:32;12776:60;;12832:1;12829;12822:12;13233:363;12108:12;;-1:-1:-1;;;;;12104:38:321;12092:51;;12196:4;12185:16;;;12179:23;12204:10;12175:40;12159:14;;;12152:64;13468:2;13453:18;;13537:53;13586:2;13575:9;13571:18;13563:6;13537:53;:::i;13601:620::-;13662:5;13715:3;13708:4;13700:6;13696:17;13692:27;13682:55;;13733:1;13730;13723:12;13682:55;13834:19;13812:2;13834:19;:::i;:::-;13877:3;13915:2;13907:6;13903:15;13941:3;13933:6;13930:15;13927:35;;;13958:1;13955;13948:12;13927:35;13982:6;13997:193;14013:6;14008:3;14005:15;13997:193;;;14105:10;;14128:18;;14175:4;14166:14;;;;14030;13997:193;;14226:591;14369:6;14377;14385;14393;14446:3;14434:9;14425:7;14421:23;14417:33;14414:53;;;14463:1;14460;14453:12;14414:53;14508:16;;14614:2;14599:18;;14593:25;14508:16;;-1:-1:-1;14593:25:321;-1:-1:-1;14663:64:321;14719:7;14714:2;14699:18;;14663:64;:::i;:::-;14653:74;;14746:65;14803:7;14797:3;14786:9;14782:19;14746:65;:::i;:::-;14736:75;;14226:591;;;;;;;:::o;14822:650::-;12108:12;;-1:-1:-1;;;;;12104:38:321;12092:51;;12196:4;12185:16;;;12179:23;12204:10;12175:40;12159:14;;;12152:64;15147:53;15196:2;15185:9;15181:18;15173:6;15147:53;:::i;:::-;15236:3;15231:2;15220:9;15216:18;15209:31;15277:6;15271:3;15260:9;15256:19;15249:35;15335:6;15327;15321:3;15310:9;15306:19;15293:49;15392:1;15362:22;;;15386:3;15358:32;;;15351:43;;;;15455:2;15434:15;;;-1:-1:-1;;15430:29:321;15415:45;15411:55;;14822:650;-1:-1:-1;;;14822:650:321:o;16882:297::-;17000:12;;17047:4;17036:16;;;17030:23;;17000:12;17065:16;;17062:111;;;-1:-1:-1;;17139:4:321;17135:17;;;;17132:1;17128:25;17124:38;17113:50;;16882:297;-1:-1:-1;16882:297:321:o;18080:374::-;18201:19;;-1:-1:-1;;;;;;18238:40:321;;;18298:2;18290:11;;18287:161;;;-1:-1:-1;;;;;18406:31:321;-1:-1:-1;;;;;18371:31:321;18364:3;18360:2;18356:12;18353:1;18349:20;18345:58;18341:2;18337:67;18333:105;18324:114;;18287:161;;18080:374;;;;:::o;18459:572::-;18591:6;18599;18607;18615;18668:3;18656:9;18647:7;18643:23;18639:33;18636:53;;;18685:1;18682;18675:12;18636:53;18730:23;;;-1:-1:-1;18850:2:321;18835:18;;18822:32;;-1:-1:-1;18899:53:321;18944:7;18939:2;18924:18;;18899:53;:::i;:::-;18889:63;;18971:54;19017:7;19011:3;19000:9;18996:19;18971:54;:::i;19036:346::-;19104:6;19112;19165:2;19153:9;19144:7;19140:23;19136:32;19133:52;;;19181:1;19178;19171:12;19133:52;-1:-1:-1;;19226:23:321;;;19346:2;19331:18;;;19318:32;;-1:-1:-1;19036:346:321:o;19716:517::-;19817:2;19812:3;19809:11;19806:421;;;19853:5;19850:1;19843:16;19897:4;19894:1;19884:18;19967:2;19955:10;19951:19;19948:1;19944:27;19938:4;19934:38;20003:4;19991:10;19988:20;19985:47;;;-1:-1:-1;20026:4:321;19985:47;20081:2;20076:3;20072:12;20069:1;20065:20;20059:4;20055:31;20045:41;;20136:81;20154:2;20147:5;20144:13;20136:81;;;20213:1;20199:16;;20180:1;20169:13;20136:81;;;20140:3;;19806:421;19716:517;;;:::o;20409:1295::-;20533:3;20527:10;20560:18;20552:6;20549:30;20546:56;;;20582:18;;:::i;:::-;20611:96;20700:6;20660:38;20692:4;20686:11;20660:38;:::i;:::-;20654:4;20611:96;:::i;:::-;20756:4;20787:2;20776:14;;20804:1;20799:648;;;;21491:1;21508:6;21505:89;;;-1:-1:-1;21560:19:321;;;21554:26;21505:89;-1:-1:-1;;20366:1:321;20362:11;;;20358:24;20354:29;20344:40;20390:1;20386:11;;;20341:57;21607:81;;20769:929;;20799:648;19663:1;19656:14;;;19700:4;19687:18;;-1:-1:-1;;20835:20:321;;;20952:222;20966:7;20963:1;20960:14;20952:222;;;21048:19;;;21042:26;21027:42;;21155:4;21140:20;;;;21108:1;21096:14;;;;20982:12;20952:222;;;20956:3;21202:6;21193:7;21190:19;21187:201;;;21263:19;;;21257:26;-1:-1:-1;;21346:1:321;21342:14;;;21358:3;21338:24;21334:37;21330:42;21315:58;21300:74;;21187:201;-1:-1:-1;;;;21434:1:321;21418:14;;;21414:22;21401:36;;-1:-1:-1;20409:1295:321:o;21841:209::-;21873:1;21899;21889:132;;21943:10;21938:3;21934:20;21931:1;21924:31;21978:4;21975:1;21968:15;22006:4;22003:1;21996:15;21889:132;-1:-1:-1;22035:9:321;;21841:209::o;22768:127::-;22829:10;22824:3;22820:20;22817:1;22810:31;22860:4;22857:1;22850:15;22884:4;22881:1;22874:15;22900:168;22973:9;;;23004;;23021:15;;;23015:22;;23001:37;22991:71;;23042:18;;:::i;23073:125::-;23138:9;;;23159:10;;;23156:36;;;23172:18;;:::i;23203:288::-;23378:6;23367:9;23360:25;23421:2;23416;23405:9;23401:18;23394:30;23341:4;23441:44;23481:2;23470:9;23466:18;23458:6;23441:44;:::i;:::-;23433:52;23203:288;-1:-1:-1;;;;23203:288:321:o;23496:301::-;23625:3;23663:6;23657:13;23709:6;23702:4;23694:6;23690:17;23685:3;23679:37;23771:1;23735:16;;23760:13;;;-1:-1:-1;23735:16:321;23496:301;-1:-1:-1;23496:301:321:o;23802:184::-;23872:6;23925:2;23913:9;23904:7;23900:23;23896:32;23893:52;;;23941:1;23938;23931:12;23893:52;-1:-1:-1;23964:16:321;;23802:184;-1:-1:-1;23802:184:321:o",
    "linkReferences": {},
    "immutableReferences": {
      "91008": [
        {
          "start": 440,
          "length": 32
        },
        {
          "start": 4839,
          "length": 32
        }
      ],
      "91070": [
        {
          "start": 1301,
          "length": 32
        },
        {
          "start": 5878,
          "length": 32
        }
      ],
      "96497": [
        {
          "start": 796,
          "length": 32
        },
        {
          "start": 1610,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BN254_KEY_REGISTRATION_TYPEHASH()": "b05c8f6d",
    "ECDSA_KEY_REGISTRATION_TYPEHASH()": "166aa127",
    "allocationManager()": "ca8aa7c7",
    "checkKey((address,uint32),address)": "0a6ac264",
    "configureOperatorSet((address,uint32),uint8)": "ea0d8149",
    "deregisterKey(address,(address,uint32))": "87ab86f4",
    "domainSeparator()": "f698da25",
    "encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))": "50435add",
    "getBN254Key((address,uint32),address)": "9a43e3fb",
    "getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)": "7690e395",
    "getECDSAAddress((address,uint32),address)": "3b32a7bd",
    "getECDSAKey((address,uint32),address)": "aa165c30",
    "getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)": "d9f12db2",
    "getKeyHash((address,uint32),address)": "ea194e2e",
    "getOperatorSetCurveType((address,uint32))": "7cffe48c",
    "isKeyGloballyRegistered(bytes32)": "dab42d7e",
    "isRegistered((address,uint32),address)": "bd30a0b9",
    "permissionController()": "4657e26a",
    "registerKey(address,(address,uint32),bytes,bytes)": "d40cda16",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"contract IAllocationManager\",\"name\":\"_allocationManager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ConfigurationAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECAddFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECMulFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECPairingFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpModFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurveType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKeyFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKeypair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KeyAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"KeyNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorSetNotConfigured\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorStillSlashable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPubkey\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct BN254.G1Point\",\"name\":\"newAggregateKey\",\"type\":\"tuple\"}],\"name\":\"AggregateBN254KeyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"KeyDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"}],\"name\":\"KeyRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"OperatorSetConfigured\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BN254_KEY_REGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ECDSA_KEY_REGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"checkKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"configureOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"deregisterKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"g1Point\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"g2Point\",\"type\":\"tuple\"}],\"name\":\"encodeBN254KeyData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getBN254Key\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"g1Point\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"g2Point\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"keyData\",\"type\":\"bytes\"}],\"name\":\"getBN254KeyRegistrationMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getECDSAAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getECDSAKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"keyAddress\",\"type\":\"address\"}],\"name\":\"getECDSAKeyRegistrationMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getKeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getOperatorSetCurveType\",\"outputs\":[{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"isKeyGloballyRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"keyData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"registerKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides registration and deregistration of keys with support for aggregate keys      Keys must be unique globally across all AVSs and operator sets      Operators call functions directly to manage their own keys      Aggregate keys are updated via callback from AVSRegistrar on registration and deregistration\",\"errors\":{\"ECAddFailed()\":[{\"details\":\"Thrown when the sum of two points of G1 fails\"}],\"ECMulFailed()\":[{\"details\":\"Thrown when the scalar multiplication of a point of G1 fails\"}],\"ECPairingFailed()\":[{\"details\":\"Thrown when the pairing check fails\"}],\"ExpModFailed()\":[{\"details\":\"Thrown when the exponentiation mod fails\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}]},\"kind\":\"dev\",\"methods\":{\"checkKey((address,uint32),address)\":{\"details\":\"This function is called by the AVSRegistrar when an operator registers for an AVSOnly authorized callers for the AVS can call this functionReverts if operator doesn't have a registered key for this operator set\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to check and update\"},\"returns\":{\"_0\":\"whether the operator has a registered key\"}},\"configureOperatorSet((address,uint32),uint8)\":{\"details\":\"Only authorized callers for the AVS can configure operator sets\",\"params\":{\"curveType\":\"Type of curve (ECDSA, BN254)\",\"operatorSet\":\"The operator set to configure\"}},\"constructor\":{\"details\":\"Constructor for the KeyRegistrar contract\",\"params\":{\"_allocationManager\":\"The allocation manager contract\",\"_permissionController\":\"The permission controller contract\",\"_version\":\"The version string for the contract\"}},\"deregisterKey(address,(address,uint32))\":{\"details\":\"Can be called by the operator directly or by addresses they've authorized via PermissionControllerReverts if key was not registeredReverts if operator is still slashable for the operator set (prevents key rotation while slashable)Keys remain in global key registry to prevent reuse\",\"params\":{\"operator\":\"Address of the operator to deregister key for\",\"operatorSet\":\"The operator set to deregister the key from\"}},\"domainSeparator()\":{\"details\":\"The domain separator is computed according to EIP-712 specification, using:      - The hardcoded name \\\"EigenLayer\\\"      - The contract's version string      - The current chain ID      - This contract's addressSee https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator.\",\"returns\":{\"_0\":\"The 32-byte domain separator hash used in EIP-712 structured data signing.\"}},\"encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))\":{\"params\":{\"g1Point\":\"The BN254 G1 public key\",\"g2Point\":\"The BN254 G2 public key\"},\"returns\":{\"_0\":\"The encoded key data\"}},\"getBN254Key((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"g1Point\":\"The BN254 G1 public key\",\"g2Point\":\"The BN254 G2 public key\"}},\"getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)\":{\"params\":{\"keyData\":\"The BN254 key data\",\"operator\":\"The operator address\",\"operatorSet\":\"The operator set\"},\"returns\":{\"_0\":\"The message hash for signing\"}},\"getECDSAAddress((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"_0\":\"pubkey The ECDSA public key\"}},\"getECDSAKey((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"_0\":\"pubkey The ECDSA public key\"}},\"getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)\":{\"params\":{\"keyAddress\":\"The address of the key\",\"operator\":\"The operator address\",\"operatorSet\":\"The operator set\"},\"returns\":{\"_0\":\"The message hash for signing\"}},\"getKeyHash((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key hash for\"},\"returns\":{\"_0\":\"keyHash The key hash\"}},\"getOperatorSetCurveType((address,uint32))\":{\"params\":{\"operatorSet\":\"The operator set to get configuration for\"},\"returns\":{\"_0\":\"The operator set configuration\"}},\"isKeyGloballyRegistered(bytes32)\":{\"params\":{\"keyHash\":\"Hash of the key\"},\"returns\":{\"_0\":\"True if the key is globally registered\"}},\"isRegistered((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to check\"},\"returns\":{\"_0\":\"True if the key is registered\"}},\"registerKey(address,(address,uint32),bytes,bytes)\":{\"details\":\"Can be called by operator directly or by addresses they've authorized via PermissionControllerReverts if key is already registered\",\"params\":{\"operator\":\"Address of the operator to register key for\",\"operatorSet\":\"The operator set to register the key for\",\"pubkey\":\"Public key bytes\",\"signature\":\"Signature proving ownership (only needed for BN254 keys)\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"title\":\"KeyRegistrar\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidSignature()\":[{\"notice\":\"Thrown when a signature is invalid.\"}],\"KeyAlreadyRegistered()\":[{\"notice\":\"Key Management\"}],\"SignatureExpired()\":[{\"notice\":\"Thrown when a signature has expired.\"}]},\"kind\":\"user\",\"methods\":{\"checkKey((address,uint32),address)\":{\"notice\":\"Checks if an operator has a registered key\"},\"configureOperatorSet((address,uint32),uint8)\":{\"notice\":\"Configures an operator set with curve type\"},\"deregisterKey(address,(address,uint32))\":{\"notice\":\"Deregisters a cryptographic key for an operator with a specific operator set\"},\"domainSeparator()\":{\"notice\":\"Computes the EIP-712 domain separator used for signature validation.\"},\"encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))\":{\"notice\":\"Encodes the BN254 key data into a bytes array\"},\"getBN254Key((address,uint32),address)\":{\"notice\":\"Gets the BN254 public key for an operator with a specific operator set\"},\"getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)\":{\"notice\":\"Returns the message hash for BN254 key registration\"},\"getECDSAAddress((address,uint32),address)\":{\"notice\":\"Gets the ECDSA public key for an operator with a specific operator set\"},\"getECDSAKey((address,uint32),address)\":{\"notice\":\"Gets the ECDSA public key for an operator with a specific operator set as bytes\"},\"getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)\":{\"notice\":\"Returns the message hash for ECDSA key registration\"},\"getKeyHash((address,uint32),address)\":{\"notice\":\"Gets the key hash for an operator with a specific operator set\"},\"getOperatorSetCurveType((address,uint32))\":{\"notice\":\"Gets the configuration for an operator set\"},\"isKeyGloballyRegistered(bytes32)\":{\"notice\":\"Checks if a key hash is globally registered\"},\"isRegistered((address,uint32),address)\":{\"notice\":\"Checks if a key is registered for an operator with a specific operator set\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"registerKey(address,(address,uint32),bytes,bytes)\":{\"notice\":\"Registers a cryptographic key for an operator with a specific operator set\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"notice\":\"A core singleton contract that manages operator keys for different AVSs with global key uniqueness\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/permissions/KeyRegistrar.sol\":\"KeyRegistrar\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol\":{\"keccak256\":\"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d\",\"dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol\":{\"keccak256\":\"0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b\",\"dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0xc93ffcd1943655701734850ae9107701d0aa67ab21244850f539c465e7562d89\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2f97280366a580eececa50ddb7b88eb86d2e6e25cca4c95a639cec5ffd0a1ba4\",\"dweb:/ipfs/QmbnUUKwrJPSyag2e4BF6FR6c4krFCotQ9AwzpoXgpThV2\"]},\"src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0xa667d4377331e23b31ac28a4c4f1ab0dfa24911d93b6f05cb772330cdf264d53\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://82a02653db3332887a018ce6dce4a760ff35d0d5393a416103d8fbd88c7c7bb9\",\"dweb:/ipfs/QmV5rUxZdr8x2sF5MU6RLXySMr9GJkHemEex3tF3QyFYjg\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f\",\"dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e\",\"dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe\"]},\"src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"src/contracts/libraries/BN254SignatureVerifier.sol\":{\"keccak256\":\"0x92afd8306d1dc64e290600cce1da66435319c2b1bc8f9a926080c301ab61a839\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f6bae17ee733ad08e8e70724a56913d6add435c997ab64c2e922edebf7a7752b\",\"dweb:/ipfs/QmZDA3GEQ5nhn6dWTM3fKRDLF3pjLPYm8KLDXVgBjdUKXt\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071\",\"dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/mixins/SignatureUtilsMixin.sol\":{\"keccak256\":\"0x99633a417aaf4f3af1c9d432921f30a9723a4d7257546cf5c963dc23ca8f436a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ed3046a8aa6c4bbd5be361e8505c3c61c1f54f02d0337c8344d3f9bf1f745542\",\"dweb:/ipfs/QmPcJeQn5vMGaJEwkNCKoeDvEH1a1koMNUy6rgdsccVuky\"]},\"src/contracts/permissions/KeyRegistrar.sol\":{\"keccak256\":\"0xe09434f45172cf69c92a5f18b3ac0f5bbdafc96234c4b06c278fcf4ff739ab5f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d1e8c5aef1ea6385ca19ebb59a36e79a4544d0b437473c04d38de666eeae5bdb\",\"dweb:/ipfs/QmY6J6az7hQjPc3bkrxzx5sgQZsRcP89eYi33fCCE5FA4R\"]},\"src/contracts/permissions/KeyRegistrarStorage.sol\":{\"keccak256\":\"0x63e28b356f02018c21c473e0bb444d7c0660ff225c014ca7068a4524393d76e1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fff67df2bd13275ae57dbde2b4c856aaef5ec1c73df3f962b712713712512f54\",\"dweb:/ipfs/QmYegoth3t2SKTLds9jZ3d5p4wAYiwmAYcgFpof8Q16oH7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "contract IAllocationManager",
              "name": "_allocationManager",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ConfigurationAlreadySet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECAddFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECMulFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECPairingFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpModFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCurveType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidKeyFormat"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidKeypair"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "KeyAlreadyRegistered"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KeyNotFound"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorSetNotConfigured"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorStillSlashable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureExpired"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroPubkey"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct BN254.G1Point",
              "name": "newAggregateKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AggregateBN254KeyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "KeyDeregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "pubkey",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "KeyRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetConfigured",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BN254_KEY_REGISTRATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ECDSA_KEY_REGISTRATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allocationManager",
          "outputs": [
            {
              "internalType": "contract IAllocationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkKey",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configureOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterKey"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BN254.G1Point",
              "name": "g1Point",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct BN254.G2Point",
              "name": "g2Point",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encodeBN254KeyData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBN254Key",
          "outputs": [
            {
              "internalType": "struct BN254.G1Point",
              "name": "g1Point",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct BN254.G2Point",
              "name": "g2Point",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "keyData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBN254KeyRegistrationMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getECDSAAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getECDSAKey",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "keyAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getECDSAKeyRegistrationMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKeyHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetCurveType",
          "outputs": [
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "keyHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isKeyGloballyRegistered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRegistered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "keyData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerKey"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkKey((address,uint32),address)": {
            "details": "This function is called by the AVSRegistrar when an operator registers for an AVSOnly authorized callers for the AVS can call this functionReverts if operator doesn't have a registered key for this operator set",
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to check and update"
            },
            "returns": {
              "_0": "whether the operator has a registered key"
            }
          },
          "configureOperatorSet((address,uint32),uint8)": {
            "details": "Only authorized callers for the AVS can configure operator sets",
            "params": {
              "curveType": "Type of curve (ECDSA, BN254)",
              "operatorSet": "The operator set to configure"
            }
          },
          "constructor": {
            "details": "Constructor for the KeyRegistrar contract",
            "params": {
              "_allocationManager": "The allocation manager contract",
              "_permissionController": "The permission controller contract",
              "_version": "The version string for the contract"
            }
          },
          "deregisterKey(address,(address,uint32))": {
            "details": "Can be called by the operator directly or by addresses they've authorized via PermissionControllerReverts if key was not registeredReverts if operator is still slashable for the operator set (prevents key rotation while slashable)Keys remain in global key registry to prevent reuse",
            "params": {
              "operator": "Address of the operator to deregister key for",
              "operatorSet": "The operator set to deregister the key from"
            }
          },
          "domainSeparator()": {
            "details": "The domain separator is computed according to EIP-712 specification, using:      - The hardcoded name \"EigenLayer\"      - The contract's version string      - The current chain ID      - This contract's addressSee https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator.",
            "returns": {
              "_0": "The 32-byte domain separator hash used in EIP-712 structured data signing."
            }
          },
          "encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))": {
            "params": {
              "g1Point": "The BN254 G1 public key",
              "g2Point": "The BN254 G2 public key"
            },
            "returns": {
              "_0": "The encoded key data"
            }
          },
          "getBN254Key((address,uint32),address)": {
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to get the key for"
            },
            "returns": {
              "g1Point": "The BN254 G1 public key",
              "g2Point": "The BN254 G2 public key"
            }
          },
          "getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)": {
            "params": {
              "keyData": "The BN254 key data",
              "operator": "The operator address",
              "operatorSet": "The operator set"
            },
            "returns": {
              "_0": "The message hash for signing"
            }
          },
          "getECDSAAddress((address,uint32),address)": {
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to get the key for"
            },
            "returns": {
              "_0": "pubkey The ECDSA public key"
            }
          },
          "getECDSAKey((address,uint32),address)": {
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to get the key for"
            },
            "returns": {
              "_0": "pubkey The ECDSA public key"
            }
          },
          "getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)": {
            "params": {
              "keyAddress": "The address of the key",
              "operator": "The operator address",
              "operatorSet": "The operator set"
            },
            "returns": {
              "_0": "The message hash for signing"
            }
          },
          "getKeyHash((address,uint32),address)": {
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to get the key hash for"
            },
            "returns": {
              "_0": "keyHash The key hash"
            }
          },
          "getOperatorSetCurveType((address,uint32))": {
            "params": {
              "operatorSet": "The operator set to get configuration for"
            },
            "returns": {
              "_0": "The operator set configuration"
            }
          },
          "isKeyGloballyRegistered(bytes32)": {
            "params": {
              "keyHash": "Hash of the key"
            },
            "returns": {
              "_0": "True if the key is globally registered"
            }
          },
          "isRegistered((address,uint32),address)": {
            "params": {
              "operator": "Address of the operator",
              "operatorSet": "The operator set to check"
            },
            "returns": {
              "_0": "True if the key is registered"
            }
          },
          "registerKey(address,(address,uint32),bytes,bytes)": {
            "details": "Can be called by operator directly or by addresses they've authorized via PermissionControllerReverts if key is already registered",
            "params": {
              "operator": "Address of the operator to register key for",
              "operatorSet": "The operator set to register the key for",
              "pubkey": "Public key bytes",
              "signature": "Signature proving ownership (only needed for BN254 keys)"
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkKey((address,uint32),address)": {
            "notice": "Checks if an operator has a registered key"
          },
          "configureOperatorSet((address,uint32),uint8)": {
            "notice": "Configures an operator set with curve type"
          },
          "deregisterKey(address,(address,uint32))": {
            "notice": "Deregisters a cryptographic key for an operator with a specific operator set"
          },
          "domainSeparator()": {
            "notice": "Computes the EIP-712 domain separator used for signature validation."
          },
          "encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))": {
            "notice": "Encodes the BN254 key data into a bytes array"
          },
          "getBN254Key((address,uint32),address)": {
            "notice": "Gets the BN254 public key for an operator with a specific operator set"
          },
          "getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)": {
            "notice": "Returns the message hash for BN254 key registration"
          },
          "getECDSAAddress((address,uint32),address)": {
            "notice": "Gets the ECDSA public key for an operator with a specific operator set"
          },
          "getECDSAKey((address,uint32),address)": {
            "notice": "Gets the ECDSA public key for an operator with a specific operator set as bytes"
          },
          "getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)": {
            "notice": "Returns the message hash for ECDSA key registration"
          },
          "getKeyHash((address,uint32),address)": {
            "notice": "Gets the key hash for an operator with a specific operator set"
          },
          "getOperatorSetCurveType((address,uint32))": {
            "notice": "Gets the configuration for an operator set"
          },
          "isKeyGloballyRegistered(bytes32)": {
            "notice": "Checks if a key hash is globally registered"
          },
          "isRegistered((address,uint32),address)": {
            "notice": "Checks if a key is registered for an operator with a specific operator set"
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "registerKey(address,(address,uint32),bytes,bytes)": {
            "notice": "Registers a cryptographic key for an operator with a specific operator set"
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/permissions/KeyRegistrar.sol": "KeyRegistrar"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol": {
        "keccak256": "0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0",
        "urls": [
          "bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d",
          "dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol": {
        "keccak256": "0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df",
        "urls": [
          "bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b",
          "dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d",
        "urls": [
          "bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc",
          "dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0xc93ffcd1943655701734850ae9107701d0aa67ab21244850f539c465e7562d89",
        "urls": [
          "bzz-raw://2f97280366a580eececa50ddb7b88eb86d2e6e25cca4c95a639cec5ffd0a1ba4",
          "dweb:/ipfs/QmbnUUKwrJPSyag2e4BF6FR6c4krFCotQ9AwzpoXgpThV2"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IKeyRegistrar.sol": {
        "keccak256": "0xa667d4377331e23b31ac28a4c4f1ab0dfa24911d93b6f05cb772330cdf264d53",
        "urls": [
          "bzz-raw://82a02653db3332887a018ce6dce4a760ff35d0d5393a416103d8fbd88c7c7bb9",
          "dweb:/ipfs/QmV5rUxZdr8x2sF5MU6RLXySMr9GJkHemEex3tF3QyFYjg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f",
        "urls": [
          "bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f",
          "dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtilsMixin.sol": {
        "keccak256": "0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b",
        "urls": [
          "bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10",
          "dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5",
        "urls": [
          "bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e",
          "dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BN254.sol": {
        "keccak256": "0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc",
        "urls": [
          "bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc",
          "dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/BN254SignatureVerifier.sol": {
        "keccak256": "0x92afd8306d1dc64e290600cce1da66435319c2b1bc8f9a926080c301ab61a839",
        "urls": [
          "bzz-raw://f6bae17ee733ad08e8e70724a56913d6add435c997ab64c2e922edebf7a7752b",
          "dweb:/ipfs/QmZDA3GEQ5nhn6dWTM3fKRDLF3pjLPYm8KLDXVgBjdUKXt"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04",
        "urls": [
          "bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071",
          "dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SignatureUtilsMixin.sol": {
        "keccak256": "0x99633a417aaf4f3af1c9d432921f30a9723a4d7257546cf5c963dc23ca8f436a",
        "urls": [
          "bzz-raw://ed3046a8aa6c4bbd5be361e8505c3c61c1f54f02d0337c8344d3f9bf1f745542",
          "dweb:/ipfs/QmPcJeQn5vMGaJEwkNCKoeDvEH1a1koMNUy6rgdsccVuky"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/KeyRegistrar.sol": {
        "keccak256": "0xe09434f45172cf69c92a5f18b3ac0f5bbdafc96234c4b06c278fcf4ff739ab5f",
        "urls": [
          "bzz-raw://d1e8c5aef1ea6385ca19ebb59a36e79a4544d0b437473c04d38de666eeae5bdb",
          "dweb:/ipfs/QmY6J6az7hQjPc3bkrxzx5sgQZsRcP89eYi33fCCE5FA4R"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/KeyRegistrarStorage.sol": {
        "keccak256": "0x63e28b356f02018c21c473e0bb444d7c0660ff225c014ca7068a4524393d76e1",
        "urls": [
          "bzz-raw://fff67df2bd13275ae57dbde2b4c856aaef5ec1c73df3f962b712713712512f54",
          "dweb:/ipfs/QmYegoth3t2SKTLds9jZ3d5p4wAYiwmAYcgFpof8Q16oH7"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 182
}