{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_delegation",
          "type": "address",
          "internalType": "contract IDelegationManager"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_DEALLOCATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_ALLOCATION_CONFIGURATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ALLOCATION_CONFIGURATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DEALLOCATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addStrategiesToOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "clearDeallocationQueue",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "numToClear",
          "type": "uint16[]",
          "internalType": "uint16[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createOperatorSets",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
          "components": [
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IDelegationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deregisterFromOperatorSets",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.DeregisterParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "encumberedMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatableMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedStrategies",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocation",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.Allocation",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocations",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudesAtBlock",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "blockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMemberCount",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMembers",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMinimumSlashableStake",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "futureBlock",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "slashableStake",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetCount",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRegisteredSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategiesInOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isMemberOfOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "modifyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
          "components": [
            {
              "name": "operatorSet",
              "type": "tuple",
              "internalType": "struct OperatorSet",
              "components": [
                {
                  "name": "avs",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "id",
                  "type": "uint32",
                  "internalType": "uint32"
                }
              ]
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "newMagnitudes",
              "type": "uint64[]",
              "internalType": "uint64[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerForOperatorSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.RegisterParams",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeStrategiesFromOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "slashOperator",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.SlashingParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "wadsToSlash",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateAVSMetadataURI",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "AVSMetadataURIUpdated",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AVSRegistrarSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "indexed": false,
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationDelaySet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "magnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EncumberedMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "encumberedMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "maxMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorAddedToOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetCreated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSlashed",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategies",
          "type": "address[]",
          "indexed": false,
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "wadSlashed",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "description",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyAddedToOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Empty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCaller",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSnapshotOrdering",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidWadToSlash",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MaxStrategiesExceeded",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ModificationAlreadyPending",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorNotSlashable",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OutOfBounds",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SameMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SignatureExpired",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategiesMustBeInAscendingOrder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyAlreadyInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyNotInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UninitializedAllocationDelay",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610120604052348015610010575f5ffd5b50604051615abb380380615abb83398101604081905261002f91610180565b82858383876001600160a01b03811661005b576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b0390811660805292831660a05263ffffffff91821660c0521660e052166101005261008b610095565b50505050506101e9565b5f54610100900460ff16156101005760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff9081161461014f575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b0381168114610165575f5ffd5b50565b805163ffffffff8116811461017b575f5ffd5b919050565b5f5f5f5f5f60a08688031215610194575f5ffd5b855161019f81610151565b60208701519095506101b081610151565b60408701519094506101c181610151565b92506101cf60608701610168565b91506101dd60808701610168565b90509295509295909350565b60805160a05160c05160e0516101005161584161027a5f395f81816103f9015261374a01525f81816105480152613d4901525f818161031e01528181612290015261298701525f81816106fa01528181610cec0152818161163701528181611cd501528181611d3f0152612c4301525f818161056f0152818161079201528181611de401526133c101526158415ff3fe608060405234801561000f575f5ffd5b5060043610610281575f3560e01c80636e875dba11610156578063a984eb3a116100ca578063c221d8ae11610084578063c221d8ae146106bc578063cd6dc687146106cf578063d3d96ff4146106e2578063df5cf723146106f5578063f2fde38b1461071c578063fabc1cbc1461072f575f5ffd5b8063a984eb3a1461060e578063adc2e3d914610641578063b2447af714610654578063b66bd98914610667578063b9fbaed11461067a578063ba1a84e5146106a9575f5ffd5b80638ce648541161011b5780638ce64854146105915780638da5cb5b146105b157806394d7d00c146105c2578063952899ee146105d5578063a9333ec8146105e8578063a9821821146105fb575f5ffd5b80636e875dba14610515578063715018a61461052857806379ae50cd146105305780637bc1ef6114610543578063886f11951461056a575f5ffd5b80634657e26a116101f8578063595c6a67116101b2578063595c6a67146104875780635ac86ab71461048f5780635c975abb146104b2578063670d3ba2146104c45780636cfb4481146104d75780636e3492b514610502575f5ffd5b80634657e26a146103f45780634a10ffe51461041b5780634b5046ef1461043b57806350feea201461044e578063547afb871461046157806356c483e614610474575f5ffd5b80632981eb77116102495780632981eb77146103195780632bab2c4a14610355578063304c10cd1461037557806336352057146103a057806340120dab146103b35780634177a87c146103d4575f5ffd5b806310e1b9b814610285578063136439dd146102ae57806315fe5028146102c3578063260dc758146102e3578063261f84e014610306575b5f5ffd5b61029861029336600461476e565b610742565b6040516102a591906147b5565b60405180910390f35b6102c16102bc3660046147e8565b61077d565b005b6102d66102d13660046147ff565b610852565b6040516102a5919061487d565b6102f66102f136600461488f565b610969565b60405190151581526020016102a5565b6102c16103143660046148e9565b6109a0565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016102a5565b6103686103633660046149ce565b610c98565b6040516102a59190614a82565b6103886103833660046147ff565b610f85565b6040516001600160a01b0390911681526020016102a5565b6102c16103ae366004614ae5565b610fb4565b6103c66103c1366004614b37565b61178c565b6040516102a5929190614bc4565b6103e76103e236600461488f565b611907565b6040516102a59190614c21565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b61042e610429366004614c33565b61192b565b6040516102a59190614c76565b6102c1610449366004614cc1565b6119d3565b6102c161045c366004614d41565b611a8d565b61042e61046f366004614d9f565b611c22565b6102c1610482366004614deb565b611cca565b6102c1611dcf565b6102f661049d366004614e1e565b606654600160ff9092169190911b9081161490565b6066545b6040519081526020016102a5565b6102f66104d2366004614e3e565b611e7e565b6104ea6104e5366004614b37565b611e8f565b6040516001600160401b0390911681526020016102a5565b6102c1610510366004614e7f565b611ffc565b6103e761052336600461488f565b6123cc565b6102c16123dd565b6102d661053e3660046147ff565b6123ee565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6105a461059f366004614eb0565b6124c8565b6040516102a59190614ef3565b6033546001600160a01b0316610388565b61042e6105d0366004614f05565b61258d565b6102c16105e3366004614f60565b612679565b6104ea6105f6366004614b37565b612b35565b6102c1610609366004615109565b612b64565b6104ea61061c366004614b37565b60a260209081525f92835260408084209091529082529020546001600160401b031681565b6102c161064f366004615187565b612bd4565b6104b661066236600461488f565b612f23565b6102c1610675366004614d41565b612f45565b61068d6106883660046147ff565b61309f565b60408051921515835263ffffffff9091166020830152016102a5565b6104b66106b73660046147ff565b613139565b6103e76106ca366004614e3e565b613159565b6102c16106dd3660046151c9565b61318a565b6102c16106f0366004614b37565b6132a7565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6102c161072a3660046147ff565b613346565b6102c161073d3660046147e8565b6133bf565b604080516060810182525f80825260208201819052918101829052906107718561076b866134d5565b85613538565b925050505b9392505050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156107df573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080391906151f3565b61082057604051631d77d47760e21b815260040160405180910390fd5b60665481811681146108455760405163c61dca5d60e01b815260040160405180910390fd5b61084e826136a4565b5050565b6001600160a01b0381165f908152609d6020526040812060609190610876906136e1565b90505f816001600160401b0381111561089157610891614692565b6040519080825280602002602001820160405280156108d557816020015b604080518082019091525f80825260208201528152602001906001900390816108af5790505b5090505f5b82811015610961576001600160a01b0385165f908152609d6020526040902061093c9061090790836136ea565b604080518082019091525f80825260208201525060408051808201909152606082901c815263ffffffff909116602082015290565b82828151811061094e5761094e615212565b60209081029190910101526001016108da565b509392505050565b60208082015182516001600160a01b03165f90815260989092526040822061099a9163ffffffff908116906136f516565b92915050565b826109aa8161370c565b6109c75760405163932d94f760e01b815260040160405180910390fd5b5f5b82811015610c915760218484838181106109e5576109e5615212565b90506020028101906109f79190615226565b610a05906020810190615244565b90501115610a26576040516301a1443960e31b815260040160405180910390fd5b5f6040518060400160405280876001600160a01b03168152602001868685818110610a5357610a53615212565b9050602002810190610a659190615226565b610a73906020810190615289565b63ffffffff168152509050610abd816020015163ffffffff1660985f896001600160a01b03166001600160a01b031681526020019081526020015f206137b690919063ffffffff16565b610ada57604051631fb1705560e21b815260040160405180910390fd5b7f31629285ead2335ae0933f86ed2ae63321f7af77b4e6eaabc42c057880977e6c6040518060400160405280886001600160a01b03168152602001836020015163ffffffff16815250604051610b3091906152a2565b60405180910390a15f610b42826134d5565b90505f5b868685818110610b5857610b58615212565b9050602002810190610b6a9190615226565b610b78906020810190615244565b9050811015610c8657610bee878786818110610b9657610b96615212565b9050602002810190610ba89190615226565b610bb6906020810190615244565b83818110610bc657610bc6615212565b9050602002016020810190610bdb91906147ff565b5f848152609960205260409020906137c1565b507f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83888887818110610c2357610c23615212565b9050602002810190610c359190615226565b610c43906020810190615244565b84818110610c5357610c53615212565b9050602002016020810190610c6891906147ff565b604051610c769291906152b0565b60405180910390a1600101610b46565b5050506001016109c9565b5050505050565b606083516001600160401b03811115610cb357610cb3614692565b604051908082528060200260200182016040528015610ce657816020015b6060815260200190600190039081610cd15790505b5090505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f0e0e67686866040518363ffffffff1660e01b8152600401610d389291906152d6565b5f60405180830381865afa158015610d52573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610d7991908101906152fa565b90505f5b8551811015610f7b575f868281518110610d9957610d99615212565b6020026020010151905085516001600160401b03811115610dbc57610dbc614692565b604051908082528060200260200182016040528015610de5578160200160208202803683370190505b50848381518110610df857610df8615212565b60209081029190910101525f5b8651811015610f71575f878281518110610e2157610e21615212565b6020908102919091018101516001600160a01b038086165f90815260a1845260408082209284168252919093528220909250610e5c906137d5565b9050806001600160401b03165f03610e75575050610f69565b5f610e81858d85610742565b90508863ffffffff16816040015163ffffffff1611158015610ea957505f8160200151600f0b125b15610ecb57610ebf815f015182602001516137e8565b6001600160401b031681525b80515f90610ee6906001600160401b039081169085166137fc565b9050610f2d81898981518110610efe57610efe615212565b60200260200101518781518110610f1757610f17615212565b602002602001015161381090919063ffffffff16565b898881518110610f3f57610f3f615212565b60200260200101518681518110610f5857610f58615212565b602002602001018181525050505050505b600101610e05565b5050600101610d7d565b5050949350505050565b6001600160a01b038082165f908152609760205260408120549091168015610fad5780610776565b5090919050565b606654600190600290811603610fdd5760405163840a48d560e01b815260040160405180910390fd5b82610fe78161370c565b6110045760405163932d94f760e01b815260040160405180910390fd5b5f6040518060400160405280866001600160a01b031681526020018560200160208101906110329190615289565b63ffffffff16905290505f61105361104d60208701876147ff565b83613824565b60208084015184516001600160a01b03165f90815260989092526040909120919250611089919063ffffffff908116906136f516565b6110a657604051631fb1705560e21b815260040160405180910390fd5b806110c45760405163ebbff49760e01b815260040160405180910390fd5b5f6110d26040870187615244565b90506001600160401b038111156110eb576110eb614692565b604051908082528060200260200182016040528015611114578160200160208202803683370190505b5090505f5b6111266040880188615244565b905081101561171d578015806111b957506111446040880188615244565b61114f60018461541a565b81811061115e5761115e615212565b905060200201602081019061117391906147ff565b6001600160a01b03166111896040890189615244565b8381811061119957611199615212565b90506020020160208101906111ae91906147ff565b6001600160a01b0316115b6111d657604051639f1c805360e01b815260040160405180910390fd5b6111e36060880188615244565b828181106111f3576111f3615212565b905060200201355f1080156112335750670de0b6b3a76400006112196060890189615244565b8381811061122957611229615212565b9050602002013511155b61125057604051631353603160e01b815260040160405180910390fd5b6112ac6112606040890189615244565b8381811061127057611270615212565b905060200201602081019061128591906147ff565b60995f611291886134d5565b81526020019081526020015f2061389990919063ffffffff16565b6112c9576040516331bc342760e11b815260040160405180910390fd5b5f8061131b6112db60208b018b6147ff565b6112e4886134d5565b6112f160408d018d615244565b8781811061130157611301615212565b905060200201602081019061131691906147ff565b613538565b805191935091506001600160401b03165f03611338575050611715565b5f61137361134960608c018c615244565b8681811061135957611359615212565b85516001600160401b0316926020909102013590506138ba565b835190915061138e6001600160401b038084169083166137fc565b8686815181106113a0576113a0615212565b60200260200101818152505081835f018181516113bd919061542d565b6001600160401b03169052508351829085906113da90839061542d565b6001600160401b03169052506020840180518391906113fa90839061542d565b6001600160401b031690525060208301515f600f9190910b1215611515575f61145d61142960608e018e615244565b8881811061143957611439615212565b90506020020135856020015161144e9061544c565b6001600160801b0316906138ba565b9050806001600160401b03168460200181815161147a9190615470565b600f0b9052507f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd6114ae60208e018e6147ff565b8a8e80604001906114bf9190615244565b8a8181106114cf576114cf615212565b90506020020160208101906114e491906147ff565b6114f5885f015189602001516137e8565b886040015160405161150b95949392919061549d565b60405180910390a1505b61156761152560208d018d6147ff565b61152e8a6134d5565b61153b60408f018f615244565b8981811061154b5761154b615212565b905060200201602081019061156091906147ff565b87876138d0565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd61159560208d018d6147ff565b896115a360408f018f615244565b898181106115b3576115b3615212565b90506020020160208101906115c891906147ff565b86516040516115dc9493929190439061549d565b60405180910390a161162d6115f460208d018d6147ff565b61160160408e018e615244565b8881811061161157611611615212565b905060200201602081019061162691906147ff565b8651613b10565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ee74937f61166960208e018e6147ff565b61167660408f018f615244565b8981811061168657611686615212565b905060200201602081019061169b91906147ff565b875160405160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526001600160401b0380861660448401521660648201526084015f604051808303815f87803b1580156116fa575f5ffd5b505af115801561170c573d5f5f3e3d5ffd5b50505050505050505b600101611119565b507f80969ad29428d6797ee7aad084f9e4a42a82fc506dcd2ca3b6fb431f85ccebe561174c60208801886147ff565b8461175a60408a018a615244565b8561176860808d018d6154ee565b60405161177b9796959493929190615558565b60405180910390a150505050505050565b6001600160a01b0382165f908152609d6020526040812060609182916117b1906136e1565b90505f816001600160401b038111156117cc576117cc614692565b60405190808252806020026020018201604052801561181057816020015b604080518082019091525f80825260208201528152602001906001900390816117ea5790505b5090505f826001600160401b0381111561182c5761182c614692565b60405190808252806020026020018201604052801561187557816020015b604080516060810182525f80825260208083018290529282015282525f1990920191018161184a5790505b5090505f5b838110156118f8576001600160a01b0388165f908152609d602052604081206118a79061090790846136ea565b9050808483815181106118bc576118bc615212565b60200260200101819052506118d289828a610742565b8383815181106118e4576118e4615212565b60209081029190910101525060010161187a565b509093509150505b9250929050565b60605f61077660995f611919866134d5565b81526020019081526020015f20613b92565b60605f83516001600160401b0381111561194757611947614692565b604051908082528060200260200182016040528015611970578160200160208202803683370190505b5090505f5b8451811015610961576119a185828151811061199357611993615212565b602002602001015185612b35565b8282815181106119b3576119b3615212565b6001600160401b0390921660209283029190910190910152600101611975565b6066545f906001908116036119fb5760405163840a48d560e01b815260040160405180910390fd5b838214611a1b576040516343714afd60e01b815260040160405180910390fd5b5f5b84811015611a8457611a7c87878784818110611a3b57611a3b615212565b9050602002016020810190611a5091906147ff565b868685818110611a6257611a62615212565b9050602002016020810190611a7791906155ee565b613b9e565b600101611a1d565b50505050505050565b83611a978161370c565b611ab45760405163932d94f760e01b815260040160405180910390fd5b604080518082019091526001600160a01b038616815263ffffffff851660208201525f611ae0826134d5565b5f8181526099602052604090209091506021908590611afe906136e1565b611b08919061560f565b1115611b27576040516301a1443960e31b815260040160405180910390fd5b6020808301516001600160a01b0389165f90815260989092526040909120611b589163ffffffff908116906136f516565b611b7557604051631fb1705560e21b815260040160405180910390fd5b5f5b84811015611c1857611b94868683818110610bc657610bc6615212565b611bb15760405163585cfb2f60e01b815260040160405180910390fd5b7f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83878784818110611be557611be5615212565b9050602002016020810190611bfa91906147ff565b604051611c089291906152b0565b60405180910390a1600101611b77565b5050505050505050565b60605f82516001600160401b03811115611c3e57611c3e614692565b604051908082528060200260200182016040528015611c67578160200160208202803683370190505b5090505f5b835181101561096157611c9885858381518110611c8b57611c8b615212565b6020026020010151612b35565b828281518110611caa57611caa615212565b6001600160401b0390921660209283029190910190910152600101611c6c565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611dc557611d038261370c565b611d20576040516348f5c3ed60e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0383811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611d84573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611da891906151f3565b611dc55760405163ccea9e6f60e01b815260040160405180910390fd5b61084e8282613ca2565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611e31573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e5591906151f3565b611e7257604051631d77d47760e21b815260040160405180910390fd5b611e7c5f196136a4565b565b5f61077683609a5f611291866134d5565b6001600160a01b038281165f81815260a2602090815260408083209486168084529482528083205493835260a38252808320948352939052918220546001600160401b0390911690600f81810b600160801b909204900b03825b81811015611fb9576001600160a01b038087165f90815260a3602090815260408083209389168352929052908120611f219083613e43565b6001600160a01b038881165f90815260a0602090815260408083208584528252808320938b16835292815290829020825160608101845290546001600160401b0381168252600160401b8104600f0b92820192909252600160c01b90910463ffffffff16918101829052919250431015611f9c575050611fb9565b611faa8582602001516137e8565b94505050806001019050611ee9565b506001600160a01b038086165f90815260a1602090815260408083209388168352929052208290611fe9906137d5565b611ff3919061542d565b95945050505050565b6066546002906004908116036120255760405163840a48d560e01b815260040160405180910390fd5b61203a61203560208401846147ff565b61370c565b80612053575061205361203560408401602085016147ff565b612070576040516348f5c3ed60e01b815260040160405180910390fd5b5f5b61207f6040840184615244565b9050811015612341575f60405180604001604052808560200160208101906120a791906147ff565b6001600160a01b031681526020016120c26040870187615244565b858181106120d2576120d2615212565b90506020020160208101906120e79190615289565b63ffffffff168152509050612134816020015163ffffffff1660985f87602001602081019061211691906147ff565b6001600160a01b0316815260208101919091526040015f20906136f5565b61215157604051631fb1705560e21b815260040160405180910390fd5b609e5f61216160208701876147ff565b6001600160a01b03166001600160a01b031681526020019081526020015f205f61218a836134d5565b815260208101919091526040015f205460ff166121ba576040516325131d4f60e01b815260040160405180910390fd5b6121f46121c6826134d5565b609c5f6121d660208901896147ff565b6001600160a01b0316815260208101919091526040015f2090613eb2565b5061222c61220560208601866147ff565b609a5f612211856134d5565b81526020019081526020015f20613ebd90919063ffffffff16565b5061223a60208501856147ff565b6001600160a01b03167fad34c3070be1dffbcaa499d000ba2b8d9848aefcac3059df245dd95c4ece14fe8260405161227291906152a2565b60405180910390a2604080518082019091525f8152602081016122b57f000000000000000000000000000000000000000000000000000000000000000043615622565b63ffffffff169052609e5f6122cd60208801886147ff565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6122f6846134d5565b81526020808201929092526040015f2082518154939092015163ffffffff166101000264ffffffff00199215159290921664ffffffffff199093169290921717905550600101612072565b5061235561038360408401602085016147ff565b6001600160a01b0316639d8e0c2361237060208501856147ff565b61237d6040860186615244565b6040518463ffffffff1660e01b815260040161239b93929190615677565b5f604051808303815f87803b1580156123b2575f5ffd5b505af19250505080156123c3575060015b1561084e575050565b606061099a609a5f611919856134d5565b6123e5613ed1565b611e7c5f613f2b565b6001600160a01b0381165f908152609c6020526040812060609190612412906136e1565b90505f816001600160401b0381111561242d5761242d614692565b60405190808252806020026020018201604052801561247157816020015b604080518082019091525f808252602082015281526020019060019003908161244b5790505b5090505f5b82811015610961576001600160a01b0385165f908152609c602052604090206124a39061090790836136ea565b8282815181106124b5576124b5615212565b6020908102919091010152600101612476565b60605f84516001600160401b038111156124e4576124e4614692565b60405190808252806020026020018201604052801561252d57816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816125025790505b5090505f5b85518110156125845761255f86828151811061255057612550615212565b60200260200101518686610742565b82828151811061257157612571615212565b6020908102919091010152600101612532565b50949350505050565b60605f83516001600160401b038111156125a9576125a9614692565b6040519080825280602002602001820160405280156125d2578160200160208202803683370190505b5090505f5b8451811015612584576001600160a01b0386165f90815260a16020526040812086516126479287929189908690811061261257612612615212565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20613f7c90919063ffffffff16565b82828151811061265957612659615212565b6001600160401b03909216602092830291909101909101526001016125d7565b6066545f906001908116036126a15760405163840a48d560e01b815260040160405180910390fd5b6126aa8361370c565b6126c7576040516348f5c3ed60e01b815260040160405180910390fd5b5f5f5f6126d38661309f565b91509150816126f55760405163fa55fc8160e01b815260040160405180910390fd5b91505f90505b8351811015610c915783818151811061271657612716615212565b6020026020010151604001515184828151811061273557612735615212565b6020026020010151602001515114612760576040516343714afd60e01b815260040160405180910390fd5b5f84828151811061277357612773615212565b602090810291909101810151518082015181516001600160a01b03165f908152609890935260409092209092506127b39163ffffffff908116906136f516565b6127d057604051631fb1705560e21b815260040160405180910390fd5b5f6127db8783613824565b90505f5b8684815181106127f1576127f1615212565b60200260200101516020015151811015612b2a575f87858151811061281857612818615212565b602002602001015160200151828151811061283557612835615212565b6020026020010151905061284c898261ffff613b9e565b5f5f61285b8b61076b886134d5565b915091508060200151600f0b5f1461288657604051630d8fcbe360e41b815260040160405180910390fd5b5f61289387858489613f90565b90506128d8825f01518c8a815181106128ae576128ae615212565b60200260200101516040015187815181106128cb576128cb615212565b6020026020010151613fc6565b600f0b602083018190525f0361290157604051634606179360e11b815260040160405180910390fd5b5f8260200151600f0b1215612a3a5780156129bc57612982612922886134d5565b6001600160a01b03808f165f90815260a360209081526040808320938a16835292905220908154600160801b90819004600f0b5f818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b6129ac7f000000000000000000000000000000000000000000000000000000000000000043615622565b63ffffffff166040830152612aa7565b6129ce836020015183602001516137e8565b6001600160401b031660208401528a518b90899081106129f0576129f0615212565b6020026020010151604001518581518110612a0d57612a0d615212565b6020908102919091018101516001600160401b031683525f9083015263ffffffff43166040830152612aa7565b5f8260200151600f0b1315612aa757612a5b836020015183602001516137e8565b6001600160401b039081166020850181905284519091161015612a9157604051636c9be0bf60e01b815260040160405180910390fd5b612a9b8943615622565b63ffffffff1660408301525b612abc8c612ab4896134d5565b8686866138d0565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd8c612aea6109078a6134d5565b86612afc865f015187602001516137e8565b8660400151604051612b1295949392919061549d565b60405180910390a15050600190920191506127df9050565b5050506001016126fb565b6001600160a01b038083165f90815260a1602090815260408083209385168352929052908120610776906137d5565b82612b6e8161370c565b612b8b5760405163932d94f760e01b815260040160405180910390fd5b836001600160a01b03167fa89c1dc243d8908a96dd84944bcc97d6bc6ac00dd78e20621576be6a3c9437138484604051612bc692919061569b565b60405180910390a250505050565b606654600290600490811603612bfd5760405163840a48d560e01b815260040160405180910390fd5b82612c078161370c565b612c245760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015612c88573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612cac91906151f3565b612cc95760405163ccea9e6f60e01b815260040160405180910390fd5b5f5b612cd86020850185615244565b9050811015612ea057604080518082019091525f9080612cfb60208801886147ff565b6001600160a01b03168152602001868060200190612d199190615244565b85818110612d2957612d29615212565b9050602002016020810190612d3e9190615289565b63ffffffff90811690915260208083015183516001600160a01b03165f90815260989092526040909120929350612d7a9291908116906136f516565b612d9757604051631fb1705560e21b815260040160405180910390fd5b612da18682613824565b15612dbf57604051636c6c6e2760e11b815260040160405180910390fd5b612de8612dcb826134d5565b6001600160a01b0388165f908152609c60205260409020906137b6565b50612e1486609a5f612df9856134d5565b81526020019081526020015f206137c190919063ffffffff16565b50856001600160a01b03167f43232edf9071753d2321e5fa7e018363ee248e5f2142e6c08edd3265bfb4895e82604051612e4e91906152a2565b60405180910390a26001600160a01b0386165f908152609e60205260408120600191612e79846134d5565b815260208101919091526040015f20805460ff191691151591909117905550600101612ccb565b50612eb161038360208501856147ff565b6001600160a01b031663adcf73f785612ecd6020870187615244565b612eda60408901896154ee565b6040518663ffffffff1660e01b8152600401612efa9594939291906156ae565b5f604051808303815f87803b158015612f11575f5ffd5b505af1158015611c18573d5f5f3e3d5ffd5b5f61099a609a5f612f33856134d5565b81526020019081526020015f206136e1565b83612f4f8161370c565b612f6c5760405163932d94f760e01b815260040160405180910390fd5b6040805180820182526001600160a01b03871680825263ffffffff80881660208085018290525f93845260989052939091209192612fab92916136f516565b612fc857604051631fb1705560e21b815260040160405180910390fd5b5f612fd2826134d5565b90505f5b84811015611c185761301b868683818110612ff357612ff3615212565b905060200201602081019061300891906147ff565b5f84815260996020526040902090613ebd565b613038576040516331bc342760e11b815260040160405180910390fd5b7f7b4b073d80dcac55a11177d8459ad9f664ceeb91f71f27167bb14f8152a7eeee8387878481811061306c5761306c615212565b905060200201602081019061308191906147ff565b60405161308f9291906152b0565b60405180910390a1600101612fd6565b6001600160a01b0381165f908152609b602090815260408083208151608081018352905463ffffffff80821680845260ff600160201b8404161515958401869052650100000000008304821694840194909452600160481b9091041660608201819052849391929190158015906131205750826060015163ffffffff164310155b1561312f575050604081015160015b9590945092505050565b6001600160a01b0381165f90815260986020526040812061099a906136e1565b6001600160a01b0382165f908152609f60205260408120606091906131829082611919866134d5565b949350505050565b5f54610100900460ff16158080156131a857505f54600160ff909116105b806131c15750303b1580156131c157505f5460ff166001145b6132295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff19166001179055801561324a575f805461ff0019166101001790555b613253826136a4565b61325c83613f2b565b80156132a2575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b816132b18161370c565b6132ce5760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b038381165f90815260976020526040902080546001600160a01b0319169184169190911790557f2ae945c40c44dc0ec263f95609c3fdc6952e0aefa22d6374e44f2c997acedf858361332681610f85565b604080516001600160a01b03938416815292909116602083015201613299565b61334e613ed1565b6001600160a01b0381166133b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401613220565b6133bc81613f2b565b50565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561341b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061343f91906156f1565b6001600160a01b0316336001600160a01b0316146134705760405163794821ff60e01b815260040160405180910390fd5b606654801982198116146134975760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b5f815f0151826020015163ffffffff1660405160200161352092919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b60405160208183030381529060405261099a9061570c565b6040805180820182525f80825260208083018290528351606081018552828152808201839052808501839052845180860186526001600160a01b03898116855260a1845286852090881685529092529382209293928190613598906137d5565b6001600160401b0390811682526001600160a01b038981165f81815260a260209081526040808320948c168084529482528083205486169682019690965291815260a082528481208b8252825284812092815291815290839020835160608101855290549283168152600160401b8304600f0b91810191909152600160c01b90910463ffffffff1691810182905291925043101561363a57909250905061369c565b61364b815f015182602001516137e8565b6001600160401b0316815260208101515f600f9190910b12156136895761367a826020015182602001516137e8565b6001600160401b031660208301525b5f60408201819052602082015290925090505b935093915050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b5f61099a825490565b5f6107768383613fdd565b5f8181526001830160205260408120541515610776565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af1158015613792573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099a91906151f3565b5f6107768383614003565b5f610776836001600160a01b038416614003565b5f61099a82670de0b6b3a764000061404f565b5f610776826001600160401b038516615470565b5f61077683670de0b6b3a764000084614093565b5f6107768383670de0b6b3a7640000614093565b6001600160a01b0382165f908152609e60205260408120819081613847856134d5565b815260208082019290925260409081015f2081518083019092525460ff8116151580835261010090910463ffffffff169282019290925291508061318257506020015163ffffffff1643109392505050565b6001600160a01b0381165f9081526001830160205260408120541515610776565b5f6107768383670de0b6b3a76400006001614178565b6020808301516001600160a01b038088165f90815260a284526040808220928816825291909352909120546001600160401b0390811691161461399657602082810180516001600160a01b038881165f81815260a286526040808220938a1680835293875290819020805467ffffffffffffffff19166001600160401b0395861617905593518451918252948101919091529216908201527facf9095feb3a370c9cf692421c69ef320d4db5c66e6a7d29c7694eb02364fc559060600160405180910390a15b6001600160a01b038086165f90815260a060209081526040808320888452825280832093871683529281529082902083518154928501519385015163ffffffff16600160c01b0263ffffffff60c01b196001600160801b038616600160401b026001600160c01b03199095166001600160401b03909316929092179390931716919091179055600f0b15613a78576001600160a01b0385165f908152609f602090815260408083208784529091529020613a5090846137c1565b506001600160a01b0385165f908152609d60205260409020613a7290856137b6565b50610c91565b80516001600160401b03165f03610c91576001600160a01b0385165f908152609f602090815260408083208784529091529020613ab59084613ebd565b506001600160a01b0385165f908152609f602090815260408083208784529091529020613ae1906136e1565b5f03610c91576001600160a01b0385165f908152609d60205260409020613b089085613eb2565b505050505050565b6001600160a01b038084165f90815260a160209081526040808320938616835292905220613b3f9043836141d1565b604080516001600160a01b038086168252841660208201526001600160401b038316918101919091527f1c6458079a41077d003c11faf9bf097e693bd67979e4e6500bac7b29db779b5c90606001613299565b60605f610776836141e5565b6001600160a01b038381165f90815260a360209081526040808320938616835292905290812054600f81810b600160801b909204900b035b5f81118015613be857508261ffff1682105b15610c91576001600160a01b038086165f90815260a3602090815260408083209388168352929052908120613c1c9061423e565b90505f5f613c2b888489613538565b91509150806040015163ffffffff16431015613c4957505050610c91565b613c5688848985856138d0565b6001600160a01b038089165f90815260a360209081526040808320938b16835292905220613c8390614290565b50613c8d8561572f565b9450613c9884615747565b9350505050613bd6565b6001600160a01b0382165f908152609b60209081526040918290208251608081018452905463ffffffff808216835260ff600160201b830416151593830193909352650100000000008104831693820193909352600160481b909204166060820181905215801590613d1e5750806060015163ffffffff164310155b15613d3857604081015163ffffffff168152600160208201525b63ffffffff82166040820152613d6e7f000000000000000000000000000000000000000000000000000000000000000043615622565b63ffffffff90811660608381019182526001600160a01b0386165f818152609b602090815260409182902087518154838a0151858b01519851928a1664ffffffffff1990921691909117600160201b91151591909102176cffffffffffffffff0000000000191665010000000000978916979097026cffffffff000000000000000000191696909617600160481b968816968702179055815192835294871694820194909452928301919091527f4e85751d6331506c6c62335f207eb31f12a61e570f34f5c17640308785c6d4db9101613299565b5f5f613e65613e518461430d565b8554613e609190600f0b61575c565b61437a565b8454909150600160801b9004600f90810b9082900b12613e9857604051632d0483c560e21b815260040160405180910390fd5b600f0b5f9081526001939093016020525050604090205490565b5f61077683836143e3565b5f610776836001600160a01b0384166143e3565b6033546001600160a01b03163314611e7c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401613220565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107768383670de0b6b3a76400006144c6565b5f613fa18460995f611291896134d5565b8015613faa5750815b8015611ff357505090516001600160401b031615159392505050565b5f6107766001600160401b03808516908416615783565b5f825f018281548110613ff257613ff2615212565b905f5260205f200154905092915050565b5f81815260018301602052604081205461404857508154600181810184555f84815260208082209093018490558454848252828601909352604090209190915561099a565b505f61099a565b81545f90801561408b576140758461406860018461541a565b5f91825260209091200190565b54600160201b90046001600160e01b0316613182565b509092915050565b5f80805f19858709858702925082811083820303915050805f036140ca578382816140c0576140c06157b0565b0492505050610776565b8084116141115760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401613220565b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b5f5f614185868686614093565b9050600183600281111561419b5761419b6157c4565b1480156141b757505f84806141b2576141b26157b0565b868809115b15611ff3576141c760018261560f565b9695505050505050565b6132a283836001600160401b03841661450e565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561423257602002820191905f5260205f20905b81548152602001906001019080831161421e575b50505050509050919050565b5f6142588254600f81810b600160801b909204900b131590565b1561427657604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f9081526001909101602052604090205490565b5f6142aa8254600f81810b600160801b909204900b131590565b156142c857604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b5f6001600160ff1b038211156143765760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401613220565b5090565b80600f81900b81146143de5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401613220565b919050565b5f81815260018301602052604081205480156144bd575f61440560018361541a565b85549091505f906144189060019061541a565b9050818114614477575f865f01828154811061443657614436615212565b905f5260205f200154905080875f01848154811061445657614456615212565b5f918252602080832090910192909255918252600188019052604090208390555b8554869080614488576144886157d8565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f90556001935050505061099a565b5f91505061099a565b82545f90816144d786868385614611565b90508015614504576144ee8661406860018461541a565b54600160201b90046001600160e01b0316610771565b5091949350505050565b825480156145c4575f6145268561406860018561541a565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090851610156145785760405163151b8e3f60e11b815260040160405180910390fd5b805163ffffffff8086169116036145c257826145998661406860018661541a565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790555050505050565b505b506040805180820190915263ffffffff92831681526001600160e01b03918216602080830191825285546001810187555f968752952091519051909216600160201b029190921617910155565b5f5b81831015610961575f6146268484614664565b5f8781526020902090915063ffffffff86169082015463ffffffff1611156146505780925061465e565b61465b81600161560f565b93505b50614613565b5f61467260028484186157ec565b6107769084841661560f565b6001600160a01b03811681146133bc575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b03811182821017156146c8576146c8614692565b60405290565b604051601f8201601f191681016001600160401b03811182821017156146f6576146f6614692565b604052919050565b803563ffffffff811681146143de575f5ffd5b5f60408284031215614721575f5ffd5b604080519081016001600160401b038111828210171561474357614743614692565b60405290508082356147548161467e565b8152614762602084016146fe565b60208201525092915050565b5f5f5f60808486031215614780575f5ffd5b833561478b8161467e565b925061479a8560208601614711565b915060608401356147aa8161467e565b809150509250925092565b81516001600160401b03168152602080830151600f0b9082015260408083015163ffffffff16908201526060810161099a565b5f602082840312156147f8575f5ffd5b5035919050565b5f6020828403121561480f575f5ffd5b81356107768161467e565b80516001600160a01b0316825260209081015163ffffffff16910152565b5f8151808452602084019350602083015f5b828110156148735761485d86835161481a565b604095909501946020919091019060010161484a565b5093949350505050565b602081525f6107766020830184614838565b5f6040828403121561489f575f5ffd5b6107768383614711565b5f5f83601f8401126148b9575f5ffd5b5081356001600160401b038111156148cf575f5ffd5b6020830191508360208260051b8501011115611900575f5ffd5b5f5f5f604084860312156148fb575f5ffd5b83356149068161467e565b925060208401356001600160401b03811115614920575f5ffd5b61492c868287016148a9565b9497909650939450505050565b5f6001600160401b0382111561495157614951614692565b5060051b60200190565b5f82601f83011261496a575f5ffd5b813561497d61497882614939565b6146ce565b8082825260208201915060208360051b86010192508583111561499e575f5ffd5b602085015b838110156149c45780356149b68161467e565b8352602092830192016149a3565b5095945050505050565b5f5f5f5f60a085870312156149e1575f5ffd5b6149eb8686614711565b935060408501356001600160401b03811115614a05575f5ffd5b614a118782880161495b565b93505060608501356001600160401b03811115614a2c575f5ffd5b614a388782880161495b565b925050614a47608086016146fe565b905092959194509250565b5f8151808452602084019350602083015f5b82811015614873578151865260209586019590910190600101614a64565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015614ad957603f19878603018452614ac4858351614a52565b94506020938401939190910190600101614aa8565b50929695505050505050565b5f5f60408385031215614af6575f5ffd5b8235614b018161467e565b915060208301356001600160401b03811115614b1b575f5ffd5b830160a08186031215614b2c575f5ffd5b809150509250929050565b5f5f60408385031215614b48575f5ffd5b8235614b538161467e565b91506020830135614b2c8161467e565b5f8151808452602084019350602083015f5b8281101561487357614bae86835180516001600160401b03168252602080820151600f0b9083015260409081015163ffffffff16910152565b6060959095019460209190910190600101614b75565b604081525f614bd66040830185614838565b8281036020840152611ff38185614b63565b5f8151808452602084019350602083015f5b828110156148735781516001600160a01b0316865260209586019590910190600101614bfa565b602081525f6107766020830184614be8565b5f5f60408385031215614c44575f5ffd5b82356001600160401b03811115614c59575f5ffd5b614c658582860161495b565b9250506020830135614b2c8161467e565b602080825282518282018190525f918401906040840190835b81811015614cb65783516001600160401b0316835260209384019390920191600101614c8f565b509095945050505050565b5f5f5f5f5f60608688031215614cd5575f5ffd5b8535614ce08161467e565b945060208601356001600160401b03811115614cfa575f5ffd5b614d06888289016148a9565b90955093505060408601356001600160401b03811115614d24575f5ffd5b614d30888289016148a9565b969995985093965092949392505050565b5f5f5f5f60608587031215614d54575f5ffd5b8435614d5f8161467e565b9350614d6d602086016146fe565b925060408501356001600160401b03811115614d87575f5ffd5b614d93878288016148a9565b95989497509550505050565b5f5f60408385031215614db0575f5ffd5b8235614dbb8161467e565b915060208301356001600160401b03811115614dd5575f5ffd5b614de18582860161495b565b9150509250929050565b5f5f60408385031215614dfc575f5ffd5b8235614e078161467e565b9150614e15602084016146fe565b90509250929050565b5f60208284031215614e2e575f5ffd5b813560ff81168114610776575f5ffd5b5f5f60608385031215614e4f575f5ffd5b8235614e5a8161467e565b9150614e158460208501614711565b5f60608284031215614e79575f5ffd5b50919050565b5f60208284031215614e8f575f5ffd5b81356001600160401b03811115614ea4575f5ffd5b61318284828501614e69565b5f5f5f60808486031215614ec2575f5ffd5b83356001600160401b03811115614ed7575f5ffd5b614ee38682870161495b565b93505061479a8560208601614711565b602081525f6107766020830184614b63565b5f5f5f60608486031215614f17575f5ffd5b8335614f228161467e565b925060208401356001600160401b03811115614f3c575f5ffd5b614f488682870161495b565b925050614f57604085016146fe565b90509250925092565b5f5f60408385031215614f71575f5ffd5b8235614f7c8161467e565b915060208301356001600160401b03811115614f96575f5ffd5b8301601f81018513614fa6575f5ffd5b8035614fb461497882614939565b8082825260208201915060208360051b850101925087831115614fd5575f5ffd5b602084015b838110156150fa5780356001600160401b03811115614ff7575f5ffd5b85016080818b03601f1901121561500c575f5ffd5b6150146146a6565b6150218b60208401614711565b815260608201356001600160401b0381111561503b575f5ffd5b61504a8c60208386010161495b565b60208301525060808201356001600160401b03811115615068575f5ffd5b6020818401019250508a601f83011261507f575f5ffd5b813561508d61497882614939565b8082825260208201915060208360051b86010192508d8311156150ae575f5ffd5b6020850194505b828510156150e45784356001600160401b03811681146150d3575f5ffd5b8252602094850194909101906150b5565b6040840152505084525060209283019201614fda565b50809450505050509250929050565b5f5f5f6040848603121561511b575f5ffd5b83356151268161467e565b925060208401356001600160401b03811115615140575f5ffd5b8401601f81018613615150575f5ffd5b80356001600160401b03811115615165575f5ffd5b866020828401011115615176575f5ffd5b939660209190910195509293505050565b5f5f60408385031215615198575f5ffd5b82356151a38161467e565b915060208301356001600160401b038111156151bd575f5ffd5b614de185828601614e69565b5f5f604083850312156151da575f5ffd5b82356151e58161467e565b946020939093013593505050565b5f60208284031215615203575f5ffd5b81518015158114610776575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b5f8235603e1983360301811261523a575f5ffd5b9190910192915050565b5f5f8335601e19843603018112615259575f5ffd5b8301803591506001600160401b03821115615272575f5ffd5b6020019150600581901b3603821315611900575f5ffd5b5f60208284031215615299575f5ffd5b610776826146fe565b6040810161099a828461481a565b606081016152be828561481a565b6001600160a01b039290921660409190910152919050565b604081525f6152e86040830185614be8565b8281036020840152611ff38185614be8565b5f6020828403121561530a575f5ffd5b81516001600160401b0381111561531f575f5ffd5b8201601f8101841361532f575f5ffd5b805161533d61497882614939565b8082825260208201915060208360051b85010192508683111561535e575f5ffd5b602084015b838110156153fb5780516001600160401b03811115615380575f5ffd5b8501603f81018913615390575f5ffd5b60208101516153a161497882614939565b808282526020820191506020808460051b8601010192508b8311156153c4575f5ffd5b6040840193505b828410156153e65783518252602093840193909101906153cb565b86525050602093840193919091019050615363565b509695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561099a5761099a615406565b6001600160401b03828116828216039081111561099a5761099a615406565b5f81600f0b60016001607f1b0319810361546857615468615406565b5f0392915050565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561099a5761099a615406565b6001600160a01b038616815260c081016154ba602083018761481a565b6001600160a01b039490941660608201526001600160401b0392909216608083015263ffffffff1660a09091015292915050565b5f5f8335601e19843603018112615503575f5ffd5b8301803591506001600160401b0382111561551c575f5ffd5b602001915036819003821315611900575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b03881681525f60c08201615576602084018a61481a565b60c060608401528690528660e083015f5b888110156155b757823561559a8161467e565b6001600160a01b0316825260209283019290910190600101615587565b5083810360808501526155ca8188614a52565b91505082810360a08401526155e0818587615530565b9a9950505050505050505050565b5f602082840312156155fe575f5ffd5b813561ffff81168114610776575f5ffd5b8082018082111561099a5761099a615406565b63ffffffff818116838216019081111561099a5761099a615406565b8183526020830192505f815f5b848110156148735763ffffffff615661836146fe565b168652602095860195919091019060010161564b565b6001600160a01b03841681526040602082018190525f90611ff3908301848661563e565b602081525f613182602083018486615530565b6001600160a01b03861681526060602082018190525f906156d2908301868861563e565b82810360408401526156e5818587615530565b98975050505050505050565b5f60208284031215615701575f5ffd5b81516107768161467e565b80516020808301519190811015614e79575f1960209190910360031b1b16919050565b5f6001820161574057615740615406565b5060010190565b5f8161575557615755615406565b505f190190565b8082018281125f83128015821682158216171561577b5761577b615406565b505092915050565b600f82810b9082900b0360016001607f1b0319811260016001607f1b038213171561099a5761099a615406565b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b5f8261580657634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212202c0f483a478d14f76ed057d28cec9d6ef94a45015cd283d99238b804b9741b8264736f6c634300081b0033",
    "sourceMap": "504:36182:119:-:0;;;1134:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1538:21;1403:11;1416:19;1437:31;1487:15;-1:-1:-1;;;;;3224:38:154;;3216:67;;;;-1:-1:-1;;;3216:67:154;;;;;;;;;;;;-1:-1:-1;;;;;3293:32:154;;;;;4987:24:120;;;;;5021:40;;;;;;5071:64;;;501:44:152;;;1575:22:119::3;:20;:22::i;:::-;1134:470:::0;;;;;504:36182;;5939:280:30;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:30;;1380:2:244;5998:66:30;;;1362:21:244;1419:2;1399:18;;;1392:30;1458:34;1438:18;;;1431:62;-1:-1:-1;;;1509:18:244;;;1502:37;1556:19;;5998:66:30;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:30;6140:15;6125:30;;;;;;6174:28;;1728:36:244;;;6174:28:30;;1716:2:244;1701:18;6174:28:30;;;;;;;6074:139;5939:280::o;14:151:244:-;-1:-1:-1;;;;;109:31:244;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:167::-;248:13;;301:10;290:22;;280:33;;270:61;;327:1;324;317:12;270:61;170:167;;;:::o;342:831::-;530:6;538;546;554;562;615:3;603:9;594:7;590:23;586:33;583:53;;;632:1;629;622:12;583:53;664:9;658:16;683:51;728:5;683:51;:::i;:::-;803:2;788:18;;782:25;753:5;;-1:-1:-1;816:53:244;782:25;816:53;:::i;:::-;940:2;925:18;;919:25;888:7;;-1:-1:-1;953:53:244;919:25;953:53;:::i;:::-;1025:7;-1:-1:-1;1051:48:244;1095:2;1080:18;;1051:48;:::i;:::-;1041:58;;1118:49;1162:3;1151:9;1147:19;1118:49;:::i;:::-;1108:59;;342:831;;;;;;;;:::o;1586:184::-;504:36182:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b5060043610610281575f3560e01c80636e875dba11610156578063a984eb3a116100ca578063c221d8ae11610084578063c221d8ae146106bc578063cd6dc687146106cf578063d3d96ff4146106e2578063df5cf723146106f5578063f2fde38b1461071c578063fabc1cbc1461072f575f5ffd5b8063a984eb3a1461060e578063adc2e3d914610641578063b2447af714610654578063b66bd98914610667578063b9fbaed11461067a578063ba1a84e5146106a9575f5ffd5b80638ce648541161011b5780638ce64854146105915780638da5cb5b146105b157806394d7d00c146105c2578063952899ee146105d5578063a9333ec8146105e8578063a9821821146105fb575f5ffd5b80636e875dba14610515578063715018a61461052857806379ae50cd146105305780637bc1ef6114610543578063886f11951461056a575f5ffd5b80634657e26a116101f8578063595c6a67116101b2578063595c6a67146104875780635ac86ab71461048f5780635c975abb146104b2578063670d3ba2146104c45780636cfb4481146104d75780636e3492b514610502575f5ffd5b80634657e26a146103f45780634a10ffe51461041b5780634b5046ef1461043b57806350feea201461044e578063547afb871461046157806356c483e614610474575f5ffd5b80632981eb77116102495780632981eb77146103195780632bab2c4a14610355578063304c10cd1461037557806336352057146103a057806340120dab146103b35780634177a87c146103d4575f5ffd5b806310e1b9b814610285578063136439dd146102ae57806315fe5028146102c3578063260dc758146102e3578063261f84e014610306575b5f5ffd5b61029861029336600461476e565b610742565b6040516102a591906147b5565b60405180910390f35b6102c16102bc3660046147e8565b61077d565b005b6102d66102d13660046147ff565b610852565b6040516102a5919061487d565b6102f66102f136600461488f565b610969565b60405190151581526020016102a5565b6102c16103143660046148e9565b6109a0565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016102a5565b6103686103633660046149ce565b610c98565b6040516102a59190614a82565b6103886103833660046147ff565b610f85565b6040516001600160a01b0390911681526020016102a5565b6102c16103ae366004614ae5565b610fb4565b6103c66103c1366004614b37565b61178c565b6040516102a5929190614bc4565b6103e76103e236600461488f565b611907565b6040516102a59190614c21565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b61042e610429366004614c33565b61192b565b6040516102a59190614c76565b6102c1610449366004614cc1565b6119d3565b6102c161045c366004614d41565b611a8d565b61042e61046f366004614d9f565b611c22565b6102c1610482366004614deb565b611cca565b6102c1611dcf565b6102f661049d366004614e1e565b606654600160ff9092169190911b9081161490565b6066545b6040519081526020016102a5565b6102f66104d2366004614e3e565b611e7e565b6104ea6104e5366004614b37565b611e8f565b6040516001600160401b0390911681526020016102a5565b6102c1610510366004614e7f565b611ffc565b6103e761052336600461488f565b6123cc565b6102c16123dd565b6102d661053e3660046147ff565b6123ee565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6105a461059f366004614eb0565b6124c8565b6040516102a59190614ef3565b6033546001600160a01b0316610388565b61042e6105d0366004614f05565b61258d565b6102c16105e3366004614f60565b612679565b6104ea6105f6366004614b37565b612b35565b6102c1610609366004615109565b612b64565b6104ea61061c366004614b37565b60a260209081525f92835260408084209091529082529020546001600160401b031681565b6102c161064f366004615187565b612bd4565b6104b661066236600461488f565b612f23565b6102c1610675366004614d41565b612f45565b61068d6106883660046147ff565b61309f565b60408051921515835263ffffffff9091166020830152016102a5565b6104b66106b73660046147ff565b613139565b6103e76106ca366004614e3e565b613159565b6102c16106dd3660046151c9565b61318a565b6102c16106f0366004614b37565b6132a7565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6102c161072a3660046147ff565b613346565b6102c161073d3660046147e8565b6133bf565b604080516060810182525f80825260208201819052918101829052906107718561076b866134d5565b85613538565b925050505b9392505050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156107df573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080391906151f3565b61082057604051631d77d47760e21b815260040160405180910390fd5b60665481811681146108455760405163c61dca5d60e01b815260040160405180910390fd5b61084e826136a4565b5050565b6001600160a01b0381165f908152609d6020526040812060609190610876906136e1565b90505f816001600160401b0381111561089157610891614692565b6040519080825280602002602001820160405280156108d557816020015b604080518082019091525f80825260208201528152602001906001900390816108af5790505b5090505f5b82811015610961576001600160a01b0385165f908152609d6020526040902061093c9061090790836136ea565b604080518082019091525f80825260208201525060408051808201909152606082901c815263ffffffff909116602082015290565b82828151811061094e5761094e615212565b60209081029190910101526001016108da565b509392505050565b60208082015182516001600160a01b03165f90815260989092526040822061099a9163ffffffff908116906136f516565b92915050565b826109aa8161370c565b6109c75760405163932d94f760e01b815260040160405180910390fd5b5f5b82811015610c915760218484838181106109e5576109e5615212565b90506020028101906109f79190615226565b610a05906020810190615244565b90501115610a26576040516301a1443960e31b815260040160405180910390fd5b5f6040518060400160405280876001600160a01b03168152602001868685818110610a5357610a53615212565b9050602002810190610a659190615226565b610a73906020810190615289565b63ffffffff168152509050610abd816020015163ffffffff1660985f896001600160a01b03166001600160a01b031681526020019081526020015f206137b690919063ffffffff16565b610ada57604051631fb1705560e21b815260040160405180910390fd5b7f31629285ead2335ae0933f86ed2ae63321f7af77b4e6eaabc42c057880977e6c6040518060400160405280886001600160a01b03168152602001836020015163ffffffff16815250604051610b3091906152a2565b60405180910390a15f610b42826134d5565b90505f5b868685818110610b5857610b58615212565b9050602002810190610b6a9190615226565b610b78906020810190615244565b9050811015610c8657610bee878786818110610b9657610b96615212565b9050602002810190610ba89190615226565b610bb6906020810190615244565b83818110610bc657610bc6615212565b9050602002016020810190610bdb91906147ff565b5f848152609960205260409020906137c1565b507f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83888887818110610c2357610c23615212565b9050602002810190610c359190615226565b610c43906020810190615244565b84818110610c5357610c53615212565b9050602002016020810190610c6891906147ff565b604051610c769291906152b0565b60405180910390a1600101610b46565b5050506001016109c9565b5050505050565b606083516001600160401b03811115610cb357610cb3614692565b604051908082528060200260200182016040528015610ce657816020015b6060815260200190600190039081610cd15790505b5090505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f0e0e67686866040518363ffffffff1660e01b8152600401610d389291906152d6565b5f60405180830381865afa158015610d52573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610d7991908101906152fa565b90505f5b8551811015610f7b575f868281518110610d9957610d99615212565b6020026020010151905085516001600160401b03811115610dbc57610dbc614692565b604051908082528060200260200182016040528015610de5578160200160208202803683370190505b50848381518110610df857610df8615212565b60209081029190910101525f5b8651811015610f71575f878281518110610e2157610e21615212565b6020908102919091018101516001600160a01b038086165f90815260a1845260408082209284168252919093528220909250610e5c906137d5565b9050806001600160401b03165f03610e75575050610f69565b5f610e81858d85610742565b90508863ffffffff16816040015163ffffffff1611158015610ea957505f8160200151600f0b125b15610ecb57610ebf815f015182602001516137e8565b6001600160401b031681525b80515f90610ee6906001600160401b039081169085166137fc565b9050610f2d81898981518110610efe57610efe615212565b60200260200101518781518110610f1757610f17615212565b602002602001015161381090919063ffffffff16565b898881518110610f3f57610f3f615212565b60200260200101518681518110610f5857610f58615212565b602002602001018181525050505050505b600101610e05565b5050600101610d7d565b5050949350505050565b6001600160a01b038082165f908152609760205260408120549091168015610fad5780610776565b5090919050565b606654600190600290811603610fdd5760405163840a48d560e01b815260040160405180910390fd5b82610fe78161370c565b6110045760405163932d94f760e01b815260040160405180910390fd5b5f6040518060400160405280866001600160a01b031681526020018560200160208101906110329190615289565b63ffffffff16905290505f61105361104d60208701876147ff565b83613824565b60208084015184516001600160a01b03165f90815260989092526040909120919250611089919063ffffffff908116906136f516565b6110a657604051631fb1705560e21b815260040160405180910390fd5b806110c45760405163ebbff49760e01b815260040160405180910390fd5b5f6110d26040870187615244565b90506001600160401b038111156110eb576110eb614692565b604051908082528060200260200182016040528015611114578160200160208202803683370190505b5090505f5b6111266040880188615244565b905081101561171d578015806111b957506111446040880188615244565b61114f60018461541a565b81811061115e5761115e615212565b905060200201602081019061117391906147ff565b6001600160a01b03166111896040890189615244565b8381811061119957611199615212565b90506020020160208101906111ae91906147ff565b6001600160a01b0316115b6111d657604051639f1c805360e01b815260040160405180910390fd5b6111e36060880188615244565b828181106111f3576111f3615212565b905060200201355f1080156112335750670de0b6b3a76400006112196060890189615244565b8381811061122957611229615212565b9050602002013511155b61125057604051631353603160e01b815260040160405180910390fd5b6112ac6112606040890189615244565b8381811061127057611270615212565b905060200201602081019061128591906147ff565b60995f611291886134d5565b81526020019081526020015f2061389990919063ffffffff16565b6112c9576040516331bc342760e11b815260040160405180910390fd5b5f8061131b6112db60208b018b6147ff565b6112e4886134d5565b6112f160408d018d615244565b8781811061130157611301615212565b905060200201602081019061131691906147ff565b613538565b805191935091506001600160401b03165f03611338575050611715565b5f61137361134960608c018c615244565b8681811061135957611359615212565b85516001600160401b0316926020909102013590506138ba565b835190915061138e6001600160401b038084169083166137fc565b8686815181106113a0576113a0615212565b60200260200101818152505081835f018181516113bd919061542d565b6001600160401b03169052508351829085906113da90839061542d565b6001600160401b03169052506020840180518391906113fa90839061542d565b6001600160401b031690525060208301515f600f9190910b1215611515575f61145d61142960608e018e615244565b8881811061143957611439615212565b90506020020135856020015161144e9061544c565b6001600160801b0316906138ba565b9050806001600160401b03168460200181815161147a9190615470565b600f0b9052507f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd6114ae60208e018e6147ff565b8a8e80604001906114bf9190615244565b8a8181106114cf576114cf615212565b90506020020160208101906114e491906147ff565b6114f5885f015189602001516137e8565b886040015160405161150b95949392919061549d565b60405180910390a1505b61156761152560208d018d6147ff565b61152e8a6134d5565b61153b60408f018f615244565b8981811061154b5761154b615212565b905060200201602081019061156091906147ff565b87876138d0565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd61159560208d018d6147ff565b896115a360408f018f615244565b898181106115b3576115b3615212565b90506020020160208101906115c891906147ff565b86516040516115dc9493929190439061549d565b60405180910390a161162d6115f460208d018d6147ff565b61160160408e018e615244565b8881811061161157611611615212565b905060200201602081019061162691906147ff565b8651613b10565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ee74937f61166960208e018e6147ff565b61167660408f018f615244565b8981811061168657611686615212565b905060200201602081019061169b91906147ff565b875160405160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526001600160401b0380861660448401521660648201526084015f604051808303815f87803b1580156116fa575f5ffd5b505af115801561170c573d5f5f3e3d5ffd5b50505050505050505b600101611119565b507f80969ad29428d6797ee7aad084f9e4a42a82fc506dcd2ca3b6fb431f85ccebe561174c60208801886147ff565b8461175a60408a018a615244565b8561176860808d018d6154ee565b60405161177b9796959493929190615558565b60405180910390a150505050505050565b6001600160a01b0382165f908152609d6020526040812060609182916117b1906136e1565b90505f816001600160401b038111156117cc576117cc614692565b60405190808252806020026020018201604052801561181057816020015b604080518082019091525f80825260208201528152602001906001900390816117ea5790505b5090505f826001600160401b0381111561182c5761182c614692565b60405190808252806020026020018201604052801561187557816020015b604080516060810182525f80825260208083018290529282015282525f1990920191018161184a5790505b5090505f5b838110156118f8576001600160a01b0388165f908152609d602052604081206118a79061090790846136ea565b9050808483815181106118bc576118bc615212565b60200260200101819052506118d289828a610742565b8383815181106118e4576118e4615212565b60209081029190910101525060010161187a565b509093509150505b9250929050565b60605f61077660995f611919866134d5565b81526020019081526020015f20613b92565b60605f83516001600160401b0381111561194757611947614692565b604051908082528060200260200182016040528015611970578160200160208202803683370190505b5090505f5b8451811015610961576119a185828151811061199357611993615212565b602002602001015185612b35565b8282815181106119b3576119b3615212565b6001600160401b0390921660209283029190910190910152600101611975565b6066545f906001908116036119fb5760405163840a48d560e01b815260040160405180910390fd5b838214611a1b576040516343714afd60e01b815260040160405180910390fd5b5f5b84811015611a8457611a7c87878784818110611a3b57611a3b615212565b9050602002016020810190611a5091906147ff565b868685818110611a6257611a62615212565b9050602002016020810190611a7791906155ee565b613b9e565b600101611a1d565b50505050505050565b83611a978161370c565b611ab45760405163932d94f760e01b815260040160405180910390fd5b604080518082019091526001600160a01b038616815263ffffffff851660208201525f611ae0826134d5565b5f8181526099602052604090209091506021908590611afe906136e1565b611b08919061560f565b1115611b27576040516301a1443960e31b815260040160405180910390fd5b6020808301516001600160a01b0389165f90815260989092526040909120611b589163ffffffff908116906136f516565b611b7557604051631fb1705560e21b815260040160405180910390fd5b5f5b84811015611c1857611b94868683818110610bc657610bc6615212565b611bb15760405163585cfb2f60e01b815260040160405180910390fd5b7f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83878784818110611be557611be5615212565b9050602002016020810190611bfa91906147ff565b604051611c089291906152b0565b60405180910390a1600101611b77565b5050505050505050565b60605f82516001600160401b03811115611c3e57611c3e614692565b604051908082528060200260200182016040528015611c67578160200160208202803683370190505b5090505f5b835181101561096157611c9885858381518110611c8b57611c8b615212565b6020026020010151612b35565b828281518110611caa57611caa615212565b6001600160401b0390921660209283029190910190910152600101611c6c565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611dc557611d038261370c565b611d20576040516348f5c3ed60e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0383811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611d84573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611da891906151f3565b611dc55760405163ccea9e6f60e01b815260040160405180910390fd5b61084e8282613ca2565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611e31573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e5591906151f3565b611e7257604051631d77d47760e21b815260040160405180910390fd5b611e7c5f196136a4565b565b5f61077683609a5f611291866134d5565b6001600160a01b038281165f81815260a2602090815260408083209486168084529482528083205493835260a38252808320948352939052918220546001600160401b0390911690600f81810b600160801b909204900b03825b81811015611fb9576001600160a01b038087165f90815260a3602090815260408083209389168352929052908120611f219083613e43565b6001600160a01b038881165f90815260a0602090815260408083208584528252808320938b16835292815290829020825160608101845290546001600160401b0381168252600160401b8104600f0b92820192909252600160c01b90910463ffffffff16918101829052919250431015611f9c575050611fb9565b611faa8582602001516137e8565b94505050806001019050611ee9565b506001600160a01b038086165f90815260a1602090815260408083209388168352929052208290611fe9906137d5565b611ff3919061542d565b95945050505050565b6066546002906004908116036120255760405163840a48d560e01b815260040160405180910390fd5b61203a61203560208401846147ff565b61370c565b80612053575061205361203560408401602085016147ff565b612070576040516348f5c3ed60e01b815260040160405180910390fd5b5f5b61207f6040840184615244565b9050811015612341575f60405180604001604052808560200160208101906120a791906147ff565b6001600160a01b031681526020016120c26040870187615244565b858181106120d2576120d2615212565b90506020020160208101906120e79190615289565b63ffffffff168152509050612134816020015163ffffffff1660985f87602001602081019061211691906147ff565b6001600160a01b0316815260208101919091526040015f20906136f5565b61215157604051631fb1705560e21b815260040160405180910390fd5b609e5f61216160208701876147ff565b6001600160a01b03166001600160a01b031681526020019081526020015f205f61218a836134d5565b815260208101919091526040015f205460ff166121ba576040516325131d4f60e01b815260040160405180910390fd5b6121f46121c6826134d5565b609c5f6121d660208901896147ff565b6001600160a01b0316815260208101919091526040015f2090613eb2565b5061222c61220560208601866147ff565b609a5f612211856134d5565b81526020019081526020015f20613ebd90919063ffffffff16565b5061223a60208501856147ff565b6001600160a01b03167fad34c3070be1dffbcaa499d000ba2b8d9848aefcac3059df245dd95c4ece14fe8260405161227291906152a2565b60405180910390a2604080518082019091525f8152602081016122b57f000000000000000000000000000000000000000000000000000000000000000043615622565b63ffffffff169052609e5f6122cd60208801886147ff565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6122f6846134d5565b81526020808201929092526040015f2082518154939092015163ffffffff166101000264ffffffff00199215159290921664ffffffffff199093169290921717905550600101612072565b5061235561038360408401602085016147ff565b6001600160a01b0316639d8e0c2361237060208501856147ff565b61237d6040860186615244565b6040518463ffffffff1660e01b815260040161239b93929190615677565b5f604051808303815f87803b1580156123b2575f5ffd5b505af19250505080156123c3575060015b1561084e575050565b606061099a609a5f611919856134d5565b6123e5613ed1565b611e7c5f613f2b565b6001600160a01b0381165f908152609c6020526040812060609190612412906136e1565b90505f816001600160401b0381111561242d5761242d614692565b60405190808252806020026020018201604052801561247157816020015b604080518082019091525f808252602082015281526020019060019003908161244b5790505b5090505f5b82811015610961576001600160a01b0385165f908152609c602052604090206124a39061090790836136ea565b8282815181106124b5576124b5615212565b6020908102919091010152600101612476565b60605f84516001600160401b038111156124e4576124e4614692565b60405190808252806020026020018201604052801561252d57816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816125025790505b5090505f5b85518110156125845761255f86828151811061255057612550615212565b60200260200101518686610742565b82828151811061257157612571615212565b6020908102919091010152600101612532565b50949350505050565b60605f83516001600160401b038111156125a9576125a9614692565b6040519080825280602002602001820160405280156125d2578160200160208202803683370190505b5090505f5b8451811015612584576001600160a01b0386165f90815260a16020526040812086516126479287929189908690811061261257612612615212565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20613f7c90919063ffffffff16565b82828151811061265957612659615212565b6001600160401b03909216602092830291909101909101526001016125d7565b6066545f906001908116036126a15760405163840a48d560e01b815260040160405180910390fd5b6126aa8361370c565b6126c7576040516348f5c3ed60e01b815260040160405180910390fd5b5f5f5f6126d38661309f565b91509150816126f55760405163fa55fc8160e01b815260040160405180910390fd5b91505f90505b8351811015610c915783818151811061271657612716615212565b6020026020010151604001515184828151811061273557612735615212565b6020026020010151602001515114612760576040516343714afd60e01b815260040160405180910390fd5b5f84828151811061277357612773615212565b602090810291909101810151518082015181516001600160a01b03165f908152609890935260409092209092506127b39163ffffffff908116906136f516565b6127d057604051631fb1705560e21b815260040160405180910390fd5b5f6127db8783613824565b90505f5b8684815181106127f1576127f1615212565b60200260200101516020015151811015612b2a575f87858151811061281857612818615212565b602002602001015160200151828151811061283557612835615212565b6020026020010151905061284c898261ffff613b9e565b5f5f61285b8b61076b886134d5565b915091508060200151600f0b5f1461288657604051630d8fcbe360e41b815260040160405180910390fd5b5f61289387858489613f90565b90506128d8825f01518c8a815181106128ae576128ae615212565b60200260200101516040015187815181106128cb576128cb615212565b6020026020010151613fc6565b600f0b602083018190525f0361290157604051634606179360e11b815260040160405180910390fd5b5f8260200151600f0b1215612a3a5780156129bc57612982612922886134d5565b6001600160a01b03808f165f90815260a360209081526040808320938a16835292905220908154600160801b90819004600f0b5f818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b6129ac7f000000000000000000000000000000000000000000000000000000000000000043615622565b63ffffffff166040830152612aa7565b6129ce836020015183602001516137e8565b6001600160401b031660208401528a518b90899081106129f0576129f0615212565b6020026020010151604001518581518110612a0d57612a0d615212565b6020908102919091018101516001600160401b031683525f9083015263ffffffff43166040830152612aa7565b5f8260200151600f0b1315612aa757612a5b836020015183602001516137e8565b6001600160401b039081166020850181905284519091161015612a9157604051636c9be0bf60e01b815260040160405180910390fd5b612a9b8943615622565b63ffffffff1660408301525b612abc8c612ab4896134d5565b8686866138d0565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd8c612aea6109078a6134d5565b86612afc865f015187602001516137e8565b8660400151604051612b1295949392919061549d565b60405180910390a15050600190920191506127df9050565b5050506001016126fb565b6001600160a01b038083165f90815260a1602090815260408083209385168352929052908120610776906137d5565b82612b6e8161370c565b612b8b5760405163932d94f760e01b815260040160405180910390fd5b836001600160a01b03167fa89c1dc243d8908a96dd84944bcc97d6bc6ac00dd78e20621576be6a3c9437138484604051612bc692919061569b565b60405180910390a250505050565b606654600290600490811603612bfd5760405163840a48d560e01b815260040160405180910390fd5b82612c078161370c565b612c245760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015612c88573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612cac91906151f3565b612cc95760405163ccea9e6f60e01b815260040160405180910390fd5b5f5b612cd86020850185615244565b9050811015612ea057604080518082019091525f9080612cfb60208801886147ff565b6001600160a01b03168152602001868060200190612d199190615244565b85818110612d2957612d29615212565b9050602002016020810190612d3e9190615289565b63ffffffff90811690915260208083015183516001600160a01b03165f90815260989092526040909120929350612d7a9291908116906136f516565b612d9757604051631fb1705560e21b815260040160405180910390fd5b612da18682613824565b15612dbf57604051636c6c6e2760e11b815260040160405180910390fd5b612de8612dcb826134d5565b6001600160a01b0388165f908152609c60205260409020906137b6565b50612e1486609a5f612df9856134d5565b81526020019081526020015f206137c190919063ffffffff16565b50856001600160a01b03167f43232edf9071753d2321e5fa7e018363ee248e5f2142e6c08edd3265bfb4895e82604051612e4e91906152a2565b60405180910390a26001600160a01b0386165f908152609e60205260408120600191612e79846134d5565b815260208101919091526040015f20805460ff191691151591909117905550600101612ccb565b50612eb161038360208501856147ff565b6001600160a01b031663adcf73f785612ecd6020870187615244565b612eda60408901896154ee565b6040518663ffffffff1660e01b8152600401612efa9594939291906156ae565b5f604051808303815f87803b158015612f11575f5ffd5b505af1158015611c18573d5f5f3e3d5ffd5b5f61099a609a5f612f33856134d5565b81526020019081526020015f206136e1565b83612f4f8161370c565b612f6c5760405163932d94f760e01b815260040160405180910390fd5b6040805180820182526001600160a01b03871680825263ffffffff80881660208085018290525f93845260989052939091209192612fab92916136f516565b612fc857604051631fb1705560e21b815260040160405180910390fd5b5f612fd2826134d5565b90505f5b84811015611c185761301b868683818110612ff357612ff3615212565b905060200201602081019061300891906147ff565b5f84815260996020526040902090613ebd565b613038576040516331bc342760e11b815260040160405180910390fd5b7f7b4b073d80dcac55a11177d8459ad9f664ceeb91f71f27167bb14f8152a7eeee8387878481811061306c5761306c615212565b905060200201602081019061308191906147ff565b60405161308f9291906152b0565b60405180910390a1600101612fd6565b6001600160a01b0381165f908152609b602090815260408083208151608081018352905463ffffffff80821680845260ff600160201b8404161515958401869052650100000000008304821694840194909452600160481b9091041660608201819052849391929190158015906131205750826060015163ffffffff164310155b1561312f575050604081015160015b9590945092505050565b6001600160a01b0381165f90815260986020526040812061099a906136e1565b6001600160a01b0382165f908152609f60205260408120606091906131829082611919866134d5565b949350505050565b5f54610100900460ff16158080156131a857505f54600160ff909116105b806131c15750303b1580156131c157505f5460ff166001145b6132295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff19166001179055801561324a575f805461ff0019166101001790555b613253826136a4565b61325c83613f2b565b80156132a2575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b816132b18161370c565b6132ce5760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b038381165f90815260976020526040902080546001600160a01b0319169184169190911790557f2ae945c40c44dc0ec263f95609c3fdc6952e0aefa22d6374e44f2c997acedf858361332681610f85565b604080516001600160a01b03938416815292909116602083015201613299565b61334e613ed1565b6001600160a01b0381166133b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401613220565b6133bc81613f2b565b50565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561341b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061343f91906156f1565b6001600160a01b0316336001600160a01b0316146134705760405163794821ff60e01b815260040160405180910390fd5b606654801982198116146134975760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b5f815f0151826020015163ffffffff1660405160200161352092919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b60405160208183030381529060405261099a9061570c565b6040805180820182525f80825260208083018290528351606081018552828152808201839052808501839052845180860186526001600160a01b03898116855260a1845286852090881685529092529382209293928190613598906137d5565b6001600160401b0390811682526001600160a01b038981165f81815260a260209081526040808320948c168084529482528083205486169682019690965291815260a082528481208b8252825284812092815291815290839020835160608101855290549283168152600160401b8304600f0b91810191909152600160c01b90910463ffffffff1691810182905291925043101561363a57909250905061369c565b61364b815f015182602001516137e8565b6001600160401b0316815260208101515f600f9190910b12156136895761367a826020015182602001516137e8565b6001600160401b031660208301525b5f60408201819052602082015290925090505b935093915050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b5f61099a825490565b5f6107768383613fdd565b5f8181526001830160205260408120541515610776565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af1158015613792573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099a91906151f3565b5f6107768383614003565b5f610776836001600160a01b038416614003565b5f61099a82670de0b6b3a764000061404f565b5f610776826001600160401b038516615470565b5f61077683670de0b6b3a764000084614093565b5f6107768383670de0b6b3a7640000614093565b6001600160a01b0382165f908152609e60205260408120819081613847856134d5565b815260208082019290925260409081015f2081518083019092525460ff8116151580835261010090910463ffffffff169282019290925291508061318257506020015163ffffffff1643109392505050565b6001600160a01b0381165f9081526001830160205260408120541515610776565b5f6107768383670de0b6b3a76400006001614178565b6020808301516001600160a01b038088165f90815260a284526040808220928816825291909352909120546001600160401b0390811691161461399657602082810180516001600160a01b038881165f81815260a286526040808220938a1680835293875290819020805467ffffffffffffffff19166001600160401b0395861617905593518451918252948101919091529216908201527facf9095feb3a370c9cf692421c69ef320d4db5c66e6a7d29c7694eb02364fc559060600160405180910390a15b6001600160a01b038086165f90815260a060209081526040808320888452825280832093871683529281529082902083518154928501519385015163ffffffff16600160c01b0263ffffffff60c01b196001600160801b038616600160401b026001600160c01b03199095166001600160401b03909316929092179390931716919091179055600f0b15613a78576001600160a01b0385165f908152609f602090815260408083208784529091529020613a5090846137c1565b506001600160a01b0385165f908152609d60205260409020613a7290856137b6565b50610c91565b80516001600160401b03165f03610c91576001600160a01b0385165f908152609f602090815260408083208784529091529020613ab59084613ebd565b506001600160a01b0385165f908152609f602090815260408083208784529091529020613ae1906136e1565b5f03610c91576001600160a01b0385165f908152609d60205260409020613b089085613eb2565b505050505050565b6001600160a01b038084165f90815260a160209081526040808320938616835292905220613b3f9043836141d1565b604080516001600160a01b038086168252841660208201526001600160401b038316918101919091527f1c6458079a41077d003c11faf9bf097e693bd67979e4e6500bac7b29db779b5c90606001613299565b60605f610776836141e5565b6001600160a01b038381165f90815260a360209081526040808320938616835292905290812054600f81810b600160801b909204900b035b5f81118015613be857508261ffff1682105b15610c91576001600160a01b038086165f90815260a3602090815260408083209388168352929052908120613c1c9061423e565b90505f5f613c2b888489613538565b91509150806040015163ffffffff16431015613c4957505050610c91565b613c5688848985856138d0565b6001600160a01b038089165f90815260a360209081526040808320938b16835292905220613c8390614290565b50613c8d8561572f565b9450613c9884615747565b9350505050613bd6565b6001600160a01b0382165f908152609b60209081526040918290208251608081018452905463ffffffff808216835260ff600160201b830416151593830193909352650100000000008104831693820193909352600160481b909204166060820181905215801590613d1e5750806060015163ffffffff164310155b15613d3857604081015163ffffffff168152600160208201525b63ffffffff82166040820152613d6e7f000000000000000000000000000000000000000000000000000000000000000043615622565b63ffffffff90811660608381019182526001600160a01b0386165f818152609b602090815260409182902087518154838a0151858b01519851928a1664ffffffffff1990921691909117600160201b91151591909102176cffffffffffffffff0000000000191665010000000000978916979097026cffffffff000000000000000000191696909617600160481b968816968702179055815192835294871694820194909452928301919091527f4e85751d6331506c6c62335f207eb31f12a61e570f34f5c17640308785c6d4db9101613299565b5f5f613e65613e518461430d565b8554613e609190600f0b61575c565b61437a565b8454909150600160801b9004600f90810b9082900b12613e9857604051632d0483c560e21b815260040160405180910390fd5b600f0b5f9081526001939093016020525050604090205490565b5f61077683836143e3565b5f610776836001600160a01b0384166143e3565b6033546001600160a01b03163314611e7c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401613220565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107768383670de0b6b3a76400006144c6565b5f613fa18460995f611291896134d5565b8015613faa5750815b8015611ff357505090516001600160401b031615159392505050565b5f6107766001600160401b03808516908416615783565b5f825f018281548110613ff257613ff2615212565b905f5260205f200154905092915050565b5f81815260018301602052604081205461404857508154600181810184555f84815260208082209093018490558454848252828601909352604090209190915561099a565b505f61099a565b81545f90801561408b576140758461406860018461541a565b5f91825260209091200190565b54600160201b90046001600160e01b0316613182565b509092915050565b5f80805f19858709858702925082811083820303915050805f036140ca578382816140c0576140c06157b0565b0492505050610776565b8084116141115760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401613220565b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b5f5f614185868686614093565b9050600183600281111561419b5761419b6157c4565b1480156141b757505f84806141b2576141b26157b0565b868809115b15611ff3576141c760018261560f565b9695505050505050565b6132a283836001600160401b03841661450e565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561423257602002820191905f5260205f20905b81548152602001906001019080831161421e575b50505050509050919050565b5f6142588254600f81810b600160801b909204900b131590565b1561427657604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f9081526001909101602052604090205490565b5f6142aa8254600f81810b600160801b909204900b131590565b156142c857604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b5f6001600160ff1b038211156143765760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401613220565b5090565b80600f81900b81146143de5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401613220565b919050565b5f81815260018301602052604081205480156144bd575f61440560018361541a565b85549091505f906144189060019061541a565b9050818114614477575f865f01828154811061443657614436615212565b905f5260205f200154905080875f01848154811061445657614456615212565b5f918252602080832090910192909255918252600188019052604090208390555b8554869080614488576144886157d8565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f90556001935050505061099a565b5f91505061099a565b82545f90816144d786868385614611565b90508015614504576144ee8661406860018461541a565b54600160201b90046001600160e01b0316610771565b5091949350505050565b825480156145c4575f6145268561406860018561541a565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090851610156145785760405163151b8e3f60e11b815260040160405180910390fd5b805163ffffffff8086169116036145c257826145998661406860018661541a565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790555050505050565b505b506040805180820190915263ffffffff92831681526001600160e01b03918216602080830191825285546001810187555f968752952091519051909216600160201b029190921617910155565b5f5b81831015610961575f6146268484614664565b5f8781526020902090915063ffffffff86169082015463ffffffff1611156146505780925061465e565b61465b81600161560f565b93505b50614613565b5f61467260028484186157ec565b6107769084841661560f565b6001600160a01b03811681146133bc575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b03811182821017156146c8576146c8614692565b60405290565b604051601f8201601f191681016001600160401b03811182821017156146f6576146f6614692565b604052919050565b803563ffffffff811681146143de575f5ffd5b5f60408284031215614721575f5ffd5b604080519081016001600160401b038111828210171561474357614743614692565b60405290508082356147548161467e565b8152614762602084016146fe565b60208201525092915050565b5f5f5f60808486031215614780575f5ffd5b833561478b8161467e565b925061479a8560208601614711565b915060608401356147aa8161467e565b809150509250925092565b81516001600160401b03168152602080830151600f0b9082015260408083015163ffffffff16908201526060810161099a565b5f602082840312156147f8575f5ffd5b5035919050565b5f6020828403121561480f575f5ffd5b81356107768161467e565b80516001600160a01b0316825260209081015163ffffffff16910152565b5f8151808452602084019350602083015f5b828110156148735761485d86835161481a565b604095909501946020919091019060010161484a565b5093949350505050565b602081525f6107766020830184614838565b5f6040828403121561489f575f5ffd5b6107768383614711565b5f5f83601f8401126148b9575f5ffd5b5081356001600160401b038111156148cf575f5ffd5b6020830191508360208260051b8501011115611900575f5ffd5b5f5f5f604084860312156148fb575f5ffd5b83356149068161467e565b925060208401356001600160401b03811115614920575f5ffd5b61492c868287016148a9565b9497909650939450505050565b5f6001600160401b0382111561495157614951614692565b5060051b60200190565b5f82601f83011261496a575f5ffd5b813561497d61497882614939565b6146ce565b8082825260208201915060208360051b86010192508583111561499e575f5ffd5b602085015b838110156149c45780356149b68161467e565b8352602092830192016149a3565b5095945050505050565b5f5f5f5f60a085870312156149e1575f5ffd5b6149eb8686614711565b935060408501356001600160401b03811115614a05575f5ffd5b614a118782880161495b565b93505060608501356001600160401b03811115614a2c575f5ffd5b614a388782880161495b565b925050614a47608086016146fe565b905092959194509250565b5f8151808452602084019350602083015f5b82811015614873578151865260209586019590910190600101614a64565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015614ad957603f19878603018452614ac4858351614a52565b94506020938401939190910190600101614aa8565b50929695505050505050565b5f5f60408385031215614af6575f5ffd5b8235614b018161467e565b915060208301356001600160401b03811115614b1b575f5ffd5b830160a08186031215614b2c575f5ffd5b809150509250929050565b5f5f60408385031215614b48575f5ffd5b8235614b538161467e565b91506020830135614b2c8161467e565b5f8151808452602084019350602083015f5b8281101561487357614bae86835180516001600160401b03168252602080820151600f0b9083015260409081015163ffffffff16910152565b6060959095019460209190910190600101614b75565b604081525f614bd66040830185614838565b8281036020840152611ff38185614b63565b5f8151808452602084019350602083015f5b828110156148735781516001600160a01b0316865260209586019590910190600101614bfa565b602081525f6107766020830184614be8565b5f5f60408385031215614c44575f5ffd5b82356001600160401b03811115614c59575f5ffd5b614c658582860161495b565b9250506020830135614b2c8161467e565b602080825282518282018190525f918401906040840190835b81811015614cb65783516001600160401b0316835260209384019390920191600101614c8f565b509095945050505050565b5f5f5f5f5f60608688031215614cd5575f5ffd5b8535614ce08161467e565b945060208601356001600160401b03811115614cfa575f5ffd5b614d06888289016148a9565b90955093505060408601356001600160401b03811115614d24575f5ffd5b614d30888289016148a9565b969995985093965092949392505050565b5f5f5f5f60608587031215614d54575f5ffd5b8435614d5f8161467e565b9350614d6d602086016146fe565b925060408501356001600160401b03811115614d87575f5ffd5b614d93878288016148a9565b95989497509550505050565b5f5f60408385031215614db0575f5ffd5b8235614dbb8161467e565b915060208301356001600160401b03811115614dd5575f5ffd5b614de18582860161495b565b9150509250929050565b5f5f60408385031215614dfc575f5ffd5b8235614e078161467e565b9150614e15602084016146fe565b90509250929050565b5f60208284031215614e2e575f5ffd5b813560ff81168114610776575f5ffd5b5f5f60608385031215614e4f575f5ffd5b8235614e5a8161467e565b9150614e158460208501614711565b5f60608284031215614e79575f5ffd5b50919050565b5f60208284031215614e8f575f5ffd5b81356001600160401b03811115614ea4575f5ffd5b61318284828501614e69565b5f5f5f60808486031215614ec2575f5ffd5b83356001600160401b03811115614ed7575f5ffd5b614ee38682870161495b565b93505061479a8560208601614711565b602081525f6107766020830184614b63565b5f5f5f60608486031215614f17575f5ffd5b8335614f228161467e565b925060208401356001600160401b03811115614f3c575f5ffd5b614f488682870161495b565b925050614f57604085016146fe565b90509250925092565b5f5f60408385031215614f71575f5ffd5b8235614f7c8161467e565b915060208301356001600160401b03811115614f96575f5ffd5b8301601f81018513614fa6575f5ffd5b8035614fb461497882614939565b8082825260208201915060208360051b850101925087831115614fd5575f5ffd5b602084015b838110156150fa5780356001600160401b03811115614ff7575f5ffd5b85016080818b03601f1901121561500c575f5ffd5b6150146146a6565b6150218b60208401614711565b815260608201356001600160401b0381111561503b575f5ffd5b61504a8c60208386010161495b565b60208301525060808201356001600160401b03811115615068575f5ffd5b6020818401019250508a601f83011261507f575f5ffd5b813561508d61497882614939565b8082825260208201915060208360051b86010192508d8311156150ae575f5ffd5b6020850194505b828510156150e45784356001600160401b03811681146150d3575f5ffd5b8252602094850194909101906150b5565b6040840152505084525060209283019201614fda565b50809450505050509250929050565b5f5f5f6040848603121561511b575f5ffd5b83356151268161467e565b925060208401356001600160401b03811115615140575f5ffd5b8401601f81018613615150575f5ffd5b80356001600160401b03811115615165575f5ffd5b866020828401011115615176575f5ffd5b939660209190910195509293505050565b5f5f60408385031215615198575f5ffd5b82356151a38161467e565b915060208301356001600160401b038111156151bd575f5ffd5b614de185828601614e69565b5f5f604083850312156151da575f5ffd5b82356151e58161467e565b946020939093013593505050565b5f60208284031215615203575f5ffd5b81518015158114610776575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b5f8235603e1983360301811261523a575f5ffd5b9190910192915050565b5f5f8335601e19843603018112615259575f5ffd5b8301803591506001600160401b03821115615272575f5ffd5b6020019150600581901b3603821315611900575f5ffd5b5f60208284031215615299575f5ffd5b610776826146fe565b6040810161099a828461481a565b606081016152be828561481a565b6001600160a01b039290921660409190910152919050565b604081525f6152e86040830185614be8565b8281036020840152611ff38185614be8565b5f6020828403121561530a575f5ffd5b81516001600160401b0381111561531f575f5ffd5b8201601f8101841361532f575f5ffd5b805161533d61497882614939565b8082825260208201915060208360051b85010192508683111561535e575f5ffd5b602084015b838110156153fb5780516001600160401b03811115615380575f5ffd5b8501603f81018913615390575f5ffd5b60208101516153a161497882614939565b808282526020820191506020808460051b8601010192508b8311156153c4575f5ffd5b6040840193505b828410156153e65783518252602093840193909101906153cb565b86525050602093840193919091019050615363565b509695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561099a5761099a615406565b6001600160401b03828116828216039081111561099a5761099a615406565b5f81600f0b60016001607f1b0319810361546857615468615406565b5f0392915050565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561099a5761099a615406565b6001600160a01b038616815260c081016154ba602083018761481a565b6001600160a01b039490941660608201526001600160401b0392909216608083015263ffffffff1660a09091015292915050565b5f5f8335601e19843603018112615503575f5ffd5b8301803591506001600160401b0382111561551c575f5ffd5b602001915036819003821315611900575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b03881681525f60c08201615576602084018a61481a565b60c060608401528690528660e083015f5b888110156155b757823561559a8161467e565b6001600160a01b0316825260209283019290910190600101615587565b5083810360808501526155ca8188614a52565b91505082810360a08401526155e0818587615530565b9a9950505050505050505050565b5f602082840312156155fe575f5ffd5b813561ffff81168114610776575f5ffd5b8082018082111561099a5761099a615406565b63ffffffff818116838216019081111561099a5761099a615406565b8183526020830192505f815f5b848110156148735763ffffffff615661836146fe565b168652602095860195919091019060010161564b565b6001600160a01b03841681526040602082018190525f90611ff3908301848661563e565b602081525f613182602083018486615530565b6001600160a01b03861681526060602082018190525f906156d2908301868861563e565b82810360408401526156e5818587615530565b98975050505050505050565b5f60208284031215615701575f5ffd5b81516107768161467e565b80516020808301519190811015614e79575f1960209190910360031b1b16919050565b5f6001820161574057615740615406565b5060010190565b5f8161575557615755615406565b505f190190565b8082018281125f83128015821682158216171561577b5761577b615406565b505092915050565b600f82810b9082900b0360016001607f1b0319811260016001607f1b038213171561099a5761099a615406565b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b5f8261580657634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212202c0f483a478d14f76ed057d28cec9d6ef94a45015cd283d99238b804b9741b8264736f6c634300081b0033",
    "sourceMap": "504:36182:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27388:303;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3368:401:154;;;;;;:::i;:::-;;:::i;:::-;;26509:412:119;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;33446:177::-;;;;;;:::i;:::-;;:::i;:::-;;;4525:14:244;;4518:22;4500:41;;4488:2;4473:18;33446:177:119;4360:187:244;15724:983:119;;;;;;:::i;:::-;;:::i;1551:42:120:-;;;;;;;;5759:10:244;5747:23;;;5729:42;;5717:2;5702:18;1551:42:120;5585:192:244;34779:1905:119;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;34109:232::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8971:32:244;;;8953:51;;8941:2;8926:18;34109:232:119;8784:226:244;1882:4457:119;;;;;;:::i;:::-;;:::i;28225:690::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;34386:348::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;354:59:152:-;;;;;31298:364:119;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11303:469::-;;;;;;:::i;:::-;;:::i;16752:829::-;;;;;;:::i;:::-;;:::i;30863:390::-;;;;;;:::i;:::-;;:::i;14918:317::-;;;;;;:::i;:::-;;:::i;3805:85:154:-;;;:::i;4539:163::-;;;;;;:::i;:::-;4671:7;;4642:1;:10;;;;;;;;4671:14;;;4670:24;;4539:163;4416:87;4489:7;;4416:87;;;16182:25:244;;;16170:2;16155:18;4416:87:154;16036:177:244;33212:189:119;;;;;;:::i;:::-;;:::i;28960:1648::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;16756:31:244;;;16738:50;;16726:2;16711:18;28960:1648:119;16594:200:244;13208:1665:119;;;;;;:::i;:::-;;:::i;33668:178::-;;;;;;:::i;:::-;;:::i;2064:101:24:-;;;:::i;32754:413:119:-;;;;;;:::i;:::-;;:::i;1673:54:120:-;;;;;1964:47:154;;;;;27736:444:119;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1441:85:24:-;1513:6;;-1:-1:-1;;;;;1513:6:24;1441:85;;31707:462:119;;;;;;:::i;:::-;;:::i;6384:4874::-;;;;;;:::i;:::-;;:::i;30653:165::-;;;;;;:::i;:::-;;:::i;15519:160::-;;;;;;:::i;:::-;;:::i;4436:93:120:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4436:93:120;;;11817:1346:119;;;;;;:::i;:::-;;:::i;33891:173::-;;;;;;:::i;:::-;;:::i;17626:649::-;;;;;;:::i;:::-;;:::i;32214:495::-;;;;;;:::i;:::-;;:::i;:::-;;;;24117:14:244;;24110:22;24092:41;;24181:10;24169:23;;;24164:2;24149:18;;24142:51;24065:18;32214:495:119;23926:273:244;26325:139:119;;;;;;:::i;:::-;;:::i;26966:377::-;;;;;;:::i;:::-;;:::i;1649:188::-;;;;;;:::i;:::-;;:::i;15280:194::-;;;;;;:::i;:::-;;:::i;1296:46:120:-;;;;;2314:198:24;;;;;;:::i;:::-;;:::i;3926:454:154:-;;;;;;:::i;:::-;;:::i;27388:303:119:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;27596:60:119;27618:8;27628:17;:11;:15;:17::i;:::-;27647:8;27596:21;:60::i;:::-;27561:95;-1:-1:-1;;;27388:303:119;;;;;;:::o;3368:401:154:-;2398:35;;-1:-1:-1;;;2398:35:154;;2422:10;2398:35;;;8953:51:244;2398:14:154;-1:-1:-1;;;;;2398:23:154;;;;8926:18:244;;2398:35:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:154;;;;;;;;;;;;3482:7:::1;::::0;3631:37;;::::1;3630:62:::0;::::1;3622:97;;;;-1:-1:-1::0;;;3622:97:154::1;;;;;;;;;;;;3729:33;3746:15;3729:16;:33::i;:::-;3442:327;3368:401:::0;:::o;26509:412:119:-;-1:-1:-1;;;;;26639:23:119;;26622:14;26639:23;;;:13;:23;;;;;26590:20;;26622:14;26639:32;;:30;:32::i;:::-;26622:49;;26682:33;26736:6;-1:-1:-1;;;;;26718:25:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;26718:25:119;;;;;;;;;;;;;;;-1:-1:-1;26682:61:119;-1:-1:-1;26758:9:119;26753:132;26777:6;26773:1;:10;26753:132;;;-1:-1:-1;;;;;26844:23:119;;;;;;:13;:23;;;;;26822:52;;26844:29;;26871:1;26844:26;:29::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;452:137:149;;;;;;;;;516:2;499:19;;;452:137;;;;;;;;;;;308:288;26822:52:119;26804:12;26817:1;26804:15;;;;;;;;:::i;:::-;;;;;;;;;;:70;26785:3;;26753:132;;;-1:-1:-1;26902:12:119;26509:412;-1:-1:-1;;;26509:412:119:o;33446:177::-;33601:14;;;;;33575:15;;-1:-1:-1;;;;;33561:30:119;33538:4;33561:30;;;:13;:30;;;;;;:55;;;;;;;:39;:55;:::i;:::-;33554:62;33446:177;-1:-1:-1;;33446:177:119:o;15724:983::-;15822:3;713:22:152;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:152;;;;;;;;;;;;15842:9:119::1;15837:864;15857:17:::0;;::::1;15837:864;;;1206:2:120;15903:6:119::0;;15910:1;15903:9;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;:27;;:68;;15895:102;;;;-1:-1:-1::0;;;15895:102:119::1;;;;;;;;;;;;16012:30;16045:41;;;;;;;;16057:3;-1:-1:-1::0;;;;;16045:41:119::1;;;;;16062:6;;16069:1;16062:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;16045:41;;;;::::0;16012:74:::1;;16184:38;16207:11;:14;;;16184:38;;:13;:18;16198:3;-1:-1:-1::0;;;;;16184:18:119::1;-1:-1:-1::0;;;;;16184:18:119::1;;;;;;;;;;;;:22;;:38;;;;:::i;:::-;16176:69;;;;-1:-1:-1::0;;;16176:69:119::1;;;;;;;;;;;;16264:52;16283:32;;;;;;;;16295:3;-1:-1:-1::0;;;;;16283:32:119::1;;;;;16300:11;:14;;;16283:32;;;;::::0;16264:52:::1;;;;;;:::i;:::-;;;;;;;;16381:22;16406:17;:11;:15;:17::i;:::-;16381:42:::0;-1:-1:-1;16442:9:119::1;16437:254;16461:6;;16468:1;16461:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;:27;;16457:1;:31;16437:254;;;16513:76;16564:6;;16571:1;16564:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;16585:1;16564:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;16513:38;::::0;;;:22:::1;:38;::::0;;;;;:42:::1;:76::i;:::-;;16612:64;16639:11;16652:6;;16659:1;16652:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;16673:1;16652:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;16612:64;;;;;;;:::i;:::-;;;;;;;;16490:3;;16437:254;;;-1:-1:-1::0;;;15876:3:119::1;;15837:864;;;;15724:983:::0;;;;:::o;34779:1905::-;34985:33;35063:9;:16;-1:-1:-1;;;;;35047:33:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35030:50;;35090:33;35126:10;-1:-1:-1;;;;;35126:29:119;;35156:9;35167:10;35126:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;35126:52:119;;;;;;;;;;;;:::i;:::-;35090:88;-1:-1:-1;35194:9:119;35189:1489;35213:9;:16;35209:1;:20;35189:1489;;;35250:16;35269:9;35279:1;35269:12;;;;;;;;:::i;:::-;;;;;;;35250:31;;35329:10;:17;-1:-1:-1;;;;;35315:32:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35315:32:119;;35295:14;35310:1;35295:17;;;;;;;;:::i;:::-;;;;;;;;;;:52;35367:9;35362:1306;35386:10;:17;35382:1;:21;35362:1306;;;35428:18;35449:10;35460:1;35449:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;35723:30:119;;;35701:19;35723:30;;;:20;:30;;;;;;:40;;;;;;;;;;;35449:13;;-1:-1:-1;35723:49:119;;:47;:49::i;:::-;35701:71;;35794:12;-1:-1:-1;;;;;35794:17:119;35810:1;35794:17;35790:72;;35835:8;;;;35790:72;35880:23;35906:46;35920:8;35930:11;35943:8;35906:13;:46::i;:::-;35880:72;;36307:11;36286:32;;:5;:17;;;:32;;;;:57;;;;;36342:1;36322:5;:17;;;:21;;;36286:57;36282:182;;;36392:53;36403:5;:22;;;36427:5;:17;;;36392:10;:53::i;:::-;-1:-1:-1;;;;;36367:78:119;;;36282:182;36520:22;;36482:27;;36512:52;;-1:-1:-1;;;;;36512:31:119;;;;:52;;:38;:52::i;:::-;36482:82;;36605:48;36633:19;36605:14;36620:1;36605:17;;;;;;;;:::i;:::-;;;;;;;36623:1;36605:20;;;;;;;;:::i;:::-;;;;;;;:27;;:48;;;;:::i;:::-;36582:14;36597:1;36582:17;;;;;;;;:::i;:::-;;;;;;;36600:1;36582:20;;;;;;;;:::i;:::-;;;;;;:71;;;;;35410:1258;;;;35362:1306;35405:3;;35362:1306;;;-1:-1:-1;;35231:3:119;;35189:1489;;;;35020:1664;34779:1905;;;;;;:::o;34109:232::-;-1:-1:-1;;;;;34233:18:119;;;34182:13;34233:18;;;:13;:18;;;;;;34182:13;;34233:18;34269:32;;:65;;34325:9;34269:65;;;-1:-1:-1;34318:3:119;;34262:72;-1:-1:-1;34109:232:119:o;1882:4457::-;4671:7:154;;784:1:120;;4642:10:154;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:154;;;;;;;;;;;;2038:3:119::1;713:22:152;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:152::1;;;;;;;;;;;;2136:30:119::2;2169:38;;;;;;;;2181:3;-1:-1:-1::0;;;;;2169:38:119::2;;;;;2186:6;:20;;;;;;;;;;:::i;:::-;2169:38;;::::0;;2136:71;-1:-1:-1;2217:24:119::2;2244:50;2265:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;2282:11;2244:20;:50::i;:::-;2352:14;::::0;;::::2;::::0;2326:15;;-1:-1:-1;;;;;2312:30:119::2;;::::0;;;:13:::2;:30:::0;;;;;;;2217:77;;-1:-1:-1;2312:55:119::2;::::0;:30;:55:::2;::::0;;::::2;::::0;:39:::2;:55;:::i;:::-;2304:86;;;;-1:-1:-1::0;;;2304:86:119::2;;;;;;;;;;;;2408:19;2400:52;;;;-1:-1:-1::0;;;2400:52:119::2;;;;;;;;;;;;2463:27;2507:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;-1:-1:-1::0;;;;;2493:39:119::2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2493:39:119::2;-1:-1:-1::0;2463:69:119;-1:-1:-1;2628:9:119::2;2623:3598;2647:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;2643:1;:28;2623:3598;;;2779:6:::0;;;:93:::2;;-1:-1:-1::0;2846:17:119::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;2864:5;2868:1;2864::::0;:5:::2;:::i;:::-;2846:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2789:83:119::2;2805:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;2823:1;2805:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2789:83:119::2;;2779:93;2754:184;;;;-1:-1:-1::0;;;2754:184:119::2;;;;;;;;;;;;3032:18;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;3051:1;3032:21;;;;;;;:::i;:::-;;;;;;;3028:1;:25;:57;;;;-1:-1:-1::0;438:4:150::2;3057:18:119;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;3076:1;3057:21;;;;;;;:::i;:::-;;;;;;;:28;;3028:57;3020:87;;;;-1:-1:-1::0;;;3020:87:119::2;;;;;;;;;;;;3212:81;3271:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;3289:1;3271:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3212:22;:41;3235:17;:11;:15;:17::i;:::-;3212:41;;;;;;;;;;;:50;;:81;;;;:::i;:::-;3187:164;;;;-1:-1:-1::0;;;3187:164:119::2;;;;;;;;;;;;3454:24;::::0;3528:79:::2;3550:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;3567:17;:11;:15;:17::i;:::-;3586;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;3604:1;3586:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3528:21;:79::i;:::-;3914:27:::0;;3453:154;;-1:-1:-1;3453:154:119;-1:-1:-1;;;;;;3914:32:119::2;:27;:32:::0;3910:79:::2;;3966:8;;;;3910:79;4220:23;4253:73;4304:18;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;4323:1;4304:21;;;;;;;:::i;:::-;4261:27:::0;;-1:-1:-1;;;;;4253:36:119::2;::::0;4304:21:::2;::::0;;::::2;;;::::0;-1:-1:-1;4253:50:119::2;:73::i;:::-;4367:17:::0;;4220:107;;-1:-1:-1;4414:51:119::2;-1:-1:-1::0;;;;;4414:25:119;;::::2;::::0;:51;::::2;:32;:51::i;:::-;4398:10;4409:1;4398:13;;;;;;;;:::i;:::-;;;;;;:67;;;::::0;::::2;4511:16;4480:10;:27;;:47;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4480:47:119::2;::::0;;-1:-1:-1;4541:37:119;;4562:16;;4541:4;;:37:::2;::::0;4562:16;;4541:37:::2;:::i;:::-;-1:-1:-1::0;;;;;4541:37:119::2;::::0;;-1:-1:-1;4592:24:119::2;::::0;::::2;:44:::0;;4620:16;;4592:24;:44:::2;::::0;4620:16;;4592:44:::2;:::i;:::-;-1:-1:-1::0;;;;;4592:44:119::2;::::0;;-1:-1:-1;4851:22:119::2;::::0;::::2;::::0;4876:1:::2;4851:26;::::0;;;::::2;;4847:570;;;4897:21;4948:78;5004:18;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;5023:1;5004:21;;;;;;;:::i;:::-;;;;;;;4965:10;:22;;;4964:23;;;:::i;:::-;-1:-1:-1::0;;;;;4948:41:119::2;::::0;:55:::2;:78::i;:::-;4897:130;;5086:14;-1:-1:-1::0;;;;;5078:23:119::2;5045:10;:22;;:57;;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;5126:276:119::2;5165:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5202:11;5235:6;:17;;;;;;;;:::i;:::-;5253:1;5235:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5277:63;5288:10;:27;;;5317:10;:22;;;5277:10;:63::i;:::-;5362:10;:22;;;5126:276;;;;;;;;;;:::i;:::-;;;;;;;;4879:538;4847:570;5462:97;5484:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5501:17;:11;:15;:17::i;:::-;5520;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;5538:1;5520:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5542:4;5548:10;5462:21;:97::i;:::-;5635:150;5670:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5687:11:::0;5700:17:::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;5718:1;5700:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5722:27:::0;;5635:150:::2;::::0;::::2;::::0;;;;5722:27;5758:12:::2;::::0;5635:150:::2;:::i;:::-;;;;;;;;5800:77;5820:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5837:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;5855:1;5837:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5859:17:::0;;5800:19:::2;:77::i;:::-;-1:-1:-1::0;;;;;5970:10:119::2;:29;;6028:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;6071:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;6089:1;6071:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6178:17:::0;;5970:240:::2;::::0;::::2;::::0;;;-1:-1:-1;;;;;;5970:240:119;;;-1:-1:-1;;;;;32271:32:244;;;5970:240:119::2;::::0;::::2;32253:51:244::0;32340:32;;;;32320:18;;;32313:60;-1:-1:-1;;;;;32409:31:244;;;32389:18;;;32382:59;32477:31;32457:18;;;32450:59;32225:19;;5970:240:119::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2678:3543;;;;2623:3598;2673:3;;2623:3598;;;-1:-1:-1::0;6236:96:119::2;6252:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;6269:11:::0;6282:17:::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;6301:10:::0;6313:18:::2;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;6236:96;;;;;;;;;;;;:::i;:::-;;;;;;;;2043:4296;;;3111:1:154::1;1882:4457:119::0;;;:::o;28225:690::-;-1:-1:-1;;;;;28410:23:119;;28393:14;28410:23;;;:13;:23;;;;;28340:20;;;;28410:32;;:30;:32::i;:::-;28393:49;;28453:33;28507:6;-1:-1:-1;;;;;28489:25:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;28489:25:119;;;;;;;;;;;;;;;;28453:61;;28524:32;28576:6;-1:-1:-1;;;;;28559:24:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;28559:24:119;;-1:-1:-1;;28559:24:119;;;;;;;;;;;-1:-1:-1;28524:59:119;-1:-1:-1;28599:9:119;28594:269;28618:6;28614:1;:10;28594:269;;;-1:-1:-1;;;;;28700:23:119;;28645:30;28700:23;;;:13;:23;;;;;28678:52;;28700:29;;28727:1;28700:26;:29::i;28678:52::-;28645:85;;28763:11;28745:12;28758:1;28745:15;;;;;;;;:::i;:::-;;;;;;:29;;;;28806:46;28820:8;28830:11;28843:8;28806:13;:46::i;:::-;28788:12;28801:1;28788:15;;;;;;;;:::i;:::-;;;;;;;;;;:64;-1:-1:-1;28626:3:119;;28594:269;;;-1:-1:-1;28881:12:119;;-1:-1:-1;28895:12:119;-1:-1:-1;;28225:690:119;;;;;;:::o;34386:348::-;34491:18;34521:23;34547:50;:22;:41;34570:17;:11;:15;:17::i;:::-;34547:41;;;;;;;;;;;:48;:50::i;31298:364::-;31395:15;31422:29;31467:9;:16;-1:-1:-1;;;;;31454:30:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31454:30:119;-1:-1:-1;31422:62:119;-1:-1:-1;31500:9:119;31495:130;31519:9;:16;31515:1;:20;31495:130;;;31575:39;31591:9;31601:1;31591:12;;;;;;;;:::i;:::-;;;;;;;31605:8;31575:15;:39::i;:::-;31556:13;31570:1;31556:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31556:58:119;;;:16;;;;;;;;;;;:58;31537:3;;31495:130;;11303:469;4671:7:154;;629:1:120;;4642::154;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:154;;;;;;;;;;;;11518:38:119;;::::1;11510:75;;;;-1:-1:-1::0;;;11510:75:119::1;;;;;;;;;;;;11601:9;11596:170;11616:21:::0;;::::1;11596:170;;;11658:97;11693:8;11713:10;;11724:1;11713:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11740:10;;11751:1;11740:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11658:23;:97::i;:::-;11639:3;;11596:170;;;;11303:469:::0;;;;;;:::o;16752:829::-;16908:3;713:22:152;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:152;;;;;;;;;;;;16956:31:119::1;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;16956:31:119;::::1;::::0;;::::1;::::0;::::1;;::::0;::::1;::::0;16923:30:::1;17022:17;16956:31:::0;17022:15:::1;:17::i;:::-;17071:38;::::0;;;:22:::1;:38;::::0;;;;16997:42;;-1:-1:-1;1206:2:120::1;::::0;17121:10:119;;17071:47:::1;::::0;:45:::1;:47::i;:::-;:67;;;;:::i;:::-;:108;;17050:176;;;;-1:-1:-1::0;;;17050:176:119::1;;;;;;;;;;;;17273:14;::::0;;::::1;::::0;-1:-1:-1;;;;;17245:18:119;::::1;;::::0;;;:13:::1;:18:::0;;;;;;;:43:::1;::::0;::::1;::::0;;::::1;::::0;:27:::1;:43;:::i;:::-;17237:74;;;;-1:-1:-1::0;;;17237:74:119::1;;;;;;;;;;;;17327:9;17322:253;17342:21:::0;;::::1;17322:253;;;17392:66;17443:10;;17454:1;17443:13;;;;;;;:::i;17392:66::-;17384:107;;;;-1:-1:-1::0;;;17384:107:119::1;;;;;;;;;;;;17510:54;17537:11;17550:10;;17561:1;17550:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;17510:54;;;;;;;:::i;:::-;;;;;;;;17365:3;;17322:253;;;;16913:668;;16752:829:::0;;;;;:::o;30863:390::-;30983:15;31010:29;31055:10;:17;-1:-1:-1;;;;;31042:31:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31042:31:119;-1:-1:-1;31010:63:119;-1:-1:-1;31089:9:119;31084:132;31108:10;:17;31104:1;:21;31084:132;;;31165:40;31181:8;31191:10;31202:1;31191:13;;;;;;;;:::i;:::-;;;;;;;31165:15;:40::i;:::-;31146:13;31160:1;31146:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31146:59:119;;;:16;;;;;;;;;;;:59;31127:3;;31084:132;;14918:317;15001:10;-1:-1:-1;;;;;15023:10:119;15001:33;;14997:186;;15058:23;15072:8;15058:13;:23::i;:::-;15050:49;;;;-1:-1:-1;;;15050:49:119;;;;;;;;;;;;15121:31;;-1:-1:-1;;;15121:31:119;;-1:-1:-1;;;;;8971:32:244;;;15121:31:119;;;8953:51:244;15121:10:119;:21;;;;8926:18:244;;15121:31:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15113:59;;;;-1:-1:-1;;;15113:59:119;;;;;;;;;;;;15192:36;15212:8;15222:5;15192:19;:36::i;3805:85:154:-;2398:35;;-1:-1:-1;;;2398:35:154;;2422:10;2398:35;;;8953:51:244;2398:14:154;-1:-1:-1;;;;;2398:23:154;;;;8926:18:244;;2398:35:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:154;;;;;;;;;;;;3855:28:::1;-1:-1:-1::0;;3855:16:154::1;:28::i;:::-;3805:85::o:0;33212:189:119:-;33314:4;33337:57;33385:8;33337:19;:38;33357:17;:11;:15;:17::i;28960:1648::-;-1:-1:-1;;;;;29408:29:119;;;29054:6;29408:29;;;:19;:29;;;;;;;;:39;;;;;;;;;;;;;29475:27;;;:17;:27;;;;;:37;;;;;;;;;5684:12:85;-1:-1:-1;;;;;29408:39:119;;;;5684:12:85;;;;-1:-1:-1;;;5663:10:85;;;;;5656:41;29054:6:119;29531:836;29555:6;29551:1;:10;29531:836;;;-1:-1:-1;;;;;29607:27:119;;;29582:22;29607:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:43;;29648:1;29607:40;:43::i;:::-;-1:-1:-1;;;;;29695:21:119;;;29664:28;29695:21;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;29664:78;;;;;;;;;-1:-1:-1;;;;;29664:78:119;;;;-1:-1:-1;;;29664:78:119;;;;;;;;;;;-1:-1:-1;;;29664:78:119;;;;;;;;;;;29695:37;;-1:-1:-1;29929:12:119;:37;29925:81;;;29986:5;;;;29925:81;30298:58;30309:22;30333:10;:22;;;30298:10;:58::i;:::-;30273:83;;29568:799;;29563:3;;;;;29531:836;;;-1:-1:-1;;;;;;30527:30:119;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;30579:22;;30527:49;;:47;:49::i;:::-;:74;;;;:::i;:::-;30520:81;28960:1648;-1:-1:-1;;;;;28960:1648:119:o;13208:1665::-;4671:7:154;;966:1:120;;4642:10:154;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:154;;;;;;;;;;;;13477:30:119::1;13491:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;13477:13;:30::i;:::-;:59;;;-1:-1:-1::0;13511:25:119::1;13525:10;::::0;;;::::1;::::0;::::1;;:::i;13511:25::-;13469:85;;;;-1:-1:-1::0;;;13469:85:119::1;;;;;;;;;;;;13570:9;13565:1062;13589:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;:28;;13585:1;:32;13565:1062;;;13720:30;13753:49;;;;;;;;13765:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13753:49:119::1;::::0;;::::1;;13777:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;13799:1;13777:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13753:49;;;;::::0;13720:82:::1;;13824:50;13859:11;:14;;;13824:50;;:13;:25;13838:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13824:25:119::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;13824:25:119;;:34:::1;:50::i;:::-;13816:81;;;;-1:-1:-1::0;;;13816:81:119::1;;;;;;;;;;;;13919:18;:35;13938:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;13919:35:119::1;-1:-1:-1::0;;;;;13919:35:119::1;;;;;;;;;;;;:54;13955:17;:11;:15;:17::i;:::-;13919:54:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;13919:54:119;:65;::::1;;13911:92;;;;-1:-1:-1::0;;;13911:92:119::1;;;;;;;;;;;;14067:57;14106:17;:11;:15;:17::i;:::-;14067:14;:31;14082:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14067:31:119::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14067:31:119;;:38:::1;:57::i;:::-;-1:-1:-1::0;14138:62:119::1;14184:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;14138:19;:38;14158:17;:11;:15;:17::i;:::-;14138:38;;;;;;;;;;;:45;;:62;;;;:::i;:::-;-1:-1:-1::0;14250:15:119::1;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14219:60:119::1;;14267:11;14219:60;;;;;;:::i;:::-;;;;;;;;14472:144;::::0;;;;::::1;::::0;;;-1:-1:-1;14472:144:119;;::::1;::::0;::::1;14560:41;14583:18;14567:12;14560:41;:::i;:::-;14472:144;;::::0;;14415:18:::1;:35;14434:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14415:35:119::1;-1:-1:-1::0;;;;;14415:35:119::1;;;;;;;;;;;;:54;14451:17;:11;:15;:17::i;:::-;14415:54:::0;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;14415:54:119;:201;;;;;;;::::1;::::0;::::1;;;;-1:-1:-1::0;;14415:201:119;::::1;;::::0;;;;-1:-1:-1;;14415:201:119;;;;;;;::::1;::::0;;-1:-1:-1;14415:201:119;13619:3:::1;13565:1062;;;-1:-1:-1::0;14769:27:119::1;14785:10;::::0;;;::::1;::::0;::::1;;:::i;14769:27::-;-1:-1:-1::0;;;;;14769:46:119::1;;14816:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;14833:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;14769:86;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14765:102:::0;::::1;;13208:1665:::0;;:::o;33668:178::-;33757:16;33792:47;:19;:38;33812:17;:11;:15;:17::i;2064:101:24:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;32754:413:119:-:0;-1:-1:-1;;;;;32883:24:119;;32866:14;32883:24;;;:14;:24;;;;;32834:20;;32866:14;32883:33;;:31;:33::i;:::-;32866:50;;32926:33;32980:6;-1:-1:-1;;;;;32962:25:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;32962:25:119;;;;;;;;;;;;;;;-1:-1:-1;32926:61:119;-1:-1:-1;33003:9:119;32998:133;33022:6;33018:1;:10;32998:133;;;-1:-1:-1;;;;;33089:24:119;;;;;;:14;:24;;;;;33067:53;;33089:30;;33117:1;33089:27;:30::i;33067:53::-;33049:12;33062:1;33049:15;;;;;;;;:::i;:::-;;;;;;;;;;:71;33030:3;;32998:133;;27736:444;27893:19;27924:32;27976:9;:16;-1:-1:-1;;;;;27959:34:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;27959:34:119;;-1:-1:-1;;27959:34:119;;;;;;;;;;;-1:-1:-1;27924:69:119;-1:-1:-1;28009:9:119;28004:140;28028:9;:16;28024:1;:20;28004:140;;;28083:50;28097:9;28107:1;28097:12;;;;;;;;:::i;:::-;;;;;;;28111:11;28124:8;28083:13;:50::i;:::-;28065:12;28078:1;28065:15;;;;;;;;:::i;:::-;;;;;;;;;;:68;28046:3;;28004:140;;;-1:-1:-1;28161:12:119;27736:444;-1:-1:-1;;;;27736:444:119:o;31707:462::-;31862:15;31889:29;31934:10;:17;-1:-1:-1;;;;;31921:31:119;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31921:31:119;-1:-1:-1;31889:63:119;-1:-1:-1;31968:9:119;31963:169;31987:10;:17;31983:1;:21;31963:169;;;-1:-1:-1;;;;;32044:30:119;;;;;;:20;:30;;;;;32075:13;;32044:77;;32108:11;;32044:30;32075:10;;32086:1;;32075:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;32044:45:119;-1:-1:-1;;;;;32044:45:119;;;;;;;;;;;;:57;;:77;;;;:::i;:::-;32025:13;32039:1;32025:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32025:96:119;;;:16;;;;;;;;;;;:96;32006:3;;31963:169;;6384:4874;4671:7:154;;629:1:120;;4642::154;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:154;;;;;;;;;;;;6716:23:119::1;6730:8;6716:13;:23::i;:::-;6708:49;;;;-1:-1:-1::0;;;6708:49:119::1;;;;;;;;;;;;6849:30;6904:10;6916:12;6932:28;6951:8;6932:18;:28::i;:::-;6903:57;;;;6982:5;6974:46;;;;-1:-1:-1::0;;;6974:46:119::1;;;;;;;;;;;;7060:5:::0;-1:-1:-1;7091:9:119::1;::::0;-1:-1:-1;7086:4166:119::1;7110:6;:13;7106:1;:17;7086:4166;;;7183:6;7190:1;7183:9;;;;;;;;:::i;:::-;;;;;;;:23;;;:30;7152:6;7159:1;7152:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;:61;7144:98;;;;-1:-1:-1::0;;;7144:98:119::1;;;;;;;;;;;;7695:30;7728:6;7735:1;7728:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;:21;7811:14;;::::1;::::0;7785:15;;-1:-1:-1;;;;;7771:30:119::1;7728:21;7771:30:::0;;;:13:::1;:30:::0;;;;;;;7728:21;;-1:-1:-1;7771:55:119::1;::::0;::::1;::::0;;::::1;::::0;:39:::1;:55;:::i;:::-;7763:86;;;;-1:-1:-1::0;;;7763:86:119::1;;;;;;;;;;;;7864:24;7891:43;7912:8;7922:11;7891:20;:43::i;:::-;7864:70:::0;-1:-1:-1;7954:9:119::1;7949:3293;7973:6;7980:1;7973:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;7969:1;:31;7949:3293;;;8025:18;8046:6;8053:1;8046:9;;;;;;;;:::i;:::-;;;;;;;:20;;;8067:1;8046:23;;;;;;;;:::i;:::-;;;;;;;8025:44;;8364:61;8388:8;8398;8408:16;8364:23;:61::i;:::-;8445:24;8471:28;8523:60;8545:8;8555:17;:11;:15;:17::i;8523:60::-;8444:139;;;;8609:10;:22;;;:27;;8635:1;8609:27;8601:66;;;;-1:-1:-1::0;;;8601:66:119::1;;;;;;;;;;;;8820:16;8839:78;8862:11;8875:8;8885:10;8897:19;8839:22;:78::i;:::-;8820:97;;9017:67;9028:10;:27;;;9057:6;9064:1;9057:9;;;;;;;;:::i;:::-;;;;;;;:23;;;9081:1;9057:26;;;;;;;;:::i;:::-;;;;;;;9017:10;:67::i;:::-;8992:92;;:22;::::0;::::1;:92:::0;;;9136:1:::1;9110:27:::0;9102:53:::1;;;;-1:-1:-1::0;;;9102:53:119::1;;;;;;;;;;;;9256:1;9231:10;:22;;;:26;;;9227:1496;;;9285:11;9281:876;;;9519:65;9566:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;9519:27:119;;::::1;;::::0;;;:17:::1;:27;::::0;;;;;;;:37;;::::1;::::0;;;;;;;2195:10:85;;-1:-1:-1;;;2195:10:85;;;;;;2176:16;2215:22;;;:11;;;;:22;;;;;;:30;;;;2279:26;;-1:-1:-1;;;;;2279:26:85;;;2292:13;;;;2279:26;;;;;2096:226;9519:65:119::1;9636:41;9659:18;9643:12;9636:41;:::i;:::-;9611:66;;:22;::::0;::::1;:66:::0;9227:1496:::1;;9281:876;9868:60;9879:4;:24;;;9905:10;:22;;;9868:10;:60::i;:::-;-1:-1:-1::0;;;;;9841:87:119::1;:24;::::0;::::1;:87:::0;9985:9;;:6;;9992:1;;9985:9;::::1;;;;;:::i;:::-;;;;;;;:23;;;10009:1;9985:26;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;9955:56:119::1;::::0;;:27:::1;10037:22:::0;;::::1;:26:::0;10089:45:::1;10121:12;10089:45;:22;::::0;::::1;:45:::0;9227:1496:::1;;;10210:1;10185:10;:22;;;:26;;;10181:542;;;10449:60;10460:4;:24;;;10486:10;:22;;;10449:10;:60::i;:::-;-1:-1:-1::0;;;;;10422:87:119;;::::1;:24;::::0;::::1;:87:::0;;;10567:17;;10539:45;;::::1;-1:-1:-1::0;10539:45:119::1;10531:79;;;;-1:-1:-1::0;;;10531:79:119::1;;;;;;;;;;;;10658:46;10681:23:::0;10665:12:::1;10658:46;:::i;:::-;10633:71;;:22;::::0;::::1;:71:::0;10181:542:::1;10776:78;10798:8;10808:17;:11;:15;:17::i;:::-;10827:8;10837:4;10843:10;10776:21;:78::i;:::-;10941:286;10980:8;11010:40;11032:17;:11;:15;:17::i;11010:40::-;11072:8;11102:63;11113:10;:27;;;11142:10;:22;;;11102:10;:63::i;:::-;11187:10;:22;;;10941:286;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;8002:3:119::1;::::0;;::::1;::::0;-1:-1:-1;7949:3293:119::1;::::0;-1:-1:-1;7949:3293:119::1;;-1:-1:-1::0;;;7125:3:119::1;;7086:4166;;30653:165:::0;-1:-1:-1;;;;;30762:30:119;;;30737:6;30762:30;;;:20;:30;;;;;;;;:40;;;;;;;;;;;:49;;:47;:49::i;15519:160::-;15613:3;713:22:152;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:152;;;;;;;;;;;;15655:3:119::1;-1:-1:-1::0;;;;;15633:39:119::1;;15660:11;;15633:39;;;;;;;:::i;:::-;;;;;;;;15519:160:::0;;;;:::o;11817:1346::-;4671:7:154;;966:1:120;;4642:10:154;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:154;;;;;;;;;;;;12015:8:119::1;713:22:152;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:152::1;;;;;;;;;;;;12085:31:119::2;::::0;-1:-1:-1;;;12085:31:119;;-1:-1:-1;;;;;8971:32:244;;;12085:31:119::2;::::0;::::2;8953:51:244::0;12085:10:119::2;:21;::::0;::::2;::::0;8926:18:244;;12085:31:119::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12077:59;;;;-1:-1:-1::0;;;12077:59:119::2;;;;;;;;;;;;12152:9;12147:815;12171:21;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;:28;;12167:1;:32;12147:815;;;12349:49;::::0;;;;::::2;::::0;;;12316:30:::2;::::0;12349:49;12361:10:::2;;::::0;::::2;:6:::0;:10:::2;:::i;:::-;-1:-1:-1::0;;;;;12349:49:119::2;;;;;12373:6;:21;;;;;;;;:::i;:::-;12395:1;12373:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12349:49;::::0;;::::2;::::0;;;12460:14:::2;::::0;;::::2;::::0;12434:15;;-1:-1:-1;;;;;12420:30:119::2;;::::0;;;:13:::2;:30:::0;;;;;;;12316:82;;-1:-1:-1;12420:55:119::2;::::0;:30;:55;;::::2;::::0;:39:::2;:55;:::i;:::-;12412:86;;;;-1:-1:-1::0;;;12412:86:119::2;;;;;;;;;;;;12521:43;12542:8;12552:11;12521:20;:43::i;:::-;12520:44;12512:75;;;;-1:-1:-1::0;;;12512:75:119::2;;;;;;;;;;;;12646:47;12675:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;12646:24:119;::::2;;::::0;;;:14:::2;:24;::::0;;;;;:28:::2;:47::i;:::-;;12707:52;12750:8;12707:19;:38;12727:17;:11;:15;:17::i;:::-;12707:38;;;;;;;;;;;:42;;:52;;;;:::i;:::-;;12805:8;-1:-1:-1::0;;;;;12778:49:119::2;;12815:11;12778:49;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;12886:28:119;::::2;;::::0;;;:18:::2;:28;::::0;;;;12947:4:::2;::::0;12915:17:::2;:11:::0;:15:::2;:17::i;:::-;12886:47:::0;;::::2;::::0;::::2;::::0;;;;;;-1:-1:-1;12886:47:119;:65;;-1:-1:-1;;12886:65:119::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;;12201:3:119::2;12147:815;;;-1:-1:-1::0;13066:27:119::2;13082:10;;::::0;::::2;:6:::0;:10:::2;:::i;13066:27::-;-1:-1:-1::0;;;;;13066:44:119::2;;13111:8:::0;13121:21:::2;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;13144:11;;::::0;::::2;:6:::0;:11:::2;:::i;:::-;13066:90;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33891:173:::0;33984:7;34010:47;:19;:38;34030:17;:11;:15;:17::i;:::-;34010:38;;;;;;;;;;;:45;:47::i;17626:649::-;17787:3;713:22:152;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:152;;;;;;;;;;;;17835:31:119::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;17835:31:119;::::1;::::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;17802:30:::1;17884:18:::0;;;:13:::1;:18:::0;;;;;;17835:31;;17884:43:::1;::::0;:18;:27:::1;:43;:::i;:::-;17876:74;;;;-1:-1:-1::0;;;17876:74:119::1;;;;;;;;;;;;17961:22;17986:17;:11;:15;:17::i;:::-;17961:42:::0;-1:-1:-1;18018:9:119::1;18013:256;18033:21:::0;;::::1;18013:256;;;18083:69;18137:10;;18148:1;18137:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18083:38;::::0;;;:22:::1;:38;::::0;;;;;:45:::1;:69::i;:::-;18075:106;;;;-1:-1:-1::0;;;18075:106:119::1;;;;;;;;;;;;18200:58;18231:11;18244:10;;18255:1;18244:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18200:58;;;;;;;:::i;:::-;;;;;;;;18056:3;;18013:256;;32214:495:::0;-1:-1:-1;;;;;32353:30:119;;32295:4;32353:30;;;:20;:30;;;;;;;;32319:64;;;;;;;;;;;;;;;;;-1:-1:-1;;;32319:64:119;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;32319:64:119;;;;;;;;;;32295:4;;32319:64;;;;32536:21;;;;:57;;;32577:4;:16;;;32561:32;;:12;:32;;32536:57;32532:139;;;-1:-1:-1;;32617:17:119;;;;32656:4;32532:139;32689:5;32696;;-1:-1:-1;32214:495:119;-1:-1:-1;;;32214:495:119:o;26325:139::-;-1:-1:-1;;;;;26430:18:119;;26404:7;26430:18;;;:13;:18;;;;;:27;;:25;:27::i;26966:377::-;-1:-1:-1;;;;;27149:29:119;;27123:23;27149:29;;;:19;:29;;;;;27093:18;;27123:23;27149:57;;27123:23;27179:17;:11;:15;:17::i;27149:57::-;27123:83;26966:377;-1:-1:-1;;;;26966:377:119:o;1649:188::-;3279:19:30;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:30;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:30;1713:19:38;:23;;;3387:66:30;;-1:-1:-1;3436:12:30;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:30;;38210:2:244;3325:201:30;;;38192:21:244;38249:2;38229:18;;;38222:30;38288:34;38268:18;;;38261:62;-1:-1:-1;;;38339:18:244;;;38332:44;38393:19;;3325:201:30;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:30;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:30;;;;;3562:65;1751:37:119::1;1768:19;1751:16;:37::i;:::-;1798:32;1817:12;1798:18;:32::i;:::-;3651:14:30::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:30;;;3721:14;;-1:-1:-1;38575:36:244;;3721:14:30;;38563:2:244;38548:18;3721:14:30;;;;;;;;3647:99;3269:483;1649:188:119;;:::o;15280:194::-;15365:3;713:22:152;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:152;;;;;;;;;;;;-1:-1:-1;;;;;15380:18:119;;::::1;;::::0;;;:13:::1;:18;::::0;;;;:30;;-1:-1:-1;;;;;;15380:30:119::1;::::0;;::::1;::::0;;;::::1;::::0;;15425:42:::1;15380:18:::0;15446:20:::1;15380:18:::0;15446:15:::1;:20::i;:::-;15425:42;::::0;;-1:-1:-1;;;;;38837:32:244;;;38819:51;;38906:32;;;;38901:2;38886:18;;38879:60;38792:18;15425:42:119::1;38622:323:244::0;2314:198:24;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:24;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:24;;39152:2:244;2394:73:24::1;::::0;::::1;39134:21:244::0;39191:2;39171:18;;;39164:30;39230:34;39210:18;;;39203:62;-1:-1:-1;;;39281:18:244;;;39274:36;39327:19;;2394:73:24::1;38950:402:244::0;2394:73:24::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;3926:454:154:-;2620:14;-1:-1:-1;;;;;2620:23:154;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2606:39:154;:10;-1:-1:-1;;;;;2606:39:154;;2598:64;;;;-1:-1:-1;;;2598:64:154;;;;;;;;;;;;4044:7:::1;::::0;4238:20;::::1;4215:16:::0;::::1;4189:43:::0;::::1;4188:71;4180:106;;;;-1:-1:-1::0;;;4180:106:154::1;;;;;;;;;;;;4296:7;:25:::0;;;4336:37:::1;::::0;16182:25:244;;;4345:10:154::1;::::0;4336:37:::1;::::0;16170:2:244;16155:18;4336:37:154::1;;;;;;;4004:376;3926:454:::0;:::o;148:154:149:-;221:7;272:2;:6;;;287:2;:5;;;280:13;;255:39;;;;;;;;39788:2:244;39784:15;;;;-1:-1:-1;;39780:53:244;39768:66;;39890:3;39868:16;-1:-1:-1;;;;;;39864:59:244;39859:2;39850:12;;39843:81;39949:2;39940:12;;39613:345;255:39:149;;;;;;;;;;;;;247:48;;;:::i;22495:1185:119:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22718:175:119;;;;;;;-1:-1:-1;;;;;22759:30:119;;;;;:20;:30;;;;;:40;;;;;;;;;;;-1:-1:-1;;;22718:175:119;;22759:49;;:47;:49::i;:::-;-1:-1:-1;;;;;22718:175:119;;;;;-1:-1:-1;;;;;22843:29:119;;;;;;;:19;22718:175;22843:29;;;;;;;:39;;;;;;;;;;;;;;;22718:175;;;;;;;22935:21;;;:11;:21;;;;;:37;;;;;;;;:47;;;;;;;;;;22904:78;;;;;;;;;;;;;;-1:-1:-1;;;22904:78:119;;;;;;;;;;;-1:-1:-1;;;22904:78:119;;;;;;;;;;;22691:202;;-1:-1:-1;23067:12:119;:37;23063:93;;;23128:4;;-1:-1:-1;23134:10:119;-1:-1:-1;23120:25:119;;23063:93;23270:63;23281:10;:27;;;23310:10;:22;;;23270:10;:63::i;:::-;-1:-1:-1;;;;;23240:93:119;;;23425:22;;;;23240:27;23425:26;;;;;;23421:144;;;23494:60;23505:4;:24;;;23531:10;:22;;;23494:10;:60::i;:::-;-1:-1:-1;;;;;23467:87:119;:24;;;:87;23421:144;23600:1;23575:22;;;:26;;;23611:22;;;:26;23656:4;;-1:-1:-1;23575:10:119;-1:-1:-1;22495:1185:119;;;;;;;:::o;4806:157:154:-;4887:7;:22;;;4924:32;;16182:25:244;;;4931:10:154;;4924:32;;16170:2:244;16155:18;4924:32:154;;;;;;;4806:157;:::o;6639:115:86:-;6702:7;6728:19;6736:3;4545:18;;4463:107;7096:129;7170:7;7196:22;7200:3;7212:5;7196:3;:22::i;11306:144::-;11383:4;4351:19;;;:12;;;:19;;;;;;:24;;11406:37;4255:127;1080:175:152;1175:73;;-1:-1:-1;;;1175:73:152;;-1:-1:-1;;;;;40512:32:244;;;1175:73:152;;;40494:51:244;1213:10:152;40561:18:244;;;40554:60;1233:4:152;40630:18:244;;;40623:60;1152:4:152;1240:7;;-1:-1:-1;;;;;;1240:7:152;40699:18:244;;;40692:61;1152:4:152;1175:20;:28;;;;;;40466:19:244;;1175:73:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10793:129:86:-;10860:4;10883:32;10888:3;10908:5;10883:4;:32::i;8305:150::-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:86;;8398:4;:50::i;3045:154:151:-;3130:6;3162:29;3170:4;438::150;3162:7:151;:29::i;26069:134:119:-;26132:6;26172:22;26193:1;-1:-1:-1;;;;;26179:10:119;;26172:22;:::i;1613:110:150:-;1674:7;1700:16;:1;438:4;1714:1;1700:8;:16::i;1497:110::-;1558:7;1584:16;:1;1593;438:4;1584:8;:16::i;20902:283:119:-;-1:-1:-1;;;;;21056:28:119;;21005:4;21056:28;;;:18;:28;;;;;21005:4;;;21085:17;:11;:15;:17::i;:::-;21056:47;;;;;;;;;;;;;;-1:-1:-1;21056:47:119;21021:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21021:82:119;21121:57;;-1:-1:-1;21157:21:119;;;21142:36;;:12;:36;;21114:64;-1:-1:-1;;;20902:283:119:o;8860:165:86:-;-1:-1:-1;;;;;8993:23:86;;8940:4;4351:19;;;:12;;;:19;;;;;;:24;;8963:55;4255:127;2053:135:150;2121:7;2147:34;:1;2156;438:4;2164:16;2147:8;:34::i;23686:1893:119:-;24089:24;;;;;-1:-1:-1;;;;;24046:29:119;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;-1:-1:-1;;;;;24046:39:119;;;:67;;;24042:255;;24171:24;;;;;;-1:-1:-1;;;;;24129:29:119;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;:66;;-1:-1:-1;;24129:66:119;-1:-1:-1;;;;;24129:66:119;;;;;;24261:24;;24214:72;;40983:51:244;;;41050:18;;;41043:60;;;;41139:31;;41119:18;;;41112:59;24214:72:119;;40971:2:244;40956:18;24214:72:119;;;;;;;24042:255;-1:-1:-1;;;;;24622:21:119;;;;;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;:60;;;;;;;;;;;;;;-1:-1:-1;;;24622:60:119;-1:-1:-1;;;;;;;;;24622:60:119;;-1:-1:-1;;;24622:60:119;-1:-1:-1;;;;;;24622:60:119;;;-1:-1:-1;;;;;24622:60:119;;;;;;;;;;;;;;;;;;;;24804:27;24800:773;;-1:-1:-1;;;;;24991:29:119;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:68;;25049:8;24991:49;:68::i;:::-;-1:-1:-1;;;;;;25073:23:119;;;;;;:13;:23;;;;;:43;;25101:14;25073:27;:43::i;:::-;;24800:773;;;25137:27;;-1:-1:-1;;;;;25137:32:119;:27;:32;25133:440;;-1:-1:-1;;;;;25333:29:119;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:71;;25394:8;25333:52;:71::i;:::-;-1:-1:-1;;;;;;25423:29:119;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:54;;:52;:54::i;:::-;25481:1;25423:59;25419:144;;-1:-1:-1;;;;;25502:23:119;;;;;;:13;:23;;;;;:46;;25533:14;25502:30;:46::i;:::-;;23686:1893;;;;;:::o;25585:286::-;-1:-1:-1;;;;;25695:30:119;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;:98;;25754:12;25776:15;25695:45;:98::i;:::-;25808:56;;;-1:-1:-1;;;;;41001:32:244;;;40983:51;;41070:32;;41065:2;41050:18;;41043:60;-1:-1:-1;;;;;41139:31:244;;41119:18;;;41112:59;;;;25808:56:119;;40971:2:244;40956:18;25808:56:119;40764:413:244;10259:300:86;10322:16;10350:22;10375:19;10383:3;10375:7;:19::i;18662:1209:119:-;-1:-1:-1;;;;;18816:27:119;;;18771:18;18816:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;5684:12:85;;;;;-1:-1:-1;;;5663:10:85;;;;;5656:41;18873:992:119;18889:1;18880:6;:10;:37;;;;;18907:10;18894:23;;:10;:23;18880:37;18873:992;;;-1:-1:-1;;;;;18958:27:119;;;18933:22;18958:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:45;;:43;:45::i;:::-;18933:70;;19018:24;19044:28;19092:57;19114:8;19124:14;19140:8;19092:21;:57::i;:::-;19017:132;;;;19350:10;:22;;;19335:37;;:12;:37;19331:81;;;19392:5;;;;;19331:81;19614:75;19636:8;19646:14;19662:8;19672:4;19678:10;19614:21;:75::i;:::-;-1:-1:-1;;;;;19758:27:119;;;;;;;:17;:27;;;;;;;;:37;;;;;;;;;:48;;:46;:48::i;:::-;-1:-1:-1;19820:12:119;;;:::i;:::-;;-1:-1:-1;19846:8:119;;;:::i;:::-;;;18919:946;;;18873:992;;20197:615;-1:-1:-1;;;;;20311:30:119;;20277:31;20311:30;;;:20;:30;;;;;;;;;20277:64;;;;;;;;;;;;;;;;-1:-1:-1;;;20277:64:119;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20277:64:119;;;;;;;;;;20427:21;;;;:57;;;20468:4;:16;;;20452:32;;:12;:32;;20427:57;20423:149;;;20513:17;;;;20500:30;;;;20557:4;20544:10;;;:17;20423:149;20582:25;;;:17;;;:25;20636:53;20659:30;20643:12;20636:53;:::i;:::-;20617:72;;;;:16;;;;:72;;;-1:-1:-1;;;;;20700:30:119;;;;;;:20;:30;;;;;;;;;:37;;;;;;;;;;;;;;;;;-1:-1:-1;;20700:37:119;;;;;;;-1:-1:-1;;;20700:37:119;;;;;;;;-1:-1:-1;;20700:37:119;;;;;;;;;-1:-1:-1;;20700:37:119;;;;;-1:-1:-1;;;20700:37:119;;;;;;;;;20752:53;;41661:51:244;;;41748:23;;;41728:18;;;41721:51;;;;41788:18;;;41781:51;;;;20752:53:119;;41634:18:244;20752:53:119;41463:375:244;4606:324:85;4684:13;4758:10;4771:66;4812:24;4830:5;4812:17;:24::i;:::-;4796:12;;4789:47;;;4796:12;;4789:47;:::i;:::-;4771:17;:66::i;:::-;4858:10;;4758:79;;-1:-1:-1;;;;4858:10:85;;;;;;4851:17;;;;;4847:43;;4877:13;;-1:-1:-1;;;4877:13:85;;;;;;;;;;;4847:43;4907:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4907:16:85;;;;;4606:324::o;6210:129:86:-;6283:4;6306:26;6314:3;6326:5;6306:7;:26::i;8623:156::-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:86;;8719:7;:53::i;1599:130:24:-;1513:6;;-1:-1:-1;;;;;1513:6:24;929:10:39;1662:23:24;1654:68;;;;-1:-1:-1;;;1654:68:24;;42266:2:244;1654:68:24;;;42248:21:244;;;42285:18;;;42278:30;42344:34;42324:18;;;42317:62;42396:18;;1654:68:24;42064:356:244;2666:187:24;2758:6;;;-1:-1:-1;;;;;2774:17:24;;;-1:-1:-1;;;;;;2774:17:24;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;2408:167:151:-;2496:6;2528:39;2541:4;2558:3;438:4:150;2528:12:151;:39::i;21288:717:119:-;21489:4;21668:69;21727:8;21668:22;:41;21691:17;:11;:15;:17::i;21668:69::-;:204;;;;;21853:19;21668:204;:330;;;;-1:-1:-1;;21966:27:119;;-1:-1:-1;;;;;21966:32:119;;;;21545:453;-1:-1:-1;;;21288:717:119:o;25877:186::-;25966:6;25991:65;-1:-1:-1;;;;;26030:25:119;;;;25998:21;;25991:65;:::i;4912:118:86:-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;2214:404::-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:86;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:86;2589:12;;5358:230:151;5482:16;;5449:7;;5515:8;;:66;;5541:33;5555:9;5566:7;5572:1;5566:3;:7;:::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;;6703:28;;6514:233;5541:33;:40;-1:-1:-1;;;5541:40:151;;-1:-1:-1;;;;;5541:40:151;5515:66;;;-1:-1:-1;5526:12:151;;5358:230;-1:-1:-1;;5358:230:151:o;1667:4213:82:-;1749:14;;;-1:-1:-1;;2286:1:82;2283;2276:20;2329:1;2326;2322:9;2313:18;;2384:5;2380:2;2377:13;2369:5;2365:2;2361:14;2357:34;2348:43;;;2486:5;2495:1;2486:10;2482:368;;2824:11;2816:5;:19;;;;;:::i;:::-;;2809:26;;;;;;2482:368;2974:5;2960:11;:19;2952:53;;;;-1:-1:-1;;;2952:53:82;;43013:2:244;2952:53:82;;;42995:21:244;43052:2;43032:18;;;43025:30;-1:-1:-1;;;43071:18:244;;;43064:51;43132:18;;2952:53:82;42811:345:244;2952:53:82;3261:17;3396:11;3393:1;3390;3383:25;4774:1;3944;3929:12;;:16;;3914:32;;4049:22;;;;4755:1;:15;;4754:21;;5007;;;5003:25;;4992:36;5076:21;;;5072:25;;5061:36;5146:21;;;5142:25;;5131:36;5216:21;;;5212:25;;5201:36;5286:21;;;5282:25;;5271:36;5357:21;;;5353:25;;;5342:36;;;3899:12;4294;;;4290:23;;;4286:31;;;3510:20;;;3499:32;;;4406:12;;;;3557:21;;4147:16;;;;4397:21;;;;5821:15;;;-1:-1:-1;;;;1667:4213:82:o;6012:299::-;6113:7;6132:14;6149:25;6156:1;6159;6162:11;6149:6;:25::i;:::-;6132:42;-1:-1:-1;6200:11:82;6188:8;:23;;;;;;;;:::i;:::-;;:56;;;;;6243:1;6228:11;6215:25;;;;;:::i;:::-;6225:1;6222;6215:25;:29;6188:56;6184:98;;;6260:11;6270:1;6260:11;;:::i;:::-;;6298:6;-1:-1:-1;;;;;;6012:299:82:o;1700:134:151:-;1791:36;1799:4;1816:3;-1:-1:-1;;;;;1791:36:151;;:7;:36::i;5570:109:86:-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;3759:212:85:-;3825:13;3854:12;3860:5;5888:12;;;;;-1:-1:-1;;;5874:10:85;;;;;:26;;;5785:122;3854:12;3850:32;;;3875:7;;-1:-1:-1;;;3875:7:85;;;;;;;;;;;3850:32;-1:-1:-1;3912:12:85;;;;3892:17;3941:23;;;3912:12;3941:11;;;:23;;;;;;;3759:212::o;3295:324::-;3359:13;3388:12;3394:5;5888:12;;;;;-1:-1:-1;;;5874:10:85;;;;;:26;;;5785:122;3388:12;3384:32;;;3409:7;;-1:-1:-1;;;3409:7:85;;;;;;;;;;;3384:32;-1:-1:-1;3446:12:85;;;;3426:17;3476:23;;;3446:12;3476:11;;;:23;;;;;;;3509:30;;;3573:29;;-1:-1:-1;;3573:29:85;3588:14;;-1:-1:-1;;;;;3573:29:85;;;;;;;;3476:23;3295:324::o;34781:297:83:-;34837:6;-1:-1:-1;;;;;34962:5:83;:34;;34954:87;;;;-1:-1:-1;;;34954:87:83;;43495:2:244;34954:87:83;;;43477:21:244;43534:2;43514:18;;;43507:30;43573:34;43553:18;;;43546:62;-1:-1:-1;;;43624:18:244;;;43617:38;43672:19;;34954:87:83;43293:404:244;34954:87:83;-1:-1:-1;35065:5:83;34781:297::o;26101:198::-;26205:5;26229:19;;;;;;26221:71;;;;-1:-1:-1;;;26221:71:83;;43904:2:244;26221:71:83;;;43886:21:244;43943:2;43923:18;;;43916:30;43982:34;43962:18;;;43955:62;-1:-1:-1;;;44033:18:244;;;44026:37;44080:19;;26221:71:83;43702:403:244;26221:71:83;26101:198;;;:::o;2786:1388:86:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:86;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;4889:343:151;5060:16;;5027:7;;;5100:42;5060:9;5130:3;5027:7;5060:16;5100:18;:42::i;:::-;5086:56;-1:-1:-1;5159:8:151;;:66;;5185:33;5199:9;5210:7;5216:1;5210:3;:7;:::i;5185:33::-;:40;-1:-1:-1;;;5185:40:151;;-1:-1:-1;;;;;5185:40:151;5159:66;;;-1:-1:-1;5170:12:151;;5152:73;-1:-1:-1;;;;4889:343:151:o;4054:667::-;4155:11;;4181:7;;4177:422;;4278:20;4301:28;4315:4;4321:7;4327:1;4321:3;:7;:::i;4301:28::-;4278:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4278:51:151;;;-1:-1:-1;;;;;4278:51:151;;;;;;;-1:-1:-1;4351:16:151;;;-1:-1:-1;4351:16:151;4343:52;;;;-1:-1:-1;;;4343:52:151;;;;;;;;;;;;4471:9;;:16;;;;;;;4467:122;;4545:5;4507:28;4521:4;4527:7;4533:1;4527:3;:7;:::i;4507:28::-;:43;;-1:-1:-1;;;;;4507:43:151;;;;-1:-1:-1;;;4507:43:151;;;;;;;;;;;-1:-1:-1;;;;;4054:667:151:o;4467:122::-;4190:409;4177:422;-1:-1:-1;4677:36:151;;;;;;;;;;;;;;;-1:-1:-1;;;;;4677:36:151;;;;;;;;;;4667:47;;;;;;;-1:-1:-1;4667:47:151;;;;;;;;;;;;-1:-1:-1;;;4667:47:151;;;;;;;;;4054:667::o;5932:439::-;6084:7;6103:241;6116:4;6110:3;:10;6103:241;;;6136:11;6150:34;6174:3;6179:4;6150:23;:34::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;6136:48;;-1:-1:-1;6202:35:151;;;;6703:28;;6202:29;;;:35;6198:136;;;6264:3;6257:10;;6198:136;;;6312:7;:3;6318:1;6312:7;:::i;:::-;6306:13;;6198:136;6122:222;6103:241;;816:153:45;878:7;951:11;961:1;952:5;;;951:11;:::i;:::-;941:21;;942:5;;;941:21;:::i;14:131:244:-;-1:-1:-1;;;;;89:31:244;;79:42;;69:70;;135:1;132;125:12;150:127;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:253;354:2;348:9;396:4;384:17;;-1:-1:-1;;;;;416:34:244;;452:22;;;413:62;410:88;;;478:18;;:::i;:::-;514:2;507:22;282:253;:::o;540:275::-;611:2;605:9;676:2;657:13;;-1:-1:-1;;653:27:244;641:40;;-1:-1:-1;;;;;696:34:244;;732:22;;;693:62;690:88;;;758:18;;:::i;:::-;794:2;787:22;540:275;;-1:-1:-1;540:275:244:o;820:163::-;887:20;;947:10;936:22;;926:33;;916:61;;973:1;970;963:12;988:578;1046:5;1094:4;1082:9;1077:3;1073:19;1069:30;1066:50;;;1112:1;1109;1102:12;1066:50;1165:4;1159:11;;;1197:17;;-1:-1:-1;;;;;1229:34:244;;1265:22;;;1226:62;1223:88;;;1291:18;;:::i;:::-;1327:4;1320:24;1362:6;-1:-1:-1;1362:6:244;1392:23;;1424:33;1392:23;1424:33;:::i;:::-;1466:23;;1522:37;1555:2;1540:18;;1522:37;:::i;:::-;1517:2;1509:6;1505:15;1498:62;;988:578;;;;:::o;1571:532::-;1697:6;1705;1713;1766:3;1754:9;1745:7;1741:23;1737:33;1734:53;;;1783:1;1780;1773:12;1734:53;1822:9;1809:23;1841:31;1866:5;1841:31;:::i;:::-;1891:5;-1:-1:-1;1915:58:244;1965:7;1960:2;1945:18;;1915:58;:::i;:::-;1905:68;;2025:2;2014:9;2010:18;1997:32;2038:33;2063:7;2038:33;:::i;:::-;2090:7;2080:17;;;1571:532;;;;;:::o;2378:257::-;2188:12;;-1:-1:-1;;;;;2184:37:244;2172:50;;2286:4;2275:16;;;2269:23;2265:2;2254:39;2238:14;;;2231:63;2347:4;2336:16;;;2330:23;2355:10;2326:40;2310:14;;;2303:64;2570:2;2555:18;;2582:47;2108:265;2640:226;2699:6;2752:2;2740:9;2731:7;2727:23;2723:32;2720:52;;;2768:1;2765;2758:12;2720:52;-1:-1:-1;2813:23:244;;2640:226;-1:-1:-1;2640:226:244:o;2871:247::-;2930:6;2983:2;2971:9;2962:7;2958:23;2954:32;2951:52;;;2999:1;2996;2989:12;2951:52;3038:9;3025:23;3057:31;3082:5;3057:31;:::i;3123:195::-;3204:12;;-1:-1:-1;;;;;3200:38:244;3188:51;;3292:4;3281:16;;;3275:23;3300:10;3271:40;3255:14;;3248:64;3123:195::o;3323:454::-;3387:3;3425:5;3419:12;3452:6;3447:3;3440:19;3484:4;3479:3;3475:14;3468:21;;3523:4;3516:5;3512:16;3546:1;3556:196;3570:6;3567:1;3564:13;3556:196;;;3619:49;3664:3;3655:6;3649:13;3619:49;:::i;:::-;3697:4;3688:14;;;;;3737:4;3725:17;;;;;3592:1;3585:9;3556:196;;;-1:-1:-1;3768:3:244;;3323:454;-1:-1:-1;;;;3323:454:244:o;3782:332::-;4021:2;4010:9;4003:21;3984:4;4041:67;4104:2;4093:9;4089:18;4081:6;4041:67;:::i;4119:236::-;4208:6;4261:2;4249:9;4240:7;4236:23;4232:32;4229:52;;;4277:1;4274;4267:12;4229:52;4300:49;4341:7;4330:9;4300:49;:::i;4552:391::-;4639:8;4649:6;4703:3;4696:4;4688:6;4684:17;4680:27;4670:55;;4721:1;4718;4711:12;4670:55;-1:-1:-1;4744:20:244;;-1:-1:-1;;;;;4776:30:244;;4773:50;;;4819:1;4816;4809:12;4773:50;4856:4;4848:6;4844:17;4832:29;;4916:3;4909:4;4899:6;4896:1;4892:14;4884:6;4880:27;4876:38;4873:47;4870:67;;;4933:1;4930;4923:12;4948:632;5079:6;5087;5095;5148:2;5136:9;5127:7;5123:23;5119:32;5116:52;;;5164:1;5161;5154:12;5116:52;5203:9;5190:23;5222:31;5247:5;5222:31;:::i;:::-;5272:5;-1:-1:-1;5328:2:244;5313:18;;5300:32;-1:-1:-1;;;;;5344:30:244;;5341:50;;;5387:1;5384;5377:12;5341:50;5426:94;5512:7;5503:6;5492:9;5488:22;5426:94;:::i;:::-;4948:632;;5539:8;;-1:-1:-1;5400:120:244;;-1:-1:-1;;;;4948:632:244:o;5782:183::-;5842:4;-1:-1:-1;;;;;5867:6:244;5864:30;5861:56;;;5897:18;;:::i;:::-;-1:-1:-1;5942:1:244;5938:14;5954:4;5934:25;;5782:183::o;5970:744::-;6024:5;6077:3;6070:4;6062:6;6058:17;6054:27;6044:55;;6095:1;6092;6085:12;6044:55;6135:6;6122:20;6162:64;6178:47;6218:6;6178:47;:::i;:::-;6162:64;:::i;:::-;6250:3;6274:6;6269:3;6262:19;6306:4;6301:3;6297:14;6290:21;;6367:4;6357:6;6354:1;6350:14;6342:6;6338:27;6334:38;6320:52;;6395:3;6387:6;6384:15;6381:35;;;6412:1;6409;6402:12;6381:35;6448:4;6440:6;6436:17;6462:221;6478:6;6473:3;6470:15;6462:221;;;6560:3;6547:17;6577:31;6602:5;6577:31;:::i;:::-;6621:18;;6668:4;6659:14;;;;6495;6462:221;;;-1:-1:-1;6701:7:244;5970:744;-1:-1:-1;;;;;5970:744:244:o;6719:807::-;6903:6;6911;6919;6927;6980:3;6968:9;6959:7;6955:23;6951:33;6948:53;;;6997:1;6994;6987:12;6948:53;7020:49;7061:7;7050:9;7020:49;:::i;:::-;7010:59;;7120:2;7109:9;7105:18;7092:32;-1:-1:-1;;;;;7139:6:244;7136:30;7133:50;;;7179:1;7176;7169:12;7133:50;7202:61;7255:7;7246:6;7235:9;7231:22;7202:61;:::i;:::-;7192:71;;;7316:2;7305:9;7301:18;7288:32;-1:-1:-1;;;;;7335:8:244;7332:32;7329:52;;;7377:1;7374;7367:12;7329:52;7400:63;7455:7;7444:8;7433:9;7429:24;7400:63;:::i;:::-;7390:73;;;7482:38;7515:3;7504:9;7500:19;7482:38;:::i;:::-;7472:48;;6719:807;;;;;;;:::o;7531:420::-;7584:3;7622:5;7616:12;7649:6;7644:3;7637:19;7681:4;7676:3;7672:14;7665:21;;7720:4;7713:5;7709:16;7743:1;7753:173;7767:6;7764:1;7761:13;7753:173;;;7828:13;;7816:26;;7871:4;7862:14;;;;7899:17;;;;7789:1;7782:9;7753:173;;7956:823;8148:4;8196:2;8185:9;8181:18;8226:2;8215:9;8208:21;8249:6;8284;8278:13;8315:6;8307;8300:22;8353:2;8342:9;8338:18;8331:25;;8415:2;8405:6;8402:1;8398:14;8387:9;8383:30;8379:39;8365:53;;8453:2;8445:6;8441:15;8474:1;8484:266;8498:6;8495:1;8492:13;8484:266;;;8591:2;8587:7;8575:9;8567:6;8563:22;8559:36;8554:3;8547:49;8619:51;8663:6;8654;8648:13;8619:51;:::i;:::-;8609:61;-1:-1:-1;8705:2:244;8728:12;;;;8693:15;;;;;8520:1;8513:9;8484:266;;;-1:-1:-1;8767:6:244;;7956:823;-1:-1:-1;;;;;;7956:823:244:o;9015:530::-;9118:6;9126;9179:2;9167:9;9158:7;9154:23;9150:32;9147:52;;;9195:1;9192;9185:12;9147:52;9234:9;9221:23;9253:31;9278:5;9253:31;:::i;:::-;9303:5;-1:-1:-1;9359:2:244;9344:18;;9331:32;-1:-1:-1;;;;;9375:30:244;;9372:50;;;9418:1;9415;9408:12;9372:50;9441:22;;9497:3;9479:16;;;9475:26;9472:46;;;9514:1;9511;9504:12;9472:46;9537:2;9527:12;;;9015:530;;;;;:::o;9550:407::-;9637:6;9645;9698:2;9686:9;9677:7;9673:23;9669:32;9666:52;;;9714:1;9711;9704:12;9666:52;9753:9;9740:23;9772:31;9797:5;9772:31;:::i;:::-;9822:5;-1:-1:-1;9879:2:244;9864:18;;9851:32;9892:33;9851:32;9892:33;:::i;9962:452::-;10025:3;10063:5;10057:12;10090:6;10085:3;10078:19;10122:4;10117:3;10113:14;10106:21;;10161:4;10154:5;10150:16;10184:1;10194:195;10208:6;10205:1;10202:13;10194:195;;;10257:48;10301:3;10292:6;10286:13;2188:12;;-1:-1:-1;;;;;2184:37:244;2172:50;;2286:4;2275:16;;;2269:23;2265:2;2254:39;2238:14;;;2231:63;2347:4;2336:16;;;2330:23;2355:10;2326:40;2310:14;;2303:64;2108:265;10257:48;10334:4;10325:14;;;;;10374:4;10362:17;;;;;10230:1;10223:9;10194:195;;10419:604;10794:2;10783:9;10776:21;10757:4;10820:67;10883:2;10872:9;10868:18;10860:6;10820:67;:::i;:::-;10935:9;10927:6;10923:22;10918:2;10907:9;10903:18;10896:50;10963:54;11010:6;11002;10963:54;:::i;11028:551::-;11092:3;11130:5;11124:12;11157:6;11152:3;11145:19;11189:4;11184:3;11180:14;11173:21;;11228:4;11221:5;11217:16;11251:1;11261:293;11275:6;11272:1;11269:13;11261:293;;;11334:13;;-1:-1:-1;;;;;11404:28:244;11392:41;;11469:4;11460:14;;;;11527:17;;;;11429:1;11290:9;11261:293;;11584:291;11782:2;11771:9;11764:21;11745:4;11802:67;11865:2;11854:9;11850:18;11842:6;11802:67;:::i;12119:502::-;12231:6;12239;12292:2;12280:9;12271:7;12267:23;12263:32;12260:52;;;12308:1;12305;12298:12;12260:52;12348:9;12335:23;-1:-1:-1;;;;;12373:6:244;12370:30;12367:50;;;12413:1;12410;12403:12;12367:50;12436:61;12489:7;12480:6;12469:9;12465:22;12436:61;:::i;:::-;12426:71;;;12547:2;12536:9;12532:18;12519:32;12560:31;12585:5;12560:31;:::i;12626:634::-;12814:2;12826:21;;;12896:13;;12799:18;;;12918:22;;;12766:4;;12997:15;;;12971:2;12956:18;;;12766:4;13040:194;13054:6;13051:1;13048:13;13040:194;;;13119:13;;-1:-1:-1;;;;;13115:38:244;13103:51;;13183:2;13209:15;;;;13174:12;;;;13076:1;13069:9;13040:194;;;-1:-1:-1;13251:3:244;;12626:634;-1:-1:-1;;;;;12626:634:244:o;13265:969::-;13414:6;13422;13430;13438;13446;13499:2;13487:9;13478:7;13474:23;13470:32;13467:52;;;13515:1;13512;13505:12;13467:52;13554:9;13541:23;13573:31;13598:5;13573:31;:::i;:::-;13623:5;-1:-1:-1;13679:2:244;13664:18;;13651:32;-1:-1:-1;;;;;13695:30:244;;13692:50;;;13738:1;13735;13728:12;13692:50;13777:94;13863:7;13854:6;13843:9;13839:22;13777:94;:::i;:::-;13890:8;;-1:-1:-1;13751:120:244;-1:-1:-1;;13978:2:244;13963:18;;13950:32;-1:-1:-1;;;;;13994:32:244;;13991:52;;;14039:1;14036;14029:12;13991:52;14078:96;14166:7;14155:8;14144:9;14140:24;14078:96;:::i;:::-;13265:969;;;;-1:-1:-1;13265:969:244;;-1:-1:-1;14193:8:244;;14052:122;13265:969;-1:-1:-1;;;13265:969:244:o;14239:687::-;14361:6;14369;14377;14385;14438:2;14426:9;14417:7;14413:23;14409:32;14406:52;;;14454:1;14451;14444:12;14406:52;14493:9;14480:23;14512:31;14537:5;14512:31;:::i;:::-;14562:5;-1:-1:-1;14586:37:244;14619:2;14604:18;;14586:37;:::i;:::-;14576:47;;14674:2;14663:9;14659:18;14646:32;-1:-1:-1;;;;;14693:6:244;14690:30;14687:50;;;14733:1;14730;14723:12;14687:50;14772:94;14858:7;14849:6;14838:9;14834:22;14772:94;:::i;:::-;14239:687;;;;-1:-1:-1;14885:8:244;-1:-1:-1;;;;14239:687:244:o;14931:502::-;15043:6;15051;15104:2;15092:9;15083:7;15079:23;15075:32;15072:52;;;15120:1;15117;15110:12;15072:52;15159:9;15146:23;15178:31;15203:5;15178:31;:::i;:::-;15228:5;-1:-1:-1;15284:2:244;15269:18;;15256:32;-1:-1:-1;;;;;15300:30:244;;15297:50;;;15343:1;15340;15333:12;15297:50;15366:61;15419:7;15410:6;15399:9;15395:22;15366:61;:::i;:::-;15356:71;;;14931:502;;;;;:::o;15438:319::-;15505:6;15513;15566:2;15554:9;15545:7;15541:23;15537:32;15534:52;;;15582:1;15579;15572:12;15534:52;15621:9;15608:23;15640:31;15665:5;15640:31;:::i;:::-;15690:5;-1:-1:-1;15714:37:244;15747:2;15732:18;;15714:37;:::i;:::-;15704:47;;15438:319;;;;;:::o;15762:269::-;15819:6;15872:2;15860:9;15851:7;15847:23;15843:32;15840:52;;;15888:1;15885;15878:12;15840:52;15927:9;15914:23;15977:4;15970:5;15966:16;15959:5;15956:27;15946:55;;15997:1;15994;15987:12;16218:371;16316:6;16324;16377:2;16365:9;16356:7;16352:23;16348:32;16345:52;;;16393:1;16390;16383:12;16345:52;16432:9;16419:23;16451:31;16476:5;16451:31;:::i;:::-;16501:5;-1:-1:-1;16525:58:244;16575:7;16570:2;16555:18;;16525:58;:::i;16799:164::-;16868:5;16913:2;16904:6;16899:3;16895:16;16891:25;16888:45;;;16929:1;16926;16919:12;16888:45;-1:-1:-1;16951:6:244;16799:164;-1:-1:-1;16799:164:244:o;16968:375::-;17064:6;17117:2;17105:9;17096:7;17092:23;17088:32;17085:52;;;17133:1;17130;17123:12;17085:52;17173:9;17160:23;-1:-1:-1;;;;;17198:6:244;17195:30;17192:50;;;17238:1;17235;17228:12;17192:50;17261:76;17329:7;17320:6;17309:9;17305:22;17261:76;:::i;18298:627::-;18449:6;18457;18465;18518:3;18506:9;18497:7;18493:23;18489:33;18486:53;;;18535:1;18532;18525:12;18486:53;18575:9;18562:23;-1:-1:-1;;;;;18600:6:244;18597:30;18594:50;;;18640:1;18637;18630:12;18594:50;18663:61;18716:7;18707:6;18696:9;18692:22;18663:61;:::i;:::-;18653:71;;;18743:58;18793:7;18788:2;18777:9;18773:18;18743:58;:::i;18930:329::-;19167:2;19156:9;19149:21;19130:4;19187:66;19249:2;19238:9;19234:18;19226:6;19187:66;:::i;19472:574::-;19592:6;19600;19608;19661:2;19649:9;19640:7;19636:23;19632:32;19629:52;;;19677:1;19674;19667:12;19629:52;19716:9;19703:23;19735:31;19760:5;19735:31;:::i;:::-;19785:5;-1:-1:-1;19841:2:244;19826:18;;19813:32;-1:-1:-1;;;;;19857:30:244;;19854:50;;;19900:1;19897;19890:12;19854:50;19923:61;19976:7;19967:6;19956:9;19952:22;19923:61;:::i;:::-;19913:71;;;20003:37;20036:2;20025:9;20021:18;20003:37;:::i;:::-;19993:47;;19472:574;;;;;:::o;20051:2630::-;20177:6;20185;20238:2;20226:9;20217:7;20213:23;20209:32;20206:52;;;20254:1;20251;20244:12;20206:52;20293:9;20280:23;20312:31;20337:5;20312:31;:::i;:::-;20362:5;-1:-1:-1;20418:2:244;20403:18;;20390:32;-1:-1:-1;;;;;20434:30:244;;20431:50;;;20477:1;20474;20467:12;20431:50;20500:22;;20553:4;20545:13;;20541:27;-1:-1:-1;20531:55:244;;20582:1;20579;20572:12;20531:55;20622:2;20609:16;20645:64;20661:47;20701:6;20661:47;:::i;20645:64::-;20731:3;20755:6;20750:3;20743:19;20787:2;20782:3;20778:12;20771:19;;20842:2;20832:6;20829:1;20825:14;20821:2;20817:23;20813:32;20799:46;;20868:7;20860:6;20857:19;20854:39;;;20889:1;20886;20879:12;20854:39;20921:2;20917;20913:11;20933:1718;20949:6;20944:3;20941:15;20933:1718;;;21035:3;21022:17;-1:-1:-1;;;;;21058:11:244;21055:35;21052:55;;;21103:1;21100;21093:12;21052:55;21130:20;;21202:4;21174:16;;;-1:-1:-1;;21170:30:244;21166:41;21163:61;;;21220:1;21217;21210:12;21163:61;21252:22;;:::i;:::-;21303:51;21346:7;21341:2;21337;21333:11;21303:51;:::i;:::-;21294:7;21287:68;21405:4;21401:2;21397:13;21384:27;-1:-1:-1;;;;;21430:8:244;21427:32;21424:52;;;21472:1;21469;21462:12;21424:52;21514:65;21571:7;21566:2;21555:8;21551:2;21547:17;21543:26;21514:65;:::i;:::-;21509:2;21500:7;21496:16;21489:91;;21630:4;21626:2;21622:13;21609:27;-1:-1:-1;;;;;21655:8:244;21652:32;21649:52;;;21697:1;21694;21687:12;21649:52;21747:2;21736:8;21732:2;21728:17;21724:26;21714:36;;;21792:7;21785:4;21781:2;21777:13;21773:27;21763:55;;21814:1;21811;21804:12;21763:55;21860:2;21847:16;21889:66;21905:49;21945:8;21905:49;:::i;21889:66::-;21983:5;22015:8;22008:5;22001:23;22057:2;22050:5;22046:14;22037:23;;22120:2;22108:8;22105:1;22101:16;22097:2;22093:25;22089:34;22073:50;;22152:7;22142:8;22139:21;22136:41;;;22173:1;22170;22163:12;22136:41;22211:2;22207;22203:11;22190:24;;22227:303;22245:8;22238:5;22235:19;22227:303;;;22341:5;22328:19;-1:-1:-1;;;;;22390:7:244;22386:32;22377:7;22374:45;22364:73;;22433:1;22430;22423:12;22364:73;22454:22;;22513:2;22266:14;;;;22502;;;;22227:303;;;22563:2;22550:16;;22543:33;-1:-1:-1;;22589:20:244;;-1:-1:-1;22638:2:244;22629:12;;;;20966;20933:1718;;;20937:3;22670:5;22660:15;;;;;;20051:2630;;;;;:::o;22686:722::-;22766:6;22774;22782;22835:2;22823:9;22814:7;22810:23;22806:32;22803:52;;;22851:1;22848;22841:12;22803:52;22890:9;22877:23;22909:31;22934:5;22909:31;:::i;:::-;22959:5;-1:-1:-1;23015:2:244;23000:18;;22987:32;-1:-1:-1;;;;;23031:30:244;;23028:50;;;23074:1;23071;23064:12;23028:50;23097:22;;23150:4;23142:13;;23138:27;-1:-1:-1;23128:55:244;;23179:1;23176;23169:12;23128:55;23219:2;23206:16;-1:-1:-1;;;;;23237:6:244;23234:30;23231:50;;;23277:1;23274;23267:12;23231:50;23322:7;23317:2;23308:6;23304:2;23300:15;23296:24;23293:37;23290:57;;;23343:1;23340;23333:12;23290:57;22686:722;;23374:2;23366:11;;;;;-1:-1:-1;23396:6:244;;-1:-1:-1;;;22686:722:244:o;23413:508::-;23516:6;23524;23577:2;23565:9;23556:7;23552:23;23548:32;23545:52;;;23593:1;23590;23583:12;23545:52;23632:9;23619:23;23651:31;23676:5;23651:31;:::i;:::-;23701:5;-1:-1:-1;23757:2:244;23742:18;;23729:32;-1:-1:-1;;;;;23773:30:244;;23770:50;;;23816:1;23813;23806:12;23770:50;23839:76;23907:7;23898:6;23887:9;23883:22;23839:76;:::i;24204:367::-;24272:6;24280;24333:2;24321:9;24312:7;24308:23;24304:32;24301:52;;;24349:1;24346;24339:12;24301:52;24388:9;24375:23;24407:31;24432:5;24407:31;:::i;:::-;24457:5;24535:2;24520:18;;;;24507:32;;-1:-1:-1;;;24204:367:244:o;25228:277::-;25295:6;25348:2;25336:9;25327:7;25323:23;25319:32;25316:52;;;25364:1;25361;25354:12;25316:52;25396:9;25390:16;25449:5;25442:13;25435:21;25428:5;25425:32;25415:60;;25471:1;25468;25461:12;25510:127;25571:10;25566:3;25562:20;25559:1;25552:31;25602:4;25599:1;25592:15;25626:4;25623:1;25616:15;25642:333;25744:4;25802:11;25789:25;25896:2;25892:7;25881:8;25865:14;25861:29;25857:43;25837:18;25833:68;25823:96;;25915:1;25912;25905:12;25823:96;25936:33;;;;;25642:333;-1:-1:-1;;25642:333:244:o;25980:564::-;26092:4;26098:6;26158:11;26145:25;26252:2;26248:7;26237:8;26221:14;26217:29;26213:43;26193:18;26189:68;26179:96;;26271:1;26268;26261:12;26179:96;26298:33;;26350:20;;;-1:-1:-1;;;;;;26382:30:244;;26379:50;;;26425:1;26422;26415:12;26379:50;26458:4;26446:17;;-1:-1:-1;26509:1:244;26505:14;;;26489;26485:35;26475:46;;26472:66;;;26534:1;26531;26524:12;26549:184;26607:6;26660:2;26648:9;26639:7;26635:23;26631:32;26628:52;;;26676:1;26673;26666:12;26628:52;26699:28;26717:9;26699:28;:::i;26738:260::-;26932:2;26917:18;;26944:48;26921:9;26974:6;26944:48;:::i;27274:376::-;27515:2;27500:18;;27527:48;27504:9;27557:6;27527:48;:::i;:::-;-1:-1:-1;;;;;27611:32:244;;;;27606:2;27591:18;;;;27584:60;27274:376;;-1:-1:-1;27274:376:244:o;27655:495::-;27931:2;27920:9;27913:21;27894:4;27957:56;28009:2;27998:9;27994:18;27986:6;27957:56;:::i;:::-;28061:9;28053:6;28049:22;28044:2;28033:9;28029:18;28022:50;28089:55;28137:6;28129;28089:55;:::i;28155:1704::-;28275:6;28328:2;28316:9;28307:7;28303:23;28299:32;28296:52;;;28344:1;28341;28334:12;28296:52;28377:9;28371:16;-1:-1:-1;;;;;28402:6:244;28399:30;28396:50;;;28442:1;28439;28432:12;28396:50;28465:22;;28518:4;28510:13;;28506:27;-1:-1:-1;28496:55:244;;28547:1;28544;28537:12;28496:55;28580:2;28574:9;28603:64;28619:47;28659:6;28619:47;:::i;28603:64::-;28689:3;28713:6;28708:3;28701:19;28745:2;28740:3;28736:12;28729:19;;28800:2;28790:6;28787:1;28783:14;28779:2;28775:23;28771:32;28757:46;;28826:7;28818:6;28815:19;28812:39;;;28847:1;28844;28837:12;28812:39;28879:2;28875;28871:11;28891:938;28907:6;28902:3;28899:15;28891:938;;;28986:3;28980:10;-1:-1:-1;;;;;29009:11:244;29006:35;29003:55;;;29054:1;29051;29044:12;29003:55;29081:20;;29136:2;29128:11;;29124:25;-1:-1:-1;29114:53:244;;29163:1;29160;29153:12;29114:53;29210:2;29206;29202:11;29196:18;29240:66;29256:49;29296:8;29256:49;:::i;29240:66::-;29334:5;29366:8;29359:5;29352:23;29408:2;29401:5;29397:14;29388:23;;29480:2;29475;29463:8;29460:1;29456:16;29452:2;29448:25;29444:34;29440:43;29424:59;;29512:7;29502:8;29499:21;29496:41;;;29533:1;29530;29523:12;29496:41;29571:2;29567;29563:11;29550:24;;29587:167;29605:8;29598:5;29595:19;29587:167;;;29687:12;;29673:27;;29737:2;29626:14;;;;29726;;;;29587:167;;;29767:20;;-1:-1:-1;;29816:2:244;29807:12;;;;28924;;;;;-1:-1:-1;28891:938:244;;;-1:-1:-1;29848:5:244;28155:1704;-1:-1:-1;;;;;;28155:1704:244:o;29864:127::-;29925:10;29920:3;29916:20;29913:1;29906:31;29956:4;29953:1;29946:15;29980:4;29977:1;29970:15;29996:128;30063:9;;;30084:11;;;30081:37;;;30098:18;;:::i;30679:194::-;-1:-1:-1;;;;;30777:26:244;;;30749;;;30745:59;;30816:28;;30813:54;;;30847:18;;:::i;30878:213::-;30913:3;30961:5;30957:2;30946:21;-1:-1:-1;;;;;30991:39:244;30982:7;30979:52;30976:78;;31034:18;;:::i;:::-;31074:1;31070:15;;30878:213;-1:-1:-1;;30878:213:244:o;31096:245::-;31194:2;31164:17;;;31183;;;;31160:41;-1:-1:-1;;;;;31216:44:244;;-1:-1:-1;;;;;;31262:49:244;;31213:99;31210:125;;;31315:18;;:::i;31346:656::-;-1:-1:-1;;;;;31698:32:244;;31680:51;;31667:3;31652:19;;31740:57;31793:2;31778:18;;31770:6;31740:57;:::i;:::-;-1:-1:-1;;;;;31833:32:244;;;;31828:2;31813:18;;31806:60;-1:-1:-1;;;;;31903:31:244;;;;31897:3;31882:19;;31875:60;31984:10;31972:23;31853:3;31951:19;;;31944:52;31833:32;31346:656;-1:-1:-1;;31346:656:244:o;32520:522::-;32598:4;32604:6;32664:11;32651:25;32758:2;32754:7;32743:8;32727:14;32723:29;32719:43;32699:18;32695:68;32685:96;;32777:1;32774;32767:12;32685:96;32804:33;;32856:20;;;-1:-1:-1;;;;;;32888:30:244;;32885:50;;;32931:1;32928;32921:12;32885:50;32964:4;32952:17;;-1:-1:-1;32995:14:244;32991:27;;;32981:38;;32978:58;;;33032:1;33029;33022:12;33047:267;33136:6;33131:3;33124:19;33188:6;33181:5;33174:4;33169:3;33165:14;33152:43;-1:-1:-1;33240:1:244;33215:16;;;33233:4;33211:27;;;33204:38;;;;33296:2;33275:15;;;-1:-1:-1;;33271:29:244;33262:39;;;33258:50;;33047:267::o;33319:1392::-;-1:-1:-1;;;;;33821:32:244;;33803:51;;33742:4;33790:3;33775:19;;33863:57;33916:2;33901:18;;33893:6;33863:57;:::i;:::-;33956:3;33951:2;33936:18;;33929:31;33995:22;;;34075:6;34048:3;34033:19;;34099:1;34109:348;34123:6;34120:1;34117:13;34109:348;;;34198:6;34185:20;34218:31;34243:5;34218:31;:::i;:::-;-1:-1:-1;;;;;34306:31:244;34294:44;;34374:4;34432:15;;;;34365:14;;;;34334:1;34138:9;34109:348;;;34113:3;34503:9;34498:3;34494:19;34488:3;34477:9;34473:19;34466:48;34537:41;34574:3;34566:6;34537:41;:::i;:::-;34523:55;;;34627:9;34619:6;34615:22;34609:3;34598:9;34594:19;34587:51;34655:50;34698:6;34690;34682;34655:50;:::i;:::-;34647:58;33319:1392;-1:-1:-1;;;;;;;;;;33319:1392:244:o;34716:272::-;34774:6;34827:2;34815:9;34806:7;34802:23;34798:32;34795:52;;;34843:1;34840;34833:12;34795:52;34882:9;34869:23;34932:6;34925:5;34921:18;34914:5;34911:29;34901:57;;34954:1;34951;34944:12;34993:125;35058:9;;;35079:10;;;35076:36;;;35092:18;;:::i;35672:167::-;35767:10;35740:18;;;35760;;;35736:43;;35791:19;;35788:45;;;35813:18;;:::i;35844:419::-;35943:6;35938:3;35931:19;35975:4;35970:3;35966:14;35959:21;;35913:3;36003:5;36026:1;36036:202;36050:6;36047:1;36044:13;36036:202;;;36142:10;36115:25;36133:6;36115:25;:::i;:::-;36111:42;36099:55;;36183:4;36174:14;;;;36211:17;;;;;36072:1;36065:9;36036:202;;36268:382;-1:-1:-1;;;;;36483:32:244;;36465:51;;36552:2;36547;36532:18;;36525:30;;;-1:-1:-1;;36572:72:244;;36625:18;;36617:6;36609;36572:72;:::i;36655:247::-;36814:2;36803:9;36796:21;36777:4;36834:62;36892:2;36881:9;36877:18;36869:6;36861;36834:62;:::i;37433:570::-;-1:-1:-1;;;;;37704:32:244;;37686:51;;37773:2;37768;37753:18;;37746:30;;;-1:-1:-1;;37799:72:244;;37852:18;;37844:6;37836;37799:72;:::i;:::-;37919:9;37911:6;37907:22;37902:2;37891:9;37887:18;37880:50;37947;37990:6;37982;37974;37947:50;:::i;:::-;37939:58;37433:570;-1:-1:-1;;;;;;;;37433:570:244:o;39357:251::-;39427:6;39480:2;39468:9;39459:7;39455:23;39451:32;39448:52;;;39496:1;39493;39486:12;39448:52;39528:9;39522:16;39547:31;39572:5;39547:31;:::i;39963:297::-;40081:12;;40128:4;40117:16;;;40111:23;;40081:12;40146:16;;40143:111;;;-1:-1:-1;;40220:4:244;40216:17;;;;40213:1;40209:25;40205:38;40194:50;;39963:297;-1:-1:-1;39963:297:244:o;41182:135::-;41221:3;41242:17;;;41239:43;;41262:18;;:::i;:::-;-1:-1:-1;41309:1:244;41298:13;;41182:135::o;41322:136::-;41361:3;41389:5;41379:39;;41398:18;;:::i;:::-;-1:-1:-1;;;41434:18:244;;41322:136::o;41843:216::-;41907:9;;;41935:11;;;41882:3;41965:9;;41993:10;;41989:19;;42018:10;;42010:19;;41986:44;41983:70;;;42033:18;;:::i;:::-;41983:70;;41843:216;;;;:::o;42425:249::-;42525:2;42514:17;;;42495;;;;42491:41;-1:-1:-1;;;;;;42547:50:244;;-1:-1:-1;;;;;42599:45:244;;42544:101;42541:127;;;42648:18;;:::i;42679:127::-;42740:10;42735:3;42731:20;42728:1;42721:31;42771:4;42768:1;42761:15;42795:4;42792:1;42785:15;43161:127;43222:10;43217:3;43213:20;43210:1;43203:31;43253:4;43250:1;43243:15;43277:4;43274:1;43267:15;44110:127;44171:10;44166:3;44162:20;44159:1;44152:31;44202:4;44199:1;44192:15;44226:4;44223:1;44216:15;44242:217;44282:1;44308;44298:132;;44352:10;44347:3;44343:20;44340:1;44333:31;44387:4;44384:1;44377:15;44415:4;44412:1;44405:15;44298:132;-1:-1:-1;44444:9:244;;44242:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "75236": [
        {
          "start": 1786,
          "length": 32
        },
        {
          "start": 3308,
          "length": 32
        },
        {
          "start": 5687,
          "length": 32
        },
        {
          "start": 7381,
          "length": 32
        },
        {
          "start": 7487,
          "length": 32
        },
        {
          "start": 11331,
          "length": 32
        }
      ],
      "75239": [
        {
          "start": 798,
          "length": 32
        },
        {
          "start": 8848,
          "length": 32
        },
        {
          "start": 10631,
          "length": 32
        }
      ],
      "75242": [
        {
          "start": 1352,
          "length": 32
        },
        {
          "start": 15689,
          "length": 32
        }
      ],
      "86998": [
        {
          "start": 1017,
          "length": 32
        },
        {
          "start": 14154,
          "length": 32
        }
      ],
      "87199": [
        {
          "start": 1391,
          "length": 32
        },
        {
          "start": 1938,
          "length": 32
        },
        {
          "start": 7652,
          "length": 32
        },
        {
          "start": 13249,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ALLOCATION_CONFIGURATION_DELAY()": "7bc1ef61",
    "DEALLOCATION_DELAY()": "2981eb77",
    "addStrategiesToOperatorSet(address,uint32,address[])": "50feea20",
    "clearDeallocationQueue(address,address[],uint16[])": "4b5046ef",
    "createOperatorSets(address,(uint32,address[])[])": "261f84e0",
    "delegation()": "df5cf723",
    "deregisterFromOperatorSets((address,address,uint32[]))": "6e3492b5",
    "encumberedMagnitude(address,address)": "a984eb3a",
    "getAVSRegistrar(address)": "304c10cd",
    "getAllocatableMagnitude(address,address)": "6cfb4481",
    "getAllocatedSets(address)": "15fe5028",
    "getAllocatedStrategies(address,(address,uint32))": "c221d8ae",
    "getAllocation(address,(address,uint32),address)": "10e1b9b8",
    "getAllocationDelay(address)": "b9fbaed1",
    "getAllocations(address[],(address,uint32),address)": "8ce64854",
    "getMaxMagnitude(address,address)": "a9333ec8",
    "getMaxMagnitudes(address,address[])": "547afb87",
    "getMaxMagnitudes(address[],address)": "4a10ffe5",
    "getMaxMagnitudesAtBlock(address,address[],uint32)": "94d7d00c",
    "getMemberCount((address,uint32))": "b2447af7",
    "getMembers((address,uint32))": "6e875dba",
    "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": "2bab2c4a",
    "getOperatorSetCount(address)": "ba1a84e5",
    "getRegisteredSets(address)": "79ae50cd",
    "getStrategiesInOperatorSet((address,uint32))": "4177a87c",
    "getStrategyAllocations(address,address)": "40120dab",
    "initialize(address,uint256)": "cd6dc687",
    "isMemberOfOperatorSet(address,(address,uint32))": "670d3ba2",
    "isOperatorSet((address,uint32))": "260dc758",
    "modifyAllocations(address,((address,uint32),address[],uint64[])[])": "952899ee",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionController()": "4657e26a",
    "registerForOperatorSets(address,(address,uint32[],bytes))": "adc2e3d9",
    "removeStrategiesFromOperatorSet(address,uint32,address[])": "b66bd989",
    "renounceOwnership()": "715018a6",
    "setAVSRegistrar(address,address)": "d3d96ff4",
    "setAllocationDelay(address,uint32)": "56c483e6",
    "slashOperator(address,(address,uint32,address[],uint256[],string))": "36352057",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "updateAVSMetadataURI(address,string)": "a9821821"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_DEALLOCATION_DELAY\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_ALLOCATION_CONFIGURATION_DELAY\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSnapshotOrdering\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWadToSlash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxStrategiesExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModificationAlreadyPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotSlashable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategiesMustBeInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyAlreadyInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UninitializedAllocationDelay\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AVSMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"AVSRegistrarSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"magnitude\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"encumberedMagnitude\",\"type\":\"uint64\"}],\"name\":\"EncumberedMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"maxMagnitude\",\"type\":\"uint64\"}],\"name\":\"MaxMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorSetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"wadSlashed\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"OperatorSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALLOCATION_CONFIGURATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEALLOCATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"addStrategiesToOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"numToClear\",\"type\":\"uint16[]\"}],\"name\":\"clearDeallocationQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"internalType\":\"struct IAllocationManagerTypes.CreateSetParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"internalType\":\"struct IAllocationManagerTypes.DeregisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deregisterFromOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"encumberedMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getAVSRegistrar\",\"outputs\":[{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocatableMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocatedSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getAllocatedStrategies\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocationDelay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getMaxMagnitudesAtBlock\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"futureBlock\",\"type\":\"uint32\"}],\"name\":\"getMinimumSlashableStake\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"slashableStake\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getOperatorSetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getRegisteredSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getStrategiesInOperatorSet\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getStrategyAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isMemberOfOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"newMagnitudes\",\"type\":\"uint64[]\"}],\"internalType\":\"struct IAllocationManagerTypes.AllocateParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"modifyAllocations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IAllocationManagerTypes.RegisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"registerForOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"setAVSRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"setAllocationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"wadsToSlash\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IAllocationManagerTypes.SlashingParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"slashOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AlreadyMemberOfSet()\":[{\"details\":\"Thrown when trying to add an operator to a set they are already a member of\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InsufficientMagnitude()\":[{\"details\":\"Thrown when an allocation is attempted that exceeds a given operators total allocatable magnitude.\"}],\"InvalidCaller()\":[{\"details\":\"Thrown when caller is not authorized to call a function.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidOperator()\":[{\"details\":\"Thrown when an invalid operator is provided.\"}],\"InvalidOperatorSet()\":[{\"details\":\"Thrown when an invalid operator set is provided.\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}],\"InvalidWadToSlash()\":[{\"details\":\"Thrown when `wadToSlash` is zero or greater than 1e18\"}],\"MaxStrategiesExceeded()\":[{\"details\":\"Thrown when creating an operator set with more than max strategies.\"}],\"ModificationAlreadyPending()\":[{\"details\":\"Thrown when an allocation is attempted for a given operator when they have pending allocations or deallocations.\"}],\"NotMemberOfSet()\":[{\"details\":\"Thrown when trying to slash/remove an operator from a set they are not a member of\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorNotSlashable()\":[{\"details\":\"Thrown when attempting to slash an operator when they are not slashable.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}],\"SameMagnitude()\":[{\"details\":\"Thrown when an operator attempts to set their allocation for an operatorSet to the same value\"}],\"StrategiesMustBeInAscendingOrder()\":[{\"details\":\"Thrown when provided `strategies` are not in ascending order.\"}],\"StrategyAlreadyInOperatorSet()\":[{\"details\":\"Thrown when trying to add a strategy to an operator set that already contains it.\"}],\"StrategyNotInOperatorSet()\":[{\"details\":\"Thrown when a strategy is referenced that does not belong to an operator set.\"}],\"UninitializedAllocationDelay()\":[{\"details\":\"Thrown when an operator's allocation delay has yet to be set.\"}]},\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"details\":\"The URI is never stored; it is simply emitted through an event for off-chain indexing.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST NOT already exist in the operator set\",\"params\":{\"avs\":\"the avs to set strategies for\",\"operatorSetId\":\"the operator set to add strategies to\",\"strategies\":\"the strategies to add\"}},\"clearDeallocationQueue(address,address[],uint16[])\":{\"details\":\"can be called permissionlessly by anyone\",\"params\":{\"numToClear\":\"a list of number of pending deallocations to clear for each strategy\",\"operator\":\"address to clear deallocations for\",\"strategies\":\"a list of strategies to clear deallocations for\"}},\"constructor\":{\"details\":\"Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay.\"},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"details\":\"After deregistering within the ALM, this method calls `avs.deregisterOperator` to complete deregistration. If this call reverts, it is ignored.\"},\"getAllocatableMagnitude(address,address)\":{\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get allocatable magnitude for\"},\"returns\":{\"_0\":\"magnitude available to be allocated to an operator set\"}},\"getAllocatedSets(address)\":{\"params\":{\"operator\":\"the operator to query\"},\"returns\":{\"_0\":\"the list of operator sets the operator has current or pending allocations/deallocations in\"}},\"getAllocatedStrategies(address,(address,uint32))\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\"},\"returns\":{\"_0\":\"the list of strategies\"}},\"getAllocation(address,(address,uint32),address)\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the current/pending stake allocation\"}},\"getAllocationDelay(address)\":{\"details\":\"The operator must have a configured delay before allocating magnitude\",\"params\":{\"operator\":\"The operator to query\"},\"returns\":{\"_0\":\"Whether the operator has configured a delay\",\"_1\":\"The time in blocks between allocating magnitude and magnitude becoming slashable\"}},\"getAllocations(address[],(address,uint32),address)\":{\"params\":{\"operatorSet\":\"the operator set to query\",\"operators\":\"the operators to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"each operator's allocation\"}},\"getMaxMagnitude(address,address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get the max magnitude for\"},\"returns\":{\"_0\":\"the max magnitude for the strategy\"}},\"getMaxMagnitudes(address,address[])\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMaxMagnitudes(address[],address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operators\":\"the operators to query\",\"strategy\":\"the strategy to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each operator\"}},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"blockNumber\":\"the blockNumber at which to check the max magnitudes\",\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMemberCount((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to get the member count for\"}},\"getMembers((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"details\":\"This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.\",\"params\":{\"futureBlock\":\"the block at which to get allocation information. Should be a future block.\",\"operatorSet\":\"the operator set to query\",\"operators\":\"the list of operators whose slashable stakes will be returned\",\"strategies\":\"the strategies that each slashable stake corresponds to\"},\"returns\":{\"slashableStake\":\"a list of slashable stakes, indexed by [operator][strategy]\"}},\"getOperatorSetCount(address)\":{\"params\":{\"avs\":\"the AVS to query\"}},\"getRegisteredSets(address)\":{\"params\":{\"operator\":\"The operator address to query.\"}},\"getStrategiesInOperatorSet((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getStrategyAllocations(address,address)\":{\"details\":\"Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the list of all operator sets the operator has allocations for\",\"_1\":\"the corresponding list of allocations from the specific `strategy`\"}},\"initialize(address,uint256)\":{\"details\":\"Initializes the initial owner and paused status.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"params\":{\"operator\":\"The operator to query\",\"operatorSet\":\"The operator set to query\"}},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"details\":\"Updates encumberedMagnitude for the updated strategiesmsg.sender is used as operator\",\"params\":{\"operator\":\"the operator to modify allocations for\",\"params\":\"array of magnitude adjustments for one or more operator sets\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"details\":\"After registering within the ALM, this method calls `avs.registerOperator` to complete registration. This call MUST succeed in order for registration to be successful.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST already exist in the operator set\",\"params\":{\"avs\":\"the avs to remove strategies for\",\"operatorSetId\":\"the operator set to remove strategies from\",\"strategies\":\"the strategies to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAVSRegistrar(address,address)\":{\"params\":{\"registrar\":\"the new registrar address\"}},\"setAllocationDelay(address,uint32)\":{\"params\":{\"delay\":\"the allocation delay in blocks\",\"operator\":\"The operator to set the delay on behalf of.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateAVSMetadataURI(address,string)\":{\"details\":\"Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an AVS.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when an AVS updates their metadata URI (Uniform Resource Identifier).\"},\"AVSRegistrarSet(address,address)\":{\"notice\":\"Emitted when an AVS configures the address that will handle registration/deregistration\"},\"AllocationDelaySet(address,uint32,uint32)\":{\"notice\":\"Emitted when operator updates their allocation delay.\"},\"AllocationUpdated(address,(address,uint32),address,uint64,uint32)\":{\"notice\":\"Emitted when an operator's magnitude is updated for a given operatorSet and strategy\"},\"EncumberedMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when operator's encumbered magnitude is updated for a given strategy\"},\"MaxMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when an operator's max magnitude is updated for a given strategy\"},\"OperatorAddedToOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is added to an operator set.\"},\"OperatorRemovedFromOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is removed from an operator set.\"},\"OperatorSetCreated((address,uint32))\":{\"notice\":\"Emitted when an operator set is created by an AVS.\"},\"OperatorSlashed(address,(address,uint32),address[],uint256[],string)\":{\"notice\":\"Emitted when an operator is slashed by an operator set for a strategy `wadSlashed` is the proportion of the operator's total delegated stake that was slashed\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"StrategyAddedToOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is added to an operator set.\"},\"StrategyRemovedFromOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is removed from an operator set.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"ALLOCATION_CONFIGURATION_DELAY()\":{\"notice\":\"Delay before alloaction delay modifications take effect.\"},\"DEALLOCATION_DELAY()\":{\"notice\":\"Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to.\"},\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to add strategies to an operator set\"},\"clearDeallocationQueue(address,address[],uint16[])\":{\"notice\":\"This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed.\"},\"createOperatorSets(address,(uint32,address[])[])\":{\"notice\":\"Allows an AVS to create new operator sets, defining strategies that the operator set uses\"},\"delegation()\":{\"notice\":\"The DelegationManager contract for EigenLayer\"},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"notice\":\"Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed.\"},\"getAVSRegistrar(address)\":{\"notice\":\"Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)\"},\"getAllocatableMagnitude(address,address)\":{\"notice\":\"For a strategy, get the amount of magnitude not currently allocated to any operator set\"},\"getAllocatedSets(address)\":{\"notice\":\"Returns the list of operator sets the operator has current or pending allocations/deallocations in\"},\"getAllocatedStrategies(address,(address,uint32))\":{\"notice\":\"Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set.\"},\"getAllocation(address,(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocation an operator has from a strategy to an operator set\"},\"getAllocationDelay(address)\":{\"notice\":\"Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false.\"},\"getAllocations(address[],(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocations for multiple operators from a strategy to an operator set\"},\"getMaxMagnitude(address,address)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategy\"},\"getMaxMagnitudes(address,address[])\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies\"},\"getMaxMagnitudes(address[],address)\":{\"notice\":\"Returns the maximum magnitudes each operator can allocate for the given strategy\"},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies at a given block number\"},\"getMemberCount((address,uint32))\":{\"notice\":\"Returns the number of operators registered to an operatorSet.\"},\"getMembers((address,uint32))\":{\"notice\":\"Returns all the operators registered to an operator set\"},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"notice\":\"Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set.\"},\"getOperatorSetCount(address)\":{\"notice\":\"Returns the number of operator sets for the AVS\"},\"getRegisteredSets(address)\":{\"notice\":\"Returns a list of all operator sets the operator is registered for\"},\"getStrategiesInOperatorSet((address,uint32))\":{\"notice\":\"Returns an array of strategies in the operatorSet.\"},\"getStrategyAllocations(address,address)\":{\"notice\":\"Given a strategy, returns a list of operator sets and corresponding stake allocations.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"notice\":\"Returns whether the operator is registered for the operator set\"},\"isOperatorSet((address,uint32))\":{\"notice\":\"Returns whether the operator set exists\"},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"notice\":\"Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"notice\":\"Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to remove strategies from an operator set\"},\"setAVSRegistrar(address,address)\":{\"notice\":\"Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address.\"},\"setAllocationDelay(address,uint32)\":{\"notice\":\"Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable.\"},\"slashOperator(address,(address,uint32,address[],uint256[],string))\":{\"notice\":\"Called by an AVS to slash an operator in a given operator set\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateAVSMetadataURI(address,string)\":{\"notice\":\"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/AllocationManager.sol\":\"AllocationManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/contracts/core/AllocationManager.sol\":{\"keccak256\":\"0xd914c41d7758f743cf32b3b599433c1a817e0fb403502f2587c0b1268984395b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://be421c4920762eccfc500dde57300c139b2e03ab8dd476ecb5fc479d684b6300\",\"dweb:/ipfs/QmcxyrCrhRJVc48fp1zejrToNCSWaNTGvxWb76ozJV7A1K\"]},\"src/contracts/core/AllocationManagerStorage.sol\":{\"keccak256\":\"0x236871c7aac8a4fa0e473cb628f548e5d4378039b7879e5a39e3269cc429dfdb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bf5de3c85b665af34a38acad42bfe7047b4ae4da340ffeab2704d0e324388782\",\"dweb:/ipfs/QmQwAk3MJ3w9Pr6NxrNsXfEucrDPYS1qG2nS5xgMRo9h5a\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0x6d5f209cc63b57e1db891e014a098bd277bb3cd54d815ee9455ade2cdf44020a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://50546cefb737b88803bc6a63cfa962b228fd0d1e2697d6be9166718577e7656e\",\"dweb:/ipfs/QmUP7uYvJV3Eq9vbKdqTJ61jaNZ4QZD6H4fJDBwLw5qyrv\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0xd2ed2a29162ba64cba800ca788011adb34798538680f961c81ba939b55c8a59a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9785b1651e5378c0eb837a1a1fdef02d53f468b6b32ca580589781978e985ec2\",\"dweb:/ipfs/QmXW7VMAc92qxSh7zBfqnVEnv4oY8HUszA6bjKUy74QfXG\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xf63c35c86d3bc3beddde6138f034ff312263496ffbaebf756a4e01feffb82e85\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8bd5a9a01241b60b2634888a0ed20db0139fc73b03d28ce6e4af99357d84e519\",\"dweb:/ipfs/QmezYUgKrAKzZuS4TmiyK3QuxvEmdZESVu1PdcVra3R8P1\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8\",\"dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8\"]},\"src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b\",\"dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4\",\"dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x63d44478f91bfb05bfc6d406587f7c2b49af6bd4616d01dd5c3b9ef65d605eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee1d930124139021384a9197deb5c9b7bfc74bf9d641c9bb449593bc23b2a1fe\",\"dweb:/ipfs/QmWRpQ9eL5oajiTF5CA9APF9zz6QyY1Lcg8tBTrpPTTkzx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0x47ed63ef3077c4f95eb3d9f116f43109642a118387affb32805fbfbaad6bb3b2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5aa7fa62d31a77e532cb6d33952bc68efcfd42416b1fbbde13d0c3aee9beff6c\",\"dweb:/ipfs/QmbUf6cjtvBtX1JLspuq7L89n2rcTcvG2UBRcAC4Raw4o9\"]},\"src/contracts/libraries/Snapshots.sol\":{\"keccak256\":\"0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b\",\"dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd\",\"dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegation",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_DEALLOCATION_DELAY",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_ALLOCATION_CONFIGURATION_DELAY",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Empty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSnapshotOrdering"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidWadToSlash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxStrategiesExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ModificationAlreadyPending"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorNotSlashable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutOfBounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureExpired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategiesMustBeInAscendingOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyAlreadyInOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotInOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UninitializedAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSRegistrarSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "magnitude",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "encumberedMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EncumberedMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "maxMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "wadSlashed",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSlashed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ALLOCATION_CONFIGURATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEALLOCATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategiesToOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint16[]",
              "name": "numToClear",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearDeallocationQueue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createOperatorSets"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAllocationManagerTypes.DeregisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterFromOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encumberedMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAVSRegistrar",
          "outputs": [
            {
              "internalType": "contract IAVSRegistrar",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatableMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedStrategies",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocation",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocationDelay",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocations",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudesAtBlock",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "futureBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinimumSlashableStake",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "slashableStake",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegisteredSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategiesInOperatorSet",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategyAllocations",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMemberOfOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OperatorSet",
                  "name": "operatorSet",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "avs",
                      "type": "address"
                    },
                    {
                      "internalType": "uint32",
                      "name": "id",
                      "type": "uint32"
                    }
                  ]
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint64[]",
                  "name": "newMagnitudes",
                  "type": "uint64[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyAllocations"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.RegisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerForOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategiesFromOperatorSet"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAVSRegistrar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.SlashingParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "wadsToSlash",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "slashOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAVSMetadataURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST NOT already exist in the operator set",
            "params": {
              "avs": "the avs to set strategies for",
              "operatorSetId": "the operator set to add strategies to",
              "strategies": "the strategies to add"
            }
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "details": "can be called permissionlessly by anyone",
            "params": {
              "numToClear": "a list of number of pending deallocations to clear for each strategy",
              "operator": "address to clear deallocations for",
              "strategies": "a list of strategies to clear deallocations for"
            }
          },
          "constructor": {
            "details": "Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay."
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "details": "After deregistering within the ALM, this method calls `avs.deregisterOperator` to complete deregistration. If this call reverts, it is ignored."
          },
          "getAllocatableMagnitude(address,address)": {
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get allocatable magnitude for"
            },
            "returns": {
              "_0": "magnitude available to be allocated to an operator set"
            }
          },
          "getAllocatedSets(address)": {
            "params": {
              "operator": "the operator to query"
            },
            "returns": {
              "_0": "the list of operator sets the operator has current or pending allocations/deallocations in"
            }
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query"
            },
            "returns": {
              "_0": "the list of strategies"
            }
          },
          "getAllocation(address,(address,uint32),address)": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the current/pending stake allocation"
            }
          },
          "getAllocationDelay(address)": {
            "details": "The operator must have a configured delay before allocating magnitude",
            "params": {
              "operator": "The operator to query"
            },
            "returns": {
              "_0": "Whether the operator has configured a delay",
              "_1": "The time in blocks between allocating magnitude and magnitude becoming slashable"
            }
          },
          "getAllocations(address[],(address,uint32),address)": {
            "params": {
              "operatorSet": "the operator set to query",
              "operators": "the operators to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "each operator's allocation"
            }
          },
          "getMaxMagnitude(address,address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get the max magnitude for"
            },
            "returns": {
              "_0": "the max magnitude for the strategy"
            }
          },
          "getMaxMagnitudes(address,address[])": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMaxMagnitudes(address[],address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operators": "the operators to query",
              "strategy": "the strategy to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each operator"
            }
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "blockNumber": "the blockNumber at which to check the max magnitudes",
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMemberCount((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to get the member count for"
            }
          },
          "getMembers((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "details": "This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.",
            "params": {
              "futureBlock": "the block at which to get allocation information. Should be a future block.",
              "operatorSet": "the operator set to query",
              "operators": "the list of operators whose slashable stakes will be returned",
              "strategies": "the strategies that each slashable stake corresponds to"
            },
            "returns": {
              "slashableStake": "a list of slashable stakes, indexed by [operator][strategy]"
            }
          },
          "getOperatorSetCount(address)": {
            "params": {
              "avs": "the AVS to query"
            }
          },
          "getRegisteredSets(address)": {
            "params": {
              "operator": "The operator address to query."
            }
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getStrategyAllocations(address,address)": {
            "details": "Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the list of all operator sets the operator has allocations for",
              "_1": "the corresponding list of allocations from the specific `strategy`"
            }
          },
          "initialize(address,uint256)": {
            "details": "Initializes the initial owner and paused status."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "params": {
              "operator": "The operator to query",
              "operatorSet": "The operator set to query"
            }
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "details": "Updates encumberedMagnitude for the updated strategiesmsg.sender is used as operator",
            "params": {
              "operator": "the operator to modify allocations for",
              "params": "array of magnitude adjustments for one or more operator sets"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "details": "After registering within the ALM, this method calls `avs.registerOperator` to complete registration. This call MUST succeed in order for registration to be successful."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST already exist in the operator set",
            "params": {
              "avs": "the avs to remove strategies for",
              "operatorSetId": "the operator set to remove strategies from",
              "strategies": "the strategies to remove"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setAVSRegistrar(address,address)": {
            "params": {
              "registrar": "the new registrar address"
            }
          },
          "setAllocationDelay(address,uint32)": {
            "params": {
              "delay": "the allocation delay in blocks",
              "operator": "The operator to set the delay on behalf of."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateAVSMetadataURI(address,string)": {
            "details": "Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.",
            "params": {
              "metadataURI": "The URI for metadata associated with an AVS."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ALLOCATION_CONFIGURATION_DELAY()": {
            "notice": "Delay before alloaction delay modifications take effect."
          },
          "DEALLOCATION_DELAY()": {
            "notice": "Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to."
          },
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to add strategies to an operator set"
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "notice": "This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed."
          },
          "createOperatorSets(address,(uint32,address[])[])": {
            "notice": "Allows an AVS to create new operator sets, defining strategies that the operator set uses"
          },
          "delegation()": {
            "notice": "The DelegationManager contract for EigenLayer"
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "notice": "Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed."
          },
          "getAVSRegistrar(address)": {
            "notice": "Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)"
          },
          "getAllocatableMagnitude(address,address)": {
            "notice": "For a strategy, get the amount of magnitude not currently allocated to any operator set"
          },
          "getAllocatedSets(address)": {
            "notice": "Returns the list of operator sets the operator has current or pending allocations/deallocations in"
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "notice": "Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set."
          },
          "getAllocation(address,(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocation an operator has from a strategy to an operator set"
          },
          "getAllocationDelay(address)": {
            "notice": "Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false."
          },
          "getAllocations(address[],(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocations for multiple operators from a strategy to an operator set"
          },
          "getMaxMagnitude(address,address)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategy"
          },
          "getMaxMagnitudes(address,address[])": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies"
          },
          "getMaxMagnitudes(address[],address)": {
            "notice": "Returns the maximum magnitudes each operator can allocate for the given strategy"
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies at a given block number"
          },
          "getMemberCount((address,uint32))": {
            "notice": "Returns the number of operators registered to an operatorSet."
          },
          "getMembers((address,uint32))": {
            "notice": "Returns all the operators registered to an operator set"
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "notice": "Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set."
          },
          "getOperatorSetCount(address)": {
            "notice": "Returns the number of operator sets for the AVS"
          },
          "getRegisteredSets(address)": {
            "notice": "Returns a list of all operator sets the operator is registered for"
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "notice": "Returns an array of strategies in the operatorSet."
          },
          "getStrategyAllocations(address,address)": {
            "notice": "Given a strategy, returns a list of operator sets and corresponding stake allocations."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "notice": "Returns whether the operator is registered for the operator set"
          },
          "isOperatorSet((address,uint32))": {
            "notice": "Returns whether the operator set exists"
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "notice": "Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "notice": "Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to remove strategies from an operator set"
          },
          "setAVSRegistrar(address,address)": {
            "notice": "Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address."
          },
          "setAllocationDelay(address,uint32)": {
            "notice": "Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable."
          },
          "slashOperator(address,(address,uint32,address[],uint256[],string))": {
            "notice": "Called by an AVS to slash an operator in a given operator set"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateAVSMetadataURI(address,string)": {
            "notice": "Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/AllocationManager.sol": "AllocationManager"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol": {
        "keccak256": "0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c",
        "urls": [
          "bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7",
          "dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/contracts/core/AllocationManager.sol": {
        "keccak256": "0xd914c41d7758f743cf32b3b599433c1a817e0fb403502f2587c0b1268984395b",
        "urls": [
          "bzz-raw://be421c4920762eccfc500dde57300c139b2e03ab8dd476ecb5fc479d684b6300",
          "dweb:/ipfs/QmcxyrCrhRJVc48fp1zejrToNCSWaNTGvxWb76ozJV7A1K"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/AllocationManagerStorage.sol": {
        "keccak256": "0x236871c7aac8a4fa0e473cb628f548e5d4378039b7879e5a39e3269cc429dfdb",
        "urls": [
          "bzz-raw://bf5de3c85b665af34a38acad42bfe7047b4ae4da340ffeab2704d0e324388782",
          "dweb:/ipfs/QmQwAk3MJ3w9Pr6NxrNsXfEucrDPYS1qG2nS5xgMRo9h5a"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0x6d5f209cc63b57e1db891e014a098bd277bb3cd54d815ee9455ade2cdf44020a",
        "urls": [
          "bzz-raw://50546cefb737b88803bc6a63cfa962b228fd0d1e2697d6be9166718577e7656e",
          "dweb:/ipfs/QmUP7uYvJV3Eq9vbKdqTJ61jaNZ4QZD6H4fJDBwLw5qyrv"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0xd2ed2a29162ba64cba800ca788011adb34798538680f961c81ba939b55c8a59a",
        "urls": [
          "bzz-raw://9785b1651e5378c0eb837a1a1fdef02d53f468b6b32ca580589781978e985ec2",
          "dweb:/ipfs/QmXW7VMAc92qxSh7zBfqnVEnv4oY8HUszA6bjKUy74QfXG"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xf63c35c86d3bc3beddde6138f034ff312263496ffbaebf756a4e01feffb82e85",
        "urls": [
          "bzz-raw://8bd5a9a01241b60b2634888a0ed20db0139fc73b03d28ce6e4af99357d84e519",
          "dweb:/ipfs/QmezYUgKrAKzZuS4TmiyK3QuxvEmdZESVu1PdcVra3R8P1"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b",
        "urls": [
          "bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8",
          "dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de",
        "urls": [
          "bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b",
          "dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3",
        "urls": [
          "bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4",
          "dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x63d44478f91bfb05bfc6d406587f7c2b49af6bd4616d01dd5c3b9ef65d605eba",
        "urls": [
          "bzz-raw://ee1d930124139021384a9197deb5c9b7bfc74bf9d641c9bb449593bc23b2a1fe",
          "dweb:/ipfs/QmWRpQ9eL5oajiTF5CA9APF9zz6QyY1Lcg8tBTrpPTTkzx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0x47ed63ef3077c4f95eb3d9f116f43109642a118387affb32805fbfbaad6bb3b2",
        "urls": [
          "bzz-raw://5aa7fa62d31a77e532cb6d33952bc68efcfd42416b1fbbde13d0c3aee9beff6c",
          "dweb:/ipfs/QmbUf6cjtvBtX1JLspuq7L89n2rcTcvG2UBRcAC4Raw4o9"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Snapshots.sol": {
        "keccak256": "0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6",
        "urls": [
          "bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b",
          "dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY"
        ],
        "license": "MIT"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666",
        "urls": [
          "bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd",
          "dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 119
}