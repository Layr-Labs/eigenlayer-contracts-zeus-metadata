{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_delegation",
          "type": "address",
          "internalType": "contract IDelegationManager"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_DEALLOCATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_ALLOCATION_CONFIGURATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ALLOCATION_CONFIGURATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DEALLOCATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addStrategiesToOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "clearDeallocationQueue",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "numToClear",
          "type": "uint16[]",
          "internalType": "uint16[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createOperatorSets",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
          "components": [
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IDelegationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deregisterFromOperatorSets",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.DeregisterParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "encumberedMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatableMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedStrategies",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocation",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.Allocation",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocations",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudesAtBlock",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "blockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMemberCount",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMembers",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMinimumSlashableStake",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "futureBlock",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "slashableStake",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetCount",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRegisteredSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategiesInOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isMemberOfOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "modifyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
          "components": [
            {
              "name": "operatorSet",
              "type": "tuple",
              "internalType": "struct OperatorSet",
              "components": [
                {
                  "name": "avs",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "id",
                  "type": "uint32",
                  "internalType": "uint32"
                }
              ]
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "newMagnitudes",
              "type": "uint64[]",
              "internalType": "uint64[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerForOperatorSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.RegisterParams",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeStrategiesFromOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "slashOperator",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.SlashingParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "wadsToSlash",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateAVSMetadataURI",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "AVSMetadataURIUpdated",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AVSRegistrarSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "indexed": false,
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationDelaySet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "magnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EncumberedMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "encumberedMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "maxMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorAddedToOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetCreated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSlashed",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategies",
          "type": "address[]",
          "indexed": false,
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "wadSlashed",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "description",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyAddedToOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Empty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCaller",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSnapshotOrdering",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidWadToSlash",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ModificationAlreadyPending",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorNotSlashable",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OutOfBounds",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SameMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategiesMustBeInAscendingOrder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyAlreadyInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyNotInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UninitializedAllocationDelay",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610120604052348015610010575f5ffd5b50604051615a75380380615a7583398101604081905261002f91610180565b82858383876001600160a01b03811661005b576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b0390811660805292831660a05263ffffffff91821660c0521660e052166101005261008b610095565b50505050506101e9565b5f54610100900460ff16156101005760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff9081161461014f575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b0381168114610165575f5ffd5b50565b805163ffffffff8116811461017b575f5ffd5b919050565b5f5f5f5f5f60a08688031215610194575f5ffd5b855161019f81610151565b60208701519095506101b081610151565b60408701519094506101c181610151565b92506101cf60608701610168565b91506101dd60808701610168565b90509295509295909350565b60805160a05160c05160e051610100516157fb61027a5f395f81816103f9015261370301525f81816105480152613d0301525f818161031e0152818161223e015261293501525f81816106fa01528181610c970152818161161c01528181611c8301528181611ced0152612bfc01525f818161056f0152818161079201528181611d92015261337a01526157fb5ff3fe608060405234801561000f575f5ffd5b5060043610610281575f3560e01c80636e875dba11610156578063a984eb3a116100ca578063c221d8ae11610084578063c221d8ae146106bc578063cd6dc687146106cf578063d3d96ff4146106e2578063df5cf723146106f5578063f2fde38b1461071c578063fabc1cbc1461072f575f5ffd5b8063a984eb3a1461060e578063adc2e3d914610641578063b2447af714610654578063b66bd98914610667578063b9fbaed11461067a578063ba1a84e5146106a9575f5ffd5b80638ce648541161011b5780638ce64854146105915780638da5cb5b146105b157806394d7d00c146105c2578063952899ee146105d5578063a9333ec8146105e8578063a9821821146105fb575f5ffd5b80636e875dba14610515578063715018a61461052857806379ae50cd146105305780637bc1ef6114610543578063886f11951461056a575f5ffd5b80634657e26a116101f8578063595c6a67116101b2578063595c6a67146104875780635ac86ab71461048f5780635c975abb146104b2578063670d3ba2146104c45780636cfb4481146104d75780636e3492b514610502575f5ffd5b80634657e26a146103f45780634a10ffe51461041b5780634b5046ef1461043b57806350feea201461044e578063547afb871461046157806356c483e614610474575f5ffd5b80632981eb77116102495780632981eb77146103195780632bab2c4a14610355578063304c10cd1461037557806336352057146103a057806340120dab146103b35780634177a87c146103d4575f5ffd5b806310e1b9b814610285578063136439dd146102ae57806315fe5028146102c3578063260dc758146102e3578063261f84e014610306575b5f5ffd5b610298610293366004614728565b610742565b6040516102a5919061476f565b60405180910390f35b6102c16102bc3660046147a2565b61077d565b005b6102d66102d13660046147b9565b610852565b6040516102a59190614837565b6102f66102f1366004614849565b610969565b60405190151581526020016102a5565b6102c16103143660046148a3565b6109a0565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016102a5565b610368610363366004614988565b610c43565b6040516102a59190614a3c565b6103886103833660046147b9565b610f30565b6040516001600160a01b0390911681526020016102a5565b6102c16103ae366004614a9f565b610f5f565b6103c66103c1366004614af1565b611771565b6040516102a5929190614b7e565b6103e76103e2366004614849565b6118ec565b6040516102a59190614bdb565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b61042e610429366004614bed565b611910565b6040516102a59190614c30565b6102c1610449366004614c7b565b6119b8565b6102c161045c366004614cfb565b611a72565b61042e61046f366004614d59565b611bd0565b6102c1610482366004614da5565b611c78565b6102c1611d7d565b6102f661049d366004614dd8565b606654600160ff9092169190911b9081161490565b6066545b6040519081526020016102a5565b6102f66104d2366004614df8565b611e2c565b6104ea6104e5366004614af1565b611e3d565b6040516001600160401b0390911681526020016102a5565b6102c1610510366004614e39565b611faa565b6103e7610523366004614849565b61237a565b6102c161238b565b6102d661053e3660046147b9565b61239c565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6105a461059f366004614e6a565b612476565b6040516102a59190614ead565b6033546001600160a01b0316610388565b61042e6105d0366004614ebf565b61253b565b6102c16105e3366004614f1a565b612627565b6104ea6105f6366004614af1565b612aee565b6102c16106093660046150c3565b612b1d565b6104ea61061c366004614af1565b60a260209081525f92835260408084209091529082529020546001600160401b031681565b6102c161064f366004615141565b612b8d565b6104b6610662366004614849565b612edc565b6102c1610675366004614cfb565b612efe565b61068d6106883660046147b9565b613058565b60408051921515835263ffffffff9091166020830152016102a5565b6104b66106b73660046147b9565b6130f2565b6103e76106ca366004614df8565b613112565b6102c16106dd366004615183565b613143565b6102c16106f0366004614af1565b613260565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6102c161072a3660046147b9565b6132ff565b6102c161073d3660046147a2565b613378565b604080516060810182525f80825260208201819052918101829052906107718561076b8661348e565b856134f1565b925050505b9392505050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156107df573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080391906151ad565b61082057604051631d77d47760e21b815260040160405180910390fd5b60665481811681146108455760405163c61dca5d60e01b815260040160405180910390fd5b61084e8261365d565b5050565b6001600160a01b0381165f908152609d60205260408120606091906108769061369a565b90505f816001600160401b038111156108915761089161464c565b6040519080825280602002602001820160405280156108d557816020015b604080518082019091525f80825260208201528152602001906001900390816108af5790505b5090505f5b82811015610961576001600160a01b0385165f908152609d6020526040902061093c9061090790836136a3565b604080518082019091525f80825260208201525060408051808201909152606082901c815263ffffffff909116602082015290565b82828151811061094e5761094e6151cc565b60209081029190910101526001016108da565b509392505050565b60208082015182516001600160a01b03165f90815260989092526040822061099a9163ffffffff908116906136ae16565b92915050565b826109aa816136c5565b6109c75760405163932d94f760e01b815260040160405180910390fd5b5f5b82811015610c3c575f6040518060400160405280876001600160a01b031681526020018686858181106109fe576109fe6151cc565b9050602002810190610a1091906151e0565b610a1e9060208101906151fe565b63ffffffff168152509050610a68816020015163ffffffff1660985f896001600160a01b03166001600160a01b031681526020019081526020015f2061376f90919063ffffffff16565b610a8557604051631fb1705560e21b815260040160405180910390fd5b7f31629285ead2335ae0933f86ed2ae63321f7af77b4e6eaabc42c057880977e6c6040518060400160405280886001600160a01b03168152602001836020015163ffffffff16815250604051610adb9190615217565b60405180910390a15f610aed8261348e565b90505f5b868685818110610b0357610b036151cc565b9050602002810190610b1591906151e0565b610b23906020810190615225565b9050811015610c3157610b99878786818110610b4157610b416151cc565b9050602002810190610b5391906151e0565b610b61906020810190615225565b83818110610b7157610b716151cc565b9050602002016020810190610b8691906147b9565b5f8481526099602052604090209061377a565b507f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83888887818110610bce57610bce6151cc565b9050602002810190610be091906151e0565b610bee906020810190615225565b84818110610bfe57610bfe6151cc565b9050602002016020810190610c1391906147b9565b604051610c2192919061526a565b60405180910390a1600101610af1565b5050506001016109c9565b5050505050565b606083516001600160401b03811115610c5e57610c5e61464c565b604051908082528060200260200182016040528015610c9157816020015b6060815260200190600190039081610c7c5790505b5090505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f0e0e67686866040518363ffffffff1660e01b8152600401610ce3929190615290565b5f60405180830381865afa158015610cfd573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610d2491908101906152b4565b90505f5b8551811015610f26575f868281518110610d4457610d446151cc565b6020026020010151905085516001600160401b03811115610d6757610d6761464c565b604051908082528060200260200182016040528015610d90578160200160208202803683370190505b50848381518110610da357610da36151cc565b60209081029190910101525f5b8651811015610f1c575f878281518110610dcc57610dcc6151cc565b6020908102919091018101516001600160a01b038086165f90815260a1845260408082209284168252919093528220909250610e079061378e565b9050806001600160401b03165f03610e20575050610f14565b5f610e2c858d85610742565b90508863ffffffff16816040015163ffffffff1611158015610e5457505f8160200151600f0b125b15610e7657610e6a815f015182602001516137a1565b6001600160401b031681525b80515f90610e91906001600160401b039081169085166137b5565b9050610ed881898981518110610ea957610ea96151cc565b60200260200101518781518110610ec257610ec26151cc565b60200260200101516137c990919063ffffffff16565b898881518110610eea57610eea6151cc565b60200260200101518681518110610f0357610f036151cc565b602002602001018181525050505050505b600101610db0565b5050600101610d28565b5050949350505050565b6001600160a01b038082165f908152609760205260408120549091168015610f585780610776565b5090919050565b606654600190600290811603610f885760405163840a48d560e01b815260040160405180910390fd5b82610f92816136c5565b610faf5760405163932d94f760e01b815260040160405180910390fd5b5f6040518060400160405280866001600160a01b03168152602001856020016020810190610fdd91906151fe565b63ffffffff16905290505f610ffe610ff860208701876147b9565b836137dd565b905061100d6060860186615225565b905061101c6040870187615225565b90501461103c576040516343714afd60e01b815260040160405180910390fd5b60208083015183516001600160a01b03165f9081526098909252604090912061106e9163ffffffff908116906136ae16565b61108b57604051631fb1705560e21b815260040160405180910390fd5b806110a95760405163ebbff49760e01b815260040160405180910390fd5b5f6110b76040870187615225565b90506001600160401b038111156110d0576110d061464c565b6040519080825280602002602001820160405280156110f9578160200160208202803683370190505b5090505f5b61110b6040880188615225565b90508110156117025780158061119e57506111296040880188615225565b6111346001846153d4565b818110611143576111436151cc565b905060200201602081019061115891906147b9565b6001600160a01b031661116e6040890189615225565b8381811061117e5761117e6151cc565b905060200201602081019061119391906147b9565b6001600160a01b0316115b6111bb57604051639f1c805360e01b815260040160405180910390fd5b6111c86060880188615225565b828181106111d8576111d86151cc565b905060200201355f1080156112185750670de0b6b3a76400006111fe6060890189615225565b8381811061120e5761120e6151cc565b9050602002013511155b61123557604051631353603160e01b815260040160405180910390fd5b6112916112456040890189615225565b83818110611255576112556151cc565b905060200201602081019061126a91906147b9565b60995f6112768861348e565b81526020019081526020015f2061385390919063ffffffff16565b6112ae576040516331bc342760e11b815260040160405180910390fd5b5f806113006112c060208b018b6147b9565b6112c98861348e565b6112d660408d018d615225565b878181106112e6576112e66151cc565b90506020020160208101906112fb91906147b9565b6134f1565b805191935091506001600160401b03165f0361131d5750506116fa565b5f61135861132e60608c018c615225565b8681811061133e5761133e6151cc565b85516001600160401b031692602090910201359050613874565b83519091506113736001600160401b038084169083166137b5565b868681518110611385576113856151cc565b60200260200101818152505081835f018181516113a291906153e7565b6001600160401b03169052508351829085906113bf9083906153e7565b6001600160401b03169052506020840180518391906113df9083906153e7565b6001600160401b031690525060208301515f600f9190910b12156114fa575f61144261140e60608e018e615225565b8881811061141e5761141e6151cc565b90506020020135856020015161143390615406565b6001600160801b031690613874565b9050806001600160401b03168460200181815161145f919061542a565b600f0b9052507f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd61149360208e018e6147b9565b8a8e80604001906114a49190615225565b8a8181106114b4576114b46151cc565b90506020020160208101906114c991906147b9565b6114da885f015189602001516137a1565b88604001516040516114f0959493929190615457565b60405180910390a1505b61154c61150a60208d018d6147b9565b6115138a61348e565b61152060408f018f615225565b89818110611530576115306151cc565b905060200201602081019061154591906147b9565b878761388a565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd61157a60208d018d6147b9565b8961158860408f018f615225565b89818110611598576115986151cc565b90506020020160208101906115ad91906147b9565b86516040516115c194939291904390615457565b60405180910390a16116126115d960208d018d6147b9565b6115e660408e018e615225565b888181106115f6576115f66151cc565b905060200201602081019061160b91906147b9565b8651613aca565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ee74937f61164e60208e018e6147b9565b61165b60408f018f615225565b8981811061166b5761166b6151cc565b905060200201602081019061168091906147b9565b875160405160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526001600160401b0380861660448401521660648201526084015f604051808303815f87803b1580156116df575f5ffd5b505af11580156116f1573d5f5f3e3d5ffd5b50505050505050505b6001016110fe565b507f80969ad29428d6797ee7aad084f9e4a42a82fc506dcd2ca3b6fb431f85ccebe561173160208801886147b9565b8461173f60408a018a615225565b8561174d60808d018d6154a8565b6040516117609796959493929190615512565b60405180910390a150505050505050565b6001600160a01b0382165f908152609d6020526040812060609182916117969061369a565b90505f816001600160401b038111156117b1576117b161464c565b6040519080825280602002602001820160405280156117f557816020015b604080518082019091525f80825260208201528152602001906001900390816117cf5790505b5090505f826001600160401b038111156118115761181161464c565b60405190808252806020026020018201604052801561185a57816020015b604080516060810182525f80825260208083018290529282015282525f1990920191018161182f5790505b5090505f5b838110156118dd576001600160a01b0388165f908152609d6020526040812061188c9061090790846136a3565b9050808483815181106118a1576118a16151cc565b60200260200101819052506118b789828a610742565b8383815181106118c9576118c96151cc565b60209081029190910101525060010161185f565b509093509150505b9250929050565b60605f61077660995f6118fe8661348e565b81526020019081526020015f20613b4c565b60605f83516001600160401b0381111561192c5761192c61464c565b604051908082528060200260200182016040528015611955578160200160208202803683370190505b5090505f5b845181101561096157611986858281518110611978576119786151cc565b602002602001015185612aee565b828281518110611998576119986151cc565b6001600160401b039092166020928302919091019091015260010161195a565b6066545f906001908116036119e05760405163840a48d560e01b815260040160405180910390fd5b838214611a00576040516343714afd60e01b815260040160405180910390fd5b5f5b84811015611a6957611a6187878784818110611a2057611a206151cc565b9050602002016020810190611a3591906147b9565b868685818110611a4757611a476151cc565b9050602002016020810190611a5c91906155a8565b613b58565b600101611a02565b50505050505050565b83611a7c816136c5565b611a995760405163932d94f760e01b815260040160405180910390fd5b604080518082019091526001600160a01b038616815263ffffffff851660208201525f611ac58261348e565b9050611b06826020015163ffffffff1660985f8a6001600160a01b03166001600160a01b031681526020019081526020015f206136ae90919063ffffffff16565b611b2357604051631fb1705560e21b815260040160405180910390fd5b5f5b84811015611bc657611b42868683818110610b7157610b716151cc565b611b5f5760405163585cfb2f60e01b815260040160405180910390fd5b7f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83878784818110611b9357611b936151cc565b9050602002016020810190611ba891906147b9565b604051611bb692919061526a565b60405180910390a1600101611b25565b5050505050505050565b60605f82516001600160401b03811115611bec57611bec61464c565b604051908082528060200260200182016040528015611c15578160200160208202803683370190505b5090505f5b835181101561096157611c4685858381518110611c3957611c396151cc565b6020026020010151612aee565b828281518110611c5857611c586151cc565b6001600160401b0390921660209283029190910190910152600101611c1a565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d7357611cb1826136c5565b611cce576040516348f5c3ed60e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0383811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611d32573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d5691906151ad565b611d735760405163ccea9e6f60e01b815260040160405180910390fd5b61084e8282613c5c565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611ddf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e0391906151ad565b611e2057604051631d77d47760e21b815260040160405180910390fd5b611e2a5f1961365d565b565b5f61077683609a5f6112768661348e565b6001600160a01b038281165f81815260a2602090815260408083209486168084529482528083205493835260a38252808320948352939052918220546001600160401b0390911690600f81810b600160801b909204900b03825b81811015611f67576001600160a01b038087165f90815260a3602090815260408083209389168352929052908120611ecf9083613dfd565b6001600160a01b038881165f90815260a0602090815260408083208584528252808320938b16835292815290829020825160608101845290546001600160401b0381168252600160401b8104600f0b92820192909252600160c01b90910463ffffffff16918101829052919250431015611f4a575050611f67565b611f588582602001516137a1565b94505050806001019050611e97565b506001600160a01b038086165f90815260a1602090815260408083209388168352929052208290611f979061378e565b611fa191906153e7565b95945050505050565b606654600290600490811603611fd35760405163840a48d560e01b815260040160405180910390fd5b611fe8611fe360208401846147b9565b6136c5565b806120015750612001611fe360408401602085016147b9565b61201e576040516348f5c3ed60e01b815260040160405180910390fd5b5f5b61202d6040840184615225565b90508110156122ef575f604051806040016040528085602001602081019061205591906147b9565b6001600160a01b031681526020016120706040870187615225565b85818110612080576120806151cc565b905060200201602081019061209591906151fe565b63ffffffff1681525090506120e2816020015163ffffffff1660985f8760200160208101906120c491906147b9565b6001600160a01b0316815260208101919091526040015f20906136ae565b6120ff57604051631fb1705560e21b815260040160405180910390fd5b609e5f61210f60208701876147b9565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6121388361348e565b815260208101919091526040015f205460ff16612168576040516325131d4f60e01b815260040160405180910390fd5b6121a26121748261348e565b609c5f61218460208901896147b9565b6001600160a01b0316815260208101919091526040015f2090613e6c565b506121da6121b360208601866147b9565b609a5f6121bf8561348e565b81526020019081526020015f20613e7790919063ffffffff16565b506121e860208501856147b9565b6001600160a01b03167fad34c3070be1dffbcaa499d000ba2b8d9848aefcac3059df245dd95c4ece14fe826040516122209190615217565b60405180910390a2604080518082019091525f8152602081016122637f0000000000000000000000000000000000000000000000000000000000000000436155c9565b63ffffffff169052609e5f61227b60208801886147b9565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6122a48461348e565b81526020808201929092526040015f2082518154939092015163ffffffff166101000264ffffffff00199215159290921664ffffffffff199093169290921717905550600101612020565b5061230361038360408401602085016147b9565b6001600160a01b0316639d8e0c2361231e60208501856147b9565b61232b6040860186615225565b6040518463ffffffff1660e01b81526004016123499392919061561e565b5f604051808303815f87803b158015612360575f5ffd5b505af1925050508015612371575060015b1561084e575050565b606061099a609a5f6118fe8561348e565b612393613e8b565b611e2a5f613ee5565b6001600160a01b0381165f908152609c60205260408120606091906123c09061369a565b90505f816001600160401b038111156123db576123db61464c565b60405190808252806020026020018201604052801561241f57816020015b604080518082019091525f80825260208201528152602001906001900390816123f95790505b5090505f5b82811015610961576001600160a01b0385165f908152609c602052604090206124519061090790836136a3565b828281518110612463576124636151cc565b6020908102919091010152600101612424565b60605f84516001600160401b038111156124925761249261464c565b6040519080825280602002602001820160405280156124db57816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816124b05790505b5090505f5b85518110156125325761250d8682815181106124fe576124fe6151cc565b60200260200101518686610742565b82828151811061251f5761251f6151cc565b60209081029190910101526001016124e0565b50949350505050565b60605f83516001600160401b038111156125575761255761464c565b604051908082528060200260200182016040528015612580578160200160208202803683370190505b5090505f5b8451811015612532576001600160a01b0386165f90815260a16020526040812086516125f5928792918990869081106125c0576125c06151cc565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20613f3690919063ffffffff16565b828281518110612607576126076151cc565b6001600160401b0390921660209283029190910190910152600101612585565b6066545f9060019081160361264f5760405163840a48d560e01b815260040160405180910390fd5b612658836136c5565b612675576040516348f5c3ed60e01b815260040160405180910390fd5b5f5f5f61268186613058565b91509150816126a35760405163fa55fc8160e01b815260040160405180910390fd5b91505f90505b8351811015610c3c578381815181106126c4576126c46151cc565b602002602001015160400151518482815181106126e3576126e36151cc565b602002602001015160200151511461270e576040516343714afd60e01b815260040160405180910390fd5b5f848281518110612721576127216151cc565b602090810291909101810151518082015181516001600160a01b03165f908152609890935260409092209092506127619163ffffffff908116906136ae16565b61277e57604051631fb1705560e21b815260040160405180910390fd5b5f61278987836137dd565b90505f5b86848151811061279f5761279f6151cc565b60200260200101516020015151811015612ae3575f8785815181106127c6576127c66151cc565b60200260200101516020015182815181106127e3576127e36151cc565b602002602001015190506127fa898261ffff613b58565b5f5f6128098b61076b8861348e565b915091508060200151600f0b5f1461283457604051630d8fcbe360e41b815260040160405180910390fd5b5f61284187858489613f4a565b9050612886825f01518c8a8151811061285c5761285c6151cc565b6020026020010151604001518781518110612879576128796151cc565b6020026020010151613f80565b600f0b602083018190525f036128af57604051634606179360e11b815260040160405180910390fd5b5f8260200151600f0b12156129f3578015612975576129306128d08861348e565b6001600160a01b03808f165f90815260a360209081526040808320938a16835292905220908154600160801b90819004600f0b5f818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b61295a7f0000000000000000000000000000000000000000000000000000000000000000436155c9565b6129659060016155c9565b63ffffffff166040830152612a60565b612987836020015183602001516137a1565b6001600160401b031660208401528a518b90899081106129a9576129a96151cc565b60200260200101516040015185815181106129c6576129c66151cc565b6020908102919091018101516001600160401b031683525f9083015263ffffffff43166040830152612a60565b5f8260200151600f0b1315612a6057612a14836020015183602001516137a1565b6001600160401b039081166020850181905284519091161015612a4a57604051636c9be0bf60e01b815260040160405180910390fd5b612a5489436155c9565b63ffffffff1660408301525b612a758c612a6d8961348e565b86868661388a565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd8c612aa36109078a61348e565b86612ab5865f015187602001516137a1565b8660400151604051612acb959493929190615457565b60405180910390a150506001909201915061278d9050565b5050506001016126a9565b6001600160a01b038083165f90815260a16020908152604080832093851683529290529081206107769061378e565b82612b27816136c5565b612b445760405163932d94f760e01b815260040160405180910390fd5b836001600160a01b03167fa89c1dc243d8908a96dd84944bcc97d6bc6ac00dd78e20621576be6a3c9437138484604051612b7f929190615642565b60405180910390a250505050565b606654600290600490811603612bb65760405163840a48d560e01b815260040160405180910390fd5b82612bc0816136c5565b612bdd5760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015612c41573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c6591906151ad565b612c825760405163ccea9e6f60e01b815260040160405180910390fd5b5f5b612c916020850185615225565b9050811015612e5957604080518082019091525f9080612cb460208801886147b9565b6001600160a01b03168152602001868060200190612cd29190615225565b85818110612ce257612ce26151cc565b9050602002016020810190612cf791906151fe565b63ffffffff90811690915260208083015183516001600160a01b03165f90815260989092526040909120929350612d339291908116906136ae16565b612d5057604051631fb1705560e21b815260040160405180910390fd5b612d5a86826137dd565b15612d7857604051636c6c6e2760e11b815260040160405180910390fd5b612da1612d848261348e565b6001600160a01b0388165f908152609c602052604090209061376f565b50612dcd86609a5f612db28561348e565b81526020019081526020015f2061377a90919063ffffffff16565b50856001600160a01b03167f43232edf9071753d2321e5fa7e018363ee248e5f2142e6c08edd3265bfb4895e82604051612e079190615217565b60405180910390a26001600160a01b0386165f908152609e60205260408120600191612e328461348e565b815260208101919091526040015f20805460ff191691151591909117905550600101612c84565b50612e6a61038360208501856147b9565b6001600160a01b031663adcf73f785612e866020870187615225565b612e9360408901896154a8565b6040518663ffffffff1660e01b8152600401612eb3959493929190615655565b5f604051808303815f87803b158015612eca575f5ffd5b505af1158015611bc6573d5f5f3e3d5ffd5b5f61099a609a5f612eec8561348e565b81526020019081526020015f2061369a565b83612f08816136c5565b612f255760405163932d94f760e01b815260040160405180910390fd5b6040805180820182526001600160a01b03871680825263ffffffff80881660208085018290525f93845260989052939091209192612f6492916136ae16565b612f8157604051631fb1705560e21b815260040160405180910390fd5b5f612f8b8261348e565b90505f5b84811015611bc657612fd4868683818110612fac57612fac6151cc565b9050602002016020810190612fc191906147b9565b5f84815260996020526040902090613e77565b612ff1576040516331bc342760e11b815260040160405180910390fd5b7f7b4b073d80dcac55a11177d8459ad9f664ceeb91f71f27167bb14f8152a7eeee83878784818110613025576130256151cc565b905060200201602081019061303a91906147b9565b60405161304892919061526a565b60405180910390a1600101612f8f565b6001600160a01b0381165f908152609b602090815260408083208151608081018352905463ffffffff80821680845260ff600160201b8404161515958401869052650100000000008304821694840194909452600160481b9091041660608201819052849391929190158015906130d95750826060015163ffffffff164310155b156130e8575050604081015160015b9590945092505050565b6001600160a01b0381165f90815260986020526040812061099a9061369a565b6001600160a01b0382165f908152609f602052604081206060919061313b90826118fe8661348e565b949350505050565b5f54610100900460ff161580801561316157505f54600160ff909116105b8061317a5750303b15801561317a57505f5460ff166001145b6131e25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff191660011790558015613203575f805461ff0019166101001790555b61320c8261365d565b61321583613ee5565b801561325b575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b8161326a816136c5565b6132875760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b038381165f90815260976020526040902080546001600160a01b0319169184169190911790557f2ae945c40c44dc0ec263f95609c3fdc6952e0aefa22d6374e44f2c997acedf85836132df81610f30565b604080516001600160a01b03938416815292909116602083015201613252565b613307613e8b565b6001600160a01b03811661336c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016131d9565b61337581613ee5565b50565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156133d4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133f89190615698565b6001600160a01b0316336001600160a01b0316146134295760405163794821ff60e01b815260040160405180910390fd5b606654801982198116146134505760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b5f815f0151826020015163ffffffff166040516020016134d992919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b60405160208183030381529060405261099a906156b3565b6040805180820182525f80825260208083018290528351606081018552828152808201839052808501839052845180860186526001600160a01b03898116855260a18452868520908816855290925293822092939281906135519061378e565b6001600160401b0390811682526001600160a01b038981165f81815260a260209081526040808320948c168084529482528083205486169682019690965291815260a082528481208b8252825284812092815291815290839020835160608101855290549283168152600160401b8304600f0b91810191909152600160c01b90910463ffffffff169181018290529192504310156135f3579092509050613655565b613604815f015182602001516137a1565b6001600160401b0316815260208101515f600f9190910b121561364257613633826020015182602001516137a1565b6001600160401b031660208301525b5f60408201819052602082015290925090505b935093915050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b5f61099a825490565b5f6107768383613f97565b5f8181526001830160205260408120541515610776565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af115801561374b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099a91906151ad565b5f6107768383613fbd565b5f610776836001600160a01b038416613fbd565b5f61099a82670de0b6b3a7640000614009565b5f610776826001600160401b03851661542a565b5f61077683670de0b6b3a76400008461404d565b5f6107768383670de0b6b3a764000061404d565b6001600160a01b0382165f908152609e602052604081208190816138008561348e565b815260208082019290925260409081015f2081518083019092525460ff8116151580835261010090910463ffffffff169282019290925291508061313b57506020015163ffffffff164311159392505050565b6001600160a01b0381165f9081526001830160205260408120541515610776565b5f6107768383670de0b6b3a76400006001614132565b6020808301516001600160a01b038088165f90815260a284526040808220928816825291909352909120546001600160401b0390811691161461395057602082810180516001600160a01b038881165f81815260a286526040808220938a1680835293875290819020805467ffffffffffffffff19166001600160401b0395861617905593518451918252948101919091529216908201527facf9095feb3a370c9cf692421c69ef320d4db5c66e6a7d29c7694eb02364fc559060600160405180910390a15b6001600160a01b038086165f90815260a060209081526040808320888452825280832093871683529281529082902083518154928501519385015163ffffffff16600160c01b0263ffffffff60c01b196001600160801b038616600160401b026001600160c01b03199095166001600160401b03909316929092179390931716919091179055600f0b15613a32576001600160a01b0385165f908152609f602090815260408083208784529091529020613a0a908461377a565b506001600160a01b0385165f908152609d60205260409020613a2c908561376f565b50610c3c565b80516001600160401b03165f03610c3c576001600160a01b0385165f908152609f602090815260408083208784529091529020613a6f9084613e77565b506001600160a01b0385165f908152609f602090815260408083208784529091529020613a9b9061369a565b5f03610c3c576001600160a01b0385165f908152609d60205260409020613ac29085613e6c565b505050505050565b6001600160a01b038084165f90815260a160209081526040808320938616835292905220613af990438361418b565b604080516001600160a01b038086168252841660208201526001600160401b038316918101919091527f1c6458079a41077d003c11faf9bf097e693bd67979e4e6500bac7b29db779b5c90606001613252565b60605f6107768361419f565b6001600160a01b038381165f90815260a360209081526040808320938616835292905290812054600f81810b600160801b909204900b035b5f81118015613ba257508261ffff1682105b15610c3c576001600160a01b038086165f90815260a3602090815260408083209388168352929052908120613bd6906141f8565b90505f5f613be58884896134f1565b91509150806040015163ffffffff16431015613c0357505050610c3c565b613c10888489858561388a565b6001600160a01b038089165f90815260a360209081526040808320938b16835292905220613c3d9061424a565b50613c47856156d6565b9450613c52846156ee565b9350505050613b90565b6001600160a01b0382165f908152609b60209081526040918290208251608081018452905463ffffffff808216835260ff600160201b830416151593830193909352650100000000008104831693820193909352600160481b909204166060820181905215801590613cd85750806060015163ffffffff164310155b15613cf257604081015163ffffffff168152600160208201525b63ffffffff82166040820152613d287f0000000000000000000000000000000000000000000000000000000000000000436155c9565b63ffffffff90811660608381019182526001600160a01b0386165f818152609b602090815260409182902087518154838a0151858b01519851928a1664ffffffffff1990921691909117600160201b91151591909102176cffffffffffffffff0000000000191665010000000000978916979097026cffffffff000000000000000000191696909617600160481b968816968702179055815192835294871694820194909452928301919091527f4e85751d6331506c6c62335f207eb31f12a61e570f34f5c17640308785c6d4db9101613252565b5f5f613e1f613e0b846142c7565b8554613e1a9190600f0b615703565b614334565b8454909150600160801b9004600f90810b9082900b12613e5257604051632d0483c560e21b815260040160405180910390fd5b600f0b5f9081526001939093016020525050604090205490565b5f610776838361439d565b5f610776836001600160a01b03841661439d565b6033546001600160a01b03163314611e2a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016131d9565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107768383670de0b6b3a7640000614480565b5f613f5b8460995f6112768961348e565b8015613f645750815b8015611fa157505090516001600160401b031615159392505050565b5f6107766001600160401b0380851690841661572a565b5f825f018281548110613fac57613fac6151cc565b905f5260205f200154905092915050565b5f81815260018301602052604081205461400257508154600181810184555f84815260208082209093018490558454848252828601909352604090209190915561099a565b505f61099a565b81545f9080156140455761402f846140226001846153d4565b5f91825260209091200190565b54600160201b90046001600160e01b031661313b565b509092915050565b5f80805f19858709858702925082811083820303915050805f036140845783828161407a5761407a615757565b0492505050610776565b8084116140cb5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016131d9565b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b5f5f61413f86868661404d565b905060018360028111156141555761415561576b565b14801561417157505f848061416c5761416c615757565b868809115b15611fa15761418160018261577f565b9695505050505050565b61325b83836001600160401b0384166144c8565b6060815f018054806020026020016040519081016040528092919081815260200182805480156141ec57602002820191905f5260205f20905b8154815260200190600101908083116141d8575b50505050509050919050565b5f6142128254600f81810b600160801b909204900b131590565b1561423057604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f9081526001909101602052604090205490565b5f6142648254600f81810b600160801b909204900b131590565b1561428257604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b5f6001600160ff1b038211156143305760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016131d9565b5090565b80600f81900b81146143985760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016131d9565b919050565b5f8181526001830160205260408120548015614477575f6143bf6001836153d4565b85549091505f906143d2906001906153d4565b9050818114614431575f865f0182815481106143f0576143f06151cc565b905f5260205f200154905080875f018481548110614410576144106151cc565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061444257614442615792565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f90556001935050505061099a565b5f91505061099a565b82545f9081614491868683856145cb565b905080156144be576144a8866140226001846153d4565b54600160201b90046001600160e01b0316610771565b5091949350505050565b8254801561457e575f6144e0856140226001856153d4565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090851610156145325760405163151b8e3f60e11b815260040160405180910390fd5b805163ffffffff80861691160361457c5782614553866140226001866153d4565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790555050505050565b505b506040805180820190915263ffffffff92831681526001600160e01b03918216602080830191825285546001810187555f968752952091519051909216600160201b029190921617910155565b5f5b81831015610961575f6145e0848461461e565b5f8781526020902090915063ffffffff86169082015463ffffffff16111561460a57809250614618565b61461581600161577f565b93505b506145cd565b5f61462c60028484186157a6565b6107769084841661577f565b6001600160a01b0381168114613375575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b03811182821017156146825761468261464c565b60405290565b604051601f8201601f191681016001600160401b03811182821017156146b0576146b061464c565b604052919050565b803563ffffffff81168114614398575f5ffd5b5f604082840312156146db575f5ffd5b604080519081016001600160401b03811182821017156146fd576146fd61464c565b604052905080823561470e81614638565b815261471c602084016146b8565b60208201525092915050565b5f5f5f6080848603121561473a575f5ffd5b833561474581614638565b925061475485602086016146cb565b9150606084013561476481614638565b809150509250925092565b81516001600160401b03168152602080830151600f0b9082015260408083015163ffffffff16908201526060810161099a565b5f602082840312156147b2575f5ffd5b5035919050565b5f602082840312156147c9575f5ffd5b813561077681614638565b80516001600160a01b0316825260209081015163ffffffff16910152565b5f8151808452602084019350602083015f5b8281101561482d576148178683516147d4565b6040959095019460209190910190600101614804565b5093949350505050565b602081525f61077660208301846147f2565b5f60408284031215614859575f5ffd5b61077683836146cb565b5f5f83601f840112614873575f5ffd5b5081356001600160401b03811115614889575f5ffd5b6020830191508360208260051b85010111156118e5575f5ffd5b5f5f5f604084860312156148b5575f5ffd5b83356148c081614638565b925060208401356001600160401b038111156148da575f5ffd5b6148e686828701614863565b9497909650939450505050565b5f6001600160401b0382111561490b5761490b61464c565b5060051b60200190565b5f82601f830112614924575f5ffd5b8135614937614932826148f3565b614688565b8082825260208201915060208360051b860101925085831115614958575f5ffd5b602085015b8381101561497e57803561497081614638565b83526020928301920161495d565b5095945050505050565b5f5f5f5f60a0858703121561499b575f5ffd5b6149a586866146cb565b935060408501356001600160401b038111156149bf575f5ffd5b6149cb87828801614915565b93505060608501356001600160401b038111156149e6575f5ffd5b6149f287828801614915565b925050614a01608086016146b8565b905092959194509250565b5f8151808452602084019350602083015f5b8281101561482d578151865260209586019590910190600101614a1e565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015614a9357603f19878603018452614a7e858351614a0c565b94506020938401939190910190600101614a62565b50929695505050505050565b5f5f60408385031215614ab0575f5ffd5b8235614abb81614638565b915060208301356001600160401b03811115614ad5575f5ffd5b830160a08186031215614ae6575f5ffd5b809150509250929050565b5f5f60408385031215614b02575f5ffd5b8235614b0d81614638565b91506020830135614ae681614638565b5f8151808452602084019350602083015f5b8281101561482d57614b6886835180516001600160401b03168252602080820151600f0b9083015260409081015163ffffffff16910152565b6060959095019460209190910190600101614b2f565b604081525f614b9060408301856147f2565b8281036020840152611fa18185614b1d565b5f8151808452602084019350602083015f5b8281101561482d5781516001600160a01b0316865260209586019590910190600101614bb4565b602081525f6107766020830184614ba2565b5f5f60408385031215614bfe575f5ffd5b82356001600160401b03811115614c13575f5ffd5b614c1f85828601614915565b9250506020830135614ae681614638565b602080825282518282018190525f918401906040840190835b81811015614c705783516001600160401b0316835260209384019390920191600101614c49565b509095945050505050565b5f5f5f5f5f60608688031215614c8f575f5ffd5b8535614c9a81614638565b945060208601356001600160401b03811115614cb4575f5ffd5b614cc088828901614863565b90955093505060408601356001600160401b03811115614cde575f5ffd5b614cea88828901614863565b969995985093965092949392505050565b5f5f5f5f60608587031215614d0e575f5ffd5b8435614d1981614638565b9350614d27602086016146b8565b925060408501356001600160401b03811115614d41575f5ffd5b614d4d87828801614863565b95989497509550505050565b5f5f60408385031215614d6a575f5ffd5b8235614d7581614638565b915060208301356001600160401b03811115614d8f575f5ffd5b614d9b85828601614915565b9150509250929050565b5f5f60408385031215614db6575f5ffd5b8235614dc181614638565b9150614dcf602084016146b8565b90509250929050565b5f60208284031215614de8575f5ffd5b813560ff81168114610776575f5ffd5b5f5f60608385031215614e09575f5ffd5b8235614e1481614638565b9150614dcf84602085016146cb565b5f60608284031215614e33575f5ffd5b50919050565b5f60208284031215614e49575f5ffd5b81356001600160401b03811115614e5e575f5ffd5b61313b84828501614e23565b5f5f5f60808486031215614e7c575f5ffd5b83356001600160401b03811115614e91575f5ffd5b614e9d86828701614915565b93505061475485602086016146cb565b602081525f6107766020830184614b1d565b5f5f5f60608486031215614ed1575f5ffd5b8335614edc81614638565b925060208401356001600160401b03811115614ef6575f5ffd5b614f0286828701614915565b925050614f11604085016146b8565b90509250925092565b5f5f60408385031215614f2b575f5ffd5b8235614f3681614638565b915060208301356001600160401b03811115614f50575f5ffd5b8301601f81018513614f60575f5ffd5b8035614f6e614932826148f3565b8082825260208201915060208360051b850101925087831115614f8f575f5ffd5b602084015b838110156150b45780356001600160401b03811115614fb1575f5ffd5b85016080818b03601f19011215614fc6575f5ffd5b614fce614660565b614fdb8b602084016146cb565b815260608201356001600160401b03811115614ff5575f5ffd5b6150048c602083860101614915565b60208301525060808201356001600160401b03811115615022575f5ffd5b6020818401019250508a601f830112615039575f5ffd5b8135615047614932826148f3565b8082825260208201915060208360051b86010192508d831115615068575f5ffd5b6020850194505b8285101561509e5784356001600160401b038116811461508d575f5ffd5b82526020948501949091019061506f565b6040840152505084525060209283019201614f94565b50809450505050509250929050565b5f5f5f604084860312156150d5575f5ffd5b83356150e081614638565b925060208401356001600160401b038111156150fa575f5ffd5b8401601f8101861361510a575f5ffd5b80356001600160401b0381111561511f575f5ffd5b866020828401011115615130575f5ffd5b939660209190910195509293505050565b5f5f60408385031215615152575f5ffd5b823561515d81614638565b915060208301356001600160401b03811115615177575f5ffd5b614d9b85828601614e23565b5f5f60408385031215615194575f5ffd5b823561519f81614638565b946020939093013593505050565b5f602082840312156151bd575f5ffd5b81518015158114610776575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b5f8235603e198336030181126151f4575f5ffd5b9190910192915050565b5f6020828403121561520e575f5ffd5b610776826146b8565b6040810161099a82846147d4565b5f5f8335601e1984360301811261523a575f5ffd5b8301803591506001600160401b03821115615253575f5ffd5b6020019150600581901b36038213156118e5575f5ffd5b6060810161527882856147d4565b6001600160a01b039290921660409190910152919050565b604081525f6152a26040830185614ba2565b8281036020840152611fa18185614ba2565b5f602082840312156152c4575f5ffd5b81516001600160401b038111156152d9575f5ffd5b8201601f810184136152e9575f5ffd5b80516152f7614932826148f3565b8082825260208201915060208360051b850101925086831115615318575f5ffd5b602084015b838110156153b55780516001600160401b0381111561533a575f5ffd5b8501603f8101891361534a575f5ffd5b602081015161535b614932826148f3565b808282526020820191506020808460051b8601010192508b83111561537e575f5ffd5b6040840193505b828410156153a0578351825260209384019390910190615385565b8652505060209384019391909101905061531d565b509695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561099a5761099a6153c0565b6001600160401b03828116828216039081111561099a5761099a6153c0565b5f81600f0b60016001607f1b03198103615422576154226153c0565b5f0392915050565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561099a5761099a6153c0565b6001600160a01b038616815260c0810161547460208301876147d4565b6001600160a01b039490941660608201526001600160401b0392909216608083015263ffffffff1660a09091015292915050565b5f5f8335601e198436030181126154bd575f5ffd5b8301803591506001600160401b038211156154d6575f5ffd5b6020019150368190038213156118e5575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b03881681525f60c08201615530602084018a6147d4565b60c060608401528690528660e083015f5b8881101561557157823561555481614638565b6001600160a01b0316825260209283019290910190600101615541565b5083810360808501526155848188614a0c565b91505082810360a084015261559a8185876154ea565b9a9950505050505050505050565b5f602082840312156155b8575f5ffd5b813561ffff81168114610776575f5ffd5b63ffffffff818116838216019081111561099a5761099a6153c0565b8183526020830192505f815f5b8481101561482d5763ffffffff615608836146b8565b16865260209586019591909101906001016155f2565b6001600160a01b03841681526040602082018190525f90611fa190830184866155e5565b602081525f61313b6020830184866154ea565b6001600160a01b03861681526060602082018190525f9061567990830186886155e5565b828103604084015261568c8185876154ea565b98975050505050505050565b5f602082840312156156a8575f5ffd5b815161077681614638565b80516020808301519190811015614e33575f1960209190910360031b1b16919050565b5f600182016156e7576156e76153c0565b5060010190565b5f816156fc576156fc6153c0565b505f190190565b8082018281125f831280158216821582161715615722576157226153c0565b505092915050565b600f82810b9082900b0360016001607f1b0319811260016001607f1b038213171561099a5761099a6153c0565b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b8082018082111561099a5761099a6153c0565b634e487b7160e01b5f52603160045260245ffd5b5f826157c057634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220049ddc48108b86f3be70590462d517d57c47bba9450f474f41b568a93ac1337d64736f6c634300081b0033",
    "sourceMap": "504:36335:103:-:0;;;1134:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1538:21;1403:11;1416:19;1437:31;1487:15;-1:-1:-1;;;;;3224:38:138;;3216:67;;;;-1:-1:-1;;;3216:67:138;;;;;;;;;;;;-1:-1:-1;;;;;3293:32:138;;;;;4746:24:104;;;;;4780:40;;;;;;4830:64;;;501:44:136;;;1575:22:103::3;:20;:22::i;:::-;1134:470:::0;;;;;504:36335;;5939:280:30;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:30;;1380:2:228;5998:66:30;;;1362:21:228;1419:2;1399:18;;;1392:30;1458:34;1438:18;;;1431:62;-1:-1:-1;;;1509:18:228;;;1502:37;1556:19;;5998:66:30;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:30;6140:15;6125:30;;;;;;6174:28;;1728:36:228;;;6174:28:30;;1716:2:228;1701:18;6174:28:30;;;;;;;6074:139;5939:280::o;14:151:228:-;-1:-1:-1;;;;;109:31:228;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:167::-;248:13;;301:10;290:22;;280:33;;270:61;;327:1;324;317:12;270:61;170:167;;;:::o;342:831::-;530:6;538;546;554;562;615:3;603:9;594:7;590:23;586:33;583:53;;;632:1;629;622:12;583:53;664:9;658:16;683:51;728:5;683:51;:::i;:::-;803:2;788:18;;782:25;753:5;;-1:-1:-1;816:53:228;782:25;816:53;:::i;:::-;940:2;925:18;;919:25;888:7;;-1:-1:-1;953:53:228;919:25;953:53;:::i;:::-;1025:7;-1:-1:-1;1051:48:228;1095:2;1080:18;;1051:48;:::i;:::-;1041:58;;1118:49;1162:3;1151:9;1147:19;1118:49;:::i;:::-;1108:59;;342:831;;;;;;;;:::o;1586:184::-;504:36335:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b5060043610610281575f3560e01c80636e875dba11610156578063a984eb3a116100ca578063c221d8ae11610084578063c221d8ae146106bc578063cd6dc687146106cf578063d3d96ff4146106e2578063df5cf723146106f5578063f2fde38b1461071c578063fabc1cbc1461072f575f5ffd5b8063a984eb3a1461060e578063adc2e3d914610641578063b2447af714610654578063b66bd98914610667578063b9fbaed11461067a578063ba1a84e5146106a9575f5ffd5b80638ce648541161011b5780638ce64854146105915780638da5cb5b146105b157806394d7d00c146105c2578063952899ee146105d5578063a9333ec8146105e8578063a9821821146105fb575f5ffd5b80636e875dba14610515578063715018a61461052857806379ae50cd146105305780637bc1ef6114610543578063886f11951461056a575f5ffd5b80634657e26a116101f8578063595c6a67116101b2578063595c6a67146104875780635ac86ab71461048f5780635c975abb146104b2578063670d3ba2146104c45780636cfb4481146104d75780636e3492b514610502575f5ffd5b80634657e26a146103f45780634a10ffe51461041b5780634b5046ef1461043b57806350feea201461044e578063547afb871461046157806356c483e614610474575f5ffd5b80632981eb77116102495780632981eb77146103195780632bab2c4a14610355578063304c10cd1461037557806336352057146103a057806340120dab146103b35780634177a87c146103d4575f5ffd5b806310e1b9b814610285578063136439dd146102ae57806315fe5028146102c3578063260dc758146102e3578063261f84e014610306575b5f5ffd5b610298610293366004614728565b610742565b6040516102a5919061476f565b60405180910390f35b6102c16102bc3660046147a2565b61077d565b005b6102d66102d13660046147b9565b610852565b6040516102a59190614837565b6102f66102f1366004614849565b610969565b60405190151581526020016102a5565b6102c16103143660046148a3565b6109a0565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016102a5565b610368610363366004614988565b610c43565b6040516102a59190614a3c565b6103886103833660046147b9565b610f30565b6040516001600160a01b0390911681526020016102a5565b6102c16103ae366004614a9f565b610f5f565b6103c66103c1366004614af1565b611771565b6040516102a5929190614b7e565b6103e76103e2366004614849565b6118ec565b6040516102a59190614bdb565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b61042e610429366004614bed565b611910565b6040516102a59190614c30565b6102c1610449366004614c7b565b6119b8565b6102c161045c366004614cfb565b611a72565b61042e61046f366004614d59565b611bd0565b6102c1610482366004614da5565b611c78565b6102c1611d7d565b6102f661049d366004614dd8565b606654600160ff9092169190911b9081161490565b6066545b6040519081526020016102a5565b6102f66104d2366004614df8565b611e2c565b6104ea6104e5366004614af1565b611e3d565b6040516001600160401b0390911681526020016102a5565b6102c1610510366004614e39565b611faa565b6103e7610523366004614849565b61237a565b6102c161238b565b6102d661053e3660046147b9565b61239c565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6105a461059f366004614e6a565b612476565b6040516102a59190614ead565b6033546001600160a01b0316610388565b61042e6105d0366004614ebf565b61253b565b6102c16105e3366004614f1a565b612627565b6104ea6105f6366004614af1565b612aee565b6102c16106093660046150c3565b612b1d565b6104ea61061c366004614af1565b60a260209081525f92835260408084209091529082529020546001600160401b031681565b6102c161064f366004615141565b612b8d565b6104b6610662366004614849565b612edc565b6102c1610675366004614cfb565b612efe565b61068d6106883660046147b9565b613058565b60408051921515835263ffffffff9091166020830152016102a5565b6104b66106b73660046147b9565b6130f2565b6103e76106ca366004614df8565b613112565b6102c16106dd366004615183565b613143565b6102c16106f0366004614af1565b613260565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6102c161072a3660046147b9565b6132ff565b6102c161073d3660046147a2565b613378565b604080516060810182525f80825260208201819052918101829052906107718561076b8661348e565b856134f1565b925050505b9392505050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156107df573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080391906151ad565b61082057604051631d77d47760e21b815260040160405180910390fd5b60665481811681146108455760405163c61dca5d60e01b815260040160405180910390fd5b61084e8261365d565b5050565b6001600160a01b0381165f908152609d60205260408120606091906108769061369a565b90505f816001600160401b038111156108915761089161464c565b6040519080825280602002602001820160405280156108d557816020015b604080518082019091525f80825260208201528152602001906001900390816108af5790505b5090505f5b82811015610961576001600160a01b0385165f908152609d6020526040902061093c9061090790836136a3565b604080518082019091525f80825260208201525060408051808201909152606082901c815263ffffffff909116602082015290565b82828151811061094e5761094e6151cc565b60209081029190910101526001016108da565b509392505050565b60208082015182516001600160a01b03165f90815260989092526040822061099a9163ffffffff908116906136ae16565b92915050565b826109aa816136c5565b6109c75760405163932d94f760e01b815260040160405180910390fd5b5f5b82811015610c3c575f6040518060400160405280876001600160a01b031681526020018686858181106109fe576109fe6151cc565b9050602002810190610a1091906151e0565b610a1e9060208101906151fe565b63ffffffff168152509050610a68816020015163ffffffff1660985f896001600160a01b03166001600160a01b031681526020019081526020015f2061376f90919063ffffffff16565b610a8557604051631fb1705560e21b815260040160405180910390fd5b7f31629285ead2335ae0933f86ed2ae63321f7af77b4e6eaabc42c057880977e6c6040518060400160405280886001600160a01b03168152602001836020015163ffffffff16815250604051610adb9190615217565b60405180910390a15f610aed8261348e565b90505f5b868685818110610b0357610b036151cc565b9050602002810190610b1591906151e0565b610b23906020810190615225565b9050811015610c3157610b99878786818110610b4157610b416151cc565b9050602002810190610b5391906151e0565b610b61906020810190615225565b83818110610b7157610b716151cc565b9050602002016020810190610b8691906147b9565b5f8481526099602052604090209061377a565b507f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83888887818110610bce57610bce6151cc565b9050602002810190610be091906151e0565b610bee906020810190615225565b84818110610bfe57610bfe6151cc565b9050602002016020810190610c1391906147b9565b604051610c2192919061526a565b60405180910390a1600101610af1565b5050506001016109c9565b5050505050565b606083516001600160401b03811115610c5e57610c5e61464c565b604051908082528060200260200182016040528015610c9157816020015b6060815260200190600190039081610c7c5790505b5090505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f0e0e67686866040518363ffffffff1660e01b8152600401610ce3929190615290565b5f60405180830381865afa158015610cfd573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610d2491908101906152b4565b90505f5b8551811015610f26575f868281518110610d4457610d446151cc565b6020026020010151905085516001600160401b03811115610d6757610d6761464c565b604051908082528060200260200182016040528015610d90578160200160208202803683370190505b50848381518110610da357610da36151cc565b60209081029190910101525f5b8651811015610f1c575f878281518110610dcc57610dcc6151cc565b6020908102919091018101516001600160a01b038086165f90815260a1845260408082209284168252919093528220909250610e079061378e565b9050806001600160401b03165f03610e20575050610f14565b5f610e2c858d85610742565b90508863ffffffff16816040015163ffffffff1611158015610e5457505f8160200151600f0b125b15610e7657610e6a815f015182602001516137a1565b6001600160401b031681525b80515f90610e91906001600160401b039081169085166137b5565b9050610ed881898981518110610ea957610ea96151cc565b60200260200101518781518110610ec257610ec26151cc565b60200260200101516137c990919063ffffffff16565b898881518110610eea57610eea6151cc565b60200260200101518681518110610f0357610f036151cc565b602002602001018181525050505050505b600101610db0565b5050600101610d28565b5050949350505050565b6001600160a01b038082165f908152609760205260408120549091168015610f585780610776565b5090919050565b606654600190600290811603610f885760405163840a48d560e01b815260040160405180910390fd5b82610f92816136c5565b610faf5760405163932d94f760e01b815260040160405180910390fd5b5f6040518060400160405280866001600160a01b03168152602001856020016020810190610fdd91906151fe565b63ffffffff16905290505f610ffe610ff860208701876147b9565b836137dd565b905061100d6060860186615225565b905061101c6040870187615225565b90501461103c576040516343714afd60e01b815260040160405180910390fd5b60208083015183516001600160a01b03165f9081526098909252604090912061106e9163ffffffff908116906136ae16565b61108b57604051631fb1705560e21b815260040160405180910390fd5b806110a95760405163ebbff49760e01b815260040160405180910390fd5b5f6110b76040870187615225565b90506001600160401b038111156110d0576110d061464c565b6040519080825280602002602001820160405280156110f9578160200160208202803683370190505b5090505f5b61110b6040880188615225565b90508110156117025780158061119e57506111296040880188615225565b6111346001846153d4565b818110611143576111436151cc565b905060200201602081019061115891906147b9565b6001600160a01b031661116e6040890189615225565b8381811061117e5761117e6151cc565b905060200201602081019061119391906147b9565b6001600160a01b0316115b6111bb57604051639f1c805360e01b815260040160405180910390fd5b6111c86060880188615225565b828181106111d8576111d86151cc565b905060200201355f1080156112185750670de0b6b3a76400006111fe6060890189615225565b8381811061120e5761120e6151cc565b9050602002013511155b61123557604051631353603160e01b815260040160405180910390fd5b6112916112456040890189615225565b83818110611255576112556151cc565b905060200201602081019061126a91906147b9565b60995f6112768861348e565b81526020019081526020015f2061385390919063ffffffff16565b6112ae576040516331bc342760e11b815260040160405180910390fd5b5f806113006112c060208b018b6147b9565b6112c98861348e565b6112d660408d018d615225565b878181106112e6576112e66151cc565b90506020020160208101906112fb91906147b9565b6134f1565b805191935091506001600160401b03165f0361131d5750506116fa565b5f61135861132e60608c018c615225565b8681811061133e5761133e6151cc565b85516001600160401b031692602090910201359050613874565b83519091506113736001600160401b038084169083166137b5565b868681518110611385576113856151cc565b60200260200101818152505081835f018181516113a291906153e7565b6001600160401b03169052508351829085906113bf9083906153e7565b6001600160401b03169052506020840180518391906113df9083906153e7565b6001600160401b031690525060208301515f600f9190910b12156114fa575f61144261140e60608e018e615225565b8881811061141e5761141e6151cc565b90506020020135856020015161143390615406565b6001600160801b031690613874565b9050806001600160401b03168460200181815161145f919061542a565b600f0b9052507f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd61149360208e018e6147b9565b8a8e80604001906114a49190615225565b8a8181106114b4576114b46151cc565b90506020020160208101906114c991906147b9565b6114da885f015189602001516137a1565b88604001516040516114f0959493929190615457565b60405180910390a1505b61154c61150a60208d018d6147b9565b6115138a61348e565b61152060408f018f615225565b89818110611530576115306151cc565b905060200201602081019061154591906147b9565b878761388a565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd61157a60208d018d6147b9565b8961158860408f018f615225565b89818110611598576115986151cc565b90506020020160208101906115ad91906147b9565b86516040516115c194939291904390615457565b60405180910390a16116126115d960208d018d6147b9565b6115e660408e018e615225565b888181106115f6576115f66151cc565b905060200201602081019061160b91906147b9565b8651613aca565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ee74937f61164e60208e018e6147b9565b61165b60408f018f615225565b8981811061166b5761166b6151cc565b905060200201602081019061168091906147b9565b875160405160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526001600160401b0380861660448401521660648201526084015f604051808303815f87803b1580156116df575f5ffd5b505af11580156116f1573d5f5f3e3d5ffd5b50505050505050505b6001016110fe565b507f80969ad29428d6797ee7aad084f9e4a42a82fc506dcd2ca3b6fb431f85ccebe561173160208801886147b9565b8461173f60408a018a615225565b8561174d60808d018d6154a8565b6040516117609796959493929190615512565b60405180910390a150505050505050565b6001600160a01b0382165f908152609d6020526040812060609182916117969061369a565b90505f816001600160401b038111156117b1576117b161464c565b6040519080825280602002602001820160405280156117f557816020015b604080518082019091525f80825260208201528152602001906001900390816117cf5790505b5090505f826001600160401b038111156118115761181161464c565b60405190808252806020026020018201604052801561185a57816020015b604080516060810182525f80825260208083018290529282015282525f1990920191018161182f5790505b5090505f5b838110156118dd576001600160a01b0388165f908152609d6020526040812061188c9061090790846136a3565b9050808483815181106118a1576118a16151cc565b60200260200101819052506118b789828a610742565b8383815181106118c9576118c96151cc565b60209081029190910101525060010161185f565b509093509150505b9250929050565b60605f61077660995f6118fe8661348e565b81526020019081526020015f20613b4c565b60605f83516001600160401b0381111561192c5761192c61464c565b604051908082528060200260200182016040528015611955578160200160208202803683370190505b5090505f5b845181101561096157611986858281518110611978576119786151cc565b602002602001015185612aee565b828281518110611998576119986151cc565b6001600160401b039092166020928302919091019091015260010161195a565b6066545f906001908116036119e05760405163840a48d560e01b815260040160405180910390fd5b838214611a00576040516343714afd60e01b815260040160405180910390fd5b5f5b84811015611a6957611a6187878784818110611a2057611a206151cc565b9050602002016020810190611a3591906147b9565b868685818110611a4757611a476151cc565b9050602002016020810190611a5c91906155a8565b613b58565b600101611a02565b50505050505050565b83611a7c816136c5565b611a995760405163932d94f760e01b815260040160405180910390fd5b604080518082019091526001600160a01b038616815263ffffffff851660208201525f611ac58261348e565b9050611b06826020015163ffffffff1660985f8a6001600160a01b03166001600160a01b031681526020019081526020015f206136ae90919063ffffffff16565b611b2357604051631fb1705560e21b815260040160405180910390fd5b5f5b84811015611bc657611b42868683818110610b7157610b716151cc565b611b5f5760405163585cfb2f60e01b815260040160405180910390fd5b7f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83878784818110611b9357611b936151cc565b9050602002016020810190611ba891906147b9565b604051611bb692919061526a565b60405180910390a1600101611b25565b5050505050505050565b60605f82516001600160401b03811115611bec57611bec61464c565b604051908082528060200260200182016040528015611c15578160200160208202803683370190505b5090505f5b835181101561096157611c4685858381518110611c3957611c396151cc565b6020026020010151612aee565b828281518110611c5857611c586151cc565b6001600160401b0390921660209283029190910190910152600101611c1a565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d7357611cb1826136c5565b611cce576040516348f5c3ed60e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0383811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611d32573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d5691906151ad565b611d735760405163ccea9e6f60e01b815260040160405180910390fd5b61084e8282613c5c565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611ddf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e0391906151ad565b611e2057604051631d77d47760e21b815260040160405180910390fd5b611e2a5f1961365d565b565b5f61077683609a5f6112768661348e565b6001600160a01b038281165f81815260a2602090815260408083209486168084529482528083205493835260a38252808320948352939052918220546001600160401b0390911690600f81810b600160801b909204900b03825b81811015611f67576001600160a01b038087165f90815260a3602090815260408083209389168352929052908120611ecf9083613dfd565b6001600160a01b038881165f90815260a0602090815260408083208584528252808320938b16835292815290829020825160608101845290546001600160401b0381168252600160401b8104600f0b92820192909252600160c01b90910463ffffffff16918101829052919250431015611f4a575050611f67565b611f588582602001516137a1565b94505050806001019050611e97565b506001600160a01b038086165f90815260a1602090815260408083209388168352929052208290611f979061378e565b611fa191906153e7565b95945050505050565b606654600290600490811603611fd35760405163840a48d560e01b815260040160405180910390fd5b611fe8611fe360208401846147b9565b6136c5565b806120015750612001611fe360408401602085016147b9565b61201e576040516348f5c3ed60e01b815260040160405180910390fd5b5f5b61202d6040840184615225565b90508110156122ef575f604051806040016040528085602001602081019061205591906147b9565b6001600160a01b031681526020016120706040870187615225565b85818110612080576120806151cc565b905060200201602081019061209591906151fe565b63ffffffff1681525090506120e2816020015163ffffffff1660985f8760200160208101906120c491906147b9565b6001600160a01b0316815260208101919091526040015f20906136ae565b6120ff57604051631fb1705560e21b815260040160405180910390fd5b609e5f61210f60208701876147b9565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6121388361348e565b815260208101919091526040015f205460ff16612168576040516325131d4f60e01b815260040160405180910390fd5b6121a26121748261348e565b609c5f61218460208901896147b9565b6001600160a01b0316815260208101919091526040015f2090613e6c565b506121da6121b360208601866147b9565b609a5f6121bf8561348e565b81526020019081526020015f20613e7790919063ffffffff16565b506121e860208501856147b9565b6001600160a01b03167fad34c3070be1dffbcaa499d000ba2b8d9848aefcac3059df245dd95c4ece14fe826040516122209190615217565b60405180910390a2604080518082019091525f8152602081016122637f0000000000000000000000000000000000000000000000000000000000000000436155c9565b63ffffffff169052609e5f61227b60208801886147b9565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6122a48461348e565b81526020808201929092526040015f2082518154939092015163ffffffff166101000264ffffffff00199215159290921664ffffffffff199093169290921717905550600101612020565b5061230361038360408401602085016147b9565b6001600160a01b0316639d8e0c2361231e60208501856147b9565b61232b6040860186615225565b6040518463ffffffff1660e01b81526004016123499392919061561e565b5f604051808303815f87803b158015612360575f5ffd5b505af1925050508015612371575060015b1561084e575050565b606061099a609a5f6118fe8561348e565b612393613e8b565b611e2a5f613ee5565b6001600160a01b0381165f908152609c60205260408120606091906123c09061369a565b90505f816001600160401b038111156123db576123db61464c565b60405190808252806020026020018201604052801561241f57816020015b604080518082019091525f80825260208201528152602001906001900390816123f95790505b5090505f5b82811015610961576001600160a01b0385165f908152609c602052604090206124519061090790836136a3565b828281518110612463576124636151cc565b6020908102919091010152600101612424565b60605f84516001600160401b038111156124925761249261464c565b6040519080825280602002602001820160405280156124db57816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816124b05790505b5090505f5b85518110156125325761250d8682815181106124fe576124fe6151cc565b60200260200101518686610742565b82828151811061251f5761251f6151cc565b60209081029190910101526001016124e0565b50949350505050565b60605f83516001600160401b038111156125575761255761464c565b604051908082528060200260200182016040528015612580578160200160208202803683370190505b5090505f5b8451811015612532576001600160a01b0386165f90815260a16020526040812086516125f5928792918990869081106125c0576125c06151cc565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20613f3690919063ffffffff16565b828281518110612607576126076151cc565b6001600160401b0390921660209283029190910190910152600101612585565b6066545f9060019081160361264f5760405163840a48d560e01b815260040160405180910390fd5b612658836136c5565b612675576040516348f5c3ed60e01b815260040160405180910390fd5b5f5f5f61268186613058565b91509150816126a35760405163fa55fc8160e01b815260040160405180910390fd5b91505f90505b8351811015610c3c578381815181106126c4576126c46151cc565b602002602001015160400151518482815181106126e3576126e36151cc565b602002602001015160200151511461270e576040516343714afd60e01b815260040160405180910390fd5b5f848281518110612721576127216151cc565b602090810291909101810151518082015181516001600160a01b03165f908152609890935260409092209092506127619163ffffffff908116906136ae16565b61277e57604051631fb1705560e21b815260040160405180910390fd5b5f61278987836137dd565b90505f5b86848151811061279f5761279f6151cc565b60200260200101516020015151811015612ae3575f8785815181106127c6576127c66151cc565b60200260200101516020015182815181106127e3576127e36151cc565b602002602001015190506127fa898261ffff613b58565b5f5f6128098b61076b8861348e565b915091508060200151600f0b5f1461283457604051630d8fcbe360e41b815260040160405180910390fd5b5f61284187858489613f4a565b9050612886825f01518c8a8151811061285c5761285c6151cc565b6020026020010151604001518781518110612879576128796151cc565b6020026020010151613f80565b600f0b602083018190525f036128af57604051634606179360e11b815260040160405180910390fd5b5f8260200151600f0b12156129f3578015612975576129306128d08861348e565b6001600160a01b03808f165f90815260a360209081526040808320938a16835292905220908154600160801b90819004600f0b5f818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b61295a7f0000000000000000000000000000000000000000000000000000000000000000436155c9565b6129659060016155c9565b63ffffffff166040830152612a60565b612987836020015183602001516137a1565b6001600160401b031660208401528a518b90899081106129a9576129a96151cc565b60200260200101516040015185815181106129c6576129c66151cc565b6020908102919091018101516001600160401b031683525f9083015263ffffffff43166040830152612a60565b5f8260200151600f0b1315612a6057612a14836020015183602001516137a1565b6001600160401b039081166020850181905284519091161015612a4a57604051636c9be0bf60e01b815260040160405180910390fd5b612a5489436155c9565b63ffffffff1660408301525b612a758c612a6d8961348e565b86868661388a565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd8c612aa36109078a61348e565b86612ab5865f015187602001516137a1565b8660400151604051612acb959493929190615457565b60405180910390a150506001909201915061278d9050565b5050506001016126a9565b6001600160a01b038083165f90815260a16020908152604080832093851683529290529081206107769061378e565b82612b27816136c5565b612b445760405163932d94f760e01b815260040160405180910390fd5b836001600160a01b03167fa89c1dc243d8908a96dd84944bcc97d6bc6ac00dd78e20621576be6a3c9437138484604051612b7f929190615642565b60405180910390a250505050565b606654600290600490811603612bb65760405163840a48d560e01b815260040160405180910390fd5b82612bc0816136c5565b612bdd5760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015612c41573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c6591906151ad565b612c825760405163ccea9e6f60e01b815260040160405180910390fd5b5f5b612c916020850185615225565b9050811015612e5957604080518082019091525f9080612cb460208801886147b9565b6001600160a01b03168152602001868060200190612cd29190615225565b85818110612ce257612ce26151cc565b9050602002016020810190612cf791906151fe565b63ffffffff90811690915260208083015183516001600160a01b03165f90815260989092526040909120929350612d339291908116906136ae16565b612d5057604051631fb1705560e21b815260040160405180910390fd5b612d5a86826137dd565b15612d7857604051636c6c6e2760e11b815260040160405180910390fd5b612da1612d848261348e565b6001600160a01b0388165f908152609c602052604090209061376f565b50612dcd86609a5f612db28561348e565b81526020019081526020015f2061377a90919063ffffffff16565b50856001600160a01b03167f43232edf9071753d2321e5fa7e018363ee248e5f2142e6c08edd3265bfb4895e82604051612e079190615217565b60405180910390a26001600160a01b0386165f908152609e60205260408120600191612e328461348e565b815260208101919091526040015f20805460ff191691151591909117905550600101612c84565b50612e6a61038360208501856147b9565b6001600160a01b031663adcf73f785612e866020870187615225565b612e9360408901896154a8565b6040518663ffffffff1660e01b8152600401612eb3959493929190615655565b5f604051808303815f87803b158015612eca575f5ffd5b505af1158015611bc6573d5f5f3e3d5ffd5b5f61099a609a5f612eec8561348e565b81526020019081526020015f2061369a565b83612f08816136c5565b612f255760405163932d94f760e01b815260040160405180910390fd5b6040805180820182526001600160a01b03871680825263ffffffff80881660208085018290525f93845260989052939091209192612f6492916136ae16565b612f8157604051631fb1705560e21b815260040160405180910390fd5b5f612f8b8261348e565b90505f5b84811015611bc657612fd4868683818110612fac57612fac6151cc565b9050602002016020810190612fc191906147b9565b5f84815260996020526040902090613e77565b612ff1576040516331bc342760e11b815260040160405180910390fd5b7f7b4b073d80dcac55a11177d8459ad9f664ceeb91f71f27167bb14f8152a7eeee83878784818110613025576130256151cc565b905060200201602081019061303a91906147b9565b60405161304892919061526a565b60405180910390a1600101612f8f565b6001600160a01b0381165f908152609b602090815260408083208151608081018352905463ffffffff80821680845260ff600160201b8404161515958401869052650100000000008304821694840194909452600160481b9091041660608201819052849391929190158015906130d95750826060015163ffffffff164310155b156130e8575050604081015160015b9590945092505050565b6001600160a01b0381165f90815260986020526040812061099a9061369a565b6001600160a01b0382165f908152609f602052604081206060919061313b90826118fe8661348e565b949350505050565b5f54610100900460ff161580801561316157505f54600160ff909116105b8061317a5750303b15801561317a57505f5460ff166001145b6131e25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff191660011790558015613203575f805461ff0019166101001790555b61320c8261365d565b61321583613ee5565b801561325b575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b8161326a816136c5565b6132875760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b038381165f90815260976020526040902080546001600160a01b0319169184169190911790557f2ae945c40c44dc0ec263f95609c3fdc6952e0aefa22d6374e44f2c997acedf85836132df81610f30565b604080516001600160a01b03938416815292909116602083015201613252565b613307613e8b565b6001600160a01b03811661336c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016131d9565b61337581613ee5565b50565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156133d4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133f89190615698565b6001600160a01b0316336001600160a01b0316146134295760405163794821ff60e01b815260040160405180910390fd5b606654801982198116146134505760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b5f815f0151826020015163ffffffff166040516020016134d992919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b60405160208183030381529060405261099a906156b3565b6040805180820182525f80825260208083018290528351606081018552828152808201839052808501839052845180860186526001600160a01b03898116855260a18452868520908816855290925293822092939281906135519061378e565b6001600160401b0390811682526001600160a01b038981165f81815260a260209081526040808320948c168084529482528083205486169682019690965291815260a082528481208b8252825284812092815291815290839020835160608101855290549283168152600160401b8304600f0b91810191909152600160c01b90910463ffffffff169181018290529192504310156135f3579092509050613655565b613604815f015182602001516137a1565b6001600160401b0316815260208101515f600f9190910b121561364257613633826020015182602001516137a1565b6001600160401b031660208301525b5f60408201819052602082015290925090505b935093915050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b5f61099a825490565b5f6107768383613f97565b5f8181526001830160205260408120541515610776565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af115801561374b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099a91906151ad565b5f6107768383613fbd565b5f610776836001600160a01b038416613fbd565b5f61099a82670de0b6b3a7640000614009565b5f610776826001600160401b03851661542a565b5f61077683670de0b6b3a76400008461404d565b5f6107768383670de0b6b3a764000061404d565b6001600160a01b0382165f908152609e602052604081208190816138008561348e565b815260208082019290925260409081015f2081518083019092525460ff8116151580835261010090910463ffffffff169282019290925291508061313b57506020015163ffffffff164311159392505050565b6001600160a01b0381165f9081526001830160205260408120541515610776565b5f6107768383670de0b6b3a76400006001614132565b6020808301516001600160a01b038088165f90815260a284526040808220928816825291909352909120546001600160401b0390811691161461395057602082810180516001600160a01b038881165f81815260a286526040808220938a1680835293875290819020805467ffffffffffffffff19166001600160401b0395861617905593518451918252948101919091529216908201527facf9095feb3a370c9cf692421c69ef320d4db5c66e6a7d29c7694eb02364fc559060600160405180910390a15b6001600160a01b038086165f90815260a060209081526040808320888452825280832093871683529281529082902083518154928501519385015163ffffffff16600160c01b0263ffffffff60c01b196001600160801b038616600160401b026001600160c01b03199095166001600160401b03909316929092179390931716919091179055600f0b15613a32576001600160a01b0385165f908152609f602090815260408083208784529091529020613a0a908461377a565b506001600160a01b0385165f908152609d60205260409020613a2c908561376f565b50610c3c565b80516001600160401b03165f03610c3c576001600160a01b0385165f908152609f602090815260408083208784529091529020613a6f9084613e77565b506001600160a01b0385165f908152609f602090815260408083208784529091529020613a9b9061369a565b5f03610c3c576001600160a01b0385165f908152609d60205260409020613ac29085613e6c565b505050505050565b6001600160a01b038084165f90815260a160209081526040808320938616835292905220613af990438361418b565b604080516001600160a01b038086168252841660208201526001600160401b038316918101919091527f1c6458079a41077d003c11faf9bf097e693bd67979e4e6500bac7b29db779b5c90606001613252565b60605f6107768361419f565b6001600160a01b038381165f90815260a360209081526040808320938616835292905290812054600f81810b600160801b909204900b035b5f81118015613ba257508261ffff1682105b15610c3c576001600160a01b038086165f90815260a3602090815260408083209388168352929052908120613bd6906141f8565b90505f5f613be58884896134f1565b91509150806040015163ffffffff16431015613c0357505050610c3c565b613c10888489858561388a565b6001600160a01b038089165f90815260a360209081526040808320938b16835292905220613c3d9061424a565b50613c47856156d6565b9450613c52846156ee565b9350505050613b90565b6001600160a01b0382165f908152609b60209081526040918290208251608081018452905463ffffffff808216835260ff600160201b830416151593830193909352650100000000008104831693820193909352600160481b909204166060820181905215801590613cd85750806060015163ffffffff164310155b15613cf257604081015163ffffffff168152600160208201525b63ffffffff82166040820152613d287f0000000000000000000000000000000000000000000000000000000000000000436155c9565b63ffffffff90811660608381019182526001600160a01b0386165f818152609b602090815260409182902087518154838a0151858b01519851928a1664ffffffffff1990921691909117600160201b91151591909102176cffffffffffffffff0000000000191665010000000000978916979097026cffffffff000000000000000000191696909617600160481b968816968702179055815192835294871694820194909452928301919091527f4e85751d6331506c6c62335f207eb31f12a61e570f34f5c17640308785c6d4db9101613252565b5f5f613e1f613e0b846142c7565b8554613e1a9190600f0b615703565b614334565b8454909150600160801b9004600f90810b9082900b12613e5257604051632d0483c560e21b815260040160405180910390fd5b600f0b5f9081526001939093016020525050604090205490565b5f610776838361439d565b5f610776836001600160a01b03841661439d565b6033546001600160a01b03163314611e2a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016131d9565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107768383670de0b6b3a7640000614480565b5f613f5b8460995f6112768961348e565b8015613f645750815b8015611fa157505090516001600160401b031615159392505050565b5f6107766001600160401b0380851690841661572a565b5f825f018281548110613fac57613fac6151cc565b905f5260205f200154905092915050565b5f81815260018301602052604081205461400257508154600181810184555f84815260208082209093018490558454848252828601909352604090209190915561099a565b505f61099a565b81545f9080156140455761402f846140226001846153d4565b5f91825260209091200190565b54600160201b90046001600160e01b031661313b565b509092915050565b5f80805f19858709858702925082811083820303915050805f036140845783828161407a5761407a615757565b0492505050610776565b8084116140cb5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016131d9565b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b5f5f61413f86868661404d565b905060018360028111156141555761415561576b565b14801561417157505f848061416c5761416c615757565b868809115b15611fa15761418160018261577f565b9695505050505050565b61325b83836001600160401b0384166144c8565b6060815f018054806020026020016040519081016040528092919081815260200182805480156141ec57602002820191905f5260205f20905b8154815260200190600101908083116141d8575b50505050509050919050565b5f6142128254600f81810b600160801b909204900b131590565b1561423057604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f9081526001909101602052604090205490565b5f6142648254600f81810b600160801b909204900b131590565b1561428257604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b5f6001600160ff1b038211156143305760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016131d9565b5090565b80600f81900b81146143985760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016131d9565b919050565b5f8181526001830160205260408120548015614477575f6143bf6001836153d4565b85549091505f906143d2906001906153d4565b9050818114614431575f865f0182815481106143f0576143f06151cc565b905f5260205f200154905080875f018481548110614410576144106151cc565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061444257614442615792565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f90556001935050505061099a565b5f91505061099a565b82545f9081614491868683856145cb565b905080156144be576144a8866140226001846153d4565b54600160201b90046001600160e01b0316610771565b5091949350505050565b8254801561457e575f6144e0856140226001856153d4565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090851610156145325760405163151b8e3f60e11b815260040160405180910390fd5b805163ffffffff80861691160361457c5782614553866140226001866153d4565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790555050505050565b505b506040805180820190915263ffffffff92831681526001600160e01b03918216602080830191825285546001810187555f968752952091519051909216600160201b029190921617910155565b5f5b81831015610961575f6145e0848461461e565b5f8781526020902090915063ffffffff86169082015463ffffffff16111561460a57809250614618565b61461581600161577f565b93505b506145cd565b5f61462c60028484186157a6565b6107769084841661577f565b6001600160a01b0381168114613375575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b03811182821017156146825761468261464c565b60405290565b604051601f8201601f191681016001600160401b03811182821017156146b0576146b061464c565b604052919050565b803563ffffffff81168114614398575f5ffd5b5f604082840312156146db575f5ffd5b604080519081016001600160401b03811182821017156146fd576146fd61464c565b604052905080823561470e81614638565b815261471c602084016146b8565b60208201525092915050565b5f5f5f6080848603121561473a575f5ffd5b833561474581614638565b925061475485602086016146cb565b9150606084013561476481614638565b809150509250925092565b81516001600160401b03168152602080830151600f0b9082015260408083015163ffffffff16908201526060810161099a565b5f602082840312156147b2575f5ffd5b5035919050565b5f602082840312156147c9575f5ffd5b813561077681614638565b80516001600160a01b0316825260209081015163ffffffff16910152565b5f8151808452602084019350602083015f5b8281101561482d576148178683516147d4565b6040959095019460209190910190600101614804565b5093949350505050565b602081525f61077660208301846147f2565b5f60408284031215614859575f5ffd5b61077683836146cb565b5f5f83601f840112614873575f5ffd5b5081356001600160401b03811115614889575f5ffd5b6020830191508360208260051b85010111156118e5575f5ffd5b5f5f5f604084860312156148b5575f5ffd5b83356148c081614638565b925060208401356001600160401b038111156148da575f5ffd5b6148e686828701614863565b9497909650939450505050565b5f6001600160401b0382111561490b5761490b61464c565b5060051b60200190565b5f82601f830112614924575f5ffd5b8135614937614932826148f3565b614688565b8082825260208201915060208360051b860101925085831115614958575f5ffd5b602085015b8381101561497e57803561497081614638565b83526020928301920161495d565b5095945050505050565b5f5f5f5f60a0858703121561499b575f5ffd5b6149a586866146cb565b935060408501356001600160401b038111156149bf575f5ffd5b6149cb87828801614915565b93505060608501356001600160401b038111156149e6575f5ffd5b6149f287828801614915565b925050614a01608086016146b8565b905092959194509250565b5f8151808452602084019350602083015f5b8281101561482d578151865260209586019590910190600101614a1e565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015614a9357603f19878603018452614a7e858351614a0c565b94506020938401939190910190600101614a62565b50929695505050505050565b5f5f60408385031215614ab0575f5ffd5b8235614abb81614638565b915060208301356001600160401b03811115614ad5575f5ffd5b830160a08186031215614ae6575f5ffd5b809150509250929050565b5f5f60408385031215614b02575f5ffd5b8235614b0d81614638565b91506020830135614ae681614638565b5f8151808452602084019350602083015f5b8281101561482d57614b6886835180516001600160401b03168252602080820151600f0b9083015260409081015163ffffffff16910152565b6060959095019460209190910190600101614b2f565b604081525f614b9060408301856147f2565b8281036020840152611fa18185614b1d565b5f8151808452602084019350602083015f5b8281101561482d5781516001600160a01b0316865260209586019590910190600101614bb4565b602081525f6107766020830184614ba2565b5f5f60408385031215614bfe575f5ffd5b82356001600160401b03811115614c13575f5ffd5b614c1f85828601614915565b9250506020830135614ae681614638565b602080825282518282018190525f918401906040840190835b81811015614c705783516001600160401b0316835260209384019390920191600101614c49565b509095945050505050565b5f5f5f5f5f60608688031215614c8f575f5ffd5b8535614c9a81614638565b945060208601356001600160401b03811115614cb4575f5ffd5b614cc088828901614863565b90955093505060408601356001600160401b03811115614cde575f5ffd5b614cea88828901614863565b969995985093965092949392505050565b5f5f5f5f60608587031215614d0e575f5ffd5b8435614d1981614638565b9350614d27602086016146b8565b925060408501356001600160401b03811115614d41575f5ffd5b614d4d87828801614863565b95989497509550505050565b5f5f60408385031215614d6a575f5ffd5b8235614d7581614638565b915060208301356001600160401b03811115614d8f575f5ffd5b614d9b85828601614915565b9150509250929050565b5f5f60408385031215614db6575f5ffd5b8235614dc181614638565b9150614dcf602084016146b8565b90509250929050565b5f60208284031215614de8575f5ffd5b813560ff81168114610776575f5ffd5b5f5f60608385031215614e09575f5ffd5b8235614e1481614638565b9150614dcf84602085016146cb565b5f60608284031215614e33575f5ffd5b50919050565b5f60208284031215614e49575f5ffd5b81356001600160401b03811115614e5e575f5ffd5b61313b84828501614e23565b5f5f5f60808486031215614e7c575f5ffd5b83356001600160401b03811115614e91575f5ffd5b614e9d86828701614915565b93505061475485602086016146cb565b602081525f6107766020830184614b1d565b5f5f5f60608486031215614ed1575f5ffd5b8335614edc81614638565b925060208401356001600160401b03811115614ef6575f5ffd5b614f0286828701614915565b925050614f11604085016146b8565b90509250925092565b5f5f60408385031215614f2b575f5ffd5b8235614f3681614638565b915060208301356001600160401b03811115614f50575f5ffd5b8301601f81018513614f60575f5ffd5b8035614f6e614932826148f3565b8082825260208201915060208360051b850101925087831115614f8f575f5ffd5b602084015b838110156150b45780356001600160401b03811115614fb1575f5ffd5b85016080818b03601f19011215614fc6575f5ffd5b614fce614660565b614fdb8b602084016146cb565b815260608201356001600160401b03811115614ff5575f5ffd5b6150048c602083860101614915565b60208301525060808201356001600160401b03811115615022575f5ffd5b6020818401019250508a601f830112615039575f5ffd5b8135615047614932826148f3565b8082825260208201915060208360051b86010192508d831115615068575f5ffd5b6020850194505b8285101561509e5784356001600160401b038116811461508d575f5ffd5b82526020948501949091019061506f565b6040840152505084525060209283019201614f94565b50809450505050509250929050565b5f5f5f604084860312156150d5575f5ffd5b83356150e081614638565b925060208401356001600160401b038111156150fa575f5ffd5b8401601f8101861361510a575f5ffd5b80356001600160401b0381111561511f575f5ffd5b866020828401011115615130575f5ffd5b939660209190910195509293505050565b5f5f60408385031215615152575f5ffd5b823561515d81614638565b915060208301356001600160401b03811115615177575f5ffd5b614d9b85828601614e23565b5f5f60408385031215615194575f5ffd5b823561519f81614638565b946020939093013593505050565b5f602082840312156151bd575f5ffd5b81518015158114610776575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b5f8235603e198336030181126151f4575f5ffd5b9190910192915050565b5f6020828403121561520e575f5ffd5b610776826146b8565b6040810161099a82846147d4565b5f5f8335601e1984360301811261523a575f5ffd5b8301803591506001600160401b03821115615253575f5ffd5b6020019150600581901b36038213156118e5575f5ffd5b6060810161527882856147d4565b6001600160a01b039290921660409190910152919050565b604081525f6152a26040830185614ba2565b8281036020840152611fa18185614ba2565b5f602082840312156152c4575f5ffd5b81516001600160401b038111156152d9575f5ffd5b8201601f810184136152e9575f5ffd5b80516152f7614932826148f3565b8082825260208201915060208360051b850101925086831115615318575f5ffd5b602084015b838110156153b55780516001600160401b0381111561533a575f5ffd5b8501603f8101891361534a575f5ffd5b602081015161535b614932826148f3565b808282526020820191506020808460051b8601010192508b83111561537e575f5ffd5b6040840193505b828410156153a0578351825260209384019390910190615385565b8652505060209384019391909101905061531d565b509695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561099a5761099a6153c0565b6001600160401b03828116828216039081111561099a5761099a6153c0565b5f81600f0b60016001607f1b03198103615422576154226153c0565b5f0392915050565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561099a5761099a6153c0565b6001600160a01b038616815260c0810161547460208301876147d4565b6001600160a01b039490941660608201526001600160401b0392909216608083015263ffffffff1660a09091015292915050565b5f5f8335601e198436030181126154bd575f5ffd5b8301803591506001600160401b038211156154d6575f5ffd5b6020019150368190038213156118e5575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b03881681525f60c08201615530602084018a6147d4565b60c060608401528690528660e083015f5b8881101561557157823561555481614638565b6001600160a01b0316825260209283019290910190600101615541565b5083810360808501526155848188614a0c565b91505082810360a084015261559a8185876154ea565b9a9950505050505050505050565b5f602082840312156155b8575f5ffd5b813561ffff81168114610776575f5ffd5b63ffffffff818116838216019081111561099a5761099a6153c0565b8183526020830192505f815f5b8481101561482d5763ffffffff615608836146b8565b16865260209586019591909101906001016155f2565b6001600160a01b03841681526040602082018190525f90611fa190830184866155e5565b602081525f61313b6020830184866154ea565b6001600160a01b03861681526060602082018190525f9061567990830186886155e5565b828103604084015261568c8185876154ea565b98975050505050505050565b5f602082840312156156a8575f5ffd5b815161077681614638565b80516020808301519190811015614e33575f1960209190910360031b1b16919050565b5f600182016156e7576156e76153c0565b5060010190565b5f816156fc576156fc6153c0565b505f190190565b8082018281125f831280158216821582161715615722576157226153c0565b505092915050565b600f82810b9082900b0360016001607f1b0319811260016001607f1b038213171561099a5761099a6153c0565b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b8082018082111561099a5761099a6153c0565b634e487b7160e01b5f52603160045260245ffd5b5f826157c057634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220049ddc48108b86f3be70590462d517d57c47bba9450f474f41b568a93ac1337d64736f6c634300081b0033",
    "sourceMap": "504:36335:103:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27541:303;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3368:401:138;;;;;;:::i;:::-;;:::i;:::-;;26662:412:103;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;33599:177::-;;;;;;:::i;:::-;;:::i;:::-;;;4525:14:228;;4518:22;4500:41;;4488:2;4473:18;33599:177:103;4360:187:228;16053:866:103;;;;;;:::i;:::-;;:::i;1310:42:104:-;;;;;;;;5759:10:228;5747:23;;;5729:42;;5717:2;5702:18;1310:42:104;5585:192:228;34932:1905:103;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;34262:232::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8971:32:228;;;8953:51;;8941:2;8926:18;34262:232:103;8784:226:228;1882:4557:103;;;;;;:::i;:::-;;:::i;28378:690::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;34539:348::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;354:59:136:-;;;;;31451:364:103;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11632:469::-;;;;;;:::i;:::-;;:::i;16964:642::-;;;;;;:::i;:::-;;:::i;31016:390::-;;;;;;:::i;:::-;;:::i;15247:317::-;;;;;;:::i;:::-;;:::i;3805:85:138:-;;;:::i;4539:163::-;;;;;;:::i;:::-;4671:7;;4642:1;:10;;;;;;;;4671:14;;;4670:24;;4539:163;4416:87;4489:7;;4416:87;;;16182:25:228;;;16170:2;16155:18;4416:87:138;16036:177:228;33365:189:103;;;;;;:::i;:::-;;:::i;29113:1648::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;16756:31:228;;;16738:50;;16726:2;16711:18;29113:1648:103;16594:200:228;13537:1665:103;;;;;;:::i;:::-;;:::i;33821:178::-;;;;;;:::i;:::-;;:::i;2064:101:24:-;;;:::i;32907:413:103:-;;;;;;:::i;:::-;;:::i;1432:54:104:-;;;;;1964:47:138;;;;;27889:444:103;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1441:85:24:-;1513:6;;-1:-1:-1;;;;;1513:6:24;1441:85;;31860:462:103;;;;;;:::i;:::-;;:::i;6484:5103::-;;;;;;:::i;:::-;;:::i;30806:165::-;;;;;;:::i;:::-;;:::i;15848:160::-;;;;;;:::i;:::-;;:::i;4195:93:104:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4195:93:104;;;12146:1346:103;;;;;;:::i;:::-;;:::i;34044:173::-;;;;;;:::i;:::-;;:::i;17651:649::-;;;;;;:::i;:::-;;:::i;32367:495::-;;;;;;:::i;:::-;;:::i;:::-;;;;24117:14:228;;24110:22;24092:41;;24181:10;24169:23;;;24164:2;24149:18;;24142:51;24065:18;32367:495:103;23926:273:228;26478:139:103;;;;;;:::i;:::-;;:::i;27119:377::-;;;;;;:::i;:::-;;:::i;1649:188::-;;;;;;:::i;:::-;;:::i;15609:194::-;;;;;;:::i;:::-;;:::i;1055:46:104:-;;;;;2314:198:24;;;;;;:::i;:::-;;:::i;3926:454:138:-;;;;;;:::i;:::-;;:::i;27541:303:103:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;27749:60:103;27771:8;27781:17;:11;:15;:17::i;:::-;27800:8;27749:21;:60::i;:::-;27714:95;-1:-1:-1;;;27541:303:103;;;;;;:::o;3368:401:138:-;2398:35;;-1:-1:-1;;;2398:35:138;;2422:10;2398:35;;;8953:51:228;2398:14:138;-1:-1:-1;;;;;2398:23:138;;;;8926:18:228;;2398:35:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:138;;;;;;;;;;;;3482:7:::1;::::0;3631:37;;::::1;3630:62:::0;::::1;3622:97;;;;-1:-1:-1::0;;;3622:97:138::1;;;;;;;;;;;;3729:33;3746:15;3729:16;:33::i;:::-;3442:327;3368:401:::0;:::o;26662:412:103:-;-1:-1:-1;;;;;26792:23:103;;26775:14;26792:23;;;:13;:23;;;;;26743:20;;26775:14;26792:32;;:30;:32::i;:::-;26775:49;;26835:33;26889:6;-1:-1:-1;;;;;26871:25:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;26871:25:103;;;;;;;;;;;;;;;-1:-1:-1;26835:61:103;-1:-1:-1;26911:9:103;26906:132;26930:6;26926:1;:10;26906:132;;;-1:-1:-1;;;;;26997:23:103;;;;;;:13;:23;;;;;26975:52;;26997:29;;27024:1;26997:26;:29::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;452:137:133;;;;;;;;;516:2;499:19;;;452:137;;;;;;;;;;;308:288;26975:52:103;26957:12;26970:1;26957:15;;;;;;;;:::i;:::-;;;;;;;;;;:70;26938:3;;26906:132;;;-1:-1:-1;27055:12:103;26662:412;-1:-1:-1;;;26662:412:103:o;33599:177::-;33754:14;;;;;33728:15;;-1:-1:-1;;;;;33714:30:103;33691:4;33714:30;;;:13;:30;;;;;;:55;;;;;;;:39;:55;:::i;:::-;33707:62;33599:177;-1:-1:-1;;33599:177:103:o;16053:866::-;16151:3;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:136;;;;;;;;;;;;16171:9:103::1;16166:747;16186:17:::0;;::::1;16166:747;;;16224:30;16257:41;;;;;;;;16269:3;-1:-1:-1::0;;;;;16257:41:103::1;;;;;16274:6;;16281:1;16274:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;16257:41;;;;::::0;16224:74:::1;;16396:38;16419:11;:14;;;16396:38;;:13;:18;16410:3;-1:-1:-1::0;;;;;16396:18:103::1;-1:-1:-1::0;;;;;16396:18:103::1;;;;;;;;;;;;:22;;:38;;;;:::i;:::-;16388:69;;;;-1:-1:-1::0;;;16388:69:103::1;;;;;;;;;;;;16476:52;16495:32;;;;;;;;16507:3;-1:-1:-1::0;;;;;16495:32:103::1;;;;;16512:11;:14;;;16495:32;;;;::::0;16476:52:::1;;;;;;:::i;:::-;;;;;;;;16593:22;16618:17;:11;:15;:17::i;:::-;16593:42:::0;-1:-1:-1;16654:9:103::1;16649:254;16673:6;;16680:1;16673:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;:27;;16669:1;:31;16649:254;;;16725:76;16776:6;;16783:1;16776:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;16797:1;16776:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;16725:38;::::0;;;:22:::1;:38;::::0;;;;;:42:::1;:76::i;:::-;;16824:64;16851:11;16864:6;;16871:1;16864:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;16885:1;16864:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;16824:64;;;;;;;:::i;:::-;;;;;;;;16702:3;;16649:254;;;-1:-1:-1::0;;;16205:3:103::1;;16166:747;;;;16053:866:::0;;;;:::o;34932:1905::-;35138:33;35216:9;:16;-1:-1:-1;;;;;35200:33:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35183:50;;35243:33;35279:10;-1:-1:-1;;;;;35279:29:103;;35309:9;35320:10;35279:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;35279:52:103;;;;;;;;;;;;:::i;:::-;35243:88;-1:-1:-1;35347:9:103;35342:1489;35366:9;:16;35362:1;:20;35342:1489;;;35403:16;35422:9;35432:1;35422:12;;;;;;;;:::i;:::-;;;;;;;35403:31;;35482:10;:17;-1:-1:-1;;;;;35468:32:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35468:32:103;;35448:14;35463:1;35448:17;;;;;;;;:::i;:::-;;;;;;;;;;:52;35520:9;35515:1306;35539:10;:17;35535:1;:21;35515:1306;;;35581:18;35602:10;35613:1;35602:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;35876:30:103;;;35854:19;35876:30;;;:20;:30;;;;;;:40;;;;;;;;;;;35602:13;;-1:-1:-1;35876:49:103;;:47;:49::i;:::-;35854:71;;35947:12;-1:-1:-1;;;;;35947:17:103;35963:1;35947:17;35943:72;;35988:8;;;;35943:72;36033:23;36059:46;36073:8;36083:11;36096:8;36059:13;:46::i;:::-;36033:72;;36460:11;36439:32;;:5;:17;;;:32;;;;:57;;;;;36495:1;36475:5;:17;;;:21;;;36439:57;36435:182;;;36545:53;36556:5;:22;;;36580:5;:17;;;36545:10;:53::i;:::-;-1:-1:-1;;;;;36520:78:103;;;36435:182;36673:22;;36635:27;;36665:52;;-1:-1:-1;;;;;36665:31:103;;;;:52;;:38;:52::i;:::-;36635:82;;36758:48;36786:19;36758:14;36773:1;36758:17;;;;;;;;:::i;:::-;;;;;;;36776:1;36758:20;;;;;;;;:::i;:::-;;;;;;;:27;;:48;;;;:::i;:::-;36735:14;36750:1;36735:17;;;;;;;;:::i;:::-;;;;;;;36753:1;36735:20;;;;;;;;:::i;:::-;;;;;;:71;;;;;35563:1258;;;;35515:1306;35558:3;;35515:1306;;;-1:-1:-1;;35384:3:103;;35342:1489;;;;35173:1664;34932:1905;;;;;;:::o;34262:232::-;-1:-1:-1;;;;;34386:18:103;;;34335:13;34386:18;;;:13;:18;;;;;;34335:13;;34386:18;34422:32;;:65;;34478:9;34422:65;;;-1:-1:-1;34471:3:103;;34415:72;-1:-1:-1;34262:232:103:o;1882:4557::-;4671:7:138;;784:1:104;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;2038:3:103::1;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:136::1;;;;;;;;;;;;2136:30:103::2;2169:38;;;;;;;;2181:3;-1:-1:-1::0;;;;;2169:38:103::2;;;;;2186:6;:20;;;;;;;;;;:::i;:::-;2169:38;;::::0;;2136:71;-1:-1:-1;2217:24:103::2;2244:50;2265:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;2282:11;2244:20;:50::i;:::-;2217:77:::0;-1:-1:-1;2340:18:103::2;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;:25:::0;-1:-1:-1;2312:17:103::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;:53;2304:90;;;;-1:-1:-1::0;;;2304:90:103::2;;;;;;;;;;;;2452:14;::::0;;::::2;::::0;2426:15;;-1:-1:-1;;;;;2412:30:103::2;;::::0;;;:13:::2;:30:::0;;;;;;;:55:::2;::::0;::::2;::::0;;::::2;::::0;:39:::2;:55;:::i;:::-;2404:86;;;;-1:-1:-1::0;;;2404:86:103::2;;;;;;;;;;;;2508:19;2500:52;;;;-1:-1:-1::0;;;2500:52:103::2;;;;;;;;;;;;2563:27;2607:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;-1:-1:-1::0;;;;;2593:39:103::2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2593:39:103::2;-1:-1:-1::0;2563:69:103;-1:-1:-1;2728:9:103::2;2723:3598;2747:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;2743:1;:28;2723:3598;;;2879:6:::0;;;:93:::2;;-1:-1:-1::0;2946:17:103::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;2964:5;2968:1;2964::::0;:5:::2;:::i;:::-;2946:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2889:83:103::2;2905:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;2923:1;2905:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2889:83:103::2;;2879:93;2854:184;;;;-1:-1:-1::0;;;2854:184:103::2;;;;;;;;;;;;3132:18;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;3151:1;3132:21;;;;;;;:::i;:::-;;;;;;;3128:1;:25;:57;;;;-1:-1:-1::0;438:4:134::2;3157:18:103;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;3176:1;3157:21;;;;;;;:::i;:::-;;;;;;;:28;;3128:57;3120:87;;;;-1:-1:-1::0;;;3120:87:103::2;;;;;;;;;;;;3312:81;3371:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;3389:1;3371:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3312:22;:41;3335:17;:11;:15;:17::i;:::-;3312:41;;;;;;;;;;;:50;;:81;;;;:::i;:::-;3287:164;;;;-1:-1:-1::0;;;3287:164:103::2;;;;;;;;;;;;3554:24;::::0;3628:79:::2;3650:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;3667:17;:11;:15;:17::i;:::-;3686;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;3704:1;3686:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3628:21;:79::i;:::-;4014:27:::0;;3553:154;;-1:-1:-1;3553:154:103;-1:-1:-1;;;;;;4014:32:103::2;:27;:32:::0;4010:79:::2;;4066:8;;;;4010:79;4320:23;4353:73;4404:18;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;4423:1;4404:21;;;;;;;:::i;:::-;4361:27:::0;;-1:-1:-1;;;;;4353:36:103::2;::::0;4404:21:::2;::::0;;::::2;;;::::0;-1:-1:-1;4353:50:103::2;:73::i;:::-;4467:17:::0;;4320:107;;-1:-1:-1;4514:51:103::2;-1:-1:-1::0;;;;;4514:25:103;;::::2;::::0;:51;::::2;:32;:51::i;:::-;4498:10;4509:1;4498:13;;;;;;;;:::i;:::-;;;;;;:67;;;::::0;::::2;4611:16;4580:10;:27;;:47;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4580:47:103::2;::::0;;-1:-1:-1;4641:37:103;;4662:16;;4641:4;;:37:::2;::::0;4662:16;;4641:37:::2;:::i;:::-;-1:-1:-1::0;;;;;4641:37:103::2;::::0;;-1:-1:-1;4692:24:103::2;::::0;::::2;:44:::0;;4720:16;;4692:24;:44:::2;::::0;4720:16;;4692:44:::2;:::i;:::-;-1:-1:-1::0;;;;;4692:44:103::2;::::0;;-1:-1:-1;4951:22:103::2;::::0;::::2;::::0;4976:1:::2;4951:26;::::0;;;::::2;;4947:570;;;4997:21;5048:78;5104:18;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;5123:1;5104:21;;;;;;;:::i;:::-;;;;;;;5065:10;:22;;;5064:23;;;:::i;:::-;-1:-1:-1::0;;;;;5048:41:103::2;::::0;:55:::2;:78::i;:::-;4997:130;;5186:14;-1:-1:-1::0;;;;;5178:23:103::2;5145:10;:22;;:57;;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;5226:276:103::2;5265:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5302:11;5335:6;:17;;;;;;;;:::i;:::-;5353:1;5335:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5377:63;5388:10;:27;;;5417:10;:22;;;5377:10;:63::i;:::-;5462:10;:22;;;5226:276;;;;;;;;;;:::i;:::-;;;;;;;;4979:538;4947:570;5562:97;5584:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5601:17;:11;:15;:17::i;:::-;5620;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;5638:1;5620:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5642:4;5648:10;5562:21;:97::i;:::-;5735:150;5770:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5787:11:::0;5800:17:::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;5818:1;5800:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5822:27:::0;;5735:150:::2;::::0;::::2;::::0;;;;5822:27;5858:12:::2;::::0;5735:150:::2;:::i;:::-;;;;;;;;5900:77;5920:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5937:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;5955:1;5937:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5959:17:::0;;5900:19:::2;:77::i;:::-;-1:-1:-1::0;;;;;6070:10:103::2;:29;;6128:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;6171:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;6189:1;6171:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6278:17:::0;;6070:240:::2;::::0;::::2;::::0;;;-1:-1:-1;;;;;;6070:240:103;;;-1:-1:-1;;;;;32271:32:228;;;6070:240:103::2;::::0;::::2;32253:51:228::0;32340:32;;;;32320:18;;;32313:60;-1:-1:-1;;;;;32409:31:228;;;32389:18;;;32382:59;32477:31;32457:18;;;32450:59;32225:19;;6070:240:103::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:3543;;;;2723:3598;2773:3;;2723:3598;;;-1:-1:-1::0;6336:96:103::2;6352:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;6369:11:::0;6382:17:::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;6401:10:::0;6413:18:::2;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;6336:96;;;;;;;;;;;;:::i;:::-;;;;;;;;2043:4396;;;3111:1:138::1;1882:4557:103::0;;;:::o;28378:690::-;-1:-1:-1;;;;;28563:23:103;;28546:14;28563:23;;;:13;:23;;;;;28493:20;;;;28563:32;;:30;:32::i;:::-;28546:49;;28606:33;28660:6;-1:-1:-1;;;;;28642:25:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;28642:25:103;;;;;;;;;;;;;;;;28606:61;;28677:32;28729:6;-1:-1:-1;;;;;28712:24:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;28712:24:103;;-1:-1:-1;;28712:24:103;;;;;;;;;;;-1:-1:-1;28677:59:103;-1:-1:-1;28752:9:103;28747:269;28771:6;28767:1;:10;28747:269;;;-1:-1:-1;;;;;28853:23:103;;28798:30;28853:23;;;:13;:23;;;;;28831:52;;28853:29;;28880:1;28853:26;:29::i;28831:52::-;28798:85;;28916:11;28898:12;28911:1;28898:15;;;;;;;;:::i;:::-;;;;;;:29;;;;28959:46;28973:8;28983:11;28996:8;28959:13;:46::i;:::-;28941:12;28954:1;28941:15;;;;;;;;:::i;:::-;;;;;;;;;;:64;-1:-1:-1;28779:3:103;;28747:269;;;-1:-1:-1;29034:12:103;;-1:-1:-1;29048:12:103;-1:-1:-1;;28378:690:103;;;;;;:::o;34539:348::-;34644:18;34674:23;34700:50;:22;:41;34723:17;:11;:15;:17::i;:::-;34700:41;;;;;;;;;;;:48;:50::i;31451:364::-;31548:15;31575:29;31620:9;:16;-1:-1:-1;;;;;31607:30:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31607:30:103;-1:-1:-1;31575:62:103;-1:-1:-1;31653:9:103;31648:130;31672:9;:16;31668:1;:20;31648:130;;;31728:39;31744:9;31754:1;31744:12;;;;;;;;:::i;:::-;;;;;;;31758:8;31728:15;:39::i;:::-;31709:13;31723:1;31709:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31709:58:103;;;:16;;;;;;;;;;;:58;31690:3;;31648:130;;11632:469;4671:7:138;;629:1:104;;4642::138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;11847:38:103;;::::1;11839:75;;;;-1:-1:-1::0;;;11839:75:103::1;;;;;;;;;;;;11930:9;11925:170;11945:21:::0;;::::1;11925:170;;;11987:97;12022:8;12042:10;;12053:1;12042:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12069:10;;12080:1;12069:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11987:23;:97::i;:::-;11968:3;;11925:170;;;;11632:469:::0;;;;;;:::o;16964:642::-;17120:3;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:136;;;;;;;;;;;;17168:31:103::1;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;17168:31:103;::::1;::::0;;::::1;::::0;::::1;;::::0;::::1;::::0;17135:30:::1;17234:17;17168:31:::0;17234:15:::1;:17::i;:::-;17209:42;;17270:43;17298:11;:14;;;17270:43;;:13;:18;17284:3;-1:-1:-1::0;;;;;17270:18:103::1;-1:-1:-1::0;;;;;17270:18:103::1;;;;;;;;;;;;:27;;:43;;;;:::i;:::-;17262:74;;;;-1:-1:-1::0;;;17262:74:103::1;;;;;;;;;;;;17352:9;17347:253;17367:21:::0;;::::1;17347:253;;;17417:66;17468:10;;17479:1;17468:13;;;;;;;:::i;17417:66::-;17409:107;;;;-1:-1:-1::0;;;17409:107:103::1;;;;;;;;;;;;17535:54;17562:11;17575:10;;17586:1;17575:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;17535:54;;;;;;;:::i;:::-;;;;;;;;17390:3;;17347:253;;;;17125:481;;16964:642:::0;;;;;:::o;31016:390::-;31136:15;31163:29;31208:10;:17;-1:-1:-1;;;;;31195:31:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31195:31:103;-1:-1:-1;31163:63:103;-1:-1:-1;31242:9:103;31237:132;31261:10;:17;31257:1;:21;31237:132;;;31318:40;31334:8;31344:10;31355:1;31344:13;;;;;;;;:::i;:::-;;;;;;;31318:15;:40::i;:::-;31299:13;31313:1;31299:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31299:59:103;;;:16;;;;;;;;;;;:59;31280:3;;31237:132;;15247:317;15330:10;-1:-1:-1;;;;;15352:10:103;15330:33;;15326:186;;15387:23;15401:8;15387:13;:23::i;:::-;15379:49;;;;-1:-1:-1;;;15379:49:103;;;;;;;;;;;;15450:31;;-1:-1:-1;;;15450:31:103;;-1:-1:-1;;;;;8971:32:228;;;15450:31:103;;;8953:51:228;15450:10:103;:21;;;;8926:18:228;;15450:31:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15442:59;;;;-1:-1:-1;;;15442:59:103;;;;;;;;;;;;15521:36;15541:8;15551:5;15521:19;:36::i;3805:85:138:-;2398:35;;-1:-1:-1;;;2398:35:138;;2422:10;2398:35;;;8953:51:228;2398:14:138;-1:-1:-1;;;;;2398:23:138;;;;8926:18:228;;2398:35:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:138;;;;;;;;;;;;3855:28:::1;-1:-1:-1::0;;3855:16:138::1;:28::i;:::-;3805:85::o:0;33365:189:103:-;33467:4;33490:57;33538:8;33490:19;:38;33510:17;:11;:15;:17::i;29113:1648::-;-1:-1:-1;;;;;29561:29:103;;;29207:6;29561:29;;;:19;:29;;;;;;;;:39;;;;;;;;;;;;;29628:27;;;:17;:27;;;;;:37;;;;;;;;;5684:12:85;-1:-1:-1;;;;;29561:39:103;;;;5684:12:85;;;;-1:-1:-1;;;5663:10:85;;;;;5656:41;29207:6:103;29684:836;29708:6;29704:1;:10;29684:836;;;-1:-1:-1;;;;;29760:27:103;;;29735:22;29760:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:43;;29801:1;29760:40;:43::i;:::-;-1:-1:-1;;;;;29848:21:103;;;29817:28;29848:21;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;29817:78;;;;;;;;;-1:-1:-1;;;;;29817:78:103;;;;-1:-1:-1;;;29817:78:103;;;;;;;;;;;-1:-1:-1;;;29817:78:103;;;;;;;;;;;29848:37;;-1:-1:-1;30082:12:103;:37;30078:81;;;30139:5;;;;30078:81;30451:58;30462:22;30486:10;:22;;;30451:10;:58::i;:::-;30426:83;;29721:799;;29716:3;;;;;29684:836;;;-1:-1:-1;;;;;;30680:30:103;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;30732:22;;30680:49;;:47;:49::i;:::-;:74;;;;:::i;:::-;30673:81;29113:1648;-1:-1:-1;;;;;29113:1648:103:o;13537:1665::-;4671:7:138;;966:1:104;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;13806:30:103::1;13820:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;13806:13;:30::i;:::-;:59;;;-1:-1:-1::0;13840:25:103::1;13854:10;::::0;;;::::1;::::0;::::1;;:::i;13840:25::-;13798:85;;;;-1:-1:-1::0;;;13798:85:103::1;;;;;;;;;;;;13899:9;13894:1062;13918:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;:28;;13914:1;:32;13894:1062;;;14049:30;14082:49;;;;;;;;14094:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14082:49:103::1;::::0;;::::1;;14106:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;14128:1;14106:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;14082:49;;;;::::0;14049:82:::1;;14153:50;14188:11;:14;;;14153:50;;:13;:25;14167:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14153:25:103::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14153:25:103;;:34:::1;:50::i;:::-;14145:81;;;;-1:-1:-1::0;;;14145:81:103::1;;;;;;;;;;;;14248:18;:35;14267:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14248:35:103::1;-1:-1:-1::0;;;;;14248:35:103::1;;;;;;;;;;;;:54;14284:17;:11;:15;:17::i;:::-;14248:54:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14248:54:103;:65;::::1;;14240:92;;;;-1:-1:-1::0;;;14240:92:103::1;;;;;;;;;;;;14396:57;14435:17;:11;:15;:17::i;:::-;14396:14;:31;14411:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14396:31:103::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14396:31:103;;:38:::1;:57::i;:::-;-1:-1:-1::0;14467:62:103::1;14513:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;14467:19;:38;14487:17;:11;:15;:17::i;:::-;14467:38;;;;;;;;;;;:45;;:62;;;;:::i;:::-;-1:-1:-1::0;14579:15:103::1;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14548:60:103::1;;14596:11;14548:60;;;;;;:::i;:::-;;;;;;;;14801:144;::::0;;;;::::1;::::0;;;-1:-1:-1;14801:144:103;;::::1;::::0;::::1;14889:41;14912:18;14896:12;14889:41;:::i;:::-;14801:144;;::::0;;14744:18:::1;:35;14763:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14744:35:103::1;-1:-1:-1::0;;;;;14744:35:103::1;;;;;;;;;;;;:54;14780:17;:11;:15;:17::i;:::-;14744:54:::0;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;14744:54:103;:201;;;;;;;::::1;::::0;::::1;;;;-1:-1:-1::0;;14744:201:103;::::1;;::::0;;;;-1:-1:-1;;14744:201:103;;;;;;;::::1;::::0;;-1:-1:-1;14744:201:103;13948:3:::1;13894:1062;;;-1:-1:-1::0;15098:27:103::1;15114:10;::::0;;;::::1;::::0;::::1;;:::i;15098:27::-;-1:-1:-1::0;;;;;15098:46:103::1;;15145:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;15162:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;15098:86;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15094:102:::0;::::1;;13537:1665:::0;;:::o;33821:178::-;33910:16;33945:47;:19;:38;33965:17;:11;:15;:17::i;2064:101:24:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;32907:413:103:-:0;-1:-1:-1;;;;;33036:24:103;;33019:14;33036:24;;;:14;:24;;;;;32987:20;;33019:14;33036:33;;:31;:33::i;:::-;33019:50;;33079:33;33133:6;-1:-1:-1;;;;;33115:25:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;33115:25:103;;;;;;;;;;;;;;;-1:-1:-1;33079:61:103;-1:-1:-1;33156:9:103;33151:133;33175:6;33171:1;:10;33151:133;;;-1:-1:-1;;;;;33242:24:103;;;;;;:14;:24;;;;;33220:53;;33242:30;;33270:1;33242:27;:30::i;33220:53::-;33202:12;33215:1;33202:15;;;;;;;;:::i;:::-;;;;;;;;;;:71;33183:3;;33151:133;;27889:444;28046:19;28077:32;28129:9;:16;-1:-1:-1;;;;;28112:34:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;28112:34:103;;-1:-1:-1;;28112:34:103;;;;;;;;;;;-1:-1:-1;28077:69:103;-1:-1:-1;28162:9:103;28157:140;28181:9;:16;28177:1;:20;28157:140;;;28236:50;28250:9;28260:1;28250:12;;;;;;;;:::i;:::-;;;;;;;28264:11;28277:8;28236:13;:50::i;:::-;28218:12;28231:1;28218:15;;;;;;;;:::i;:::-;;;;;;;;;;:68;28199:3;;28157:140;;;-1:-1:-1;28314:12:103;27889:444;-1:-1:-1;;;;27889:444:103:o;31860:462::-;32015:15;32042:29;32087:10;:17;-1:-1:-1;;;;;32074:31:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32074:31:103;-1:-1:-1;32042:63:103;-1:-1:-1;32121:9:103;32116:169;32140:10;:17;32136:1;:21;32116:169;;;-1:-1:-1;;;;;32197:30:103;;;;;;:20;:30;;;;;32228:13;;32197:77;;32261:11;;32197:30;32228:10;;32239:1;;32228:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;32197:45:103;-1:-1:-1;;;;;32197:45:103;;;;;;;;;;;;:57;;:77;;;;:::i;:::-;32178:13;32192:1;32178:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32178:96:103;;;:16;;;;;;;;;;;:96;32159:3;;32116:169;;6484:5103;4671:7:138;;629:1:104;;4642::138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;6816:23:103::1;6830:8;6816:13;:23::i;:::-;6808:49;;;;-1:-1:-1::0;;;6808:49:103::1;;;;;;;;;;;;6949:30;7004:10;7016:12;7032:28;7051:8;7032:18;:28::i;:::-;7003:57;;;;7082:5;7074:46;;;;-1:-1:-1::0;;;7074:46:103::1;;;;;;;;;;;;7160:5:::0;-1:-1:-1;7191:9:103::1;::::0;-1:-1:-1;7186:4395:103::1;7210:6;:13;7206:1;:17;7186:4395;;;7283:6;7290:1;7283:9;;;;;;;;:::i;:::-;;;;;;;:23;;;:30;7252:6;7259:1;7252:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;:61;7244:98;;;;-1:-1:-1::0;;;7244:98:103::1;;;;;;;;;;;;7795:30;7828:6;7835:1;7828:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;:21;7911:14;;::::1;::::0;7885:15;;-1:-1:-1;;;;;7871:30:103::1;7828:21;7871:30:::0;;;:13:::1;:30:::0;;;;;;;7828:21;;-1:-1:-1;7871:55:103::1;::::0;::::1;::::0;;::::1;::::0;:39:::1;:55;:::i;:::-;7863:86;;;;-1:-1:-1::0;;;7863:86:103::1;;;;;;;;;;;;7964:24;7991:43;8012:8;8022:11;7991:20;:43::i;:::-;7964:70:::0;-1:-1:-1;8054:9:103::1;8049:3522;8073:6;8080:1;8073:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;8069:1;:31;8049:3522;;;8125:18;8146:6;8153:1;8146:9;;;;;;;;:::i;:::-;;;;;;;:20;;;8167:1;8146:23;;;;;;;;:::i;:::-;;;;;;;8125:44;;8464:61;8488:8;8498;8508:16;8464:23;:61::i;:::-;8545:24;8571:28;8623:60;8645:8;8655:17;:11;:15;:17::i;8623:60::-;8544:139;;;;8709:10;:22;;;:27;;8735:1;8709:27;8701:66;;;;-1:-1:-1::0;;;8701:66:103::1;;;;;;;;;;;;8920:16;8939:78;8962:11;8975:8;8985:10;8997:19;8939:22;:78::i;:::-;8920:97;;9117:67;9128:10;:27;;;9157:6;9164:1;9157:9;;;;;;;;:::i;:::-;;;;;;;:23;;;9181:1;9157:26;;;;;;;;:::i;:::-;;;;;;;9117:10;:67::i;:::-;9092:92;;:22;::::0;::::1;:92:::0;;;9236:1:::1;9210:27:::0;9202:53:::1;;;;-1:-1:-1::0;;;9202:53:103::1;;;;;;;;;;;;9356:1;9331:10;:22;;;:26;;;9327:1725;;;9385:11;9381:1105;;;9619:65;9666:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;9619:27:103;;::::1;;::::0;;;:17:::1;:27;::::0;;;;;;;:37;;::::1;::::0;;;;;;;2195:10:85;;-1:-1:-1;;;2195:10:85;;;;;;2176:16;2215:22;;;:11;;;;:22;;;;;;:30;;;;2279:26;;-1:-1:-1;;;;;2279:26:85;;;2292:13;;;;2279:26;;;;;2096:226;9619:65:103::1;9961:41;9984:18;9968:12;9961:41;:::i;:::-;:45;::::0;10005:1:::1;9961:45;:::i;:::-;9936:70;;:22;::::0;::::1;:70:::0;9327:1725:::1;;9381:1105;10197:60;10208:4;:24;;;10234:10;:22;;;10197:10;:60::i;:::-;-1:-1:-1::0;;;;;10170:87:103::1;:24;::::0;::::1;:87:::0;10314:9;;:6;;10321:1;;10314:9;::::1;;;;;:::i;:::-;;;;;;;:23;;;10338:1;10314:26;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;10284:56:103::1;::::0;;:27:::1;10366:22:::0;;::::1;:26:::0;10418:45:::1;10450:12;10418:45;:22;::::0;::::1;:45:::0;9327:1725:::1;;;10539:1;10514:10;:22;;;:26;;;10510:542;;;10778:60;10789:4;:24;;;10815:10;:22;;;10778:10;:60::i;:::-;-1:-1:-1::0;;;;;10751:87:103;;::::1;:24;::::0;::::1;:87:::0;;;10896:17;;10868:45;;::::1;-1:-1:-1::0;10868:45:103::1;10860:79;;;;-1:-1:-1::0;;;10860:79:103::1;;;;;;;;;;;;10987:46;11010:23:::0;10994:12:::1;10987:46;:::i;:::-;10962:71;;:22;::::0;::::1;:71:::0;10510:542:::1;11105:78;11127:8;11137:17;:11;:15;:17::i;:::-;11156:8;11166:4;11172:10;11105:21;:78::i;:::-;11270:286;11309:8;11339:40;11361:17;:11;:15;:17::i;11339:40::-;11401:8;11431:63;11442:10;:27;;;11471:10;:22;;;11431:10;:63::i;:::-;11516:10;:22;;;11270:286;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;8102:3:103::1;::::0;;::::1;::::0;-1:-1:-1;8049:3522:103::1;::::0;-1:-1:-1;8049:3522:103::1;;-1:-1:-1::0;;;7225:3:103::1;;7186:4395;;30806:165:::0;-1:-1:-1;;;;;30915:30:103;;;30890:6;30915:30;;;:20;:30;;;;;;;;:40;;;;;;;;;;;:49;;:47;:49::i;15848:160::-;15942:3;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:136;;;;;;;;;;;;15984:3:103::1;-1:-1:-1::0;;;;;15962:39:103::1;;15989:11;;15962:39;;;;;;;:::i;:::-;;;;;;;;15848:160:::0;;;;:::o;12146:1346::-;4671:7:138;;966:1:104;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;12344:8:103::1;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:136::1;;;;;;;;;;;;12414:31:103::2;::::0;-1:-1:-1;;;12414:31:103;;-1:-1:-1;;;;;8971:32:228;;;12414:31:103::2;::::0;::::2;8953:51:228::0;12414:10:103::2;:21;::::0;::::2;::::0;8926:18:228;;12414:31:103::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12406:59;;;;-1:-1:-1::0;;;12406:59:103::2;;;;;;;;;;;;12481:9;12476:815;12500:21;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;:28;;12496:1;:32;12476:815;;;12678:49;::::0;;;;::::2;::::0;;;12645:30:::2;::::0;12678:49;12690:10:::2;;::::0;::::2;:6:::0;:10:::2;:::i;:::-;-1:-1:-1::0;;;;;12678:49:103::2;;;;;12702:6;:21;;;;;;;;:::i;:::-;12724:1;12702:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12678:49;::::0;;::::2;::::0;;;12789:14:::2;::::0;;::::2;::::0;12763:15;;-1:-1:-1;;;;;12749:30:103::2;;::::0;;;:13:::2;:30:::0;;;;;;;12645:82;;-1:-1:-1;12749:55:103::2;::::0;:30;:55;;::::2;::::0;:39:::2;:55;:::i;:::-;12741:86;;;;-1:-1:-1::0;;;12741:86:103::2;;;;;;;;;;;;12850:43;12871:8;12881:11;12850:20;:43::i;:::-;12849:44;12841:75;;;;-1:-1:-1::0;;;12841:75:103::2;;;;;;;;;;;;12975:47;13004:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;12975:24:103;::::2;;::::0;;;:14:::2;:24;::::0;;;;;:28:::2;:47::i;:::-;;13036:52;13079:8;13036:19;:38;13056:17;:11;:15;:17::i;:::-;13036:38;;;;;;;;;;;:42;;:52;;;;:::i;:::-;;13134:8;-1:-1:-1::0;;;;;13107:49:103::2;;13144:11;13107:49;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;13215:28:103;::::2;;::::0;;;:18:::2;:28;::::0;;;;13276:4:::2;::::0;13244:17:::2;:11:::0;:15:::2;:17::i;:::-;13215:47:::0;;::::2;::::0;::::2;::::0;;;;;;-1:-1:-1;13215:47:103;:65;;-1:-1:-1;;13215:65:103::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;;12530:3:103::2;12476:815;;;-1:-1:-1::0;13395:27:103::2;13411:10;;::::0;::::2;:6:::0;:10:::2;:::i;13395:27::-;-1:-1:-1::0;;;;;13395:44:103::2;;13440:8:::0;13450:21:::2;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;13473:11;;::::0;::::2;:6:::0;:11:::2;:::i;:::-;13395:90;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34044:173:::0;34137:7;34163:47;:19;:38;34183:17;:11;:15;:17::i;:::-;34163:38;;;;;;;;;;;:45;:47::i;17651:649::-;17812:3;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:136;;;;;;;;;;;;17860:31:103::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;17860:31:103;::::1;::::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;17827:30:::1;17909:18:::0;;;:13:::1;:18:::0;;;;;;17860:31;;17909:43:::1;::::0;:18;:27:::1;:43;:::i;:::-;17901:74;;;;-1:-1:-1::0;;;17901:74:103::1;;;;;;;;;;;;17986:22;18011:17;:11;:15;:17::i;:::-;17986:42:::0;-1:-1:-1;18043:9:103::1;18038:256;18058:21:::0;;::::1;18038:256;;;18108:69;18162:10;;18173:1;18162:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18108:38;::::0;;;:22:::1;:38;::::0;;;;;:45:::1;:69::i;:::-;18100:106;;;;-1:-1:-1::0;;;18100:106:103::1;;;;;;;;;;;;18225:58;18256:11;18269:10;;18280:1;18269:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18225:58;;;;;;;:::i;:::-;;;;;;;;18081:3;;18038:256;;32367:495:::0;-1:-1:-1;;;;;32506:30:103;;32448:4;32506:30;;;:20;:30;;;;;;;;32472:64;;;;;;;;;;;;;;;;;-1:-1:-1;;;32472:64:103;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;32472:64:103;;;;;;;;;;32448:4;;32472:64;;;;32689:21;;;;:57;;;32730:4;:16;;;32714:32;;:12;:32;;32689:57;32685:139;;;-1:-1:-1;;32770:17:103;;;;32809:4;32685:139;32842:5;32849;;-1:-1:-1;32367:495:103;-1:-1:-1;;;32367:495:103:o;26478:139::-;-1:-1:-1;;;;;26583:18:103;;26557:7;26583:18;;;:13;:18;;;;;:27;;:25;:27::i;27119:377::-;-1:-1:-1;;;;;27302:29:103;;27276:23;27302:29;;;:19;:29;;;;;27246:18;;27276:23;27302:57;;27276:23;27332:17;:11;:15;:17::i;27302:57::-;27276:83;27119:377;-1:-1:-1;;;;27119:377:103:o;1649:188::-;3279:19:30;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:30;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:30;1713:19:38;:23;;;3387:66:30;;-1:-1:-1;3436:12:30;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:30;;38080:2:228;3325:201:30;;;38062:21:228;38119:2;38099:18;;;38092:30;38158:34;38138:18;;;38131:62;-1:-1:-1;;;38209:18:228;;;38202:44;38263:19;;3325:201:30;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:30;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:30;;;;;3562:65;1751:37:103::1;1768:19;1751:16;:37::i;:::-;1798:32;1817:12;1798:18;:32::i;:::-;3651:14:30::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:30;;;3721:14;;-1:-1:-1;38445:36:228;;3721:14:30;;38433:2:228;38418:18;3721:14:30;;;;;;;;3647:99;3269:483;1649:188:103;;:::o;15609:194::-;15694:3;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:136;;;;;;;;;;;;-1:-1:-1;;;;;15709:18:103;;::::1;;::::0;;;:13:::1;:18;::::0;;;;:30;;-1:-1:-1;;;;;;15709:30:103::1;::::0;;::::1;::::0;;;::::1;::::0;;15754:42:::1;15709:18:::0;15775:20:::1;15709:18:::0;15775:15:::1;:20::i;:::-;15754:42;::::0;;-1:-1:-1;;;;;38707:32:228;;;38689:51;;38776:32;;;;38771:2;38756:18;;38749:60;38662:18;15754:42:103::1;38492:323:228::0;2314:198:24;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:24;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:24;;39022:2:228;2394:73:24::1;::::0;::::1;39004:21:228::0;39061:2;39041:18;;;39034:30;39100:34;39080:18;;;39073:62;-1:-1:-1;;;39151:18:228;;;39144:36;39197:19;;2394:73:24::1;38820:402:228::0;2394:73:24::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;3926:454:138:-;2620:14;-1:-1:-1;;;;;2620:23:138;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2606:39:138;:10;-1:-1:-1;;;;;2606:39:138;;2598:64;;;;-1:-1:-1;;;2598:64:138;;;;;;;;;;;;4044:7:::1;::::0;4238:20;::::1;4215:16:::0;::::1;4189:43:::0;::::1;4188:71;4180:106;;;;-1:-1:-1::0;;;4180:106:138::1;;;;;;;;;;;;4296:7;:25:::0;;;4336:37:::1;::::0;16182:25:228;;;4345:10:138::1;::::0;4336:37:::1;::::0;16170:2:228;16155:18;4336:37:138::1;;;;;;;4004:376;3926:454:::0;:::o;148:154:133:-;221:7;272:2;:6;;;287:2;:5;;;280:13;;255:39;;;;;;;;39658:2:228;39654:15;;;;-1:-1:-1;;39650:53:228;39638:66;;39760:3;39738:16;-1:-1:-1;;;;;;39734:59:228;39729:2;39720:12;;39713:81;39819:2;39810:12;;39483:345;255:39:133;;;;;;;;;;;;;247:48;;;:::i;22648:1185:103:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22871:175:103;;;;;;;-1:-1:-1;;;;;22912:30:103;;;;;:20;:30;;;;;:40;;;;;;;;;;;-1:-1:-1;;;22871:175:103;;22912:49;;:47;:49::i;:::-;-1:-1:-1;;;;;22871:175:103;;;;;-1:-1:-1;;;;;22996:29:103;;;;;;;:19;22871:175;22996:29;;;;;;;:39;;;;;;;;;;;;;;;22871:175;;;;;;;23088:21;;;:11;:21;;;;;:37;;;;;;;;:47;;;;;;;;;;23057:78;;;;;;;;;;;;;;-1:-1:-1;;;23057:78:103;;;;;;;;;;;-1:-1:-1;;;23057:78:103;;;;;;;;;;;22844:202;;-1:-1:-1;23220:12:103;:37;23216:93;;;23281:4;;-1:-1:-1;23287:10:103;-1:-1:-1;23273:25:103;;23216:93;23423:63;23434:10;:27;;;23463:10;:22;;;23423:10;:63::i;:::-;-1:-1:-1;;;;;23393:93:103;;;23578:22;;;;23393:27;23578:26;;;;;;23574:144;;;23647:60;23658:4;:24;;;23684:10;:22;;;23647:10;:60::i;:::-;-1:-1:-1;;;;;23620:87:103;:24;;;:87;23574:144;23753:1;23728:22;;;:26;;;23764:22;;;:26;23809:4;;-1:-1:-1;23728:10:103;-1:-1:-1;22648:1185:103;;;;;;;:::o;4806:157:138:-;4887:7;:22;;;4924:32;;16182:25:228;;;4931:10:138;;4924:32;;16170:2:228;16155:18;4924:32:138;;;;;;;4806:157;:::o;6639:115:86:-;6702:7;6728:19;6736:3;4545:18;;4463:107;7096:129;7170:7;7196:22;7200:3;7212:5;7196:3;:22::i;11306:144::-;11383:4;4351:19;;;:12;;;:19;;;;;;:24;;11406:37;4255:127;1080:175:136;1175:73;;-1:-1:-1;;;1175:73:136;;-1:-1:-1;;;;;40382:32:228;;;1175:73:136;;;40364:51:228;1213:10:136;40431:18:228;;;40424:60;1233:4:136;40500:18:228;;;40493:60;1152:4:136;1240:7;;-1:-1:-1;;;;;;1240:7:136;40569:18:228;;;40562:61;1152:4:136;1175:20;:28;;;;;;40336:19:228;;1175:73:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10793:129:86:-;10860:4;10883:32;10888:3;10908:5;10883:4;:32::i;8305:150::-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:86;;8398:4;:50::i;3045:154:135:-;3130:6;3162:29;3170:4;438::134;3162:7:135;:29::i;26222:134:103:-;26285:6;26325:22;26346:1;-1:-1:-1;;;;;26332:10:103;;26325:22;:::i;1613:110:134:-;1674:7;1700:16;:1;438:4;1714:1;1700:8;:16::i;1497:110::-;1558:7;1584:16;:1;1593;438:4;1584:8;:16::i;20927:411:103:-;-1:-1:-1;;;;;21081:28:103;;21030:4;21081:28;;;:18;:28;;;;;21030:4;;;21110:17;:11;:15;:17::i;:::-;21081:47;;;;;;;;;;;;;;-1:-1:-1;21081:47:103;21046:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21046:82:103;21273:58;;-1:-1:-1;21310:21:103;;;21294:37;;:12;:37;;;21266:65;-1:-1:-1;;;20927:411:103:o;8860:165:86:-;-1:-1:-1;;;;;8993:23:86;;8940:4;4351:19;;;:12;;;:19;;;;;;:24;;8963:55;4255:127;2053:135:134;2121:7;2147:34;:1;2156;438:4;2164:16;2147:8;:34::i;23839:1893:103:-;24242:24;;;;;-1:-1:-1;;;;;24199:29:103;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;-1:-1:-1;;;;;24199:39:103;;;:67;;;24195:255;;24324:24;;;;;;-1:-1:-1;;;;;24282:29:103;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;:66;;-1:-1:-1;;24282:66:103;-1:-1:-1;;;;;24282:66:103;;;;;;24414:24;;24367:72;;40853:51:228;;;40920:18;;;40913:60;;;;41009:31;;40989:18;;;40982:59;24367:72:103;;40841:2:228;40826:18;24367:72:103;;;;;;;24195:255;-1:-1:-1;;;;;24775:21:103;;;;;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;:60;;;;;;;;;;;;;;-1:-1:-1;;;24775:60:103;-1:-1:-1;;;;;;;;;24775:60:103;;-1:-1:-1;;;24775:60:103;-1:-1:-1;;;;;;24775:60:103;;;-1:-1:-1;;;;;24775:60:103;;;;;;;;;;;;;;;;;;;;24957:27;24953:773;;-1:-1:-1;;;;;25144:29:103;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:68;;25202:8;25144:49;:68::i;:::-;-1:-1:-1;;;;;;25226:23:103;;;;;;:13;:23;;;;;:43;;25254:14;25226:27;:43::i;:::-;;24953:773;;;25290:27;;-1:-1:-1;;;;;25290:32:103;:27;:32;25286:440;;-1:-1:-1;;;;;25486:29:103;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:71;;25547:8;25486:52;:71::i;:::-;-1:-1:-1;;;;;;25576:29:103;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:54;;:52;:54::i;:::-;25634:1;25576:59;25572:144;;-1:-1:-1;;;;;25655:23:103;;;;;;:13;:23;;;;;:46;;25686:14;25655:30;:46::i;:::-;;23839:1893;;;;;:::o;25738:286::-;-1:-1:-1;;;;;25848:30:103;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;:98;;25907:12;25929:15;25848:45;:98::i;:::-;25961:56;;;-1:-1:-1;;;;;40871:32:228;;;40853:51;;40940:32;;40935:2;40920:18;;40913:60;-1:-1:-1;;;;;41009:31:228;;40989:18;;;40982:59;;;;25961:56:103;;40841:2:228;40826:18;25961:56:103;40634:413:228;10259:300:86;10322:16;10350:22;10375:19;10383:3;10375:7;:19::i;18687:1209:103:-;-1:-1:-1;;;;;18841:27:103;;;18796:18;18841:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;5684:12:85;;;;;-1:-1:-1;;;5663:10:85;;;;;5656:41;18898:992:103;18914:1;18905:6;:10;:37;;;;;18932:10;18919:23;;:10;:23;18905:37;18898:992;;;-1:-1:-1;;;;;18983:27:103;;;18958:22;18983:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:45;;:43;:45::i;:::-;18958:70;;19043:24;19069:28;19117:57;19139:8;19149:14;19165:8;19117:21;:57::i;:::-;19042:132;;;;19375:10;:22;;;19360:37;;:12;:37;19356:81;;;19417:5;;;;;19356:81;19639:75;19661:8;19671:14;19687:8;19697:4;19703:10;19639:21;:75::i;:::-;-1:-1:-1;;;;;19783:27:103;;;;;;;:17;:27;;;;;;;;:37;;;;;;;;;:48;;:46;:48::i;:::-;-1:-1:-1;19845:12:103;;;:::i;:::-;;-1:-1:-1;19871:8:103;;;:::i;:::-;;;18944:946;;;18898:992;;20222:615;-1:-1:-1;;;;;20336:30:103;;20302:31;20336:30;;;:20;:30;;;;;;;;;20302:64;;;;;;;;;;;;;;;;-1:-1:-1;;;20302:64:103;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20302:64:103;;;;;;;;;;20452:21;;;;:57;;;20493:4;:16;;;20477:32;;:12;:32;;20452:57;20448:149;;;20538:17;;;;20525:30;;;;20582:4;20569:10;;;:17;20448:149;20607:25;;;:17;;;:25;20661:53;20684:30;20668:12;20661:53;:::i;:::-;20642:72;;;;:16;;;;:72;;;-1:-1:-1;;;;;20725:30:103;;;;;;:20;:30;;;;;;;;;:37;;;;;;;;;;;;;;;;;-1:-1:-1;;20725:37:103;;;;;;;-1:-1:-1;;;20725:37:103;;;;;;;;-1:-1:-1;;20725:37:103;;;;;;;;;-1:-1:-1;;20725:37:103;;;;;-1:-1:-1;;;20725:37:103;;;;;;;;;20777:53;;41531:51:228;;;41618:23;;;41598:18;;;41591:51;;;;41658:18;;;41651:51;;;;20777:53:103;;41504:18:228;20777:53:103;41333:375:228;4606:324:85;4684:13;4758:10;4771:66;4812:24;4830:5;4812:17;:24::i;:::-;4796:12;;4789:47;;;4796:12;;4789:47;:::i;:::-;4771:17;:66::i;:::-;4858:10;;4758:79;;-1:-1:-1;;;;4858:10:85;;;;;;4851:17;;;;;4847:43;;4877:13;;-1:-1:-1;;;4877:13:85;;;;;;;;;;;4847:43;4907:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4907:16:85;;;;;4606:324::o;6210:129:86:-;6283:4;6306:26;6314:3;6326:5;6306:7;:26::i;8623:156::-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:86;;8719:7;:53::i;1599:130:24:-;1513:6;;-1:-1:-1;;;;;1513:6:24;929:10:39;1662:23:24;1654:68;;;;-1:-1:-1;;;1654:68:24;;42136:2:228;1654:68:24;;;42118:21:228;;;42155:18;;;42148:30;42214:34;42194:18;;;42187:62;42266:18;;1654:68:24;41934:356:228;2666:187:24;2758:6;;;-1:-1:-1;;;;;2774:17:24;;;-1:-1:-1;;;;;;2774:17:24;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;2408:167:135:-;2496:6;2528:39;2541:4;2558:3;438:4:134;2528:12:135;:39::i;21441:717:103:-;21642:4;21821:69;21880:8;21821:22;:41;21844:17;:11;:15;:17::i;21821:69::-;:204;;;;;22006:19;21821:204;:330;;;;-1:-1:-1;;22119:27:103;;-1:-1:-1;;;;;22119:32:103;;;;21698:453;-1:-1:-1;;;21441:717:103:o;26030:186::-;26119:6;26144:65;-1:-1:-1;;;;;26183:25:103;;;;26151:21;;26144:65;:::i;4912:118:86:-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;2214:404::-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:86;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:86;2589:12;;5358:230:135;5482:16;;5449:7;;5515:8;;:66;;5541:33;5555:9;5566:7;5572:1;5566:3;:7;:::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;;6703:28;;6514:233;5541:33;:40;-1:-1:-1;;;5541:40:135;;-1:-1:-1;;;;;5541:40:135;5515:66;;;-1:-1:-1;5526:12:135;;5358:230;-1:-1:-1;;5358:230:135:o;1667:4213:82:-;1749:14;;;-1:-1:-1;;2286:1:82;2283;2276:20;2329:1;2326;2322:9;2313:18;;2384:5;2380:2;2377:13;2369:5;2365:2;2361:14;2357:34;2348:43;;;2486:5;2495:1;2486:10;2482:368;;2824:11;2816:5;:19;;;;;:::i;:::-;;2809:26;;;;;;2482:368;2974:5;2960:11;:19;2952:53;;;;-1:-1:-1;;;2952:53:82;;42883:2:228;2952:53:82;;;42865:21:228;42922:2;42902:18;;;42895:30;-1:-1:-1;;;42941:18:228;;;42934:51;43002:18;;2952:53:82;42681:345:228;2952:53:82;3261:17;3396:11;3393:1;3390;3383:25;4774:1;3944;3929:12;;:16;;3914:32;;4049:22;;;;4755:1;:15;;4754:21;;5007;;;5003:25;;4992:36;5076:21;;;5072:25;;5061:36;5146:21;;;5142:25;;5131:36;5216:21;;;5212:25;;5201:36;5286:21;;;5282:25;;5271:36;5357:21;;;5353:25;;;5342:36;;;3899:12;4294;;;4290:23;;;4286:31;;;3510:20;;;3499:32;;;4406:12;;;;3557:21;;4147:16;;;;4397:21;;;;5821:15;;;-1:-1:-1;;;;1667:4213:82:o;6012:299::-;6113:7;6132:14;6149:25;6156:1;6159;6162:11;6149:6;:25::i;:::-;6132:42;-1:-1:-1;6200:11:82;6188:8;:23;;;;;;;;:::i;:::-;;:56;;;;;6243:1;6228:11;6215:25;;;;;:::i;:::-;6225:1;6222;6215:25;:29;6188:56;6184:98;;;6260:11;6270:1;6260:11;;:::i;:::-;;6298:6;-1:-1:-1;;;;;;6012:299:82:o;1700:134:135:-;1791:36;1799:4;1816:3;-1:-1:-1;;;;;1791:36:135;;:7;:36::i;5570:109:86:-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;3759:212:85:-;3825:13;3854:12;3860:5;5888:12;;;;;-1:-1:-1;;;5874:10:85;;;;;:26;;;5785:122;3854:12;3850:32;;;3875:7;;-1:-1:-1;;;3875:7:85;;;;;;;;;;;3850:32;-1:-1:-1;3912:12:85;;;;3892:17;3941:23;;;3912:12;3941:11;;;:23;;;;;;;3759:212::o;3295:324::-;3359:13;3388:12;3394:5;5888:12;;;;;-1:-1:-1;;;5874:10:85;;;;;:26;;;5785:122;3388:12;3384:32;;;3409:7;;-1:-1:-1;;;3409:7:85;;;;;;;;;;;3384:32;-1:-1:-1;3446:12:85;;;;3426:17;3476:23;;;3446:12;3476:11;;;:23;;;;;;;3509:30;;;3573:29;;-1:-1:-1;;3573:29:85;3588:14;;-1:-1:-1;;;;;3573:29:85;;;;;;;;3476:23;3295:324::o;34781:297:83:-;34837:6;-1:-1:-1;;;;;34962:5:83;:34;;34954:87;;;;-1:-1:-1;;;34954:87:83;;43495:2:228;34954:87:83;;;43477:21:228;43534:2;43514:18;;;43507:30;43573:34;43553:18;;;43546:62;-1:-1:-1;;;43624:18:228;;;43617:38;43672:19;;34954:87:83;43293:404:228;34954:87:83;-1:-1:-1;35065:5:83;34781:297::o;26101:198::-;26205:5;26229:19;;;;;;26221:71;;;;-1:-1:-1;;;26221:71:83;;43904:2:228;26221:71:83;;;43886:21:228;43943:2;43923:18;;;43916:30;43982:34;43962:18;;;43955:62;-1:-1:-1;;;44033:18:228;;;44026:37;44080:19;;26221:71:83;43702:403:228;26221:71:83;26101:198;;;:::o;2786:1388:86:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:86;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;4889:343:135;5060:16;;5027:7;;;5100:42;5060:9;5130:3;5027:7;5060:16;5100:18;:42::i;:::-;5086:56;-1:-1:-1;5159:8:135;;:66;;5185:33;5199:9;5210:7;5216:1;5210:3;:7;:::i;5185:33::-;:40;-1:-1:-1;;;5185:40:135;;-1:-1:-1;;;;;5185:40:135;5159:66;;;-1:-1:-1;5170:12:135;;5152:73;-1:-1:-1;;;;4889:343:135:o;4054:667::-;4155:11;;4181:7;;4177:422;;4278:20;4301:28;4315:4;4321:7;4327:1;4321:3;:7;:::i;4301:28::-;4278:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4278:51:135;;;-1:-1:-1;;;;;4278:51:135;;;;;;;-1:-1:-1;4351:16:135;;;-1:-1:-1;4351:16:135;4343:52;;;;-1:-1:-1;;;4343:52:135;;;;;;;;;;;;4471:9;;:16;;;;;;;4467:122;;4545:5;4507:28;4521:4;4527:7;4533:1;4527:3;:7;:::i;4507:28::-;:43;;-1:-1:-1;;;;;4507:43:135;;;;-1:-1:-1;;;4507:43:135;;;;;;;;;;;-1:-1:-1;;;;;4054:667:135:o;4467:122::-;4190:409;4177:422;-1:-1:-1;4677:36:135;;;;;;;;;;;;;;;-1:-1:-1;;;;;4677:36:135;;;;;;;;;;4667:47;;;;;;;-1:-1:-1;4667:47:135;;;;;;;;;;;;-1:-1:-1;;;4667:47:135;;;;;;;;;4054:667::o;5932:439::-;6084:7;6103:241;6116:4;6110:3;:10;6103:241;;;6136:11;6150:34;6174:3;6179:4;6150:23;:34::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;6136:48;;-1:-1:-1;6202:35:135;;;;6703:28;;6202:29;;;:35;6198:136;;;6264:3;6257:10;;6198:136;;;6312:7;:3;6318:1;6312:7;:::i;:::-;6306:13;;6198:136;6122:222;6103:241;;816:153:45;878:7;951:11;961:1;952:5;;;951:11;:::i;:::-;941:21;;942:5;;;941:21;:::i;14:131:228:-;-1:-1:-1;;;;;89:31:228;;79:42;;69:70;;135:1;132;125:12;150:127;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:253;354:2;348:9;396:4;384:17;;-1:-1:-1;;;;;416:34:228;;452:22;;;413:62;410:88;;;478:18;;:::i;:::-;514:2;507:22;282:253;:::o;540:275::-;611:2;605:9;676:2;657:13;;-1:-1:-1;;653:27:228;641:40;;-1:-1:-1;;;;;696:34:228;;732:22;;;693:62;690:88;;;758:18;;:::i;:::-;794:2;787:22;540:275;;-1:-1:-1;540:275:228:o;820:163::-;887:20;;947:10;936:22;;926:33;;916:61;;973:1;970;963:12;988:578;1046:5;1094:4;1082:9;1077:3;1073:19;1069:30;1066:50;;;1112:1;1109;1102:12;1066:50;1165:4;1159:11;;;1197:17;;-1:-1:-1;;;;;1229:34:228;;1265:22;;;1226:62;1223:88;;;1291:18;;:::i;:::-;1327:4;1320:24;1362:6;-1:-1:-1;1362:6:228;1392:23;;1424:33;1392:23;1424:33;:::i;:::-;1466:23;;1522:37;1555:2;1540:18;;1522:37;:::i;:::-;1517:2;1509:6;1505:15;1498:62;;988:578;;;;:::o;1571:532::-;1697:6;1705;1713;1766:3;1754:9;1745:7;1741:23;1737:33;1734:53;;;1783:1;1780;1773:12;1734:53;1822:9;1809:23;1841:31;1866:5;1841:31;:::i;:::-;1891:5;-1:-1:-1;1915:58:228;1965:7;1960:2;1945:18;;1915:58;:::i;:::-;1905:68;;2025:2;2014:9;2010:18;1997:32;2038:33;2063:7;2038:33;:::i;:::-;2090:7;2080:17;;;1571:532;;;;;:::o;2378:257::-;2188:12;;-1:-1:-1;;;;;2184:37:228;2172:50;;2286:4;2275:16;;;2269:23;2265:2;2254:39;2238:14;;;2231:63;2347:4;2336:16;;;2330:23;2355:10;2326:40;2310:14;;;2303:64;2570:2;2555:18;;2582:47;2108:265;2640:226;2699:6;2752:2;2740:9;2731:7;2727:23;2723:32;2720:52;;;2768:1;2765;2758:12;2720:52;-1:-1:-1;2813:23:228;;2640:226;-1:-1:-1;2640:226:228:o;2871:247::-;2930:6;2983:2;2971:9;2962:7;2958:23;2954:32;2951:52;;;2999:1;2996;2989:12;2951:52;3038:9;3025:23;3057:31;3082:5;3057:31;:::i;3123:195::-;3204:12;;-1:-1:-1;;;;;3200:38:228;3188:51;;3292:4;3281:16;;;3275:23;3300:10;3271:40;3255:14;;3248:64;3123:195::o;3323:454::-;3387:3;3425:5;3419:12;3452:6;3447:3;3440:19;3484:4;3479:3;3475:14;3468:21;;3523:4;3516:5;3512:16;3546:1;3556:196;3570:6;3567:1;3564:13;3556:196;;;3619:49;3664:3;3655:6;3649:13;3619:49;:::i;:::-;3697:4;3688:14;;;;;3737:4;3725:17;;;;;3592:1;3585:9;3556:196;;;-1:-1:-1;3768:3:228;;3323:454;-1:-1:-1;;;;3323:454:228:o;3782:332::-;4021:2;4010:9;4003:21;3984:4;4041:67;4104:2;4093:9;4089:18;4081:6;4041:67;:::i;4119:236::-;4208:6;4261:2;4249:9;4240:7;4236:23;4232:32;4229:52;;;4277:1;4274;4267:12;4229:52;4300:49;4341:7;4330:9;4300:49;:::i;4552:391::-;4639:8;4649:6;4703:3;4696:4;4688:6;4684:17;4680:27;4670:55;;4721:1;4718;4711:12;4670:55;-1:-1:-1;4744:20:228;;-1:-1:-1;;;;;4776:30:228;;4773:50;;;4819:1;4816;4809:12;4773:50;4856:4;4848:6;4844:17;4832:29;;4916:3;4909:4;4899:6;4896:1;4892:14;4884:6;4880:27;4876:38;4873:47;4870:67;;;4933:1;4930;4923:12;4948:632;5079:6;5087;5095;5148:2;5136:9;5127:7;5123:23;5119:32;5116:52;;;5164:1;5161;5154:12;5116:52;5203:9;5190:23;5222:31;5247:5;5222:31;:::i;:::-;5272:5;-1:-1:-1;5328:2:228;5313:18;;5300:32;-1:-1:-1;;;;;5344:30:228;;5341:50;;;5387:1;5384;5377:12;5341:50;5426:94;5512:7;5503:6;5492:9;5488:22;5426:94;:::i;:::-;4948:632;;5539:8;;-1:-1:-1;5400:120:228;;-1:-1:-1;;;;4948:632:228:o;5782:183::-;5842:4;-1:-1:-1;;;;;5867:6:228;5864:30;5861:56;;;5897:18;;:::i;:::-;-1:-1:-1;5942:1:228;5938:14;5954:4;5934:25;;5782:183::o;5970:744::-;6024:5;6077:3;6070:4;6062:6;6058:17;6054:27;6044:55;;6095:1;6092;6085:12;6044:55;6135:6;6122:20;6162:64;6178:47;6218:6;6178:47;:::i;:::-;6162:64;:::i;:::-;6250:3;6274:6;6269:3;6262:19;6306:4;6301:3;6297:14;6290:21;;6367:4;6357:6;6354:1;6350:14;6342:6;6338:27;6334:38;6320:52;;6395:3;6387:6;6384:15;6381:35;;;6412:1;6409;6402:12;6381:35;6448:4;6440:6;6436:17;6462:221;6478:6;6473:3;6470:15;6462:221;;;6560:3;6547:17;6577:31;6602:5;6577:31;:::i;:::-;6621:18;;6668:4;6659:14;;;;6495;6462:221;;;-1:-1:-1;6701:7:228;5970:744;-1:-1:-1;;;;;5970:744:228:o;6719:807::-;6903:6;6911;6919;6927;6980:3;6968:9;6959:7;6955:23;6951:33;6948:53;;;6997:1;6994;6987:12;6948:53;7020:49;7061:7;7050:9;7020:49;:::i;:::-;7010:59;;7120:2;7109:9;7105:18;7092:32;-1:-1:-1;;;;;7139:6:228;7136:30;7133:50;;;7179:1;7176;7169:12;7133:50;7202:61;7255:7;7246:6;7235:9;7231:22;7202:61;:::i;:::-;7192:71;;;7316:2;7305:9;7301:18;7288:32;-1:-1:-1;;;;;7335:8:228;7332:32;7329:52;;;7377:1;7374;7367:12;7329:52;7400:63;7455:7;7444:8;7433:9;7429:24;7400:63;:::i;:::-;7390:73;;;7482:38;7515:3;7504:9;7500:19;7482:38;:::i;:::-;7472:48;;6719:807;;;;;;;:::o;7531:420::-;7584:3;7622:5;7616:12;7649:6;7644:3;7637:19;7681:4;7676:3;7672:14;7665:21;;7720:4;7713:5;7709:16;7743:1;7753:173;7767:6;7764:1;7761:13;7753:173;;;7828:13;;7816:26;;7871:4;7862:14;;;;7899:17;;;;7789:1;7782:9;7753:173;;7956:823;8148:4;8196:2;8185:9;8181:18;8226:2;8215:9;8208:21;8249:6;8284;8278:13;8315:6;8307;8300:22;8353:2;8342:9;8338:18;8331:25;;8415:2;8405:6;8402:1;8398:14;8387:9;8383:30;8379:39;8365:53;;8453:2;8445:6;8441:15;8474:1;8484:266;8498:6;8495:1;8492:13;8484:266;;;8591:2;8587:7;8575:9;8567:6;8563:22;8559:36;8554:3;8547:49;8619:51;8663:6;8654;8648:13;8619:51;:::i;:::-;8609:61;-1:-1:-1;8705:2:228;8728:12;;;;8693:15;;;;;8520:1;8513:9;8484:266;;;-1:-1:-1;8767:6:228;;7956:823;-1:-1:-1;;;;;;7956:823:228:o;9015:530::-;9118:6;9126;9179:2;9167:9;9158:7;9154:23;9150:32;9147:52;;;9195:1;9192;9185:12;9147:52;9234:9;9221:23;9253:31;9278:5;9253:31;:::i;:::-;9303:5;-1:-1:-1;9359:2:228;9344:18;;9331:32;-1:-1:-1;;;;;9375:30:228;;9372:50;;;9418:1;9415;9408:12;9372:50;9441:22;;9497:3;9479:16;;;9475:26;9472:46;;;9514:1;9511;9504:12;9472:46;9537:2;9527:12;;;9015:530;;;;;:::o;9550:407::-;9637:6;9645;9698:2;9686:9;9677:7;9673:23;9669:32;9666:52;;;9714:1;9711;9704:12;9666:52;9753:9;9740:23;9772:31;9797:5;9772:31;:::i;:::-;9822:5;-1:-1:-1;9879:2:228;9864:18;;9851:32;9892:33;9851:32;9892:33;:::i;9962:452::-;10025:3;10063:5;10057:12;10090:6;10085:3;10078:19;10122:4;10117:3;10113:14;10106:21;;10161:4;10154:5;10150:16;10184:1;10194:195;10208:6;10205:1;10202:13;10194:195;;;10257:48;10301:3;10292:6;10286:13;2188:12;;-1:-1:-1;;;;;2184:37:228;2172:50;;2286:4;2275:16;;;2269:23;2265:2;2254:39;2238:14;;;2231:63;2347:4;2336:16;;;2330:23;2355:10;2326:40;2310:14;;2303:64;2108:265;10257:48;10334:4;10325:14;;;;;10374:4;10362:17;;;;;10230:1;10223:9;10194:195;;10419:604;10794:2;10783:9;10776:21;10757:4;10820:67;10883:2;10872:9;10868:18;10860:6;10820:67;:::i;:::-;10935:9;10927:6;10923:22;10918:2;10907:9;10903:18;10896:50;10963:54;11010:6;11002;10963:54;:::i;11028:551::-;11092:3;11130:5;11124:12;11157:6;11152:3;11145:19;11189:4;11184:3;11180:14;11173:21;;11228:4;11221:5;11217:16;11251:1;11261:293;11275:6;11272:1;11269:13;11261:293;;;11334:13;;-1:-1:-1;;;;;11404:28:228;11392:41;;11469:4;11460:14;;;;11527:17;;;;11429:1;11290:9;11261:293;;11584:291;11782:2;11771:9;11764:21;11745:4;11802:67;11865:2;11854:9;11850:18;11842:6;11802:67;:::i;12119:502::-;12231:6;12239;12292:2;12280:9;12271:7;12267:23;12263:32;12260:52;;;12308:1;12305;12298:12;12260:52;12348:9;12335:23;-1:-1:-1;;;;;12373:6:228;12370:30;12367:50;;;12413:1;12410;12403:12;12367:50;12436:61;12489:7;12480:6;12469:9;12465:22;12436:61;:::i;:::-;12426:71;;;12547:2;12536:9;12532:18;12519:32;12560:31;12585:5;12560:31;:::i;12626:634::-;12814:2;12826:21;;;12896:13;;12799:18;;;12918:22;;;12766:4;;12997:15;;;12971:2;12956:18;;;12766:4;13040:194;13054:6;13051:1;13048:13;13040:194;;;13119:13;;-1:-1:-1;;;;;13115:38:228;13103:51;;13183:2;13209:15;;;;13174:12;;;;13076:1;13069:9;13040:194;;;-1:-1:-1;13251:3:228;;12626:634;-1:-1:-1;;;;;12626:634:228:o;13265:969::-;13414:6;13422;13430;13438;13446;13499:2;13487:9;13478:7;13474:23;13470:32;13467:52;;;13515:1;13512;13505:12;13467:52;13554:9;13541:23;13573:31;13598:5;13573:31;:::i;:::-;13623:5;-1:-1:-1;13679:2:228;13664:18;;13651:32;-1:-1:-1;;;;;13695:30:228;;13692:50;;;13738:1;13735;13728:12;13692:50;13777:94;13863:7;13854:6;13843:9;13839:22;13777:94;:::i;:::-;13890:8;;-1:-1:-1;13751:120:228;-1:-1:-1;;13978:2:228;13963:18;;13950:32;-1:-1:-1;;;;;13994:32:228;;13991:52;;;14039:1;14036;14029:12;13991:52;14078:96;14166:7;14155:8;14144:9;14140:24;14078:96;:::i;:::-;13265:969;;;;-1:-1:-1;13265:969:228;;-1:-1:-1;14193:8:228;;14052:122;13265:969;-1:-1:-1;;;13265:969:228:o;14239:687::-;14361:6;14369;14377;14385;14438:2;14426:9;14417:7;14413:23;14409:32;14406:52;;;14454:1;14451;14444:12;14406:52;14493:9;14480:23;14512:31;14537:5;14512:31;:::i;:::-;14562:5;-1:-1:-1;14586:37:228;14619:2;14604:18;;14586:37;:::i;:::-;14576:47;;14674:2;14663:9;14659:18;14646:32;-1:-1:-1;;;;;14693:6:228;14690:30;14687:50;;;14733:1;14730;14723:12;14687:50;14772:94;14858:7;14849:6;14838:9;14834:22;14772:94;:::i;:::-;14239:687;;;;-1:-1:-1;14885:8:228;-1:-1:-1;;;;14239:687:228:o;14931:502::-;15043:6;15051;15104:2;15092:9;15083:7;15079:23;15075:32;15072:52;;;15120:1;15117;15110:12;15072:52;15159:9;15146:23;15178:31;15203:5;15178:31;:::i;:::-;15228:5;-1:-1:-1;15284:2:228;15269:18;;15256:32;-1:-1:-1;;;;;15300:30:228;;15297:50;;;15343:1;15340;15333:12;15297:50;15366:61;15419:7;15410:6;15399:9;15395:22;15366:61;:::i;:::-;15356:71;;;14931:502;;;;;:::o;15438:319::-;15505:6;15513;15566:2;15554:9;15545:7;15541:23;15537:32;15534:52;;;15582:1;15579;15572:12;15534:52;15621:9;15608:23;15640:31;15665:5;15640:31;:::i;:::-;15690:5;-1:-1:-1;15714:37:228;15747:2;15732:18;;15714:37;:::i;:::-;15704:47;;15438:319;;;;;:::o;15762:269::-;15819:6;15872:2;15860:9;15851:7;15847:23;15843:32;15840:52;;;15888:1;15885;15878:12;15840:52;15927:9;15914:23;15977:4;15970:5;15966:16;15959:5;15956:27;15946:55;;15997:1;15994;15987:12;16218:371;16316:6;16324;16377:2;16365:9;16356:7;16352:23;16348:32;16345:52;;;16393:1;16390;16383:12;16345:52;16432:9;16419:23;16451:31;16476:5;16451:31;:::i;:::-;16501:5;-1:-1:-1;16525:58:228;16575:7;16570:2;16555:18;;16525:58;:::i;16799:164::-;16868:5;16913:2;16904:6;16899:3;16895:16;16891:25;16888:45;;;16929:1;16926;16919:12;16888:45;-1:-1:-1;16951:6:228;16799:164;-1:-1:-1;16799:164:228:o;16968:375::-;17064:6;17117:2;17105:9;17096:7;17092:23;17088:32;17085:52;;;17133:1;17130;17123:12;17085:52;17173:9;17160:23;-1:-1:-1;;;;;17198:6:228;17195:30;17192:50;;;17238:1;17235;17228:12;17192:50;17261:76;17329:7;17320:6;17309:9;17305:22;17261:76;:::i;18298:627::-;18449:6;18457;18465;18518:3;18506:9;18497:7;18493:23;18489:33;18486:53;;;18535:1;18532;18525:12;18486:53;18575:9;18562:23;-1:-1:-1;;;;;18600:6:228;18597:30;18594:50;;;18640:1;18637;18630:12;18594:50;18663:61;18716:7;18707:6;18696:9;18692:22;18663:61;:::i;:::-;18653:71;;;18743:58;18793:7;18788:2;18777:9;18773:18;18743:58;:::i;18930:329::-;19167:2;19156:9;19149:21;19130:4;19187:66;19249:2;19238:9;19234:18;19226:6;19187:66;:::i;19472:574::-;19592:6;19600;19608;19661:2;19649:9;19640:7;19636:23;19632:32;19629:52;;;19677:1;19674;19667:12;19629:52;19716:9;19703:23;19735:31;19760:5;19735:31;:::i;:::-;19785:5;-1:-1:-1;19841:2:228;19826:18;;19813:32;-1:-1:-1;;;;;19857:30:228;;19854:50;;;19900:1;19897;19890:12;19854:50;19923:61;19976:7;19967:6;19956:9;19952:22;19923:61;:::i;:::-;19913:71;;;20003:37;20036:2;20025:9;20021:18;20003:37;:::i;:::-;19993:47;;19472:574;;;;;:::o;20051:2630::-;20177:6;20185;20238:2;20226:9;20217:7;20213:23;20209:32;20206:52;;;20254:1;20251;20244:12;20206:52;20293:9;20280:23;20312:31;20337:5;20312:31;:::i;:::-;20362:5;-1:-1:-1;20418:2:228;20403:18;;20390:32;-1:-1:-1;;;;;20434:30:228;;20431:50;;;20477:1;20474;20467:12;20431:50;20500:22;;20553:4;20545:13;;20541:27;-1:-1:-1;20531:55:228;;20582:1;20579;20572:12;20531:55;20622:2;20609:16;20645:64;20661:47;20701:6;20661:47;:::i;20645:64::-;20731:3;20755:6;20750:3;20743:19;20787:2;20782:3;20778:12;20771:19;;20842:2;20832:6;20829:1;20825:14;20821:2;20817:23;20813:32;20799:46;;20868:7;20860:6;20857:19;20854:39;;;20889:1;20886;20879:12;20854:39;20921:2;20917;20913:11;20933:1718;20949:6;20944:3;20941:15;20933:1718;;;21035:3;21022:17;-1:-1:-1;;;;;21058:11:228;21055:35;21052:55;;;21103:1;21100;21093:12;21052:55;21130:20;;21202:4;21174:16;;;-1:-1:-1;;21170:30:228;21166:41;21163:61;;;21220:1;21217;21210:12;21163:61;21252:22;;:::i;:::-;21303:51;21346:7;21341:2;21337;21333:11;21303:51;:::i;:::-;21294:7;21287:68;21405:4;21401:2;21397:13;21384:27;-1:-1:-1;;;;;21430:8:228;21427:32;21424:52;;;21472:1;21469;21462:12;21424:52;21514:65;21571:7;21566:2;21555:8;21551:2;21547:17;21543:26;21514:65;:::i;:::-;21509:2;21500:7;21496:16;21489:91;;21630:4;21626:2;21622:13;21609:27;-1:-1:-1;;;;;21655:8:228;21652:32;21649:52;;;21697:1;21694;21687:12;21649:52;21747:2;21736:8;21732:2;21728:17;21724:26;21714:36;;;21792:7;21785:4;21781:2;21777:13;21773:27;21763:55;;21814:1;21811;21804:12;21763:55;21860:2;21847:16;21889:66;21905:49;21945:8;21905:49;:::i;21889:66::-;21983:5;22015:8;22008:5;22001:23;22057:2;22050:5;22046:14;22037:23;;22120:2;22108:8;22105:1;22101:16;22097:2;22093:25;22089:34;22073:50;;22152:7;22142:8;22139:21;22136:41;;;22173:1;22170;22163:12;22136:41;22211:2;22207;22203:11;22190:24;;22227:303;22245:8;22238:5;22235:19;22227:303;;;22341:5;22328:19;-1:-1:-1;;;;;22390:7:228;22386:32;22377:7;22374:45;22364:73;;22433:1;22430;22423:12;22364:73;22454:22;;22513:2;22266:14;;;;22502;;;;22227:303;;;22563:2;22550:16;;22543:33;-1:-1:-1;;22589:20:228;;-1:-1:-1;22638:2:228;22629:12;;;;20966;20933:1718;;;20937:3;22670:5;22660:15;;;;;;20051:2630;;;;;:::o;22686:722::-;22766:6;22774;22782;22835:2;22823:9;22814:7;22810:23;22806:32;22803:52;;;22851:1;22848;22841:12;22803:52;22890:9;22877:23;22909:31;22934:5;22909:31;:::i;:::-;22959:5;-1:-1:-1;23015:2:228;23000:18;;22987:32;-1:-1:-1;;;;;23031:30:228;;23028:50;;;23074:1;23071;23064:12;23028:50;23097:22;;23150:4;23142:13;;23138:27;-1:-1:-1;23128:55:228;;23179:1;23176;23169:12;23128:55;23219:2;23206:16;-1:-1:-1;;;;;23237:6:228;23234:30;23231:50;;;23277:1;23274;23267:12;23231:50;23322:7;23317:2;23308:6;23304:2;23300:15;23296:24;23293:37;23290:57;;;23343:1;23340;23333:12;23290:57;22686:722;;23374:2;23366:11;;;;;-1:-1:-1;23396:6:228;;-1:-1:-1;;;22686:722:228:o;23413:508::-;23516:6;23524;23577:2;23565:9;23556:7;23552:23;23548:32;23545:52;;;23593:1;23590;23583:12;23545:52;23632:9;23619:23;23651:31;23676:5;23651:31;:::i;:::-;23701:5;-1:-1:-1;23757:2:228;23742:18;;23729:32;-1:-1:-1;;;;;23773:30:228;;23770:50;;;23816:1;23813;23806:12;23770:50;23839:76;23907:7;23898:6;23887:9;23883:22;23839:76;:::i;24204:367::-;24272:6;24280;24333:2;24321:9;24312:7;24308:23;24304:32;24301:52;;;24349:1;24346;24339:12;24301:52;24388:9;24375:23;24407:31;24432:5;24407:31;:::i;:::-;24457:5;24535:2;24520:18;;;;24507:32;;-1:-1:-1;;;24204:367:228:o;25228:277::-;25295:6;25348:2;25336:9;25327:7;25323:23;25319:32;25316:52;;;25364:1;25361;25354:12;25316:52;25396:9;25390:16;25449:5;25442:13;25435:21;25428:5;25425:32;25415:60;;25471:1;25468;25461:12;25510:127;25571:10;25566:3;25562:20;25559:1;25552:31;25602:4;25599:1;25592:15;25626:4;25623:1;25616:15;25642:333;25744:4;25802:11;25789:25;25896:2;25892:7;25881:8;25865:14;25861:29;25857:43;25837:18;25833:68;25823:96;;25915:1;25912;25905:12;25823:96;25936:33;;;;;25642:333;-1:-1:-1;;25642:333:228:o;25980:184::-;26038:6;26091:2;26079:9;26070:7;26066:23;26062:32;26059:52;;;26107:1;26104;26097:12;26059:52;26130:28;26148:9;26130:28;:::i;26169:260::-;26363:2;26348:18;;26375:48;26352:9;26405:6;26375:48;:::i;26434:564::-;26546:4;26552:6;26612:11;26599:25;26706:2;26702:7;26691:8;26675:14;26671:29;26667:43;26647:18;26643:68;26633:96;;26725:1;26722;26715:12;26633:96;26752:33;;26804:20;;;-1:-1:-1;;;;;;26836:30:228;;26833:50;;;26879:1;26876;26869:12;26833:50;26912:4;26900:17;;-1:-1:-1;26963:1:228;26959:14;;;26943;26939:35;26929:46;;26926:66;;;26988:1;26985;26978:12;27274:376;27515:2;27500:18;;27527:48;27504:9;27557:6;27527:48;:::i;:::-;-1:-1:-1;;;;;27611:32:228;;;;27606:2;27591:18;;;;27584:60;27274:376;;-1:-1:-1;27274:376:228:o;27655:495::-;27931:2;27920:9;27913:21;27894:4;27957:56;28009:2;27998:9;27994:18;27986:6;27957:56;:::i;:::-;28061:9;28053:6;28049:22;28044:2;28033:9;28029:18;28022:50;28089:55;28137:6;28129;28089:55;:::i;28155:1704::-;28275:6;28328:2;28316:9;28307:7;28303:23;28299:32;28296:52;;;28344:1;28341;28334:12;28296:52;28377:9;28371:16;-1:-1:-1;;;;;28402:6:228;28399:30;28396:50;;;28442:1;28439;28432:12;28396:50;28465:22;;28518:4;28510:13;;28506:27;-1:-1:-1;28496:55:228;;28547:1;28544;28537:12;28496:55;28580:2;28574:9;28603:64;28619:47;28659:6;28619:47;:::i;28603:64::-;28689:3;28713:6;28708:3;28701:19;28745:2;28740:3;28736:12;28729:19;;28800:2;28790:6;28787:1;28783:14;28779:2;28775:23;28771:32;28757:46;;28826:7;28818:6;28815:19;28812:39;;;28847:1;28844;28837:12;28812:39;28879:2;28875;28871:11;28891:938;28907:6;28902:3;28899:15;28891:938;;;28986:3;28980:10;-1:-1:-1;;;;;29009:11:228;29006:35;29003:55;;;29054:1;29051;29044:12;29003:55;29081:20;;29136:2;29128:11;;29124:25;-1:-1:-1;29114:53:228;;29163:1;29160;29153:12;29114:53;29210:2;29206;29202:11;29196:18;29240:66;29256:49;29296:8;29256:49;:::i;29240:66::-;29334:5;29366:8;29359:5;29352:23;29408:2;29401:5;29397:14;29388:23;;29480:2;29475;29463:8;29460:1;29456:16;29452:2;29448:25;29444:34;29440:43;29424:59;;29512:7;29502:8;29499:21;29496:41;;;29533:1;29530;29523:12;29496:41;29571:2;29567;29563:11;29550:24;;29587:167;29605:8;29598:5;29595:19;29587:167;;;29687:12;;29673:27;;29737:2;29626:14;;;;29726;;;;29587:167;;;29767:20;;-1:-1:-1;;29816:2:228;29807:12;;;;28924;;;;;-1:-1:-1;28891:938:228;;;-1:-1:-1;29848:5:228;28155:1704;-1:-1:-1;;;;;;28155:1704:228:o;30414:127::-;30475:10;30470:3;30466:20;30463:1;30456:31;30506:4;30503:1;30496:15;30530:4;30527:1;30520:15;30546:128;30613:9;;;30634:11;;;30631:37;;;30648:18;;:::i;30679:194::-;-1:-1:-1;;;;;30777:26:228;;;30749;;;30745:59;;30816:28;;30813:54;;;30847:18;;:::i;30878:213::-;30913:3;30961:5;30957:2;30946:21;-1:-1:-1;;;;;30991:39:228;30982:7;30979:52;30976:78;;31034:18;;:::i;:::-;31074:1;31070:15;;30878:213;-1:-1:-1;;30878:213:228:o;31096:245::-;31194:2;31164:17;;;31183;;;;31160:41;-1:-1:-1;;;;;31216:44:228;;-1:-1:-1;;;;;;31262:49:228;;31213:99;31210:125;;;31315:18;;:::i;31346:656::-;-1:-1:-1;;;;;31698:32:228;;31680:51;;31667:3;31652:19;;31740:57;31793:2;31778:18;;31770:6;31740:57;:::i;:::-;-1:-1:-1;;;;;31833:32:228;;;;31828:2;31813:18;;31806:60;-1:-1:-1;;;;;31903:31:228;;;;31897:3;31882:19;;31875:60;31984:10;31972:23;31853:3;31951:19;;;31944:52;31833:32;31346:656;-1:-1:-1;;31346:656:228:o;32520:522::-;32598:4;32604:6;32664:11;32651:25;32758:2;32754:7;32743:8;32727:14;32723:29;32719:43;32699:18;32695:68;32685:96;;32777:1;32774;32767:12;32685:96;32804:33;;32856:20;;;-1:-1:-1;;;;;;32888:30:228;;32885:50;;;32931:1;32928;32921:12;32885:50;32964:4;32952:17;;-1:-1:-1;32995:14:228;32991:27;;;32981:38;;32978:58;;;33032:1;33029;33022:12;33047:267;33136:6;33131:3;33124:19;33188:6;33181:5;33174:4;33169:3;33165:14;33152:43;-1:-1:-1;33240:1:228;33215:16;;;33233:4;33211:27;;;33204:38;;;;33296:2;33275:15;;;-1:-1:-1;;33271:29:228;33262:39;;;33258:50;;33047:267::o;33319:1392::-;-1:-1:-1;;;;;33821:32:228;;33803:51;;33742:4;33790:3;33775:19;;33863:57;33916:2;33901:18;;33893:6;33863:57;:::i;:::-;33956:3;33951:2;33936:18;;33929:31;33995:22;;;34075:6;34048:3;34033:19;;34099:1;34109:348;34123:6;34120:1;34117:13;34109:348;;;34198:6;34185:20;34218:31;34243:5;34218:31;:::i;:::-;-1:-1:-1;;;;;34306:31:228;34294:44;;34374:4;34432:15;;;;34365:14;;;;34334:1;34138:9;34109:348;;;34113:3;34503:9;34498:3;34494:19;34488:3;34477:9;34473:19;34466:48;34537:41;34574:3;34566:6;34537:41;:::i;:::-;34523:55;;;34627:9;34619:6;34615:22;34609:3;34598:9;34594:19;34587:51;34655:50;34698:6;34690;34682;34655:50;:::i;:::-;34647:58;33319:1392;-1:-1:-1;;;;;;;;;;33319:1392:228:o;34716:272::-;34774:6;34827:2;34815:9;34806:7;34802:23;34798:32;34795:52;;;34843:1;34840;34833:12;34795:52;34882:9;34869:23;34932:6;34925:5;34921:18;34914:5;34911:29;34901:57;;34954:1;34951;34944:12;35542:167;35637:10;35610:18;;;35630;;;35606:43;;35661:19;;35658:45;;;35683:18;;:::i;35714:419::-;35813:6;35808:3;35801:19;35845:4;35840:3;35836:14;35829:21;;35783:3;35873:5;35896:1;35906:202;35920:6;35917:1;35914:13;35906:202;;;36012:10;35985:25;36003:6;35985:25;:::i;:::-;35981:42;35969:55;;36053:4;36044:14;;;;36081:17;;;;;35942:1;35935:9;35906:202;;36138:382;-1:-1:-1;;;;;36353:32:228;;36335:51;;36422:2;36417;36402:18;;36395:30;;;-1:-1:-1;;36442:72:228;;36495:18;;36487:6;36479;36442:72;:::i;36525:247::-;36684:2;36673:9;36666:21;36647:4;36704:62;36762:2;36751:9;36747:18;36739:6;36731;36704:62;:::i;37303:570::-;-1:-1:-1;;;;;37574:32:228;;37556:51;;37643:2;37638;37623:18;;37616:30;;;-1:-1:-1;;37669:72:228;;37722:18;;37714:6;37706;37669:72;:::i;:::-;37789:9;37781:6;37777:22;37772:2;37761:9;37757:18;37750:50;37817;37860:6;37852;37844;37817:50;:::i;:::-;37809:58;37303:570;-1:-1:-1;;;;;;;;37303:570:228:o;39227:251::-;39297:6;39350:2;39338:9;39329:7;39325:23;39321:32;39318:52;;;39366:1;39363;39356:12;39318:52;39398:9;39392:16;39417:31;39442:5;39417:31;:::i;39833:297::-;39951:12;;39998:4;39987:16;;;39981:23;;39951:12;40016:16;;40013:111;;;-1:-1:-1;;40090:4:228;40086:17;;;;40083:1;40079:25;40075:38;40064:50;;39833:297;-1:-1:-1;39833:297:228:o;41052:135::-;41091:3;41112:17;;;41109:43;;41132:18;;:::i;:::-;-1:-1:-1;41179:1:228;41168:13;;41052:135::o;41192:136::-;41231:3;41259:5;41249:39;;41268:18;;:::i;:::-;-1:-1:-1;;;41304:18:228;;41192:136::o;41713:216::-;41777:9;;;41805:11;;;41752:3;41835:9;;41863:10;;41859:19;;41888:10;;41880:19;;41856:44;41853:70;;;41903:18;;:::i;:::-;41853:70;;41713:216;;;;:::o;42295:249::-;42395:2;42384:17;;;42365;;;;42361:41;-1:-1:-1;;;;;;42417:50:228;;-1:-1:-1;;;;;42469:45:228;;42414:101;42411:127;;;42518:18;;:::i;42549:127::-;42610:10;42605:3;42601:20;42598:1;42591:31;42641:4;42638:1;42631:15;42665:4;42662:1;42655:15;43031:127;43092:10;43087:3;43083:20;43080:1;43073:31;43123:4;43120:1;43113:15;43147:4;43144:1;43137:15;43163:125;43228:9;;;43249:10;;;43246:36;;;43262:18;;:::i;44110:127::-;44171:10;44166:3;44162:20;44159:1;44152:31;44202:4;44199:1;44192:15;44226:4;44223:1;44216:15;44242:217;44282:1;44308;44298:132;;44352:10;44347:3;44343:20;44340:1;44333:31;44387:4;44384:1;44377:15;44415:4;44412:1;44405:15;44298:132;-1:-1:-1;44444:9:228;;44242:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "64169": [
        {
          "start": 1786,
          "length": 32
        },
        {
          "start": 3223,
          "length": 32
        },
        {
          "start": 5660,
          "length": 32
        },
        {
          "start": 7299,
          "length": 32
        },
        {
          "start": 7405,
          "length": 32
        },
        {
          "start": 11260,
          "length": 32
        }
      ],
      "64172": [
        {
          "start": 798,
          "length": 32
        },
        {
          "start": 8766,
          "length": 32
        },
        {
          "start": 10549,
          "length": 32
        }
      ],
      "64175": [
        {
          "start": 1352,
          "length": 32
        },
        {
          "start": 15619,
          "length": 32
        }
      ],
      "75968": [
        {
          "start": 1017,
          "length": 32
        },
        {
          "start": 14083,
          "length": 32
        }
      ],
      "76169": [
        {
          "start": 1391,
          "length": 32
        },
        {
          "start": 1938,
          "length": 32
        },
        {
          "start": 7570,
          "length": 32
        },
        {
          "start": 13178,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ALLOCATION_CONFIGURATION_DELAY()": "7bc1ef61",
    "DEALLOCATION_DELAY()": "2981eb77",
    "addStrategiesToOperatorSet(address,uint32,address[])": "50feea20",
    "clearDeallocationQueue(address,address[],uint16[])": "4b5046ef",
    "createOperatorSets(address,(uint32,address[])[])": "261f84e0",
    "delegation()": "df5cf723",
    "deregisterFromOperatorSets((address,address,uint32[]))": "6e3492b5",
    "encumberedMagnitude(address,address)": "a984eb3a",
    "getAVSRegistrar(address)": "304c10cd",
    "getAllocatableMagnitude(address,address)": "6cfb4481",
    "getAllocatedSets(address)": "15fe5028",
    "getAllocatedStrategies(address,(address,uint32))": "c221d8ae",
    "getAllocation(address,(address,uint32),address)": "10e1b9b8",
    "getAllocationDelay(address)": "b9fbaed1",
    "getAllocations(address[],(address,uint32),address)": "8ce64854",
    "getMaxMagnitude(address,address)": "a9333ec8",
    "getMaxMagnitudes(address,address[])": "547afb87",
    "getMaxMagnitudes(address[],address)": "4a10ffe5",
    "getMaxMagnitudesAtBlock(address,address[],uint32)": "94d7d00c",
    "getMemberCount((address,uint32))": "b2447af7",
    "getMembers((address,uint32))": "6e875dba",
    "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": "2bab2c4a",
    "getOperatorSetCount(address)": "ba1a84e5",
    "getRegisteredSets(address)": "79ae50cd",
    "getStrategiesInOperatorSet((address,uint32))": "4177a87c",
    "getStrategyAllocations(address,address)": "40120dab",
    "initialize(address,uint256)": "cd6dc687",
    "isMemberOfOperatorSet(address,(address,uint32))": "670d3ba2",
    "isOperatorSet((address,uint32))": "260dc758",
    "modifyAllocations(address,((address,uint32),address[],uint64[])[])": "952899ee",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionController()": "4657e26a",
    "registerForOperatorSets(address,(address,uint32[],bytes))": "adc2e3d9",
    "removeStrategiesFromOperatorSet(address,uint32,address[])": "b66bd989",
    "renounceOwnership()": "715018a6",
    "setAVSRegistrar(address,address)": "d3d96ff4",
    "setAllocationDelay(address,uint32)": "56c483e6",
    "slashOperator(address,(address,uint32,address[],uint256[],string))": "36352057",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "updateAVSMetadataURI(address,string)": "a9821821"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_DEALLOCATION_DELAY\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_ALLOCATION_CONFIGURATION_DELAY\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSnapshotOrdering\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWadToSlash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModificationAlreadyPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotSlashable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategiesMustBeInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyAlreadyInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UninitializedAllocationDelay\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AVSMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"AVSRegistrarSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"magnitude\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"encumberedMagnitude\",\"type\":\"uint64\"}],\"name\":\"EncumberedMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"maxMagnitude\",\"type\":\"uint64\"}],\"name\":\"MaxMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorSetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"wadSlashed\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"OperatorSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALLOCATION_CONFIGURATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEALLOCATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"addStrategiesToOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"numToClear\",\"type\":\"uint16[]\"}],\"name\":\"clearDeallocationQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"internalType\":\"struct IAllocationManagerTypes.CreateSetParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"internalType\":\"struct IAllocationManagerTypes.DeregisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deregisterFromOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"encumberedMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getAVSRegistrar\",\"outputs\":[{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocatableMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocatedSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getAllocatedStrategies\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocationDelay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getMaxMagnitudesAtBlock\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"futureBlock\",\"type\":\"uint32\"}],\"name\":\"getMinimumSlashableStake\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"slashableStake\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getOperatorSetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getRegisteredSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getStrategiesInOperatorSet\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getStrategyAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isMemberOfOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"newMagnitudes\",\"type\":\"uint64[]\"}],\"internalType\":\"struct IAllocationManagerTypes.AllocateParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"modifyAllocations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IAllocationManagerTypes.RegisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"registerForOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"setAVSRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"setAllocationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"wadsToSlash\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IAllocationManagerTypes.SlashingParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"slashOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AlreadyMemberOfSet()\":[{\"details\":\"Thrown when trying to add an operator to a set they are already a member of\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InsufficientMagnitude()\":[{\"details\":\"Thrown when an allocation is attempted that exceeds a given operators total allocatable magnitude.\"}],\"InvalidCaller()\":[{\"details\":\"Thrown when caller is not authorized to call a function.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidOperator()\":[{\"details\":\"Thrown when an invalid operator is provided.\"}],\"InvalidOperatorSet()\":[{\"details\":\"Thrown when an invalid operator set is provided.\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}],\"InvalidWadToSlash()\":[{\"details\":\"Thrown when `wadToSlash` is zero or greater than 1e18\"}],\"ModificationAlreadyPending()\":[{\"details\":\"Thrown when an allocation is attempted for a given operator when they have pending allocations or deallocations.\"}],\"NotMemberOfSet()\":[{\"details\":\"Thrown when trying to slash/remove an operator from a set they are not a member of\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorNotSlashable()\":[{\"details\":\"Thrown when attempting to slash an operator when they are not slashable.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}],\"SameMagnitude()\":[{\"details\":\"Thrown when an operator attempts to set their allocation for an operatorSet to the same value\"}],\"StrategiesMustBeInAscendingOrder()\":[{\"details\":\"Thrown when provided `strategies` are not in ascending order.\"}],\"StrategyAlreadyInOperatorSet()\":[{\"details\":\"Thrown when trying to add a strategy to an operator set that already contains it.\"}],\"StrategyNotInOperatorSet()\":[{\"details\":\"Thrown when a strategy is referenced that does not belong to an operator set.\"}],\"UninitializedAllocationDelay()\":[{\"details\":\"Thrown when an operator's allocation delay has yet to be set.\"}]},\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"details\":\"The URI is never stored; it is simply emitted through an event for off-chain indexing.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST NOT already exist in the operator set\",\"params\":{\"avs\":\"the avs to set strategies for\",\"operatorSetId\":\"the operator set to add strategies to\",\"strategies\":\"the strategies to add\"}},\"clearDeallocationQueue(address,address[],uint16[])\":{\"details\":\"can be called permissionlessly by anyone\",\"params\":{\"numToClear\":\"a list of number of pending deallocations to clear for each strategy\",\"operator\":\"address to clear deallocations for\",\"strategies\":\"a list of strategies to clear deallocations for\"}},\"constructor\":{\"details\":\"Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay.\"},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"details\":\"After deregistering within the ALM, this method calls `avs.deregisterOperator` to complete deregistration. If this call reverts, it is ignored.\"},\"getAllocatableMagnitude(address,address)\":{\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get allocatable magnitude for\"},\"returns\":{\"_0\":\"magnitude available to be allocated to an operator set\"}},\"getAllocatedSets(address)\":{\"params\":{\"operator\":\"the operator to query\"},\"returns\":{\"_0\":\"the list of operator sets the operator has current or pending allocations/deallocations in\"}},\"getAllocatedStrategies(address,(address,uint32))\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\"},\"returns\":{\"_0\":\"the list of strategies\"}},\"getAllocation(address,(address,uint32),address)\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the current/pending stake allocation\"}},\"getAllocationDelay(address)\":{\"details\":\"The operator must have a configured delay before allocating magnitude\",\"params\":{\"operator\":\"The operator to query\"},\"returns\":{\"_0\":\"Whether the operator has configured a delay\",\"_1\":\"The time in blocks between allocating magnitude and magnitude becoming slashable\"}},\"getAllocations(address[],(address,uint32),address)\":{\"params\":{\"operatorSet\":\"the operator set to query\",\"operators\":\"the operators to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"each operator's allocation\"}},\"getMaxMagnitude(address,address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get the max magnitude for\"},\"returns\":{\"_0\":\"the max magnitude for the strategy\"}},\"getMaxMagnitudes(address,address[])\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMaxMagnitudes(address[],address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operators\":\"the operators to query\",\"strategy\":\"the strategy to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each operator\"}},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"blockNumber\":\"the blockNumber at which to check the max magnitudes\",\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMemberCount((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to get the member count for\"}},\"getMembers((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"details\":\"This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.\",\"params\":{\"futureBlock\":\"the block at which to get allocation information. Should be a future block.\",\"operatorSet\":\"the operator set to query\",\"operators\":\"the list of operators whose slashable stakes will be returned\",\"strategies\":\"the strategies that each slashable stake corresponds to\"},\"returns\":{\"slashableStake\":\"a list of slashable stakes, indexed by [operator][strategy]\"}},\"getOperatorSetCount(address)\":{\"params\":{\"avs\":\"the AVS to query\"}},\"getRegisteredSets(address)\":{\"params\":{\"operator\":\"The operator address to query.\"}},\"getStrategiesInOperatorSet((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getStrategyAllocations(address,address)\":{\"details\":\"Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the list of all operator sets the operator has allocations for\",\"_1\":\"the corresponding list of allocations from the specific `strategy`\"}},\"initialize(address,uint256)\":{\"details\":\"Initializes the initial owner and paused status.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"params\":{\"operator\":\"The operator to query\",\"operatorSet\":\"The operator set to query\"}},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"details\":\"Updates encumberedMagnitude for the updated strategiesmsg.sender is used as operator\",\"params\":{\"operator\":\"the operator to modify allocations for\",\"params\":\"array of magnitude adjustments for one or more operator sets\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"details\":\"After registering within the ALM, this method calls `avs.registerOperator` to complete registration. This call MUST succeed in order for registration to be successful.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST already exist in the operator set\",\"params\":{\"avs\":\"the avs to remove strategies for\",\"operatorSetId\":\"the operator set to remove strategies from\",\"strategies\":\"the strategies to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAVSRegistrar(address,address)\":{\"params\":{\"registrar\":\"the new registrar address\"}},\"setAllocationDelay(address,uint32)\":{\"params\":{\"delay\":\"the allocation delay in blocks\",\"operator\":\"The operator to set the delay on behalf of.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateAVSMetadataURI(address,string)\":{\"details\":\"Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an AVS.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when an AVS updates their metadata URI (Uniform Resource Identifier).\"},\"AVSRegistrarSet(address,address)\":{\"notice\":\"Emitted when an AVS configures the address that will handle registration/deregistration\"},\"AllocationDelaySet(address,uint32,uint32)\":{\"notice\":\"Emitted when operator updates their allocation delay.\"},\"AllocationUpdated(address,(address,uint32),address,uint64,uint32)\":{\"notice\":\"Emitted when an operator's magnitude is updated for a given operatorSet and strategy\"},\"EncumberedMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when operator's encumbered magnitude is updated for a given strategy\"},\"MaxMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when an operator's max magnitude is updated for a given strategy\"},\"OperatorAddedToOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is added to an operator set.\"},\"OperatorRemovedFromOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is removed from an operator set.\"},\"OperatorSetCreated((address,uint32))\":{\"notice\":\"Emitted when an operator set is created by an AVS.\"},\"OperatorSlashed(address,(address,uint32),address[],uint256[],string)\":{\"notice\":\"Emitted when an operator is slashed by an operator set for a strategy `wadSlashed` is the proportion of the operator's total delegated stake that was slashed\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"StrategyAddedToOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is added to an operator set.\"},\"StrategyRemovedFromOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is removed from an operator set.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"ALLOCATION_CONFIGURATION_DELAY()\":{\"notice\":\"Delay before alloaction delay modifications take effect.\"},\"DEALLOCATION_DELAY()\":{\"notice\":\"Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to.\"},\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to add strategies to an operator set\"},\"clearDeallocationQueue(address,address[],uint16[])\":{\"notice\":\"This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed.\"},\"createOperatorSets(address,(uint32,address[])[])\":{\"notice\":\"Allows an AVS to create new operator sets, defining strategies that the operator set uses\"},\"delegation()\":{\"notice\":\"The DelegationManager contract for EigenLayer\"},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"notice\":\"Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed.\"},\"getAVSRegistrar(address)\":{\"notice\":\"Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)\"},\"getAllocatableMagnitude(address,address)\":{\"notice\":\"For a strategy, get the amount of magnitude not currently allocated to any operator set\"},\"getAllocatedSets(address)\":{\"notice\":\"Returns the list of operator sets the operator has current or pending allocations/deallocations in\"},\"getAllocatedStrategies(address,(address,uint32))\":{\"notice\":\"Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set.\"},\"getAllocation(address,(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocation an operator has from a strategy to an operator set\"},\"getAllocationDelay(address)\":{\"notice\":\"Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false.\"},\"getAllocations(address[],(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocations for multiple operators from a strategy to an operator set\"},\"getMaxMagnitude(address,address)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategy\"},\"getMaxMagnitudes(address,address[])\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies\"},\"getMaxMagnitudes(address[],address)\":{\"notice\":\"Returns the maximum magnitudes each operator can allocate for the given strategy\"},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies at a given block number\"},\"getMemberCount((address,uint32))\":{\"notice\":\"Returns the number of operators registered to an operatorSet.\"},\"getMembers((address,uint32))\":{\"notice\":\"Returns all the operators registered to an operator set\"},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"notice\":\"Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set.\"},\"getOperatorSetCount(address)\":{\"notice\":\"Returns the number of operator sets for the AVS\"},\"getRegisteredSets(address)\":{\"notice\":\"Returns a list of all operator sets the operator is registered for\"},\"getStrategiesInOperatorSet((address,uint32))\":{\"notice\":\"Returns an array of strategies in the operatorSet.\"},\"getStrategyAllocations(address,address)\":{\"notice\":\"Given a strategy, returns a list of operator sets and corresponding stake allocations.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"notice\":\"Returns whether the operator is registered for the operator set\"},\"isOperatorSet((address,uint32))\":{\"notice\":\"Returns whether the operator set exists\"},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"notice\":\"Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"notice\":\"Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to remove strategies from an operator set\"},\"setAVSRegistrar(address,address)\":{\"notice\":\"Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address.\"},\"setAllocationDelay(address,uint32)\":{\"notice\":\"Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable.\"},\"slashOperator(address,(address,uint32,address[],uint256[],string))\":{\"notice\":\"Called by an AVS to slash an operator in a given operator set\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateAVSMetadataURI(address,string)\":{\"notice\":\"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/AllocationManager.sol\":\"AllocationManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/contracts/core/AllocationManager.sol\":{\"keccak256\":\"0x787b22258f8ada4386ddcebd31c2ee8e56bd24ec6f58f64e8843b99aa09a4aad\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://64029fc412fa6c2475257f1606717658e7bd44b8b1652bece3ee6f276ef78952\",\"dweb:/ipfs/QmYugShciSBctko675x98UhTHRG3UcNdZ8aaeu1LAGEcH6\"]},\"src/contracts/core/AllocationManagerStorage.sol\":{\"keccak256\":\"0x0757a51295d1be0b2c1451f54a53c854c0507d0dcbd80a3b4a38672eb739fe2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://506c448266e88190b013161985c5488e55349edd9a802f28bc83d6841aa69231\",\"dweb:/ipfs/Qmd2J8Dij56HwS81hUU58QYCs47wuwBj8Zb6dJ9qxeBQoG\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0x6d5f209cc63b57e1db891e014a098bd277bb3cd54d815ee9455ade2cdf44020a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://50546cefb737b88803bc6a63cfa962b228fd0d1e2697d6be9166718577e7656e\",\"dweb:/ipfs/QmUP7uYvJV3Eq9vbKdqTJ61jaNZ4QZD6H4fJDBwLw5qyrv\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x3ef98720d9ec2a58926cf13a6aaa5581a1273d81e09582ee45c4fc58f7ae331e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b40d5e6449ae27d93d383818310c6e00f18e19bf99cd9f379b55e4cea663752\",\"dweb:/ipfs/QmRr4MkpoC1tSRsqTtM4K8ZRZT2yNrqf58ZTjjKaEnxRc2\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xcca5f89005bdbca12fe9f62490a34aeb9cf7a9aa78346ba2c5acc6c6727ddabd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1dd5b145f729db03f449b4c003032b25677494b916e29c266df71fe991bf566b\",\"dweb:/ipfs/QmVn4ZxdFfNqJ2Xbp6N1qpJ4qseKeQ34c54Jtsgm6RHAyh\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8\",\"dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8\"]},\"src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b\",\"dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4\",\"dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x63d44478f91bfb05bfc6d406587f7c2b49af6bd4616d01dd5c3b9ef65d605eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee1d930124139021384a9197deb5c9b7bfc74bf9d641c9bb449593bc23b2a1fe\",\"dweb:/ipfs/QmWRpQ9eL5oajiTF5CA9APF9zz6QyY1Lcg8tBTrpPTTkzx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0x90178e5e1b3397a8e6d8f1d086d145946c8a7fa99298f259ef226d9800d27b72\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://15a0d7b4dae1a950cd55c8990530679673bc8bf96f8a754f89ef8e3cf4e848fc\",\"dweb:/ipfs/QmNd1JhMSLQM7qtkzTF5LcEJhBuozL7MQomPVE1vqnS7sz\"]},\"src/contracts/libraries/Snapshots.sol\":{\"keccak256\":\"0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b\",\"dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd\",\"dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegation",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_DEALLOCATION_DELAY",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_ALLOCATION_CONFIGURATION_DELAY",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Empty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSnapshotOrdering"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidWadToSlash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ModificationAlreadyPending"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorNotSlashable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutOfBounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategiesMustBeInAscendingOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyAlreadyInOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotInOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UninitializedAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSRegistrarSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "magnitude",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "encumberedMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EncumberedMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "maxMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "wadSlashed",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSlashed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ALLOCATION_CONFIGURATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEALLOCATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategiesToOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint16[]",
              "name": "numToClear",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearDeallocationQueue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createOperatorSets"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAllocationManagerTypes.DeregisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterFromOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encumberedMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAVSRegistrar",
          "outputs": [
            {
              "internalType": "contract IAVSRegistrar",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatableMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedStrategies",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocation",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocationDelay",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocations",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudesAtBlock",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "futureBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinimumSlashableStake",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "slashableStake",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegisteredSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategiesInOperatorSet",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategyAllocations",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMemberOfOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OperatorSet",
                  "name": "operatorSet",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "avs",
                      "type": "address"
                    },
                    {
                      "internalType": "uint32",
                      "name": "id",
                      "type": "uint32"
                    }
                  ]
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint64[]",
                  "name": "newMagnitudes",
                  "type": "uint64[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyAllocations"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.RegisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerForOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategiesFromOperatorSet"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAVSRegistrar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.SlashingParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "wadsToSlash",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "slashOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAVSMetadataURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST NOT already exist in the operator set",
            "params": {
              "avs": "the avs to set strategies for",
              "operatorSetId": "the operator set to add strategies to",
              "strategies": "the strategies to add"
            }
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "details": "can be called permissionlessly by anyone",
            "params": {
              "numToClear": "a list of number of pending deallocations to clear for each strategy",
              "operator": "address to clear deallocations for",
              "strategies": "a list of strategies to clear deallocations for"
            }
          },
          "constructor": {
            "details": "Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay."
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "details": "After deregistering within the ALM, this method calls `avs.deregisterOperator` to complete deregistration. If this call reverts, it is ignored."
          },
          "getAllocatableMagnitude(address,address)": {
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get allocatable magnitude for"
            },
            "returns": {
              "_0": "magnitude available to be allocated to an operator set"
            }
          },
          "getAllocatedSets(address)": {
            "params": {
              "operator": "the operator to query"
            },
            "returns": {
              "_0": "the list of operator sets the operator has current or pending allocations/deallocations in"
            }
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query"
            },
            "returns": {
              "_0": "the list of strategies"
            }
          },
          "getAllocation(address,(address,uint32),address)": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the current/pending stake allocation"
            }
          },
          "getAllocationDelay(address)": {
            "details": "The operator must have a configured delay before allocating magnitude",
            "params": {
              "operator": "The operator to query"
            },
            "returns": {
              "_0": "Whether the operator has configured a delay",
              "_1": "The time in blocks between allocating magnitude and magnitude becoming slashable"
            }
          },
          "getAllocations(address[],(address,uint32),address)": {
            "params": {
              "operatorSet": "the operator set to query",
              "operators": "the operators to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "each operator's allocation"
            }
          },
          "getMaxMagnitude(address,address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get the max magnitude for"
            },
            "returns": {
              "_0": "the max magnitude for the strategy"
            }
          },
          "getMaxMagnitudes(address,address[])": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMaxMagnitudes(address[],address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operators": "the operators to query",
              "strategy": "the strategy to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each operator"
            }
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "blockNumber": "the blockNumber at which to check the max magnitudes",
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMemberCount((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to get the member count for"
            }
          },
          "getMembers((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "details": "This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.",
            "params": {
              "futureBlock": "the block at which to get allocation information. Should be a future block.",
              "operatorSet": "the operator set to query",
              "operators": "the list of operators whose slashable stakes will be returned",
              "strategies": "the strategies that each slashable stake corresponds to"
            },
            "returns": {
              "slashableStake": "a list of slashable stakes, indexed by [operator][strategy]"
            }
          },
          "getOperatorSetCount(address)": {
            "params": {
              "avs": "the AVS to query"
            }
          },
          "getRegisteredSets(address)": {
            "params": {
              "operator": "The operator address to query."
            }
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getStrategyAllocations(address,address)": {
            "details": "Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the list of all operator sets the operator has allocations for",
              "_1": "the corresponding list of allocations from the specific `strategy`"
            }
          },
          "initialize(address,uint256)": {
            "details": "Initializes the initial owner and paused status."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "params": {
              "operator": "The operator to query",
              "operatorSet": "The operator set to query"
            }
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "details": "Updates encumberedMagnitude for the updated strategiesmsg.sender is used as operator",
            "params": {
              "operator": "the operator to modify allocations for",
              "params": "array of magnitude adjustments for one or more operator sets"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "details": "After registering within the ALM, this method calls `avs.registerOperator` to complete registration. This call MUST succeed in order for registration to be successful."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST already exist in the operator set",
            "params": {
              "avs": "the avs to remove strategies for",
              "operatorSetId": "the operator set to remove strategies from",
              "strategies": "the strategies to remove"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setAVSRegistrar(address,address)": {
            "params": {
              "registrar": "the new registrar address"
            }
          },
          "setAllocationDelay(address,uint32)": {
            "params": {
              "delay": "the allocation delay in blocks",
              "operator": "The operator to set the delay on behalf of."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateAVSMetadataURI(address,string)": {
            "details": "Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.",
            "params": {
              "metadataURI": "The URI for metadata associated with an AVS."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ALLOCATION_CONFIGURATION_DELAY()": {
            "notice": "Delay before alloaction delay modifications take effect."
          },
          "DEALLOCATION_DELAY()": {
            "notice": "Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to."
          },
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to add strategies to an operator set"
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "notice": "This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed."
          },
          "createOperatorSets(address,(uint32,address[])[])": {
            "notice": "Allows an AVS to create new operator sets, defining strategies that the operator set uses"
          },
          "delegation()": {
            "notice": "The DelegationManager contract for EigenLayer"
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "notice": "Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed."
          },
          "getAVSRegistrar(address)": {
            "notice": "Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)"
          },
          "getAllocatableMagnitude(address,address)": {
            "notice": "For a strategy, get the amount of magnitude not currently allocated to any operator set"
          },
          "getAllocatedSets(address)": {
            "notice": "Returns the list of operator sets the operator has current or pending allocations/deallocations in"
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "notice": "Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set."
          },
          "getAllocation(address,(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocation an operator has from a strategy to an operator set"
          },
          "getAllocationDelay(address)": {
            "notice": "Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false."
          },
          "getAllocations(address[],(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocations for multiple operators from a strategy to an operator set"
          },
          "getMaxMagnitude(address,address)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategy"
          },
          "getMaxMagnitudes(address,address[])": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies"
          },
          "getMaxMagnitudes(address[],address)": {
            "notice": "Returns the maximum magnitudes each operator can allocate for the given strategy"
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies at a given block number"
          },
          "getMemberCount((address,uint32))": {
            "notice": "Returns the number of operators registered to an operatorSet."
          },
          "getMembers((address,uint32))": {
            "notice": "Returns all the operators registered to an operator set"
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "notice": "Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set."
          },
          "getOperatorSetCount(address)": {
            "notice": "Returns the number of operator sets for the AVS"
          },
          "getRegisteredSets(address)": {
            "notice": "Returns a list of all operator sets the operator is registered for"
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "notice": "Returns an array of strategies in the operatorSet."
          },
          "getStrategyAllocations(address,address)": {
            "notice": "Given a strategy, returns a list of operator sets and corresponding stake allocations."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "notice": "Returns whether the operator is registered for the operator set"
          },
          "isOperatorSet((address,uint32))": {
            "notice": "Returns whether the operator set exists"
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "notice": "Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "notice": "Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to remove strategies from an operator set"
          },
          "setAVSRegistrar(address,address)": {
            "notice": "Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address."
          },
          "setAllocationDelay(address,uint32)": {
            "notice": "Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable."
          },
          "slashOperator(address,(address,uint32,address[],uint256[],string))": {
            "notice": "Called by an AVS to slash an operator in a given operator set"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateAVSMetadataURI(address,string)": {
            "notice": "Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/AllocationManager.sol": "AllocationManager"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol": {
        "keccak256": "0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c",
        "urls": [
          "bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7",
          "dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/contracts/core/AllocationManager.sol": {
        "keccak256": "0x787b22258f8ada4386ddcebd31c2ee8e56bd24ec6f58f64e8843b99aa09a4aad",
        "urls": [
          "bzz-raw://64029fc412fa6c2475257f1606717658e7bd44b8b1652bece3ee6f276ef78952",
          "dweb:/ipfs/QmYugShciSBctko675x98UhTHRG3UcNdZ8aaeu1LAGEcH6"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/AllocationManagerStorage.sol": {
        "keccak256": "0x0757a51295d1be0b2c1451f54a53c854c0507d0dcbd80a3b4a38672eb739fe2f",
        "urls": [
          "bzz-raw://506c448266e88190b013161985c5488e55349edd9a802f28bc83d6841aa69231",
          "dweb:/ipfs/Qmd2J8Dij56HwS81hUU58QYCs47wuwBj8Zb6dJ9qxeBQoG"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0x6d5f209cc63b57e1db891e014a098bd277bb3cd54d815ee9455ade2cdf44020a",
        "urls": [
          "bzz-raw://50546cefb737b88803bc6a63cfa962b228fd0d1e2697d6be9166718577e7656e",
          "dweb:/ipfs/QmUP7uYvJV3Eq9vbKdqTJ61jaNZ4QZD6H4fJDBwLw5qyrv"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0x3ef98720d9ec2a58926cf13a6aaa5581a1273d81e09582ee45c4fc58f7ae331e",
        "urls": [
          "bzz-raw://2b40d5e6449ae27d93d383818310c6e00f18e19bf99cd9f379b55e4cea663752",
          "dweb:/ipfs/QmRr4MkpoC1tSRsqTtM4K8ZRZT2yNrqf58ZTjjKaEnxRc2"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xcca5f89005bdbca12fe9f62490a34aeb9cf7a9aa78346ba2c5acc6c6727ddabd",
        "urls": [
          "bzz-raw://1dd5b145f729db03f449b4c003032b25677494b916e29c266df71fe991bf566b",
          "dweb:/ipfs/QmVn4ZxdFfNqJ2Xbp6N1qpJ4qseKeQ34c54Jtsgm6RHAyh"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b",
        "urls": [
          "bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8",
          "dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de",
        "urls": [
          "bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b",
          "dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3",
        "urls": [
          "bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4",
          "dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x63d44478f91bfb05bfc6d406587f7c2b49af6bd4616d01dd5c3b9ef65d605eba",
        "urls": [
          "bzz-raw://ee1d930124139021384a9197deb5c9b7bfc74bf9d641c9bb449593bc23b2a1fe",
          "dweb:/ipfs/QmWRpQ9eL5oajiTF5CA9APF9zz6QyY1Lcg8tBTrpPTTkzx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0x90178e5e1b3397a8e6d8f1d086d145946c8a7fa99298f259ef226d9800d27b72",
        "urls": [
          "bzz-raw://15a0d7b4dae1a950cd55c8990530679673bc8bf96f8a754f89ef8e3cf4e848fc",
          "dweb:/ipfs/QmNd1JhMSLQM7qtkzTF5LcEJhBuozL7MQomPVE1vqnS7sz"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Snapshots.sol": {
        "keccak256": "0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6",
        "urls": [
          "bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b",
          "dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY"
        ],
        "license": "MIT"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666",
        "urls": [
          "bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd",
          "dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 103
}