{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_strategyManager",
          "type": "address",
          "internalType": "contract IStrategyManager"
        },
        {
          "name": "_eigenPodManager",
          "type": "address",
          "internalType": "contract IEigenPodManager"
        },
        {
          "name": "_allocationManager",
          "type": "address",
          "internalType": "contract IAllocationManager"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_MIN_WITHDRAWAL_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DELEGATION_APPROVAL_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allocationManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAllocationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "beaconChainETHStrategy",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "burnOperatorShares",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        },
        {
          "name": "prevMaxMagnitude",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "newMaxMagnitude",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "calculateDelegationApprovalDigestHash",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approverSalt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "expiry",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateWithdrawalRoot",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct IDelegationManagerTypes.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "completeQueuedWithdrawal",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct IDelegationManagerTypes.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "tokens",
          "type": "address[]",
          "internalType": "contract IERC20[]"
        },
        {
          "name": "receiveAsTokens",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "completeQueuedWithdrawals",
      "inputs": [
        {
          "name": "withdrawals",
          "type": "tuple[]",
          "internalType": "struct IDelegationManagerTypes.Withdrawal[]",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "tokens",
          "type": "address[][]",
          "internalType": "contract IERC20[][]"
        },
        {
          "name": "receiveAsTokens",
          "type": "bool[]",
          "internalType": "bool[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "convertToDepositShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "withdrawableShares",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cumulativeWithdrawalsQueued",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "totalQueued",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decreaseDelegatedShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "curDepositShares",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "beaconChainSlashingFactorDecrease",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegateTo",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approverSignatureAndExpiry",
          "type": "tuple",
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "components": [
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "expiry",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "approverSalt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegatedTo",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegationApprover",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegationApproverSaltIsSpent",
      "inputs": [
        {
          "name": "delegationApprover",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "spent",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "depositScalingFactor",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "domainSeparator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "eigenPodManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IEigenPodManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDepositedShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorShares",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorsShares",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getQueuedWithdrawals",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "withdrawals",
          "type": "tuple[]",
          "internalType": "struct IDelegationManagerTypes.Withdrawal[]",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "shares",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSlashableSharesInQueue",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWithdrawableShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "withdrawableShares",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "depositShares",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "increaseDelegatedShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        },
        {
          "name": "prevDepositShares",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "addedShares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isDelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minWithdrawalDelayBlocks",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "modifyOperatorDetails",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "newDelegationApprover",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "operatorShares",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "shares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pendingWithdrawals",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "pending",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "queueWithdrawals",
      "inputs": [
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IDelegationManagerTypes.QueuedWithdrawalParams[]",
          "components": [
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "depositShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "queuedWithdrawals",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "delegatedTo",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "withdrawer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "nonce",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "startBlock",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "redelegate",
      "inputs": [
        {
          "name": "newOperator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "newOperatorApproverSig",
          "type": "tuple",
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "components": [
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "expiry",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "approverSalt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "withdrawalRoots",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "registerAsOperator",
      "inputs": [
        {
          "name": "initDelegationApprover",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "allocationDelay",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "strategyManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategyManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "undelegate",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "withdrawalRoots",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateOperatorMetadataURI",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "DelegationApproverUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newDelegationApprover",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DepositScalingFactorUpdated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "newDepositScalingFactor",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorMetadataURIUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorRegistered",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "delegationApprover",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSharesBurned",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSharesDecreased",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "staker",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSharesIncreased",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "staker",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SlashingWithdrawalCompleted",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SlashingWithdrawalQueued",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "withdrawal",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IDelegationManagerTypes.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "sharesToWithdraw",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakerDelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakerForceUndelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakerUndelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ActivelyDelegated",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CallerCannotUndelegate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "FullySlashed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSnapshotOrdering",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotActivelyDelegated",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyAllocationManager",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyEigenPodManager",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyStrategyManagerOrEigenPodManager",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorNotRegistered",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorsCannotUndelegate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SaltSpent",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SignatureExpired",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WithdrawalDelayNotElapsed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WithdrawalExceedsMax",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WithdrawalNotQueued",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WithdrawerNotCaller",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WithdrawerNotStaker",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610180604052348015610010575f5ffd5b5060405161601138038061601183398101604081905261002f91610235565b8186868684876001600160a01b03811661005c576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b0390811660805293841660a05291831660c05290911660e05263ffffffff166101005246610120526100936100b7565b610140526001600160a01b0316610160526100ac610162565b5050505050506102c0565b5f61012051461461015a5750604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b506101405190565b5f54610100900460ff16156101cd5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff9081161461021c575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b0381168114610232575f5ffd5b50565b5f5f5f5f5f5f60c0878903121561024a575f5ffd5b86516102558161021e565b60208801519096506102668161021e565b60408801519095506102778161021e565b60608801519094506102888161021e565b60808801519093506102998161021e565b60a088015190925063ffffffff811681146102b2575f5ffd5b809150509295509295509295565b60805160a05160c05160e05161010051610120516101405161016051615c556103bc5f395f8181610412015261345d01525f61418001525f6140c001525f8181610741015281816114f2015281816136f4015261391201525f818161079101528181610e4701528181610ff80152818161172601528181611bad015281816124b001528181612962015261352001525f818161043901528181610f7e0152818161168d015281816118eb01528181613246015261408001525f818161036f01528181610f4c0152818161183f0152818161259d015261405a01525f81816105a101528181610bdf0152818161111801526127d40152615c555ff3fe608060405234801561000f575f5ffd5b50600436106102b1575f3560e01c8063778e55f31161017b578063bfae3fd2116100e4578063e4cc3f901161009e578063f0e0e67611610079578063f0e0e67614610812578063f2fde38b14610832578063f698da2514610845578063fabc1cbc1461084d575f5ffd5b8063e4cc3f90146107d9578063ee74937f146107ec578063eea9064b146107ff575f5ffd5b8063bfae3fd214610724578063c448feb814610737578063c978f7ac1461076b578063ca8aa7c71461078c578063cd6dc687146107b3578063da8be864146107c6575f5ffd5b80639435bb43116101355780639435bb431461060257806399f5371b14610615578063a1788484146106a3578063a33a3433146106c2578063b7f06ebe146106d5578063bb45fef2146106f7575f5ffd5b8063778e55f31461055f57806378296ec514610589578063886f11951461059c5780638da5cb5b146105c357806390041347146105d45780639104c319146105e7575f5ffd5b806354b7c96c1161021d57806360a0d1ce116101d757806360a0d1ce146104d557806365da1264146104e857806366d5ba93146105105780636d70f7ae146105315780636e17444814610544578063715018a614610557575f5ffd5b806354b7c96c1461045b578063595c6a671461046e578063597b36da146104765780635ac86ab7146104895780635c975abb146104ac5780635dd68579146104b4575f5ffd5b806339b70e381161026e57806339b70e381461036a5780633c651cf2146103a95780633cdeb5e0146103bc5780633e28391d146103ea5780634657e26a1461040d5780634665bcda14610434575f5ffd5b806304a4f979146102b55780630b9f487a146102ef5780630dd8dd0214610302578063136439dd1461032257806325df922e146103375780632aa6d88814610357575b5f5ffd5b6102dc7f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad81565b6040519081526020015b60405180910390f35b6102dc6102fd366004614b72565b610860565b610315610310366004614c09565b6108e8565b6040516102e69190614c47565b610335610330366004614c7e565b610bca565b005b61034a610345366004614e13565b610c9f565b6040516102e69190614ec1565b610335610365366004614f23565b610dff565b6103917f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102e6565b6103356103b7366004614f81565b610f41565b6103916103ca366004614fc4565b6001600160a01b039081165f908152609960205260409020600101541690565b6103fd6103f8366004614fc4565b611088565b60405190151581526020016102e6565b6103917f000000000000000000000000000000000000000000000000000000000000000081565b6103917f000000000000000000000000000000000000000000000000000000000000000081565b610335610469366004614fdf565b6110a7565b610335611103565b6102dc6104843660046150d2565b6111b2565b6103fd610497366004615103565b606654600160ff9092169190911b9081161490565b6066546102dc565b6104c76104c2366004614fc4565b6111e1565b6040516102e6929190615228565b6103356104e33660046152a9565b611682565b6103916104f6366004614fc4565b609a6020525f90815260409020546001600160a01b031681565b61052361051e366004614fc4565b611817565b6040516102e69291906152e8565b6103fd61053f366004614fc4565b611b17565b6102dc610552366004614fdf565b611b4f565b610335611c55565b6102dc61056d366004614fdf565b609860209081525f928352604080842090915290825290205481565b61033561059736600461530c565b611c66565b6103917f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b0316610391565b61034a6105e236600461535c565b611cee565b61039173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6103356106103660046153a8565b611dc4565b610665610623366004614c7e565b60a46020525f9081526040902080546001820154600283015460038401546004909401546001600160a01b039384169492841693909116919063ffffffff1685565b604080516001600160a01b03968716815294861660208601529290941691830191909152606082015263ffffffff909116608082015260a0016102e6565b6102dc6106b1366004614fc4565b609f6020525f908152604090205481565b6103156106d0366004615444565b611e94565b6103fd6106e3366004614c7e565b609e6020525f908152604090205460ff1681565b6103fd61070536600461552b565b609c60209081525f928352604080842090915290825290205460ff1681565b6102dc610732366004614fdf565b611f2a565b60405163ffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016102e6565b61077e61077936600461535c565b611f66565b6040516102e6929190615555565b6103917f000000000000000000000000000000000000000000000000000000000000000081565b6103356107c136600461552b565b6121f3565b6103156107d4366004614fc4565b61230e565b6103356107e7366004615574565b61244f565b6103356107fa3660046155f2565b6124a5565b61033561080d366004615444565b612643565b610825610820366004615640565b6126a6565b6040516102e691906156ed565b610335610840366004614fc4565b61274b565b6102dc6127c4565b61033561085b366004614c7e565b6127d2565b604080517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad60208201526001600160a01b03808616928201929092528187166060820152908516608082015260a0810183905260c081018290525f906108de9060e001604051602081830303815290604052805190602001206128e9565b9695505050505050565b6066546060906001906002908116036109145760405163840a48d560e01b815260040160405180910390fd5b5f836001600160401b0381111561092d5761092d614c95565b604051908082528060200260200182016040528015610956578160200160208202803683370190505b50335f908152609a60205260408120549192506001600160a01b03909116905b85811015610bbf57868682818110610990576109906156ff565b90506020028101906109a29190615713565b6109b0906020810190615731565b90508787838181106109c4576109c46156ff565b90506020028101906109d69190615713565b6109e09080615731565b905014610a00576040516343714afd60e01b815260040160405180910390fd5b33878783818110610a1357610a136156ff565b9050602002810190610a259190615713565b610a36906060810190604001614fc4565b6001600160a01b031614610a5d576040516330c4716960e21b815260040160405180910390fd5b5f610ac733848a8a86818110610a7557610a756156ff565b9050602002810190610a879190615713565b610a919080615731565b808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525061291792505050565b9050610b9933848a8a86818110610ae057610ae06156ff565b9050602002810190610af29190615713565b610afc9080615731565b808060200260200160405190810160405280939291908181526020018383602002808284375f920191909152508e92508d9150889050818110610b4157610b416156ff565b9050602002810190610b539190615713565b610b61906020810190615731565b808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250889250612a5e915050565b848381518110610bab57610bab6156ff565b602090810291909101015250600101610976565b509095945050505050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015610c2c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c509190615776565b610c6d57604051631d77d47760e21b815260040160405180910390fd5b6066548181168114610c925760405163c61dca5d60e01b815260040160405180910390fd5b610c9b82613037565b5050565b6001600160a01b038084165f908152609a60205260408120546060921690610cc8868387612917565b90505f85516001600160401b03811115610ce457610ce4614c95565b604051908082528060200260200182016040528015610d0d578160200160208202803683370190505b5090505f5b8651811015610df2576001600160a01b0388165f90815260a260205260408120885182908a9085908110610d4857610d486156ff565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f206040518060200160405290815f820154815250509050610dcc878381518110610d9a57610d9a6156ff565b6020026020010151858481518110610db457610db46156ff565b6020026020010151836130749092919063ffffffff16565b838381518110610dde57610dde6156ff565b602090810291909101015250600101610d12565b50925050505b9392505050565b610e0833611088565b15610e2657604051633bf2b50360e11b815260040160405180910390fd5b604051632b6241f360e11b815233600482015263ffffffff841660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906356c483e6906044015f604051808303815f87803b158015610e90575f5ffd5b505af1158015610ea2573d5f5f3e3d5ffd5b50505050610eb0338561309a565b610eba33336130fc565b6040516001600160a01b038516815233907fa453db612af59e5521d6ab9284dc3e2d06af286eb1b1b7b771fce4716c19f2c19060200160405180910390a2336001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908383604051610f33929190615791565b60405180910390a250505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610fa05750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b610fbd5760405163045206a560e21b815260040160405180910390fd5b6001600160a01b038481165f908152609a602052604080822054905163152667d960e31b8152908316600482018190528684166024830152927f0000000000000000000000000000000000000000000000000000000000000000169063a9333ec890604401602060405180830381865afa15801561103d573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061106191906157bf565b90505f61106f8787846131ff565b905061107f8388888888866132e1565b50505050505050565b6001600160a01b039081165f908152609a602052604090205416151590565b816110b18161341f565b6110ce5760405163932d94f760e01b815260040160405180910390fd5b6110d783611b17565b6110f4576040516325ec6c1f60e01b815260040160405180910390fd5b6110fe838361309a565b505050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611165573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111899190615776565b6111a657604051631d77d47760e21b815260040160405180910390fd5b6111b05f19613037565b565b5f816040516020016111c491906157da565b604051602081830303815290604052805190602001209050919050565b6001600160a01b0381165f90815260a3602052604081206060918291611206906134c9565b8051909150806001600160401b0381111561122357611223614c95565b6040519080825280602002602001820160405280156112b057816020015b61129d6040518060e001604052805f6001600160a01b031681526020015f6001600160a01b031681526020015f6001600160a01b031681526020015f81526020015f63ffffffff16815260200160608152602001606081525090565b8152602001906001900390816112415790505b509350806001600160401b038111156112cb576112cb614c95565b6040519080825280602002602001820160405280156112fe57816020015b60608152602001906001900390816112e95790505b506001600160a01b038087165f908152609a60205260408120549295509116905b828110156116795760a45f85838151811061133c5761133c6156ff565b60209081029190910181015182528181019290925260409081015f20815160e08101835281546001600160a01b03908116825260018301548116828601526002830154168184015260038201546060820152600482015463ffffffff1660808201526005820180548451818702810187019095528085529194929360a08601939092908301828280156113f657602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116113d8575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561144c57602002820191905f5260205f20905b815481526020019060010190808311611438575b505050505081525050868281518110611467576114676156ff565b6020026020010181905250858181518110611484576114846156ff565b602002602001015160a00151516001600160401b038111156114a8576114a8614c95565b6040519080825280602002602001820160405280156114d1578160200160208202803683370190505b508582815181106114e4576114e46156ff565b60200260200101819052505f7f0000000000000000000000000000000000000000000000000000000000000000878381518110611523576115236156ff565b6020026020010151608001516115399190615800565b905060604363ffffffff168263ffffffff1610156115815761157a89858a8681518110611568576115686156ff565b602002602001015160a00151856134d5565b90506115ac565b6115a989858a8681518110611598576115986156ff565b602002602001015160a00151612917565b90505b5f5b8884815181106115c0576115c06156ff565b602002602001015160a001515181101561166b5761162d8985815181106115e9576115e96156ff565b602002602001015160c001518281518110611606576116066156ff565b6020026020010151838381518110611620576116206156ff565b6020026020010151613603565b88858151811061163f5761163f6156ff565b60200260200101518281518110611658576116586156ff565b60209081029190910101526001016115ae565b50505080600101905061131f565b50505050915091565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146116cb57604051633213a66160e21b815260040160405180910390fd5b6116d483611088565b156110fe576001600160a01b038381165f908152609a602052604080822054905163152667d960e31b81529083166004820181905273beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06024830152927f0000000000000000000000000000000000000000000000000000000000000000169063a9333ec890604401602060405180830381865afa15801561176b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061178f91906157bf565b6001600160a01b0386165f90815260a26020908152604080832073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08452825280832081519283019091525481529192506117f5866117ed6001600160401b0380871690891661360a565b84919061361e565b905061107f848873beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08461363c565b6040516394f649dd60e01b81526001600160a01b03828116600483015260609182915f9182917f000000000000000000000000000000000000000000000000000000000000000016906394f649dd906024015f60405180830381865afa158015611883573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526118aa9190810190615877565b60405163fe243a1760e01b81526001600160a01b03888116600483015273beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac060248301529294509092505f917f0000000000000000000000000000000000000000000000000000000000000000169063fe243a1790604401602060405180830381865afa158015611930573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119549190615932565b9050805f0361196857509094909350915050565b5f835160016119779190615949565b6001600160401b0381111561198e5761198e614c95565b6040519080825280602002602001820160405280156119b7578160200160208202803683370190505b5090505f845160016119c99190615949565b6001600160401b038111156119e0576119e0614c95565b604051908082528060200260200182016040528015611a09578160200160208202803683370190505b50905073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac082865181518110611a3457611a346156ff565b60200260200101906001600160a01b031690816001600160a01b0316815250508281865181518110611a6857611a686156ff565b60209081029190910101525f5b8551811015611b0957858181518110611a9057611a906156ff565b6020026020010151838281518110611aaa57611aaa6156ff565b60200260200101906001600160a01b031690816001600160a01b031681525050848181518110611adc57611adc6156ff565b6020026020010151828281518110611af657611af66156ff565b6020908102919091010152600101611a75565b509097909650945050505050565b5f6001600160a01b03821615801590611b4957506001600160a01b038083165f818152609a6020526040902054909116145b92915050565b6040805160018082528183019092525f918291906020808301908036833701905050905082815f81518110611b8657611b866156ff565b6001600160a01b03928316602091820292909201015260405163547afb8760e01b81525f917f0000000000000000000000000000000000000000000000000000000000000000169063547afb8790611be4908890869060040161595c565b5f60405180830381865afa158015611bfe573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611c25919081019061597f565b5f81518110611c3657611c366156ff565b60200260200101519050611c4c8585835f6136b6565b95945050505050565b611c5d613773565b6111b05f6137cd565b82611c708161341f565b611c8d5760405163932d94f760e01b815260040160405180910390fd5b611c9684611b17565b611cb3576040516325ec6c1f60e01b815260040160405180910390fd5b836001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908484604051610f33929190615791565b60605f82516001600160401b03811115611d0a57611d0a614c95565b604051908082528060200260200182016040528015611d33578160200160208202803683370190505b5090505f5b8351811015611dbc576001600160a01b0385165f9081526098602052604081208551909190869084908110611d6f57611d6f6156ff565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f2054828281518110611da957611da96156ff565b6020908102919091010152600101611d38565b509392505050565b606654600290600490811603611ded5760405163840a48d560e01b815260040160405180910390fd5b611df561381e565b855f5b81811015611e8857611e80898983818110611e1557611e156156ff565b9050602002810190611e279190615a0e565b611e3090615a22565b888884818110611e4257611e426156ff565b9050602002810190611e549190615731565b888886818110611e6657611e666156ff565b9050602002016020810190611e7b9190615a2d565b613877565b600101611df8565b505061107f600160c955565b6060611e9f33611088565b611ebc5760405163a5c7c44560e01b815260040160405180910390fd5b611ec533611b17565b15611ee3576040516311ca333560e31b815260040160405180910390fd5b611eec84611b17565b611f09576040516325ec6c1f60e01b815260040160405180910390fd5b611f1233613cf0565b9050611f2033858585613f4f565b610df833856130fc565b6001600160a01b038083165f90815260a260209081526040808320938516835292815282822083519182019093529154825290610df890614014565b60608082516001600160401b03811115611f8257611f82614c95565b604051908082528060200260200182016040528015611fab578160200160208202803683370190505b50915082516001600160401b03811115611fc757611fc7614c95565b604051908082528060200260200182016040528015611ff0578160200160208202803683370190505b506001600160a01b038086165f908152609a602052604081205492935091169061201b868387612917565b90505f5b85518110156121e8575f61204b87838151811061203e5761203e6156ff565b6020026020010151614033565b9050806001600160a01b031663fe243a178989858151811061206f5761206f6156ff565b60200260200101516040518363ffffffff1660e01b81526004016120a99291906001600160a01b0392831681529116602082015260400190565b602060405180830381865afa1580156120c4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120e89190615932565b8583815181106120fa576120fa6156ff565b6020026020010181815250505f60a25f8a6001600160a01b03166001600160a01b031681526020019081526020015f205f89858151811061213d5761213d6156ff565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f206040518060200160405290815f8201548152505090506121c186848151811061218f5761218f6156ff565b60200260200101518585815181106121a9576121a96156ff565b60200260200101518361361e9092919063ffffffff16565b8784815181106121d3576121d36156ff565b6020908102919091010152505060010161201f565b5050505b9250929050565b5f54610100900460ff161580801561221157505f54600160ff909116105b8061222a5750303b15801561222a57505f5460ff166001145b6122925760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff1916600117905580156122b3575f805461ff0019166101001790555b6122bc82613037565b6122c5836137cd565b80156110fe575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b606061231982611088565b6123365760405163a5c7c44560e01b815260040160405180910390fd5b61233f82611b17565b1561235d576040516311ca333560e31b815260040160405180910390fd5b6001600160a01b038216612384576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b038083165f818152609a6020526040902054909116903314806123b257506123b28161341f565b806123d857506001600160a01b038181165f908152609960205260409020600101541633145b6123f557604051631e499a2360e11b815260040160405180910390fd5b336001600160a01b0384161461244657806001600160a01b0316836001600160a01b03167ff0eddf07e6ea14f388b47e1e94a0f464ecbd9eed4171130e0fc0e99fb4030a8a60405160405180910390a35b610df883613cf0565b6066546002906004908116036124785760405163840a48d560e01b815260040160405180910390fd5b61248061381e565b61249461248c86615a22565b858585613877565b61249e600160c955565b5050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146124ee576040516323d871a560e01b815260040160405180910390fd5b6001600160a01b038085165f90815260986020908152604080832093871683529290529081205461252c906001600160401b038086169085166140a5565b90505f61253b868686866136b6565b6125459083615949565b9050612553865f878561363c565b6001600160a01b03851673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac01461263b57604051633b9e9f0160e21b81526001600160a01b038681166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063ee7a7c04906044015f604051808303815f87803b1580156125de575f5ffd5b505af11580156125f0573d5f5f3e3d5ffd5b5050604080516001600160a01b038981168252602082018690528a1693507feff6aab2bc3f7c648896e1522eae71d6c22e3b0e218206b3f40af0e4d204716b92500160405180910390a25b505050505050565b61264c33611088565b1561266a57604051633bf2b50360e11b815260040160405180910390fd5b61267383611b17565b612690576040516325ec6c1f60e01b815260040160405180910390fd5b61269c33848484613f4f565b6110fe33846130fc565b60605f83516001600160401b038111156126c2576126c2614c95565b6040519080825280602002602001820160405280156126f557816020015b60608152602001906001900390816126e05790505b5090505f5b8451811015611dbc57612726858281518110612718576127186156ff565b602002602001015185611cee565b828281518110612738576127386156ff565b60209081029190910101526001016126fa565b612753613773565b6001600160a01b0381166127b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401612289565b6127c1816137cd565b50565b5f6127cd6140bd565b905090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561282e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128529190615a48565b6001600160a01b0316336001600160a01b0316146128835760405163794821ff60e01b815260040160405180910390fd5b606654801982198116146128aa5760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020015b60405180910390a25050565b5f6128f26140bd565b60405161190160f01b60208201526022810191909152604281018390526062016111c4565b60605f82516001600160401b0381111561293357612933614c95565b60405190808252806020026020018201604052801561295c578160200160208202803683370190505b5090505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663547afb8786866040518363ffffffff1660e01b81526004016129ae92919061595c565b5f60405180830381865afa1580156129c8573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526129ef919081019061597f565b90505f5b8451811015610bbf57612a3987868381518110612a1257612a126156ff565b6020026020010151848481518110612a2c57612a2c6156ff565b60200260200101516131ff565b838281518110612a4b57612a4b6156ff565b60209081029190910101526001016129f3565b5f6001600160a01b038616612a86576040516339b190bb60e11b815260040160405180910390fd5b83515f03612aa75760405163796cc52560e01b815260040160405180910390fd5b5f84516001600160401b03811115612ac157612ac1614c95565b604051908082528060200260200182016040528015612aea578160200160208202803683370190505b5090505f85516001600160401b03811115612b0757612b07614c95565b604051908082528060200260200182016040528015612b30578160200160208202803683370190505b5090505f5b8651811015612e6a575f612b5488838151811061203e5761203e6156ff565b90505f60a25f8c6001600160a01b03166001600160a01b031681526020019081526020015f205f8a8581518110612b8d57612b8d6156ff565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f206040518060200160405290815f820154815250509050816001600160a01b031663fe243a178c8b8681518110612bec57612bec6156ff565b60200260200101516040518363ffffffff1660e01b8152600401612c269291906001600160a01b0392831681529116602082015260400190565b602060405180830381865afa158015612c41573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c659190615932565b888481518110612c7757612c776156ff565b60200260200101511115612c9e5760405163f020e5b960e01b815260040160405180910390fd5b612ccd888481518110612cb357612cb36156ff565b60200260200101518885815181106121a9576121a96156ff565b848481518110612cdf57612cdf6156ff565b602002602001018181525050612d27848481518110612d0057612d006156ff565b6020026020010151888581518110612d1a57612d1a6156ff565b60200260200101516141a2565b858481518110612d3957612d396156ff565b60209081029190910101526001600160a01b038a1615612dce57612d908a8a8581518110612d6957612d696156ff565b6020026020010151878681518110612d8357612d836156ff565b60200260200101516141bb565b612dce8a8c8b8681518110612da757612da76156ff565b6020026020010151878781518110612dc157612dc16156ff565b602002602001015161363c565b816001600160a01b031663724af4238c8b8681518110612df057612df06156ff565b60200260200101518b8781518110612e0a57612e0a6156ff565b60200260200101516040518463ffffffff1660e01b8152600401612e3093929190615a63565b5f604051808303815f87803b158015612e47575f5ffd5b505af1158015612e59573d5f5f3e3d5ffd5b505050505050806001019050612b35565b506001600160a01b0388165f908152609f60205260408120805491829190612e9183615a87565b91905055505f6040518060e001604052808b6001600160a01b031681526020018a6001600160a01b031681526020018b6001600160a01b031681526020018381526020014363ffffffff1681526020018981526020018581525090505f612ef7826111b2565b5f818152609e602090815260408083208054600160ff19909116811790915560a4835292819020865181546001600160a01b03199081166001600160a01b039283161783558885015195830180548216968316969096179095559187015160028201805490951692169190911790925560608501516003830155608085015160048301805463ffffffff191663ffffffff90921691909117905560a085015180519394508593612fad9260058501920190614a87565b5060c08201518051612fc9916006840191602090910190614aea565b5050506001600160a01b038b165f90815260a360205260409020612fed9082614249565b507f26b2aae26516e8719ef50ea2f6831a2efbd4e37dccdf0f6936b27bc08e793e3081838660405161302193929190615a9f565b60405180910390a19a9950505050505050505050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b5f6130928261308c61308587614014565b8690614254565b90614254565b949350505050565b6001600160a01b038281165f8181526099602090815260409182902060010180546001600160a01b0319169486169485179055905192835290917f773b54c04d756fcc5e678111f7d730de3be98192000799eee3d63716055a87c691016128dd565b6066545f906001908116036131245760405163840a48d560e01b815260040160405180910390fd5b6001600160a01b038381165f818152609a602052604080822080546001600160a01b0319169487169485179055517fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049190a35f5f61318185611817565b915091505f613191868685612917565b90505f5b835181101561107f576131f786888684815181106131b5576131b56156ff565b60200260200101515f8786815181106131d0576131d06156ff565b60200260200101518787815181106131ea576131ea6156ff565b60200260200101516132e1565b600101613195565b5f73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeabf196001600160a01b038416016132d15760405163a3d75e0960e01b81526001600160a01b0385811660048301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063a3d75e0990602401602060405180830381865afa15801561328d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132b191906157bf565b90506132c96001600160401b0384811690831661360a565b915050610df8565b506001600160401b031692915050565b805f0361330157604051630a33bc6960e21b815260040160405180910390fd5b6001600160a01b038086165f90815260a26020908152604080832093881683529290522061333181858585614268565b6040805160208101909152815481527f8be932bac54561f27260f95463d9b8ab37e06b2842e5ee2404157cc13df6eb8f908790879061336f90614014565b60405161337e93929190615a63565b60405180910390a161338f86611088565b1561107f576001600160a01b038088165f908152609860209081526040808320938916835292905290812080548592906133ca908490615949565b92505081905550866001600160a01b03167f1ec042c965e2edd7107b51188ee0f383e22e76179041ab3a9d18ff151405166c87878660405161340e93929190615a63565b60405180910390a250505050505050565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af11580156134a5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b499190615776565b60605f610df8836142d7565b60605f83516001600160401b038111156134f1576134f1614c95565b60405190808252806020026020018201604052801561351a578160200160208202803683370190505b5090505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166394d7d00c8787876040518463ffffffff1660e01b815260040161356e93929190615ac9565b5f60405180830381865afa158015613588573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526135af919081019061597f565b90505f5b85518110156135f7576135d288878381518110612a1257612a126156ff565b8382815181106135e4576135e46156ff565b60209081029190910101526001016135b3565b50909695505050505050565b5f610df883835b5f610df88383670de0b6b3a7640000614330565b5f6130928261363661362f87614014565b869061360a565b9061360a565b6001600160a01b038085165f90815260986020908152604080832093861683529290529081208054839290613672908490615b02565b92505081905550836001600160a01b03167f6909600037b75d7b4733aedd815442b5ec018a827751c832aaff64eba5d6d2dd848484604051610f3393929190615a63565b6001600160a01b038085165f90815260a560209081526040808320938716835292905290812081906136e790614415565b90505f61374d60016137197f000000000000000000000000000000000000000000000000000000000000000043615b15565b6137239190615b15565b6001600160a01b03808a165f90815260a560209081526040808320938c168352929052209061442f565b90505f61375a8284615b02565b905061376781878761444b565b98975050505050505050565b6033546001600160a01b031633146111b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401612289565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b600260c954036138705760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401612289565b600260c955565b60a084015151821461389c576040516343714afd60e01b815260040160405180910390fd5b83604001516001600160a01b0316336001600160a01b0316146138d2576040516316110d3560e21b815260040160405180910390fd5b5f6138dc856111b2565b5f818152609e602052604090205490915060ff1661390d576040516387c9d21960e01b815260040160405180910390fd5b60605f7f000000000000000000000000000000000000000000000000000000000000000087608001516139409190615800565b90504363ffffffff168163ffffffff161061396e576040516378f67ae160e11b815260040160405180910390fd5b613985875f015188602001518960a00151846134d5565b87516001600160a01b039081165f908152609a60205260408120548a5160a08c015194965092169350916139bb91908490612917565b90505f5b8860a0015151811015613c0e575f6139e68a60a00151838151811061203e5761203e6156ff565b90505f613a1c8b60c001518481518110613a0257613a026156ff565b6020026020010151878581518110611620576116206156ff565b90508715613aec57816001600160a01b0316632eae418c8c5f01518d60a001518681518110613a4d57613a4d6156ff565b60200260200101518d8d88818110613a6757613a676156ff565b9050602002016020810190613a7c9190614fc4565b60405160e085901b6001600160e01b03191681526001600160a01b03938416600482015291831660248301529091166044820152606481018490526084015f604051808303815f87803b158015613ad1575f5ffd5b505af1158015613ae3573d5f5f3e3d5ffd5b50505050613c04565b5f5f836001600160a01b031663c4623ea18e5f01518f60a001518881518110613b1757613b176156ff565b60200260200101518f8f8a818110613b3157613b316156ff565b9050602002016020810190613b469190614fc4565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152918316602483015290911660448201526064810186905260840160408051808303815f875af1158015613b9f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613bc39190615b31565b91509150613c01878e5f01518f60a001518881518110613be557613be56156ff565b602002602001015185858b8b815181106131ea576131ea6156ff565b50505b50506001016139bf565b5087516001600160a01b03165f90815260a360205260409020613c319085614469565b505f84815260a46020526040812080546001600160a01b031990811682556001820180548216905560028201805490911690556003810182905560048101805463ffffffff1916905590613c886005830182614b23565b613c95600683015f614b23565b50505f848152609e602052604090819020805460ff19169055517f1f40400889274ed07b24845e5054a87a0cab969eb1277aafe61ae352e7c32a0090613cde9086815260200190565b60405180910390a15050505050505050565b606654606090600190600290811603613d1c5760405163840a48d560e01b815260040160405180910390fd5b6001600160a01b038084165f818152609a602052604080822080546001600160a01b0319811690915590519316928392917ffee30966a256b71e14bc0ebfc94315e28ef4a97a7131a9e2b7a310a73af4467691a35f5f613d7b86611817565b9150915081515f03613d8f57505050613f49565b81516001600160401b03811115613da857613da8614c95565b604051908082528060200260200182016040528015613dd1578160200160208202803683370190505b5094505f613de0878585612917565b90505f5b8351811015613f43576040805160018082528183019092525f916020808301908036833750506040805160018082528183019092529293505f9291506020808301908036833750506040805160018082528183019092529293505f92915060208083019080368337019050509050868481518110613e6457613e646156ff565b6020026020010151835f81518110613e7e57613e7e6156ff565b60200260200101906001600160a01b031690816001600160a01b031681525050858481518110613eb057613eb06156ff565b6020026020010151825f81518110613eca57613eca6156ff565b602002602001018181525050848481518110613ee857613ee86156ff565b6020026020010151815f81518110613f0257613f026156ff565b602002602001018181525050613f1b8b89858585612a5e565b8a8581518110613f2d57613f2d6156ff565b6020908102919091010152505050600101613de4565b50505050505b50919050565b6001600160a01b038084165f908152609960205260409020600101541680613f77575061400e565b6001600160a01b0381165f908152609c6020908152604080832085845290915290205460ff1615613fbb57604051630d4c4c9160e21b815260040160405180910390fd5b6001600160a01b0381165f908152609c602090815260408083208584528252909120805460ff1916600117905583015161249e908290614002908890889084908890610860565b85516020870151614474565b50505050565b80515f9015614024578151611b49565b670de0b6b3a764000092915050565b5f6001600160a01b03821673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac01461407e577f0000000000000000000000000000000000000000000000000000000000000000611b49565b7f000000000000000000000000000000000000000000000000000000000000000092915050565b5f6140b384838560016144c6565b6130929085615b02565b5f7f0000000000000000000000000000000000000000000000000000000000000000461461417d5750604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b5f815f036141b157505f611b49565b610df88383614254565b6001600160a01b03821673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0146110fe576001600160a01b038084165f90815260a560209081526040808320938616835292905290812061420e90614415565b905061400e4361421e8484615949565b6001600160a01b038088165f90815260a560209081526040808320938a168352929052209190614515565b5f610df88383614520565b5f610df883670de0b6b3a764000084614330565b825f0361428857614281670de0b6b3a764000082614254565b845561400e565b6040805160208101909152845481525f906142a490858461361e565b90505f6142b18483615949565b90505f6142cc8461308c6142c5888a615949565b8590614254565b875550505050505050565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561432457602002820191905f5260205f20905b815481526020019060010190808311614310575b50505050509050919050565b5f80805f19858709858702925082811083820303915050805f036143675783828161435d5761435d615b53565b0492505050610df8565b8084116143ae5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401612289565b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b5f614420828261456c565b6001600160e01b031692915050565b5f61443b8383836145b1565b6001600160e01b03169392505050565b5f6130926144598385615b67565b85906001600160401b031661360a565b5f610df883836145fa565b4281101561449557604051630819bdcd60e01b815260040160405180910390fd5b6144a96001600160a01b03851684846146dd565b61400e57604051638baa579f60e01b815260040160405180910390fd5b5f5f6144d3868686614330565b905060018360028111156144e9576144e9615b86565b14801561450557505f848061450057614500615b53565b868809115b15611c4c576108de600182615949565b6110fe838383614731565b5f81815260018301602052604081205461456557508154600181810184555f848152602080822090930184905584548482528286019093526040902091909155611b49565b505f611b49565b81545f9080156145a95761459284614585600184615b02565b5f91825260209091200190565b5464010000000090046001600160e01b0316613092565b509092915050565b82545f90816145c286868385614837565b905080156145f0576145d986614585600184615b02565b5464010000000090046001600160e01b03166108de565b5091949350505050565b5f81815260018301602052604081205480156146d4575f61461c600183615b02565b85549091505f9061462f90600190615b02565b905081811461468e575f865f01828154811061464d5761464d6156ff565b905f5260205f200154905080875f01848154811061466d5761466d6156ff565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061469f5761469f615b9a565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f905560019350505050611b49565b5f915050611b49565b5f5f5f6146ea858561488a565b90925090505f81600481111561470257614702615b86565b1480156147205750856001600160a01b0316826001600160a01b0316145b806108de57506108de8686866148c9565b825480156147e9575f61474985614585600185615b02565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b03166020840152919250908516101561479c5760405163151b8e3f60e11b815260040160405180910390fd5b805163ffffffff8086169116036147e757826147bd86614585600186615b02565b80546001600160e01b03929092166401000000000263ffffffff9092169190911790555050505050565b505b506040805180820190915263ffffffff92831681526001600160e01b03918216602080830191825285546001810187555f968752952091519051909216640100000000029190921617910155565b5f5b81831015611dbc575f61484c84846149b0565b5f8781526020902090915063ffffffff86169082015463ffffffff16111561487657809250614884565b614881816001615949565b93505b50614839565b5f5f82516041036148be576020830151604084015160608501515f1a6148b2878285856149ca565b945094505050506121ec565b505f905060026121ec565b5f5f5f856001600160a01b0316631626ba7e60e01b86866040516024016148f1929190615bae565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161492f9190615bea565b5f60405180830381855afa9150503d805f8114614967576040519150601f19603f3d011682016040523d82523d5f602084013e61496c565b606091505b509150915081801561498057506020815110155b80156108de57508051630b135d3f60e11b906149a59083016020908101908401615932565b149695505050505050565b5f6149be6002848418615c00565b610df890848416615949565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156149ff57505f90506003614a7e565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614a50573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b038116614a78575f60019250925050614a7e565b91505f90505b94509492505050565b828054828255905f5260205f20908101928215614ada579160200282015b82811115614ada57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614aa5565b50614ae6929150614b3a565b5090565b828054828255905f5260205f20908101928215614ada579160200282015b82811115614ada578251825591602001919060010190614b08565b5080545f8255905f5260205f20908101906127c191905b5b80821115614ae6575f8155600101614b3b565b6001600160a01b03811681146127c1575f5ffd5b8035614b6d81614b4e565b919050565b5f5f5f5f5f60a08688031215614b86575f5ffd5b8535614b9181614b4e565b94506020860135614ba181614b4e565b93506040860135614bb181614b4e565b94979396509394606081013594506080013592915050565b5f5f83601f840112614bd9575f5ffd5b5081356001600160401b03811115614bef575f5ffd5b6020830191508360208260051b85010111156121ec575f5ffd5b5f5f60208385031215614c1a575f5ffd5b82356001600160401b03811115614c2f575f5ffd5b614c3b85828601614bc9565b90969095509350505050565b602080825282518282018190525f918401906040840190835b81811015610bbf578351835260209384019390920191600101614c60565b5f60208284031215614c8e575f5ffd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b60405160e081016001600160401b0381118282101715614ccb57614ccb614c95565b60405290565b604080519081016001600160401b0381118282101715614ccb57614ccb614c95565b604051601f8201601f191681016001600160401b0381118282101715614d1b57614d1b614c95565b604052919050565b5f6001600160401b03821115614d3b57614d3b614c95565b5060051b60200190565b5f82601f830112614d54575f5ffd5b8135614d67614d6282614d23565b614cf3565b8082825260208201915060208360051b860101925085831115614d88575f5ffd5b602085015b83811015614dae578035614da081614b4e565b835260209283019201614d8d565b5095945050505050565b5f82601f830112614dc7575f5ffd5b8135614dd5614d6282614d23565b8082825260208201915060208360051b860101925085831115614df6575f5ffd5b602085015b83811015614dae578035835260209283019201614dfb565b5f5f5f60608486031215614e25575f5ffd5b8335614e3081614b4e565b925060208401356001600160401b03811115614e4a575f5ffd5b614e5686828701614d45565b92505060408401356001600160401b03811115614e71575f5ffd5b614e7d86828701614db8565b9150509250925092565b5f8151808452602084019350602083015f5b82811015614eb7578151865260209586019590910190600101614e99565b5093949350505050565b602081525f610df86020830184614e87565b803563ffffffff81168114614b6d575f5ffd5b5f5f83601f840112614ef6575f5ffd5b5081356001600160401b03811115614f0c575f5ffd5b6020830191508360208285010111156121ec575f5ffd5b5f5f5f5f60608587031215614f36575f5ffd5b8435614f4181614b4e565b9350614f4f60208601614ed3565b925060408501356001600160401b03811115614f69575f5ffd5b614f7587828801614ee6565b95989497509550505050565b5f5f5f5f60808587031215614f94575f5ffd5b8435614f9f81614b4e565b93506020850135614faf81614b4e565b93969395505050506040820135916060013590565b5f60208284031215614fd4575f5ffd5b8135610df881614b4e565b5f5f60408385031215614ff0575f5ffd5b8235614ffb81614b4e565b9150602083013561500b81614b4e565b809150509250929050565b5f60e08284031215615026575f5ffd5b61502e614ca9565b905061503982614b62565b815261504760208301614b62565b602082015261505860408301614b62565b60408201526060828101359082015261507360808301614ed3565b608082015260a08201356001600160401b03811115615090575f5ffd5b61509c84828501614d45565b60a08301525060c08201356001600160401b038111156150ba575f5ffd5b6150c684828501614db8565b60c08301525092915050565b5f602082840312156150e2575f5ffd5b81356001600160401b038111156150f7575f5ffd5b61309284828501615016565b5f60208284031215615113575f5ffd5b813560ff81168114610df8575f5ffd5b5f8151808452602084019350602083015f5b82811015614eb75781516001600160a01b0316865260209586019590910190600101615135565b80516001600160a01b03908116835260208083015182169084015260408083015190911690830152606080820151908301526080808201515f916151a79085018263ffffffff169052565b5060a082015160e060a08501526151c160e0850182615123565b905060c083015184820360c0860152611c4c8282614e87565b5f82825180855260208501945060208160051b830101602085015f5b838110156135f757601f19858403018852615212838351614e87565b60209889019890935091909101906001016151f6565b5f604082016040835280855180835260608501915060608160051b8601019250602087015f5b8281101561527f57605f1987860301845261526a85835161515c565b9450602093840193919091019060010161524e565b505050508281036020840152611c4c81856151da565b6001600160401b03811681146127c1575f5ffd5b5f5f5f606084860312156152bb575f5ffd5b83356152c681614b4e565b92506020840135915060408401356152dd81615295565b809150509250925092565b604081525f6152fa6040830185615123565b8281036020840152611c4c8185614e87565b5f5f5f6040848603121561531e575f5ffd5b833561532981614b4e565b925060208401356001600160401b03811115615343575f5ffd5b61534f86828701614ee6565b9497909650939450505050565b5f5f6040838503121561536d575f5ffd5b823561537881614b4e565b915060208301356001600160401b03811115615392575f5ffd5b61539e85828601614d45565b9150509250929050565b5f5f5f5f5f5f606087890312156153bd575f5ffd5b86356001600160401b038111156153d2575f5ffd5b6153de89828a01614bc9565b90975095505060208701356001600160401b038111156153fc575f5ffd5b61540889828a01614bc9565b90955093505060408701356001600160401b03811115615426575f5ffd5b61543289828a01614bc9565b979a9699509497509295939492505050565b5f5f5f60608486031215615456575f5ffd5b833561546181614b4e565b925060208401356001600160401b0381111561547b575f5ffd5b84016040818703121561548c575f5ffd5b615494614cd1565b81356001600160401b038111156154a9575f5ffd5b8201601f810188136154b9575f5ffd5b80356001600160401b038111156154d2576154d2614c95565b6154e5601f8201601f1916602001614cf3565b8181528960208385010111156154f9575f5ffd5b816020840160208301375f60209282018301528352928301359282019290925293969395505050506040919091013590565b5f5f6040838503121561553c575f5ffd5b823561554781614b4e565b946020939093013593505050565b604081525f6152fa6040830185614e87565b80151581146127c1575f5ffd5b5f5f5f5f60608587031215615587575f5ffd5b84356001600160401b0381111561559c575f5ffd5b850160e081880312156155ad575f5ffd5b935060208501356001600160401b038111156155c7575f5ffd5b6155d387828801614bc9565b90945092505060408501356155e781615567565b939692955090935050565b5f5f5f5f60808587031215615605575f5ffd5b843561561081614b4e565b9350602085013561562081614b4e565b9250604085013561563081615295565b915060608501356155e781615295565b5f5f60408385031215615651575f5ffd5b82356001600160401b03811115615666575f5ffd5b8301601f81018513615676575f5ffd5b8035615684614d6282614d23565b8082825260208201915060208360051b8501019250878311156156a5575f5ffd5b6020840193505b828410156156d05783356156bf81614b4e565b8252602093840193909101906156ac565b945050505060208301356001600160401b03811115615392575f5ffd5b602081525f610df860208301846151da565b634e487b7160e01b5f52603260045260245ffd5b5f8235605e19833603018112615727575f5ffd5b9190910192915050565b5f5f8335601e19843603018112615746575f5ffd5b8301803591506001600160401b0382111561575f575f5ffd5b6020019150600581901b36038213156121ec575f5ffd5b5f60208284031215615786575f5ffd5b8151610df881615567565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b5f602082840312156157cf575f5ffd5b8151610df881615295565b602081525f610df8602083018461515c565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff8181168382160190811115611b4957611b496157ec565b5f82601f83011261582b575f5ffd5b8151615839614d6282614d23565b8082825260208201915060208360051b86010192508583111561585a575f5ffd5b602085015b83811015614dae57805183526020928301920161585f565b5f5f60408385031215615888575f5ffd5b82516001600160401b0381111561589d575f5ffd5b8301601f810185136158ad575f5ffd5b80516158bb614d6282614d23565b8082825260208201915060208360051b8501019250878311156158dc575f5ffd5b6020840193505b828410156159075783516158f681614b4e565b8252602093840193909101906158e3565b8095505050505060208301516001600160401b03811115615926575f5ffd5b61539e8582860161581c565b5f60208284031215615942575f5ffd5b5051919050565b80820180821115611b4957611b496157ec565b6001600160a01b03831681526040602082018190525f9061309290830184615123565b5f6020828403121561598f575f5ffd5b81516001600160401b038111156159a4575f5ffd5b8201601f810184136159b4575f5ffd5b80516159c2614d6282614d23565b8082825260208201915060208360051b8501019250868311156159e3575f5ffd5b6020840193505b828410156108de5783516159fd81615295565b8252602093840193909101906159ea565b5f823560de19833603018112615727575f5ffd5b5f611b493683615016565b5f60208284031215615a3d575f5ffd5b8135610df881615567565b5f60208284031215615a58575f5ffd5b8151610df881614b4e565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60018201615a9857615a986157ec565b5060010190565b838152606060208201525f615ab7606083018561515c565b82810360408401526108de8185614e87565b6001600160a01b03841681526060602082018190525f90615aec90830185615123565b905063ffffffff83166040830152949350505050565b81810381811115611b4957611b496157ec565b63ffffffff8281168282160390811115611b4957611b496157ec565b5f5f60408385031215615b42575f5ffd5b505080516020909101519092909150565b634e487b7160e01b5f52601260045260245ffd5b6001600160401b038281168282160390811115611b4957611b496157ec565b634e487b7160e01b5f52602160045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b828152604060208201525f82518060408401528060208501606085015e5f606082850101526060601f19601f8301168401019150509392505050565b5f82518060208501845e5f920191825250919050565b5f82615c1a57634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220b5026cd99da9f0fbef2508808be6d5977145f46d257de170fa0dbf0977792ccc64736f6c634300081b0033",
    "sourceMap": "1254:44617:105:-:0;;;2473:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2936:21;2789:16;2807;2825:18;2845:21;2885:15;-1:-1:-1;;;;;3224:38:138;;3216:67;;;;-1:-1:-1;;;3216:67:138;;;;;;;;;;;;-1:-1:-1;;;;;3293:32:138;;;;;6067:34:106;;;;;6111;;;;;6155:38;;;;;6203:58;;;;1041:13:137;1021:33;;1092:27;:25;:27::i;:::-;1064:55;;-1:-1:-1;;;;;501:44:136;;;2973:22:105::3;:20;:22::i;:::-;2473:529:::0;;;;;;1254:44617;;1841:620:137;1901:7;1984:17;;1967:13;:34;:487;;-1:-1:-1;2330:19:137;;;;;;;;;;;-1:-1:-1;;;2330:19:137;;;;;2243:197;;602:80;2243:197;;;1585:25:228;2320:30:137;1626:18:228;;;1619:34;2373:13:137;1669:18:228;;;1662:34;2417:4:137;1712:18:228;;;;1705:60;;;;2243:197:137;;;;;;;;;;1557:19:228;;;;2243:197:137;;;2216:238;;;;;;1841:620::o;1967:487::-;-1:-1:-1;2098:25:137;;;1841:620::o;5939:280:30:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:30;;1978:2:228;5998:66:30;;;1960:21:228;2017:2;1997:18;;;1990:30;2056:34;2036:18;;;2029:62;-1:-1:-1;;;2107:18:228;;;2100:37;2154:19;;5998:66:30;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:30;6140:15;6125:30;;;;;;6174:28;;2326:36:228;;;6174:28:30;;2314:2:228;2299:18;6174:28:30;;;;;;;6074:139;5939:280::o;14:149:228:-;-1:-1:-1;;;;;107:31:228;;97:42;;87:70;;153:1;150;143:12;87:70;14:149;:::o;168:1181::-;418:6;426;434;442;450;458;511:3;499:9;490:7;486:23;482:33;479:53;;;528:1;525;518:12;479:53;560:9;554:16;579:49;622:5;579:49;:::i;:::-;697:2;682:18;;676:25;647:5;;-1:-1:-1;710:51:228;676:25;710:51;:::i;:::-;832:2;817:18;;811:25;780:7;;-1:-1:-1;845:51:228;811:25;845:51;:::i;:::-;967:2;952:18;;946:25;915:7;;-1:-1:-1;980:51:228;946:25;980:51;:::i;:::-;1102:3;1087:19;;1081:26;1050:7;;-1:-1:-1;1116:51:228;1081:26;1116:51;:::i;:::-;1238:3;1223:19;;1217:26;1186:7;;-1:-1:-1;1287:10:228;1274:24;;1262:37;;1252:65;;1313:1;1310;1303:12;1252:65;1336:7;1326:17;;;168:1181;;;;;;;;:::o;2184:184::-;1254:44617:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1254:44617:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:188:106;;934:133;879:188;;;;;160:25:228;;;148:2;133:18;879:188:106;;;;;;;;45270:599:105;;;;;;:::i;:::-;;:::i;7251:1449::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3368:401:138:-;;;;;;:::i;:::-;;:::i;:::-;;44014:839:105;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3322:599::-;;;;;;:::i;:::-;;:::i;1729:49:106:-;;;;;;;;-1:-1:-1;;;;;8439:32:228;;;8421:51;;8409:2;8394:18;1729:49:106;8249:229:228;9540:784:105;;;;;;:::i;:::-;;:::i;37663:161::-;;;;;;:::i;:::-;-1:-1:-1;;;;;37772:26:105;;;37746:7;37772:26;;;:16;:26;;;;;:45;;;;;37663:161;37274:137;;;;;;:::i;:::-;;:::i;:::-;;;9761:14:228;;9754:22;9736:41;;9724:2;9709:18;37274:137:105;9596:187:228;354:59:136;;;;;1845:49:106;;;;;3966:248:105;;;;;;:::i;:::-;;:::i;3805:85:138:-;;;:::i;44898:164:105:-;;;;;;:::i;:::-;;:::i;4539:163:138:-;;;;;;:::i;:::-;4671:7;;4642:1;:10;;;;;;;;4671:14;;;4670:24;;4539:163;4416:87;4489:7;;4416:87;;41985:1984:105;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;10369:1082::-;;;;;;:::i;:::-;;:::i;3062:62:106:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3062:62:106;;;40684:1256:105;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;37456:162::-;;;;;;:::i;:::-;;:::i;38934:577::-;;;;;;:::i;:::-;;:::i;2064:101:24:-;;;:::i;2718:96:106:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4259:249:105;;;;;;:::i;:::-;;:::i;1964:47:138:-;;;;;1441:85:24;1513:6;;-1:-1:-1;;;;;1513:6:24;1441:85;;38089:368:105;;;;;;:::i;:::-;;:::i;1539:104:106:-;;1600:42;1539:104;;9083:412:105;;;;;;:::i;:::-;;:::i;5278:81:106:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5278:81:106;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20469:32:228;;;20451:51;;20538:32;;;20533:2;20518:18;;20511:60;20607:32;;;;20587:18;;;20580:60;;;;20671:2;20656:18;;20649:34;20732:10;20720:23;;;20714:3;20699:19;;20692:52;20438:3;20423:19;5278:81:106;20194:556:228;4078:81:106;;;;;;:::i;:::-;;;;;;;;;;;;;;6220:986:105;;;;;;:::i;:::-;;:::i;3759:73:106:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3350:111;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;37869:175:105;;;;;;:::i;:::-;;:::i;45107:118::-;;;22742:10:228;45191:27:105;22730:23:228;22712:42;;22700:2;22685:18;45107:118:105;22568:192:228;39556:1083:105;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1963:53:106:-;;;;;3008:188:105;;;;;;:::i;:::-;;:::i;5253:922::-;;;;;;:::i;:::-;;:::i;8745:293::-;;;;;;:::i;:::-;;:::i;11496:1464::-;;;;;;:::i;:::-;;:::i;4553:655::-;;;;;;:::i;:::-;;:::i;38502:387::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2314:198:24:-;;;;;;:::i;:::-;;:::i;1614:118:137:-;;;:::i;3926:454:138:-;;;;;;:::i;:::-;;:::i;45270:599:105:-;45605:233;;;934:133:106;45605:233:105;;;27434:25:228;-1:-1:-1;;;;;27495:32:228;;;27475:18;;;27468:60;;;;27564:32;;;27544:18;;;27537:60;27633:32;;;27613:18;;;27606:60;27682:19;;;27675:35;;;27726:19;;;27719:35;;;45474:7:105;;45540:322;;27406:19:228;;45605:233:105;;;;;;;;;;;;45578:274;;;;;;45540:24;:322::i;:::-;45533:329;45270:599;-1:-1:-1;;;;;;45270:599:105:o;7251:1449::-;4671:7:138;;7400:16:105;;1325:1:106;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;7428:32:105::1;7477:6:::0;-1:-1:-1;;;;;7463:28:105;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;7463:28:105::1;-1:-1:-1::0;7532:10:105::1;7501:16;7520:23:::0;;;:11:::1;:23;::::0;;;;;7428:63;;-1:-1:-1;;;;;;7520:23:105;;::::1;::::0;7554:1107:::1;7574:17:::0;;::::1;7554:1107;;;7651:6;;7658:1;7651:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;:30;;7620:6;;7627:1;7620:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;;::::1;:::i;:::-;:27;;:61;7612:98;;;;-1:-1:-1::0;;;7612:98:105::1;;;;;;;;;;;;7756:10;7732:6:::0;;7739:1;7732:9;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;7732:34:105::1;;7724:66;;;;-1:-1:-1::0;;;7724:66:105::1;;;;;;;;;;;;7805:32;7840:63;7860:10;7872:8;7882:6;;7889:1;7882:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;;::::1;:::i;:::-;7840:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;7840:19:105::1;::::0;-1:-1:-1;;;7840:63:105:i:1;:::-;7805:98;;8365:285;8423:10;8461:8;8499:6;;8506:1;8499:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;;::::1;:::i;:::-;8365:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;8562:6:105;;-1:-1:-1;8562:6:105;;-1:-1:-1;8569:1:105;;-1:-1:-1;8562:9:105;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;8365:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;8620:15:105;;-1:-1:-1;8365:31:105::1;::::0;-1:-1:-1;;8365:285:105:i:1;:::-;8344:15;8360:1;8344:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:306;-1:-1:-1;7593:3:105::1;;7554:1107;;;-1:-1:-1::0;8678:15:105;;7251:1449;-1:-1:-1;;;;;7251:1449:105:o;3368:401:138:-;2398:35;;-1:-1:-1;;;2398:35:138;;2422:10;2398:35;;;8421:51:228;2398:14:138;-1:-1:-1;;;;;2398:23:138;;;;8394:18:228;;2398:35:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:138;;;;;;;;;;;;3482:7:::1;::::0;3631:37;;::::1;3630:62:::0;::::1;3622:97;;;;-1:-1:-1::0;;;3622:97:138::1;;;;;;;;;;;;3729:33;3746:15;3729:16;:33::i;:::-;3442:327;3368:401:::0;:::o;44014:839:105:-;-1:-1:-1;;;;;44301:19:105;;;44282:16;44301:19;;;:11;:19;;;;;;44183:16;;44301:19;;44365:49;44313:6;44301:19;44403:10;44365:19;:49::i;:::-;44330:84;;44494:30;44541:10;:17;-1:-1:-1;;;;;44527:32:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;44527:32:105;-1:-1:-1;44494:65:105;-1:-1:-1;44574:9:105;44569:248;44593:10;:17;44589:1;:21;44569:248;;;-1:-1:-1;;;;;44665:29:105;;44631:31;44665:29;;;:21;:29;;;;;44695:13;;44631:31;;44695:10;;44706:1;;44695:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;44665:44:105;-1:-1:-1;;;;;44665:44:105;;;;;;;;;;;;44631:78;;;;;;;;;;;;;;;;;;;44742:64;44764:18;44783:1;44764:21;;;;;;;;:::i;:::-;;;;;;;44787:15;44803:1;44787:18;;;;;;;;:::i;:::-;;;;;;;44742:3;:21;;:64;;;;;:::i;:::-;44723:13;44737:1;44723:16;;;;;;;;:::i;:::-;;;;;;;;;;:83;-1:-1:-1;44612:3:105;;44569:248;;;-1:-1:-1;44833:13:105;-1:-1:-1;;;44014:839:105;;;;;;:::o;3322:599::-;3493:23;3505:10;3493:11;:23::i;:::-;3492:24;3484:54;;;;-1:-1:-1;;;3484:54:105;;;;;;;;;;;;3549:65;;-1:-1:-1;;;3549:65:105;;3586:10;3549:65;;;29783:51:228;29882:10;29870:23;;29850:18;;;29843:51;3549:17:105;-1:-1:-1;;;;;3549:36:105;;;;29756:18:228;;3549:65:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3624:58;3647:10;3659:22;3624;:58::i;:::-;3745:33;3755:10;3767;3745:9;:33::i;:::-;3794:54;;-1:-1:-1;;;;;8439:32:228;;8421:51;;3813:10:105;;3794:54;;8409:2:228;8394:18;3794:54:105;;;;;;;3890:10;-1:-1:-1;;;;;3863:51:105;;3902:11;;3863:51;;;;;;;:::i;:::-;;;;;;;;3322:599;;;;:::o;9540:784::-;1813:10;-1:-1:-1;;;;;1835:15:105;1813:38;;;:80;;-1:-1:-1;1855:10:105;-1:-1:-1;;;;;1877:15:105;1855:38;;1813:80;1791:165;;;;-1:-1:-1;;;1791:165:105;;;;;;;;;;;;-1:-1:-1;;;;;9770:19:105;;::::1;9751:16;9770:19:::0;;;:11:::1;:19;::::0;;;;;;9821:53;;-1:-1:-1;;;9821:53:105;;9770:19;;::::1;9821:53;::::0;::::1;30493:51:228::0;;;30580:32;;;30560:18;;;30553:60;9770:19:105;9821:17:::1;:33;::::0;::::1;::::0;30466:18:228;;9821:53:105::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9799:75;;9884:22;9909:50;9928:6;9936:8;9946:12;9909:18;:50::i;:::-;9884:75;;10062:255;10106:8;10136:6;10166:8;10207:17;10251:11;10292:14;10062:19;:255::i;:::-;9741:583;;;9540:784:::0;;;;:::o;37274:137::-;-1:-1:-1;;;;;37370:19:105;;;37346:4;37370:19;;;:11;:19;;;;;;;:33;;;37274:137::o;3966:248::-;4068:8;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:136;;;;;;;;;;;;4096:20:105::1;4107:8;4096:10;:20::i;:::-;4088:54;;;;-1:-1:-1::0;;;4088:54:105::1;;;;;;;;;;;;4152:55;4175:8;4185:21;4152:22;:55::i;:::-;3966:248:::0;;;:::o;3805:85:138:-;2398:35;;-1:-1:-1;;;2398:35:138;;2422:10;2398:35;;;8421:51:228;2398:14:138;-1:-1:-1;;;;;2398:23:138;;;;8394:18:228;;2398:35:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:138;;;;;;;;;;;;3855:28:::1;-1:-1:-1::0;;3855:16:138::1;:28::i;:::-;3805:85::o:0;44898:164:105:-;44996:7;45043:10;45032:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;45022:33;;;;;;45015:40;;44898:164;;;:::o;41985:1984::-;-1:-1:-1;;;;;42173:36:105;;42138:32;42173:36;;;:28;:36;;;;;42068:31;;;;42173:45;;:43;:45::i;:::-;42251:22;;42138:80;;-1:-1:-1;42251:22:105;-1:-1:-1;;;;;42297:29:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42297:29:105;;;;;;;;;;;;;;;;;42283:43;;42361:11;-1:-1:-1;;;;;42345:28:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;42403:19:105;;;42384:16;42403:19;;;:11;:19;;;;;;42336:37;;-1:-1:-1;42403:19:105;;;42433:1530;42453:11;42449:1;:15;42433:1530;;;42502:17;:37;42520:15;42536:1;42520:18;;;;;;;;:::i;:::-;;;;;;;;;;;;42502:37;;;;;;;;;;;;;-1:-1:-1;42502:37:105;42485:54;;;;;;;;;-1:-1:-1;;;;;42485:54:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42502:37;;42485:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;42485:54:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:11;42497:1;42485:14;;;;;;;;:::i;:::-;;;;;;:54;;;;42579:11;42591:1;42579:14;;;;;;;;:::i;:::-;;;;;;;:25;;;:32;-1:-1:-1;;;;;42565:47:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;42565:47:105;;42553:6;42560:1;42553:9;;;;;;;;:::i;:::-;;;;;;:59;;;;42627:21;42679:27;42651:11;42663:1;42651:14;;;;;;;;:::i;:::-;;;;;;;:25;;;:55;;;;:::i;:::-;42627:79;;42721:32;43183:12;43159:37;;:14;:37;;;43155:497;;;43234:230;43291:6;43329:8;43371:11;43383:1;43371:14;;;;;;;;:::i;:::-;;;;;;;:25;;;43431:14;43234:26;:230::i;:::-;43216:248;;43155:497;;;43541:96;43570:6;43588:8;43610:11;43622:1;43610:14;;;;;;;;:::i;:::-;;;;;;;:25;;;43541:19;:96::i;:::-;43503:134;;43155:497;43671:9;43666:287;43686:11;43698:1;43686:14;;;;;;;;:::i;:::-;;;;;;;:25;;;:32;43682:1;:36;43666:287;;;43758:180;43833:11;43845:1;43833:14;;;;;;;;:::i;:::-;;;;;;;:27;;;43861:1;43833:30;;;;;;;;:::i;:::-;;;;;;;43901:15;43917:1;43901:18;;;;;;;;:::i;:::-;;;;;;;43758:38;:180::i;:::-;43743:6;43750:1;43743:9;;;;;;;;:::i;:::-;;;;;;;43753:1;43743:12;;;;;;;;:::i;:::-;;;;;;;;;;:195;43720:3;;43666:287;;;;42471:1492;;42466:3;;;;;42433:1530;;;;42128:1841;;;41985:1984;;;:::o;10369:1082::-;2029:10;-1:-1:-1;;;;;2051:15:105;2029:38;;2021:70;;;;-1:-1:-1;;;2021:70:105;;;;;;;;;;;;10560:19:::1;10572:6;10560:11;:19::i;:::-;10555:57:::0;10595:7:::1;10555:57;-1:-1:-1::0;;;;;10640:19:105;;::::1;10621:16;10640:19:::0;;;:11:::1;:19;::::0;;;;;;10848:67;;-1:-1:-1;;;10848:67:105;;10640:19;;::::1;10848:67;::::0;::::1;30493:51:228::0;;;1600:42:106::1;30560:18:228::0;;;30553:60;10640:19:105;10848:17:::1;:33;::::0;::::1;::::0;30466:18:228;;10848:67:105::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10959:29:105;::::1;10925:31;10959:29:::0;;;:21:::1;:29;::::0;;;;;;;1600:42:106::1;10959:53:105::0;;;;;;;10925:87;;;;::::1;::::0;;;;;;10826:89;;-1:-1:-1;11047:161:105::1;11097:16:::0;11143:54:::1;-1:-1:-1::0;;;;;11143:19:105;;::::1;::::0;:54;::::1;:19;:54::i;:::-;11047:3:::0;;:161;:20:::1;:161::i;:::-;11022:186;;11261:183;11305:8;11335:6;1600:42:106;11419:14:105;11261:19;:183::i;40684:1256::-:0;40972:35;;-1:-1:-1;;;40972:35:105;;-1:-1:-1;;;;;8439:32:228;;;40972:35:105;;;8421:51:228;40763:18:105;;;;40902:34;;;;40972:15;:27;;;;8394:18:228;;40972:35:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40972:35:105;;;;;;;;;;;;:::i;:::-;41144:67;;-1:-1:-1;;;41144:67:105;;-1:-1:-1;;;;;30511:32:228;;;41144:67:105;;;30493:51:228;1600:42:106;30560:18:228;;;30553:60;40901:106:105;;-1:-1:-1;40901:106:105;;-1:-1:-1;41119:22:105;;41144:15;:35;;;;30466:18:228;;41144:67:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;41119:92;;41225:14;41243:1;41225:19;41221:89;;-1:-1:-1;41268:15:105;;41285:13;;-1:-1:-1;40684:1256:105;-1:-1:-1;;40684:1256:105:o;41221:89::-;41390:29;41438:15;:22;41463:1;41438:26;;;;:::i;:::-;-1:-1:-1;;;;;41422:43:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41422:43:105;;41390:75;;41475:23;41515:15;:22;41540:1;41515:26;;;;:::i;:::-;-1:-1:-1;;;;;41501:41:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41501:41:105;;41475:67;;1600:42:106;41553:10:105;41564:15;:22;41553:34;;;;;;;;:::i;:::-;;;;;;:59;-1:-1:-1;;;;;41553:59:105;;;-1:-1:-1;;;;;41553:59:105;;;;;41655:14;41622:6;41629:15;:22;41622:30;;;;;;;;:::i;:::-;;;;;;;;;;:47;41747:9;41742:154;41766:15;:22;41762:1;:26;41742:154;;;41825:15;41841:1;41825:18;;;;;;;;:::i;:::-;;;;;;;41809:10;41820:1;41809:13;;;;;;;;:::i;:::-;;;;;;:34;-1:-1:-1;;;;;41809:34:105;;;-1:-1:-1;;;;;41809:34:105;;;;;41869:13;41883:1;41869:16;;;;;;;;:::i;:::-;;;;;;;41857:6;41864:1;41857:9;;;;;;;;:::i;:::-;;;;;;;;;;:28;41790:3;;41742:154;;;-1:-1:-1;41914:10:105;;41926:6;;-1:-1:-1;40684:1256:105;-1:-1:-1;;;;;40684:1256:105:o;37456:162::-;37529:4;-1:-1:-1;;;;;37552:22:105;;;;;;:59;;-1:-1:-1;;;;;;37578:33:105;;;:21;;;;:11;:21;;;;;;;;;:33;37552:59;37545:66;37456:162;-1:-1:-1;;37456:162:105:o;38934:577::-;39079:18;;;39095:1;39079:18;;;;;;;;;39028:7;;;;39079:18;;;;;;;;;;;;-1:-1:-1;39079:18:105;39047:50;;39123:8;39107:10;39118:1;39107:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;39107:24:105;;;:13;;;;;;;;;:24;39163:56;;-1:-1:-1;;;39163:56:105;;39141:19;;39163:17;:34;;;;:56;;39198:8;;39208:10;;39163:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;39163:56:105;;;;;;;;;;;;:::i;:::-;39220:1;39163:59;;;;;;;;:::i;:::-;;;;;;;39141:81;;39328:176;39377:8;39409;39449:12;39492:1;39328:24;:176::i;:::-;39321:183;38934:577;-1:-1:-1;;;;;38934:577:105:o;2064:101:24:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;4259:249:105:-:0;4363:8;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:136;;;;;;;;;;;;4391:20:105::1;4402:8;4391:10;:20::i;:::-;4383:54;;;;-1:-1:-1::0;;;4383:54:105::1;;;;;;;;;;;;4479:8;-1:-1:-1::0;;;;;4452:49:105::1;;4489:11;;4452:49;;;;;;;:::i;38089:368::-:0;38208:16;38236:23;38276:10;:17;-1:-1:-1;;;;;38262:32:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38262:32:105;-1:-1:-1;38236:58:105;-1:-1:-1;38309:9:105;38304:124;38328:10;:17;38324:1;:21;38304:124;;;-1:-1:-1;;;;;38378:24:105;;;;;;:14;:24;;;;;38403:13;;38378:24;;;38403:10;;38414:1;;38403:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;38378:39:105;-1:-1:-1;;;;;38378:39:105;;;;;;;;;;;;;38366:6;38373:1;38366:9;;;;;;;;:::i;:::-;;;;;;;;;;:51;38347:3;;38304:124;;;-1:-1:-1;38444:6:105;38089:368;-1:-1:-1;;;38089:368:105:o;9083:412::-;4671:7:138;;1470:1:106;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;9336:11:105::0;9324:9:::2;9364:125;9384:1;9380;:5;9364:125;;;9406:72;9432:11;;9444:1;9432:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;9406:72;;;:::i;:::-;9448:6;;9455:1;9448:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;9459:15;;9475:1;9459:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;9406:25;:72::i;:::-;9387:3;;9364:125;;;;9314:181;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;6220:986:105;6382:32;6521:23;6533:10;6521:11;:23::i;:::-;6513:56;;;;-1:-1:-1;;;6513:56:105;;;;;;;;;;;;6588:22;6599:10;6588;:22::i;:::-;6587:23;6579:61;;;;-1:-1:-1;;;6579:61:105;;;;;;;;;;;;6658:23;6669:11;6658:10;:23::i;:::-;6650:57;;;;-1:-1:-1;;;6650:57:105;;;;;;;;;;;;6815:23;6827:10;6815:11;:23::i;:::-;6797:41;;6933:181;6979:10;7013:11;7049:22;7091:12;6933:23;:181::i;:::-;7165:34;7175:10;7187:11;7165:9;:34::i;37869:175::-;-1:-1:-1;;;;;37982:29:105;;;37956:7;37982:29;;;:21;:29;;;;;;;;:39;;;;;;;;;;;:53;;;;;;;;;;;;37956:7;37982:55;;:53;:55::i;39556:1083::-;39677:35;39714:30;39791:10;:17;-1:-1:-1;;;;;39777:32:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39777:32:105;;39756:53;;39849:10;:17;-1:-1:-1;;;;;39835:32:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39835:32:105;-1:-1:-1;;;;;;39968:19:105;;;39949:16;39968:19;;;:11;:19;;;;;;39819:48;;-1:-1:-1;39968:19:105;;;40032:49;39980:6;39968:19;40070:10;40032:19;:49::i;:::-;39997:84;-1:-1:-1;40097:9:105;40092:488;40116:10;:17;40112:1;:21;40092:488;;;40154:26;40183:31;40200:10;40211:1;40200:13;;;;;;;;:::i;:::-;;;;;;;40183:16;:31::i;:::-;40154:60;;40247:12;-1:-1:-1;;;;;40247:32:105;;40280:6;40288:10;40299:1;40288:13;;;;;;;;:::i;:::-;;;;;;;40247:55;;;;;;;;;;;;;;;-1:-1:-1;;;;;30511:32:228;;;30493:51;;30580:32;;30575:2;30560:18;;30553:60;30481:2;30466:18;;30300:319;40247:55:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;40228:13;40242:1;40228:16;;;;;;;;:::i;:::-;;;;;;:74;;;;;40395:31;40429:21;:29;40451:6;-1:-1:-1;;;;;40429:29:105;-1:-1:-1;;;;;40429:29:105;;;;;;;;;;;;:44;40459:10;40470:1;40459:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;40429:44:105;-1:-1:-1;;;;;40429:44:105;;;;;;;;;;;;40395:78;;;;;;;;;;;;;;;;;;;40511:58;40532:13;40546:1;40532:16;;;;;;;;:::i;:::-;;;;;;;40550:15;40566:1;40550:18;;;;;;;;:::i;:::-;;;;;;;40511:3;:20;;:58;;;;;:::i;:::-;40487:18;40506:1;40487:21;;;;;;;;:::i;:::-;;;;;;;;;;:82;-1:-1:-1;;40135:3:105;;40092:488;;;;40590:42;;39556:1083;;;;;;:::o;3008:188::-;3279:19:30;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:30;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:30;1713:19:38;:23;;;3387:66:30;;-1:-1:-1;3436:12:30;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:30;;36716:2:228;3325:201:30;;;36698:21:228;36755:2;36735:18;;;36728:30;36794:34;36774:18;;;36767:62;-1:-1:-1;;;36845:18:228;;;36838:44;36899:19;;3325:201:30;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:30;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:30;;;;;3562:65;3110:37:105::1;3127:19;3110:16;:37::i;:::-;3157:32;3176:12;3157:18;:32::i;:::-;3651:14:30::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:30;;;3721:14;;-1:-1:-1;37081:36:228;;3721:14:30;;37069:2:228;37054:18;3721:14:30;;;;;;;3269:483;3008:188:105;;:::o;5253:922::-;5321:32;5423:19;5435:6;5423:11;:19::i;:::-;5415:52;;;;-1:-1:-1;;;5415:52:105;;;;;;;;;;;;5486:18;5497:6;5486:10;:18::i;:::-;5485:19;5477:57;;;;-1:-1:-1;;;5477:57:105;;;;;;;;;;;;-1:-1:-1;;;;;5648:20:105;;5640:49;;;;-1:-1:-1;;;5640:49:105;;;;;;;;;;;;-1:-1:-1;;;;;5718:19:105;;;5699:16;5718:19;;;:11;:19;;;;;;;;;;5768:10;:20;;:47;;;5792:23;5806:8;5792:13;:23::i;:::-;5768:126;;;-1:-1:-1;;;;;;5849:26:105;;;;;;;:16;:26;;;;;:45;;;;5835:10;:59;5768:126;5747:195;;;;-1:-1:-1;;;5747:195:105;;;;;;;;;;;;6040:10;-1:-1:-1;;;;;6040:20:105;;;6036:96;;6112:8;-1:-1:-1;;;;;6081:40:105;6104:6;-1:-1:-1;;;;;6081:40:105;;;;;;;;;;;6036:96;6149:19;6161:6;6149:11;:19::i;8745:293::-;4671:7:138;;1470:1:106;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;8969:62:105::2;;8995:10:::0;8969:62:::2;:::i;:::-;9007:6;;9015:15;8969:25;:62::i;:::-;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;8745:293:105::0;;;;;:::o;11496:1464::-;2166:10;-1:-1:-1;;;;;2188:17:105;2166:40;;2158:74;;;;-1:-1:-1;;;2158:74:105;;;;;;;;;;;;-1:-1:-1;;;;;11818:24:105;;::::1;11730:25;11818:24:::0;;;:14:::1;:24;::::0;;;;;;;:34;;::::1;::::0;;;;;;;;;11758:199:::1;::::0;-1:-1:-1;;;;;11758:199:105;;::::1;::::0;;::::1;:29;:199::i;:::-;11730:227;;12241:20;12296:79;12321:8;12331;12341:16;12359:15;12296:24;:79::i;:::-;12276:99;::::0;:17;:99:::1;:::i;:::-;12241:134;;12425:235;12469:8;12507:1;12592:8;12632:17;12425:19;:235::i;:::-;-1:-1:-1::0;;;;;12770:34:105;::::1;1600:42:106;12770:34:105;12766:188;;12820:50;::::0;-1:-1:-1;;;12820:50:105;;-1:-1:-1;;;;;37339:32:228;;;12820:50:105::1;::::0;::::1;37321:51:228::0;37388:18;;;37381:34;;;12820:15:105::1;:26;::::0;::::1;::::0;37294:18:228;;12820:50:105::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;12889:54:105::1;::::0;;-1:-1:-1;;;;;37339:32:228;;;37321:51;;37403:2;37388:18;;37381:34;;;12889:54:105;::::1;::::0;-1:-1:-1;12889:54:105::1;::::0;-1:-1:-1;37294:18:228;12889:54:105::1;;;;;;;12766:188;11680:1280;;11496:1464:::0;;;;:::o;4553:655::-;4726:23;4738:10;4726:11;:23::i;:::-;4725:24;4717:54;;;;-1:-1:-1;;;4717:54:105;;;;;;;;;;;;4789:20;4800:8;4789:10;:20::i;:::-;4781:54;;;;-1:-1:-1;;;4781:54:105;;;;;;;;;;;;4930:182;4976:10;5010:8;5043:26;5089:12;4930:23;:182::i;:::-;5170:31;5180:10;5192:8;5170:9;:31::i;38502:387::-;38632:18;38662:25;38706:9;:16;-1:-1:-1;;;;;38690:33:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38662:61:105;-1:-1:-1;38738:9:105;38733:127;38757:9;:16;38753:1;:20;38733:127;;;38806:43;38824:9;38834:1;38824:12;;;;;;;;:::i;:::-;;;;;;;38838:10;38806:17;:43::i;:::-;38794:6;38801:1;38794:9;;;;;;;;:::i;:::-;;;;;;;;;;:55;38775:3;;38733:127;;2314:198:24;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:24;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:24;;37628:2:228;2394:73:24::1;::::0;::::1;37610:21:228::0;37667:2;37647:18;;;37640:30;37706:34;37686:18;;;37679:62;-1:-1:-1;;;37757:18:228;;;37750:36;37803:19;;2394:73:24::1;37426:402:228::0;2394:73:24::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;1614:118:137:-;1672:7;1698:27;:25;:27::i;:::-;1691:34;;1614:118;:::o;3926:454:138:-;2620:14;-1:-1:-1;;;;;2620:23:138;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2606:39:138;:10;-1:-1:-1;;;;;2606:39:138;;2598:64;;;;-1:-1:-1;;;2598:64:138;;;;;;;;;;;;4044:7:::1;::::0;4238:20;::::1;4215:16:::0;::::1;4189:43:::0;::::1;4188:71;4180:106;;;;-1:-1:-1::0;;;4180:106:138::1;;;;;;;;;;;;4296:7;:25:::0;;;4336:37:::1;::::0;160:25:228;;;4345:10:138::1;::::0;4336:37:::1;::::0;148:2:228;133:18;4336:37:138::1;;;;;;;;4004:376;3926:454:::0;:::o;2532:192:137:-;2617:7;2682:27;:25;:27::i;:::-;2653:63;;-1:-1:-1;;;2653:63:137;;;38347:27:228;38390:11;;;38383:27;;;;38426:12;;;38419:28;;;38463:12;;2653:63:137;38089:392:228;32767:543:105;32914:16;32942:32;32991:10;:17;-1:-1:-1;;;;;32977:32:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32977:32:105;;32942:67;;33019:29;33051:17;-1:-1:-1;;;;;33051:34:105;;33086:8;33096:10;33051:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33051:56:105;;;;;;;;;;;;:::i;:::-;33019:88;-1:-1:-1;33123:9:105;33118:153;33142:10;:17;33138:1;:21;33118:153;;;33201:59;33220:6;33228:10;33239:1;33228:13;;;;;;;;:::i;:::-;;;;;;;33243;33257:1;33243:16;;;;;;;;:::i;:::-;;;;;;;33201:18;:59::i;:::-;33180:15;33196:1;33180:18;;;;;;;;:::i;:::-;;;;;;;;;;:80;33161:3;;33118:153;;20392:3408;20638:7;-1:-1:-1;;;;;20665:20:105;;20657:49;;;;-1:-1:-1;;;20657:49:105;;;;;;;;;;;;20724:10;:17;20745:1;20724:22;20716:55;;;;-1:-1:-1;;;20716:55:105;;;;;;;;;;;;20782:29;20828:10;:17;-1:-1:-1;;;;;20814:32:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20814:32:105;;20782:64;;20856:33;20906:10;:17;-1:-1:-1;;;;;20892:32:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20892:32:105;-1:-1:-1;20856:68:105;-1:-1:-1;21078:9:105;21073:1882;21097:10;:17;21093:1;:21;21073:1882;;;21135:26;21164:31;21181:10;21192:1;21181:13;;;;;;;;:::i;21164:31::-;21135:60;;21209:31;21243:21;:29;21265:6;-1:-1:-1;;;;;21243:29:105;-1:-1:-1;;;;;21243:29:105;;;;;;;;;;;;:44;21273:10;21284:1;21273:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;21243:44:105;-1:-1:-1;;;;;21243:44:105;;;;;;;;;;;;21209:78;;;;;;;;;;;;;;;;;;;21435:12;-1:-1:-1;;;;;21435:32:105;;21468:6;21476:10;21487:1;21476:13;;;;;;;;:::i;:::-;;;;;;;21435:55;;;;;;;;;;;;;;;-1:-1:-1;;;;;30511:32:228;;;30493:51;;30580:32;;30575:2;30560:18;;30553:60;30481:2;30466:18;;30300:319;21435:55:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21405:23;21429:1;21405:26;;;;;;;;:::i;:::-;;;;;;;:85;;21380:164;;;;-1:-1:-1;;;21380:164:105;;;;;;;;;;;;21667:68;21688:23;21712:1;21688:26;;;;;;;;:::i;:::-;;;;;;;21716:15;21732:1;21716:18;;;;;;;;:::i;21667:68::-;21645:16;21662:1;21645:19;;;;;;;;:::i;:::-;;;;;;:90;;;;;21868:158;21940:16;21957:1;21940:19;;;;;;;;:::i;:::-;;;;;;;21993:15;22009:1;21993:18;;;;;;;;:::i;:::-;;;;;;;21868:35;:158::i;:::-;21850:12;21863:1;21850:15;;;;;;;;:::i;:::-;;;;;;;;;;:176;-1:-1:-1;;;;;22102:22:105;;;22098:675;;22406:67;22432:8;22442:10;22453:1;22442:13;;;;;;;;:::i;:::-;;;;;;;22457:12;22470:1;22457:15;;;;;;;;:::i;:::-;;;;;;;22406:25;:67::i;:::-;22539:219;22591:8;22629:6;22667:10;22678:1;22667:13;;;;;;;;:::i;:::-;;;;;;;22720:16;22737:1;22720:19;;;;;;;;:::i;:::-;;;;;;;22539;:219::i;:::-;22861:12;-1:-1:-1;;;;;22861:32:105;;22894:6;22902:10;22913:1;22902:13;;;;;;;;:::i;:::-;;;;;;;22917:23;22941:1;22917:26;;;;;;;;:::i;:::-;;;;;;;22861:83;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21121:1834;;21116:3;;;;;21073:1882;;;-1:-1:-1;;;;;;23042:35:105;;23026:13;23042:35;;;:27;:35;;;;;;;;;;;23087:37;23042:35;23087:37;:::i;:::-;;;;;;23135:28;23166:265;;;;;;;;23199:6;-1:-1:-1;;;;;23166:265:105;;;;;23232:8;-1:-1:-1;;;;;23166:265:105;;;;;23266:6;-1:-1:-1;;;;;23166:265:105;;;;;23293:5;23166:265;;;;23331:12;23166:265;;;;;;23370:10;23166:265;;;;23408:12;23166:265;;;23135:296;;23442:22;23467:35;23491:10;23467:23;:35::i;:::-;23513:34;;;;:18;:34;;;;;;;;:41;;23550:4;-1:-1:-1;;23513:41:105;;;;;;;;23564:17;:33;;;;;;:46;;;;-1:-1:-1;;;;;;23564:46:105;;;-1:-1:-1;;;;;23564:46:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23564:46:105;;;;;;;;;;;;;;;;;23513:34;;-1:-1:-1;23564:46:105;;;;;;;;;;;:::i;:::-;-1:-1:-1;23564:46:105;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;23620:36:105;;;;;;:28;:36;;;;;:56;;23661:14;23620:40;:56::i;:::-;;23692:70;23717:14;23733:10;23745:16;23692:70;;;;;;;;:::i;:::-;;;;;;;;23779:14;20392:3408;-1:-1:-1;;;;;;;;;;20392:3408:105:o;4806:157:138:-;4887:7;:22;;;4924:32;;160:25:228;;;4931:10:138;;4924:32;;148:2:228;133:18;4924:32:138;;;;;;;4806:157;:::o;6065:333:134:-;6230:7;6296:95;6376:14;6296:59;6335:19;:3;:17;:19::i;:::-;6296:18;;:38;:59::i;:::-;:79;;:95::i;:::-;6289:102;6065:333;-1:-1:-1;;;;6065:333:134:o;13302:249:105:-;-1:-1:-1;;;;;13402:26:105;;;;;;;:16;:26;;;;;;;;;:45;;:69;;-1:-1:-1;;;;;;13402:69:105;;;;;;;;;13486:58;;8421:51:228;;;13402:26:105;;13486:58;;8394:18:228;13486:58:105;8249:229:228;14309:1072:105;4671:7:138;;1187:1:106;;4642::138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;-1:-1:-1;;;;;14515:19:105;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:30;;-1:-1:-1;;;;;;14515:30:105::1;::::0;;::::1;::::0;;::::1;::::0;;14560:33;::::1;::::0;14515:19;14560:33:::1;14767:29;14798:32;14834:26;14853:6;14834:18;:26::i;:::-;14766:94;;;;14870:32;14905:49;14925:6;14933:8;14943:10;14905:19;:49::i;:::-;14870:84:::0;-1:-1:-1;14970:9:105::1;14965:410;14989:10;:17;14985:1;:21;14965:410;;;15070:294;15118:8;15153:6;15188:10;15199:1;15188:13;;;;;;;;:::i;:::-;;;;;;;15246:1;15279:15;15295:1;15279:18;;;;;;;;:::i;:::-;;;;;;;15331:15;15347:1;15331:18;;;;;;;;:::i;:::-;;;;;;;15070:19;:294::i;:::-;15008:3;;14965:410;;32223:433:::0;32369:7;-1:-1:-1;;;;;;;32392:34:105;;;32388:224;;32477:49;;-1:-1:-1;;;32477:49:105;;-1:-1:-1;;;;;8439:32:228;;;32477:49:105;;;8421:51:228;32442:32:105;;32477:15;:41;;;;;;8394:18:228;;32477:49:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32442:84;-1:-1:-1;32547:54:105;-1:-1:-1;;;;;32547:27:105;;;;:54;;:27;:54::i;:::-;32540:61;;;;;32388:224;-1:-1:-1;;;;;;32622:27:105;;32223:433;-1:-1:-1;;32223:433:105:o;29207:1106::-;29612:14;29630:1;29612:19;29604:44;;;;-1:-1:-1;;;29604:44:105;;;;;;;;;;;;-1:-1:-1;;;;;29843:29:105;;;29808:32;29843:29;;;:21;:29;;;;;;;;:39;;;;;;;;;29892:58;29843:39;29903:17;29922:11;29935:14;29892:10;:58::i;:::-;30011:17;;;;;;;;;;;;;29965:66;;29993:6;;30001:8;;30011:19;;:17;:19::i;:::-;29965:66;;;;;;;;:::i;:::-;;;;;;;;30129:19;30141:6;30129:11;:19::i;:::-;30125:182;;;-1:-1:-1;;;;;30164:24:105;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:49;;30202:11;;30164:24;:49;;30202:11;;30164:49;:::i;:::-;;;;;;;;30256:8;-1:-1:-1;;;;;30232:64:105;;30266:6;30274:8;30284:11;30232:64;;;;;;;;:::i;:::-;;;;;;;;29425:888;29207:1106;;;;;;:::o;1080:175:136:-;1175:73;;-1:-1:-1;;;1175:73:136;;-1:-1:-1;;;;;39817:32:228;;;1175:73:136;;;39799:51:228;1213:10:136;39866:18:228;;;39859:60;1233:4:136;39935:18:228;;;39928:60;1152:4:136;1240:7;;-1:-1:-1;;;;;;1240:7:136;40004:18:228;;;39997:61;1152:4:136;1175:20;:28;;;;;;39771:19:228;;1175:73:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7765:300:86:-;7828:16;7856:22;7881:19;7889:3;7881:7;:19::i;33530:681:105:-;33712:16;33740:32;33789:10;:17;-1:-1:-1;;;;;33775:32:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;33775:32:105;;33740:67;;33817:29;33849:17;-1:-1:-1;;;;;33849:41:105;;33915:8;33949:10;33986:11;33849:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33849:159:105;;;;;;;;;;;;:::i;:::-;33817:191;-1:-1:-1;34024:9:105;34019:153;34043:10;:17;34039:1;:21;34019:153;;;34102:59;34121:6;34129:10;34140:1;34129:13;;;;;;;;:::i;34102:59::-;34081:15;34097:1;34081:18;;;;;;;;:::i;:::-;;;;;;;;;;:80;34062:3;;34019:153;;;-1:-1:-1;34189:15:105;;33530:681;-1:-1:-1;;;;;;33530:681:105:o;2922:173:134:-;3027:7;3053:35;:12;3073:14;1497:110;1558:7;1584:16;:1;1593;438:4;1584:8;:16::i;5737:322::-;5896:7;5962:90;6037:14;5962:54;5996:19;:3;:17;:19::i;:::-;5962:13;;:33;:54::i;:::-;:74;;:90::i;30760:348:105:-;-1:-1:-1;;;;;30963:24:105;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:54;;31001:16;;30963:24;:54;;31001:16;;30963:54;:::i;:::-;;;;;;;;31056:8;-1:-1:-1;;;;;31032:69:105;;31066:6;31074:8;31084:16;31032:69;;;;;;;;:::i;34611:1584::-;-1:-1:-1;;;;;35333:40:105;;;34793:7;35333:40;;;:30;:40;;;;;;;;:50;;;;;;;;;;;34793:7;;35333:59;;:57;:59::i;:::-;35297:95;-1:-1:-1;35402:34:105;35439:147;35574:1;35521:50;35544:27;35528:12;35521:50;:::i;:::-;:54;;;;:::i;:::-;-1:-1:-1;;;;;35439:40:105;;;;;;;:30;:40;;;;;;;;:50;;;;;;;;;;:62;:147::i;:::-;35402:184;-1:-1:-1;35902:29:105;35934:54;35402:184;35934:25;:54;:::i;:::-;35902:86;;36006:182;36062:21;36115:16;36162:15;36006:27;:182::i;:::-;35999:189;34611:1584;-1:-1:-1;;;;;;;;34611:1584:105:o;1599:130:24:-;1513:6;;-1:-1:-1;;;;;1513:6:24;929:10:39;1662:23:24;1654:68;;;;-1:-1:-1;;;1654:68:24;;41058:2:228;1654:68:24;;;41040:21:228;;;41077:18;;;41070:30;41136:34;41116:18;;;41109:62;41188:18;;1654:68:24;40856:356:228;2666:187:24;2758:6;;;-1:-1:-1;;;;;2774:17:24;;;-1:-1:-1;;;;;;2774:17:24;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;2580:287:31:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:31;;41419:2:228;2704:63:31;;;41401:21:228;41458:2;41438:18;;;41431:30;41497:33;41477:18;;;41470:61;41548:18;;2704:63:31;41217:355:228;2704:63:31;1830:1;2842:7;:18;2580:287::o;24519:3915:105:-;24706:21;;;;:28;24689:45;;24681:82;;;;-1:-1:-1;;;24681:82:105;;;;;;;;;;;;24795:10;:21;;;-1:-1:-1;;;;;24781:35:105;:10;-1:-1:-1;;;;;24781:35:105;;24773:67;;;;-1:-1:-1;;;24773:67:105;;;;;;;;;;;;24850:22;24875:35;24899:10;24875:23;:35::i;:::-;24928:34;;;;:18;:34;;;;;;24850:60;;-1:-1:-1;24928:34:105;;24920:66;;;;-1:-1:-1;;;24920:66:105;;;;;;;;;;;;24997:36;25253:21;25301:27;25277:10;:21;;;:51;;;;:::i;:::-;25253:75;;25374:12;25350:37;;:14;:37;;;25342:75;;;;-1:-1:-1;;;25342:75:105;;;;;;;;;;;;25637:231;25690:10;:17;;;25735:10;:22;;;25787:10;:21;;;25839:14;25637:26;:231::i;:::-;26114:17;;-1:-1:-1;;;;;26102:30:105;;;26080:19;26102:30;;;:11;:30;;;;;;26200:17;;26232:21;;;;25615:253;;-1:-1:-1;26102:30:105;;;-1:-1:-1;26080:19:105;26180:74;;26200:17;26102:30;;26180:19;:74::i;:::-;26142:112;-1:-1:-1;26270:9:105;26265:1921;26289:10;:21;;;:28;26285:1;:32;26265:1921;;;26338:26;26367:42;26384:10;:21;;;26406:1;26384:24;;;;;;;;:::i;26367:42::-;26338:71;;26507:24;26534:168;26605:10;:23;;;26629:1;26605:26;;;;;;;;:::i;:::-;;;;;;;26665:19;26685:1;26665:22;;;;;;;;:::i;26534:168::-;26507:195;;26721:15;26717:1459;;;27060:12;-1:-1:-1;;;;;27060:35:105;;27126:10;:17;;;27175:10;:21;;;27197:1;27175:24;;;;;;;;:::i;:::-;;;;;;;27228:6;;27235:1;27228:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;27060:242;;;;;;-1:-1:-1;;;;;;27060:242:105;;;-1:-1:-1;;;;;42129:32:228;;;27060:242:105;;;42111:51:228;42198:32;;;42178:18;;;42171:60;42267:32;;;42247:18;;;42240:60;42316:18;;;42309:34;;;42083:19;;27060:242:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26717:1459;;;27415:25;27442:19;27465:12;-1:-1:-1;;;;;27465:22:105;;27518:10;:17;;;27567:10;:21;;;27589:1;27567:24;;;;;;;;:::i;:::-;;;;;;;27620:6;;27627:1;27620:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;27465:229;;;;;;-1:-1:-1;;;;;;27465:229:105;;;-1:-1:-1;;;;;42129:32:228;;;27465:229:105;;;42111:51:228;42198:32;;;42178:18;;;42171:60;42267:32;;;42247:18;;;42240:60;42316:18;;;42309:34;;;42083:19;;27465:229:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27414:280;;;;27813:348;27865:11;27906:10;:17;;;27955:10;:21;;;27977:1;27955:24;;;;;;;;:::i;:::-;;;;;;;28020:17;28072:11;28121:18;28140:1;28121:21;;;;;;;;:::i;27813:348::-;27323:853;;26717:1459;-1:-1:-1;;26319:3:105;;26265:1921;;;-1:-1:-1;28225:17:105;;-1:-1:-1;;;;;28196:47:105;;;;;:28;:47;;;;;:70;;28251:14;28196:54;:70::i;:::-;-1:-1:-1;28284:33:105;;;;:17;:33;;;;;28277:40;;-1:-1:-1;;;;;;28277:40:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28277:40:105;;;28284:33;28277:40;;;;28284:33;28277:40;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;28334:34:105;;;;:18;:34;;;;;;;28327:41;;-1:-1:-1;;28327:41:105;;;28384:43;;;;;28353:14;160:25:228;;148:2;133:18;;14:177;28384:43:105;;;;;;;;24671:3763;;;;24519:3915;;;;:::o;15847:1989::-;4671:7:138;;15965:32:105;;1325:1:106;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;-1:-1:-1;;;;;16061:19:105;;::::1;16042:16;16061:19:::0;;;:11:::1;:19;::::0;;;;;;;-1:-1:-1;;;;;;16090:32:105;::::1;::::0;;;16137:35;;16061:19;::::1;::::0;;;;16137:35:::1;::::0;::::1;16326:29;16357:32;16393:26;16412:6;16393:18;:26::i;:::-;16325:94;;;;16433:10;:17;16454:1;16433:22:::0;16429:75:::1;;16471:22;;;;;16429:75;16685:10;:17;-1:-1:-1::0;;;;;16671:32:105::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;16671:32:105::1;;16653:50;;16713:32;16748:49;16768:6;16776:8;16786:10;16748:19;:49::i;:::-;16713:84:::0;-1:-1:-1;16905:9:105::1;16900:897;16924:10;:17;16920:1;:21;16900:897;;;16998:18;::::0;;17014:1:::1;16998:18:::0;;;;;::::1;::::0;;;16962:33:::1;::::0;16998:18:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;17069:16:105::1;::::0;;17083:1:::1;17069:16:::0;;;;;::::1;::::0;;;16962:54;;-1:-1:-1;17030:36:105::1;::::0;17069:16;-1:-1:-1;17069:16:105::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;17139:16:105::1;::::0;;17153:1:::1;17139:16:::0;;;;;::::1;::::0;;;17030:55;;-1:-1:-1;17099:37:105::1;::::0;17139:16;-1:-1:-1;17139:16:105::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;17139:16:105::1;17099:56;;17189:10;17200:1;17189:13;;;;;;;;:::i;:::-;;;;;;;17169:14;17184:1;17169:17;;;;;;;;:::i;:::-;;;;;;:33;-1:-1:-1::0;;;;;17169:33:105::1;;;-1:-1:-1::0;;;;;17169:33:105::1;;;::::0;::::1;17241:15;17257:1;17241:18;;;;;;;;:::i;:::-;;;;;;;17216:19;17236:1;17216:22;;;;;;;;:::i;:::-;;;;;;:43;;;::::0;::::1;17299:15;17315:1;17299:18;;;;;;;;:::i;:::-;;;;;;;17273:20;17294:1;17273:23;;;;;;;;:::i;:::-;;;;;;:44;;;::::0;::::1;17510:276;17568:6;17602:8;17640:14;17697:19;17751:20;17510:31;:276::i;:::-;17489:15;17505:1;17489:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:297;-1:-1:-1;;;16943:3:105::1;;16900:897;;;;17807:22;;;;3111:1:138;15847:1989:105::0;;;;:::o;31282:857::-;-1:-1:-1;;;;;31477:26:105;;;31458:16;31477:26;;;:16;:26;;;;;:45;;;;;31532:59;;31574:7;;;31532:59;-1:-1:-1;;;;;31698:39:105;;;;;;:29;:39;;;;;;;;:45;;;;;;;;;;;31697:46;31689:68;;;;-1:-1:-1;;;31689:68:105;;;;;;;;;;;;-1:-1:-1;;;;;31767:39:105;;;;;;:29;:39;;;;;;;;:45;;;;;;;;:52;;-1:-1:-1;;31767:52:105;31815:4;31767:52;;;32022:16;;;31864:268;;31797:8;;31950:89;;31988:6;;31996:8;;31797;;31807:4;;31950:37;:89::i;:::-;32064:19;;32105:16;;;;31864:25;:268::i;31282:857::-;;;;;:::o;2466:176:134:-;2585:18;;2559:7;;2585:23;:50;;2617:18;;2585:50;;;438:4;2578:57;2466:176;-1:-1:-1;;2466:176:134:o;36888:264:105:-;36971:13;-1:-1:-1;;;;;37003:34:105;;1600:42:106;37003:34:105;:142;;37128:15;37003:142;;;37074:15;36996:149;36888:264;-1:-1:-1;;36888:264:105:o;6404:328:134:-;6559:7;6651:74;:14;6673:15;6690:16;6708;6651:21;:74::i;:::-;6634:91;;:14;:91;:::i;1841:620:137:-;1901:7;1984:17;1967:13;:34;:487;;-1:-1:-1;2330:19:137;;;;;;;;;;;-1:-1:-1;;;2330:19:137;;;;;2243:197;;602:80;2243:197;;;42933:25:228;2320:30:137;42974:18:228;;;42967:34;2373:13:137;43017:18:228;;;43010:34;2417:4:137;43060:18:228;;;;43053:60;;;;2243:197:137;;;;;;;;;;42905:19:228;;;;2243:197:137;;;2216:238;;;;;;1614:118::o;1967:487::-;-1:-1:-1;2098:25:137;;1841:620::o;2648:268:134:-;2776:7;2799:14;2817:1;2799:19;2795:58;;-1:-1:-1;2841:1:134;2834:8;;2795:58;2870:39;:16;2894:14;2870:23;:39::i;36298:475:105:-;-1:-1:-1;;;;;36416:34:105;;1600:42:106;36416:34:105;36412:355;;-1:-1:-1;;;;;36503:40:105;;;36466:34;36503:40;;;:30;:40;;;;;;;;:50;;;;;;;;;;;:59;;:57;:59::i;:::-;36466:96;-1:-1:-1;36576:180:105;36662:12;36700:41;36729:12;36466:96;36700:41;:::i;:::-;-1:-1:-1;;;;;36576:40:105;;;;;;;:30;:40;;;;;;;;:50;;;;;;;;;;:180;:55;:180::i;5919:123:86:-;5989:4;6012:23;6017:3;6029:5;6012:4;:23::i;1613:110:134:-;1674:7;1700:16;:1;438:4;1714:1;1700:8;:16::i;3636:2076::-;3936:17;3957:1;3936:22;3932:129;;3995:35;438:4;4015:14;3995:19;:35::i;:::-;3974:56;;4044:7;;3932:129;5246:20;;;;;;;;;;;;;5222:21;;5246:55;;5267:17;5286:14;5246:20;:55::i;:::-;5222:79;-1:-1:-1;5367:17:134;5387:27;5403:11;5222:79;5387:27;:::i;:::-;5367:47;-1:-1:-1;5518:31:134;5552:98;5635:14;5552:62;5582:31;5602:11;5582:17;:31;:::i;:::-;5552:9;;:29;:62::i;:98::-;5661:44;;-1:-1:-1;;;3636:2076:134;;;;:::o;5570:109:86:-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;1667:4213:82:-;1749:14;;;-1:-1:-1;;2286:1:82;2283;2276:20;2329:1;2326;2322:9;2313:18;;2384:5;2380:2;2377:13;2369:5;2365:2;2361:14;2357:34;2348:43;;;2486:5;2495:1;2486:10;2482:368;;2824:11;2816:5;:19;;;;;:::i;:::-;;2809:26;;;;;;2482:368;2974:5;2960:11;:19;2952:53;;;;-1:-1:-1;;;2952:53:82;;43458:2:228;2952:53:82;;;43440:21:228;43497:2;43477:18;;;43470:30;-1:-1:-1;;;43516:18:228;;;43509:51;43577:18;;2952:53:82;43256:345:228;2952:53:82;3261:17;3396:11;3393:1;3390;3383:25;4774:1;3944;3929:12;;:16;;3914:32;;4049:22;;;;4755:1;:15;;4754:21;;5007;;;5003:25;;4992:36;5076:21;;;5072:25;;5061:36;5146:21;;;5142:25;;5131:36;5216:21;;;5212:25;;5201:36;5286:21;;;5282:25;;5271:36;5357:21;;;5353:25;;;5342:36;;;3899:12;4294;;;4290:23;;;4286:31;;;3510:20;;;3499:32;;;4406:12;;;;3557:21;;4147:16;;;;4397:21;;;;5821:15;;;-1:-1:-1;;;;1667:4213:82:o;3312:155:135:-;3398:7;3432:27;3440:4;3398:7;3432;:27::i;:::-;-1:-1:-1;;;;;3424:36:135;;3312:155;-1:-1:-1;;3312:155:135:o;2771:159::-;2860:7;2886:37;2899:4;2916:3;2860:7;2886:12;:37::i;:::-;-1:-1:-1;;;;;2879:44:135;;2771:159;-1:-1:-1;;;2771:159:135:o;3393:237:134:-;3542:7;3568:55;3588:34;3607:15;3588:16;:34;:::i;:::-;3568:12;;-1:-1:-1;;;;;3568:55:134;:19;:55::i;6210:129:86:-;6283:4;6306:26;6314:3;6326:5;6306:7;:26::i;2810:330:137:-;3005:15;2995:6;:25;;2987:54;;;;-1:-1:-1;;;2987:54:137;;;;;;;;;;;;3059:53;-1:-1:-1;;;;;3059:26:137;;3086:14;3102:9;3059:26;:53::i;:::-;3051:82;;;;-1:-1:-1;;;3051:82:137;;;;;;;;;;;6012:299:82;6113:7;6132:14;6149:25;6156:1;6159;6162:11;6149:6;:25::i;:::-;6132:42;-1:-1:-1;6200:11:82;6188:8;:23;;;;;;;;:::i;:::-;;:56;;;;;6243:1;6228:11;6215:25;;;;;:::i;:::-;6225:1;6222;6215:25;:29;6188:56;6184:98;;;6260:11;6270:1;6260:11;;:::i;2077:145:135:-;2170:45;2178:4;2195:3;2208:5;2170:7;:45::i;2214:404:86:-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:86;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:86;2589:12;;5358:230:135;5482:16;;5449:7;;5515:8;;:66;;5541:33;5555:9;5566:7;5572:1;5566:3;:7;:::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;;6703:28;;6514:233;5541:33;:40;;;;-1:-1:-1;;;;;5541:40:135;5515:66;;;-1:-1:-1;5526:12:135;;5508:73;-1:-1:-1;;5358:230:135:o;4889:343::-;5060:16;;5027:7;;;5100:42;5060:9;5130:3;5027:7;5060:16;5100:18;:42::i;:::-;5086:56;-1:-1:-1;5159:8:135;;:66;;5185:33;5199:9;5210:7;5216:1;5210:3;:7;:::i;5185:33::-;:40;;;;-1:-1:-1;;;;;5185:40:135;5159:66;;;-1:-1:-1;5170:12:135;;5152:73;-1:-1:-1;;;;4889:343:135:o;2786:1388:86:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:86;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;1047:399:44;1153:4;1170:17;1189:35;1228:44;1256:4;1262:9;1228:27;:44::i;:::-;1169:103;;-1:-1:-1;1169:103:44;-1:-1:-1;1311:37:44;1302:5;:46;;;;;;;;:::i;:::-;;:69;;;;;1365:6;-1:-1:-1;;;;;1352:19:44;:9;-1:-1:-1;;;;;1352:19:44;;1302:69;1301:138;;;;1388:51;1415:6;1423:4;1429:9;1388:26;:51::i;4054:667:135:-;4155:11;;4181:7;;4177:422;;4278:20;4301:28;4315:4;4321:7;4327:1;4321:3;:7;:::i;4301:28::-;4278:51;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4278:51:135;;;;;;;-1:-1:-1;4351:16:135;;;-1:-1:-1;4351:16:135;4343:52;;;;-1:-1:-1;;;4343:52:135;;;;;;;;;;;;4471:9;;:16;;;;;;;4467:122;;4545:5;4507:28;4521:4;4527:7;4533:1;4527:3;:7;:::i;4507:28::-;:43;;-1:-1:-1;;;;;4507:43:135;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4054:667:135:o;4467:122::-;4190:409;4177:422;-1:-1:-1;4677:36:135;;;;;;;;;;;;;;;-1:-1:-1;;;;;4677:36:135;;;;;;;;;;4667:47;;;;;;;-1:-1:-1;4667:47:135;;;;;;;;;;;;;;;;;;;;;;4054:667::o;5932:439::-;6084:7;6103:241;6116:4;6110:3;:10;6103:241;;;6136:11;6150:34;6174:3;6179:4;6150:23;:34::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;6136:48;;-1:-1:-1;6202:35:135;;;;6703:28;;6202:29;;;:35;6198:136;;;6264:3;6257:10;;6198:136;;;6312:7;:3;6318:1;6312:7;:::i;:::-;6306:13;;6198:136;6122:222;6103:241;;2167:730:42;2248:7;2257:12;2285:9;:16;2305:2;2285:22;2281:610;;2621:4;2606:20;;2600:27;2670:4;2655:20;;2649:27;2727:4;2712:20;;2706:27;2323:9;2698:36;2768:25;2779:4;2698:36;2600:27;2649;2768:10;:25::i;:::-;2761:32;;;;;;;;;2281:610;-1:-1:-1;2840:1:42;;-1:-1:-1;2844:35:42;2824:56;;1852:495:44;1995:4;2012:12;2026:19;2049:6;-1:-1:-1;;;;;2049:17:44;2103:45;;;2150:4;2156:9;2080:86;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2080:86:44;;;;;;;;;;;;;;-1:-1:-1;;;;;2080:86:44;-1:-1:-1;;;;;;2080:86:44;;;;;;;;;;2049:127;;;;2080:86;2049:127;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:165;;;;2194:7;:42;;;;;2234:2;2217:6;:13;:19;;2194:42;:145;;;;-1:-1:-1;2252:29:44;;-1:-1:-1;;;2293:45:44;2252:29;;;;;;;;;;;;:::i;:::-;:87;;1852:495;-1:-1:-1;;;;;;1852:495:44:o;816:153:45:-;878:7;951:11;961:1;952:5;;;951:11;:::i;:::-;941:21;;942:5;;;941:21;:::i;5031:1456:42:-;5119:7;;6043:66;6030:79;;6026:161;;;-1:-1:-1;6141:1:42;;-1:-1:-1;6145:30:42;6125:51;;6026:161;6298:24;;;6281:14;6298:24;;;;;;;;;45505:25:228;;;45578:4;45566:17;;45546:18;;;45539:45;;;;45600:18;;;45593:34;;;45643:18;;;45636:34;;;6298:24:42;;45477:19:228;;6298:24:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6298:24:42;;-1:-1:-1;;6298:24:42;;;-1:-1:-1;;;;;;;6336:20:42;;6332:101;;6388:1;6392:29;6372:50;;;;;;;6332:101;6451:6;-1:-1:-1;6459:20:42;;-1:-1:-1;5031:1456:42;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:131:228;-1:-1:-1;;;;;271:31:228;;261:42;;251:70;;317:1;314;307:12;332:134;400:20;;429:31;400:20;429:31;:::i;:::-;332:134;;;:::o;471:771::-;566:6;574;582;590;598;651:3;639:9;630:7;626:23;622:33;619:53;;;668:1;665;658:12;619:53;707:9;694:23;726:31;751:5;726:31;:::i;:::-;776:5;-1:-1:-1;833:2:228;818:18;;805:32;846:33;805:32;846:33;:::i;:::-;898:7;-1:-1:-1;957:2:228;942:18;;929:32;970:33;929:32;970:33;:::i;:::-;471:771;;;;-1:-1:-1;1022:7:228;;1102:2;1087:18;;1074:32;;-1:-1:-1;1205:3:228;1190:19;1177:33;;471:771;-1:-1:-1;;471:771:228:o;1247:398::-;1341:8;1351:6;1405:3;1398:4;1390:6;1386:17;1382:27;1372:55;;1423:1;1420;1413:12;1372:55;-1:-1:-1;1446:20:228;;-1:-1:-1;;;;;1478:30:228;;1475:50;;;1521:1;1518;1511:12;1475:50;1558:4;1550:6;1546:17;1534:29;;1618:3;1611:4;1601:6;1598:1;1594:14;1586:6;1582:27;1578:38;1575:47;1572:67;;;1635:1;1632;1625:12;1650:511;1779:6;1787;1840:2;1828:9;1819:7;1815:23;1811:32;1808:52;;;1856:1;1853;1846:12;1808:52;1896:9;1883:23;-1:-1:-1;;;;;1921:6:228;1918:30;1915:50;;;1961:1;1958;1951:12;1915:50;2000:101;2093:7;2084:6;2073:9;2069:22;2000:101;:::i;:::-;2120:8;;1974:127;;-1:-1:-1;1650:511:228;-1:-1:-1;;;;1650:511:228:o;2166:611::-;2356:2;2368:21;;;2438:13;;2341:18;;;2460:22;;;2308:4;;2539:15;;;2513:2;2498:18;;;2308:4;2582:169;2596:6;2593:1;2590:13;2582:169;;;2657:13;;2645:26;;2700:2;2726:15;;;;2691:12;;;;2618:1;2611:9;2582:169;;2782:226;2841:6;2894:2;2882:9;2873:7;2869:23;2865:32;2862:52;;;2910:1;2907;2900:12;2862:52;-1:-1:-1;2955:23:228;;2782:226;-1:-1:-1;2782:226:228:o;3013:127::-;3074:10;3069:3;3065:20;3062:1;3055:31;3105:4;3102:1;3095:15;3129:4;3126:1;3119:15;3145:253;3217:2;3211:9;3259:4;3247:17;;-1:-1:-1;;;;;3279:34:228;;3315:22;;;3276:62;3273:88;;;3341:18;;:::i;:::-;3377:2;3370:22;3145:253;:::o;3403:257::-;3475:4;3469:11;;;3507:17;;-1:-1:-1;;;;;3539:34:228;;3575:22;;;3536:62;3533:88;;;3601:18;;:::i;3665:275::-;3736:2;3730:9;3801:2;3782:13;;-1:-1:-1;;3778:27:228;3766:40;;-1:-1:-1;;;;;3821:34:228;;3857:22;;;3818:62;3815:88;;;3883:18;;:::i;:::-;3919:2;3912:22;3665:275;;-1:-1:-1;3665:275:228:o;3945:194::-;4016:4;-1:-1:-1;;;;;4041:6:228;4038:30;4035:56;;;4071:18;;:::i;:::-;-1:-1:-1;4116:1:228;4112:14;4128:4;4108:25;;3945:194::o;4144:766::-;4209:5;4262:3;4255:4;4247:6;4243:17;4239:27;4229:55;;4280:1;4277;4270:12;4229:55;4320:6;4307:20;4347:75;4363:58;4414:6;4363:58;:::i;:::-;4347:75;:::i;:::-;4446:3;4470:6;4465:3;4458:19;4502:4;4497:3;4493:14;4486:21;;4563:4;4553:6;4550:1;4546:14;4538:6;4534:27;4530:38;4516:52;;4591:3;4583:6;4580:15;4577:35;;;4608:1;4605;4598:12;4577:35;4644:4;4636:6;4632:17;4658:221;4674:6;4669:3;4666:15;4658:221;;;4756:3;4743:17;4773:31;4798:5;4773:31;:::i;:::-;4817:18;;4864:4;4855:14;;;;4691;4658:221;;;-1:-1:-1;4897:7:228;4144:766;-1:-1:-1;;;;;4144:766:228:o;4915:734::-;4969:5;5022:3;5015:4;5007:6;5003:17;4999:27;4989:55;;5040:1;5037;5030:12;4989:55;5080:6;5067:20;5107:75;5123:58;5174:6;5123:58;:::i;5107:75::-;5206:3;5230:6;5225:3;5218:19;5262:4;5257:3;5253:14;5246:21;;5323:4;5313:6;5310:1;5306:14;5298:6;5294:27;5290:38;5276:52;;5351:3;5343:6;5340:15;5337:35;;;5368:1;5365;5358:12;5337:35;5404:4;5396:6;5392:17;5418:200;5434:6;5429:3;5426:15;5418:200;;;5526:17;;5556:18;;5603:4;5594:14;;;;5451;5418:200;;5654:755;5800:6;5808;5816;5869:2;5857:9;5848:7;5844:23;5840:32;5837:52;;;5885:1;5882;5875:12;5837:52;5924:9;5911:23;5943:31;5968:5;5943:31;:::i;:::-;5993:5;-1:-1:-1;6049:2:228;6034:18;;6021:32;-1:-1:-1;;;;;6065:30:228;;6062:50;;;6108:1;6105;6098:12;6062:50;6131:72;6195:7;6186:6;6175:9;6171:22;6131:72;:::i;:::-;6121:82;;;6256:2;6245:9;6241:18;6228:32;-1:-1:-1;;;;;6275:8:228;6272:32;6269:52;;;6317:1;6314;6307:12;6269:52;6340:63;6395:7;6384:8;6373:9;6369:24;6340:63;:::i;:::-;6330:73;;;5654:755;;;;;:::o;6414:420::-;6467:3;6505:5;6499:12;6532:6;6527:3;6520:19;6564:4;6559:3;6555:14;6548:21;;6603:4;6596:5;6592:16;6626:1;6636:173;6650:6;6647:1;6644:13;6636:173;;;6711:13;;6699:26;;6754:4;6745:14;;;;6782:17;;;;6672:1;6665:9;6636:173;;;-1:-1:-1;6825:3:228;;6414:420;-1:-1:-1;;;;6414:420:228:o;6839:261::-;7018:2;7007:9;7000:21;6981:4;7038:56;7090:2;7079:9;7075:18;7067:6;7038:56;:::i;7105:163::-;7172:20;;7232:10;7221:22;;7211:33;;7201:61;;7258:1;7255;7248:12;7273:348;7325:8;7335:6;7389:3;7382:4;7374:6;7370:17;7366:27;7356:55;;7407:1;7404;7397:12;7356:55;-1:-1:-1;7430:20:228;;-1:-1:-1;;;;;7462:30:228;;7459:50;;;7505:1;7502;7495:12;7459:50;7542:4;7534:6;7530:17;7518:29;;7594:3;7587:4;7578:6;7570;7566:19;7562:30;7559:39;7556:59;;;7611:1;7608;7601:12;7626:618;7714:6;7722;7730;7738;7791:2;7779:9;7770:7;7766:23;7762:32;7759:52;;;7807:1;7804;7797:12;7759:52;7846:9;7833:23;7865:31;7890:5;7865:31;:::i;:::-;7915:5;-1:-1:-1;7939:37:228;7972:2;7957:18;;7939:37;:::i;:::-;7929:47;;8027:2;8016:9;8012:18;7999:32;-1:-1:-1;;;;;8046:6:228;8043:30;8040:50;;;8086:1;8083;8076:12;8040:50;8125:59;8176:7;8167:6;8156:9;8152:22;8125:59;:::i;:::-;7626:618;;;;-1:-1:-1;8203:8:228;-1:-1:-1;;;;7626:618:228:o;8483:648::-;8588:6;8596;8604;8612;8665:3;8653:9;8644:7;8640:23;8636:33;8633:53;;;8682:1;8679;8672:12;8633:53;8721:9;8708:23;8740:31;8765:5;8740:31;:::i;:::-;8790:5;-1:-1:-1;8847:2:228;8832:18;;8819:32;8860:33;8819:32;8860:33;:::i;:::-;8483:648;;8912:7;;-1:-1:-1;;;;8992:2:228;8977:18;;8964:32;;9095:2;9080:18;9067:32;;8483:648::o;9136:247::-;9195:6;9248:2;9236:9;9227:7;9223:23;9219:32;9216:52;;;9264:1;9261;9254:12;9216:52;9303:9;9290:23;9322:31;9347:5;9322:31;:::i;10261:388::-;10329:6;10337;10390:2;10378:9;10369:7;10365:23;10361:32;10358:52;;;10406:1;10403;10396:12;10358:52;10445:9;10432:23;10464:31;10489:5;10464:31;:::i;:::-;10514:5;-1:-1:-1;10571:2:228;10556:18;;10543:32;10584:33;10543:32;10584:33;:::i;:::-;10636:7;10626:17;;;10261:388;;;;;:::o;10654:986::-;10711:5;10759:4;10747:9;10742:3;10738:19;10734:30;10731:50;;;10777:1;10774;10767:12;10731:50;10799:22;;:::i;:::-;10790:31;;10844:29;10863:9;10844:29;:::i;:::-;10837:5;10830:44;10906:38;10940:2;10929:9;10925:18;10906:38;:::i;:::-;10901:2;10894:5;10890:14;10883:62;10977:38;11011:2;11000:9;10996:18;10977:38;:::i;:::-;10972:2;10961:14;;10954:62;11089:2;11074:18;;;11061:32;11109:14;;;11102:31;11166:38;11199:3;11184:19;;11166:38;:::i;:::-;11160:3;11153:5;11149:15;11142:63;11256:3;11245:9;11241:19;11228:33;-1:-1:-1;;;;;11276:6:228;11273:30;11270:50;;;11316:1;11313;11306:12;11270:50;11353:68;11417:3;11408:6;11397:9;11393:22;11353:68;:::i;:::-;11347:3;11340:5;11336:15;11329:93;;11475:3;11464:9;11460:19;11447:33;-1:-1:-1;;;;;11495:8:228;11492:32;11489:52;;;11537:1;11534;11527:12;11489:52;11574:59;11629:3;11618:8;11607:9;11603:24;11574:59;:::i;:::-;11568:3;11561:5;11557:15;11550:84;;10654:986;;;;:::o;11645:352::-;11733:6;11786:2;11774:9;11765:7;11761:23;11757:32;11754:52;;;11802:1;11799;11792:12;11754:52;11842:9;11829:23;-1:-1:-1;;;;;11867:6:228;11864:30;11861:50;;;11907:1;11904;11897:12;11861:50;11930:61;11983:7;11974:6;11963:9;11959:22;11930:61;:::i;12002:269::-;12059:6;12112:2;12100:9;12091:7;12087:23;12083:32;12080:52;;;12128:1;12125;12118:12;12080:52;12167:9;12154:23;12217:4;12210:5;12206:16;12199:5;12196:27;12186:55;;12237:1;12234;12227:12;12557:551;12621:3;12659:5;12653:12;12686:6;12681:3;12674:19;12718:4;12713:3;12709:14;12702:21;;12757:4;12750:5;12746:16;12780:1;12790:293;12804:6;12801:1;12798:13;12790:293;;;12863:13;;-1:-1:-1;;;;;12933:28:228;12921:41;;12998:4;12989:14;;;;13056:17;;;;12958:1;12819:9;12790:293;;13113:806;13200:12;;-1:-1:-1;;;;;13196:38:228;;;13184:51;;13288:4;13277:16;;;13271:23;13267:49;;13251:14;;;13244:73;13370:4;13359:16;;;13353:23;13349:49;;;13333:14;;;13326:73;13448:4;13437:16;;;13431:23;13415:14;;;13408:47;13501:4;13490:16;;;13484:23;-1:-1:-1;;13516:47:228;;13548:14;;13484:23;12534:10;12523:22;12511:35;;12458:94;13516:47;;13611:4;13604:5;13600:16;13594:23;13649:4;13642;13637:3;13633:14;13626:28;13675:71;13740:4;13735:3;13731:14;13715;13675:71;:::i;:::-;13663:83;;13794:4;13787:5;13783:16;13777:23;13842:3;13836:4;13832:14;13825:4;13820:3;13816:14;13809:38;13863:50;13908:4;13892:14;13863:50;:::i;13924:601::-;13987:3;14018;14050:5;14044:12;14077:6;14072:3;14065:19;14109:4;14104:3;14100:14;14093:21;;14167:4;14157:6;14154:1;14150:14;14143:5;14139:26;14135:37;14206:4;14199:5;14195:16;14229:1;14239:260;14253:6;14250:1;14247:13;14239:260;;;14340:2;14336:7;14328:5;14322:4;14318:16;14314:30;14309:3;14302:43;14366:49;14410:4;14401:6;14395:13;14366:49;:::i;:::-;14450:4;14475:14;;;;14358:57;;-1:-1:-1;14438:17:228;;;;;14275:1;14268:9;14239:260;;14530:1074;14858:4;14906:2;14895:9;14891:18;14936:2;14925:9;14918:21;14959:6;14994;14988:13;15025:6;15017;15010:22;15063:2;15052:9;15048:18;15041:25;;15125:2;15115:6;15112:1;15108:14;15097:9;15093:30;15089:39;15075:53;;15163:4;15155:6;15151:17;15186:1;15196:270;15210:6;15207:1;15204:13;15196:270;;;15303:2;15299:7;15287:9;15279:6;15275:22;15271:36;15266:3;15259:49;15331:51;15375:6;15366;15360:13;15331:51;:::i;:::-;15321:61;-1:-1:-1;15417:4:228;15442:14;;;;15405:17;;;;;15232:1;15225:9;15196:270;;;15200:3;;;;15516:9;15508:6;15504:22;15497:4;15486:9;15482:20;15475:52;15544:54;15591:6;15583;15544:54;:::i;15609:129::-;-1:-1:-1;;;;;15687:5:228;15683:30;15676:5;15673:41;15663:69;;15728:1;15725;15718:12;15743:506;15819:6;15827;15835;15888:2;15876:9;15867:7;15863:23;15859:32;15856:52;;;15904:1;15901;15894:12;15856:52;15943:9;15930:23;15962:31;15987:5;15962:31;:::i;:::-;16012:5;-1:-1:-1;16090:2:228;16075:18;;16062:32;;-1:-1:-1;16172:2:228;16157:18;;16144:32;16185;16144;16185;:::i;:::-;16236:7;16226:17;;;15743:506;;;;;:::o;16254:495::-;16530:2;16519:9;16512:21;16493:4;16556:67;16619:2;16608:9;16604:18;16596:6;16556:67;:::i;:::-;16671:9;16663:6;16659:22;16654:2;16643:9;16639:18;16632:50;16699:44;16736:6;16728;16699:44;:::i;17166:546::-;17246:6;17254;17262;17315:2;17303:9;17294:7;17290:23;17286:32;17283:52;;;17331:1;17328;17321:12;17283:52;17370:9;17357:23;17389:31;17414:5;17389:31;:::i;:::-;17439:5;-1:-1:-1;17495:2:228;17480:18;;17467:32;-1:-1:-1;;;;;17511:30:228;;17508:50;;;17554:1;17551;17544:12;17508:50;17593:59;17644:7;17635:6;17624:9;17620:22;17593:59;:::i;:::-;17166:546;;17671:8;;-1:-1:-1;17567:85:228;;-1:-1:-1;;;;17166:546:228:o;17950:513::-;18062:6;18070;18123:2;18111:9;18102:7;18098:23;18094:32;18091:52;;;18139:1;18136;18129:12;18091:52;18178:9;18165:23;18197:31;18222:5;18197:31;:::i;:::-;18247:5;-1:-1:-1;18303:2:228;18288:18;;18275:32;-1:-1:-1;;;;;18319:30:228;;18316:50;;;18362:1;18359;18352:12;18316:50;18385:72;18449:7;18440:6;18429:9;18425:22;18385:72;:::i;:::-;18375:82;;;17950:513;;;;;:::o;18695:1263::-;18924:6;18932;18940;18948;18956;18964;19017:2;19005:9;18996:7;18992:23;18988:32;18985:52;;;19033:1;19030;19023:12;18985:52;19073:9;19060:23;-1:-1:-1;;;;;19098:6:228;19095:30;19092:50;;;19138:1;19135;19128:12;19092:50;19177:101;19270:7;19261:6;19250:9;19246:22;19177:101;:::i;:::-;19297:8;;-1:-1:-1;19151:127:228;-1:-1:-1;;19385:2:228;19370:18;;19357:32;-1:-1:-1;;;;;19401:32:228;;19398:52;;;19446:1;19443;19436:12;19398:52;19485:103;19580:7;19569:8;19558:9;19554:24;19485:103;:::i;:::-;19607:8;;-1:-1:-1;19459:129:228;-1:-1:-1;;19695:2:228;19680:18;;19667:32;-1:-1:-1;;;;;19711:32:228;;19708:52;;;19756:1;19753;19746:12;19708:52;19795:103;19890:7;19879:8;19868:9;19864:24;19795:103;:::i;:::-;18695:1263;;;;-1:-1:-1;18695:1263:228;;-1:-1:-1;18695:1263:228;;19917:8;;18695:1263;-1:-1:-1;;;18695:1263:228:o;20755:1436::-;20870:6;20878;20886;20939:2;20927:9;20918:7;20914:23;20910:32;20907:52;;;20955:1;20952;20945:12;20907:52;20994:9;20981:23;21013:31;21038:5;21013:31;:::i;:::-;21063:5;-1:-1:-1;21119:2:228;21104:18;;21091:32;-1:-1:-1;;;;;21135:30:228;;21132:50;;;21178:1;21175;21168:12;21132:50;21201:22;;21257:4;21239:16;;;21235:27;21232:47;;;21275:1;21272;21265:12;21232:47;21303:22;;:::i;:::-;21363:2;21350:16;-1:-1:-1;;;;;21381:8:228;21378:32;21375:52;;;21423:1;21420;21413:12;21375:52;21446:17;;21494:4;21486:13;;21482:27;-1:-1:-1;21472:55:228;;21523:1;21520;21513:12;21472:55;21563:2;21550:16;-1:-1:-1;;;;;21581:6:228;21578:30;21575:56;;;21611:18;;:::i;:::-;21653:57;21700:2;21677:17;;-1:-1:-1;;21673:31:228;21706:2;21669:40;21653:57;:::i;:::-;21733:6;21726:5;21719:21;21781:7;21776:2;21767:6;21763:2;21759:15;21755:24;21752:37;21749:57;;;21802:1;21799;21792:12;21749:57;21857:6;21852:2;21848;21844:11;21839:2;21832:5;21828:14;21815:49;21909:1;21904:2;21884:18;;;21880:27;;21873:38;21920:22;;22000:11;;;21987:25;22028:16;;;22021:33;;;;20755:1436;;21920:22;;-1:-1:-1;;;;22153:4:228;22138:20;;;;22125:34;;20755:1436::o;22196:367::-;22264:6;22272;22325:2;22313:9;22304:7;22300:23;22296:32;22293:52;;;22341:1;22338;22331:12;22293:52;22380:9;22367:23;22399:31;22424:5;22399:31;:::i;:::-;22449:5;22527:2;22512:18;;;;22499:32;;-1:-1:-1;;;22196:367:228:o;22765:465::-;23022:2;23011:9;23004:21;22985:4;23048:56;23100:2;23089:9;23085:18;23077:6;23048:56;:::i;23843:118::-;23929:5;23922:13;23915:21;23908:5;23905:32;23895:60;;23951:1;23948;23941:12;23966:898;24114:6;24122;24130;24138;24191:2;24179:9;24170:7;24166:23;24162:32;24159:52;;;24207:1;24204;24197:12;24159:52;24247:9;24234:23;-1:-1:-1;;;;;24272:6:228;24269:30;24266:50;;;24312:1;24309;24302:12;24266:50;24335:22;;24391:3;24373:16;;;24369:26;24366:46;;;24408:1;24405;24398:12;24366:46;24431:2;-1:-1:-1;24486:2:228;24471:18;;24458:32;-1:-1:-1;;;;;24502:32:228;;24499:52;;;24547:1;24544;24537:12;24499:52;24586:103;24681:7;24670:8;24659:9;24655:24;24586:103;:::i;:::-;24708:8;;-1:-1:-1;24560:129:228;-1:-1:-1;;24793:2:228;24778:18;;24765:32;24806:28;24765:32;24806:28;:::i;:::-;23966:898;;;;-1:-1:-1;23966:898:228;;-1:-1:-1;;23966:898:228:o;24869:686::-;24972:6;24980;24988;24996;25049:3;25037:9;25028:7;25024:23;25020:33;25017:53;;;25066:1;25063;25056:12;25017:53;25105:9;25092:23;25124:31;25149:5;25124:31;:::i;:::-;25174:5;-1:-1:-1;25231:2:228;25216:18;;25203:32;25244:33;25203:32;25244:33;:::i;:::-;25296:7;-1:-1:-1;25355:2:228;25340:18;;25327:32;25368;25327;25368;:::i;:::-;25419:7;-1:-1:-1;25478:2:228;25463:18;;25450:32;25491;25450;25491;:::i;25560:1256::-;25697:6;25705;25758:2;25746:9;25737:7;25733:23;25729:32;25726:52;;;25774:1;25771;25764:12;25726:52;25814:9;25801:23;-1:-1:-1;;;;;25839:6:228;25836:30;25833:50;;;25879:1;25876;25869:12;25833:50;25902:22;;25955:4;25947:13;;25943:27;-1:-1:-1;25933:55:228;;25984:1;25981;25974:12;25933:55;26024:2;26011:16;26047:75;26063:58;26114:6;26063:58;:::i;26047:75::-;26144:3;26168:6;26163:3;26156:19;26200:4;26195:3;26191:14;26184:21;;26257:4;26247:6;26244:1;26240:14;26236:2;26232:23;26228:34;26214:48;;26285:7;26277:6;26274:19;26271:39;;;26306:1;26303;26296:12;26271:39;26338:4;26334:2;26330:13;26319:24;;26352:221;26368:6;26363:3;26360:15;26352:221;;;26450:3;26437:17;26467:31;26492:5;26467:31;:::i;:::-;26511:18;;26558:4;26385:14;;;;26549;;;;26352:221;;;26592:5;-1:-1:-1;;;;26650:4:228;26635:20;;26622:34;-1:-1:-1;;;;;26668:32:228;;26665:52;;;26713:1;26710;26703:12;26821:321;27050:2;27039:9;27032:21;27013:4;27070:66;27132:2;27121:9;27117:18;27109:6;27070:66;:::i;27765:127::-;27826:10;27821:3;27817:20;27814:1;27807:31;27857:4;27854:1;27847:15;27881:4;27878:1;27871:15;27897:340;28006:4;28064:11;28051:25;28158:2;28154:7;28143:8;28127:14;28123:29;28119:43;28099:18;28095:68;28085:96;;28177:1;28174;28167:12;28085:96;28198:33;;;;;27897:340;-1:-1:-1;;27897:340:228:o;28242:545::-;28335:4;28341:6;28401:11;28388:25;28495:2;28491:7;28480:8;28464:14;28460:29;28456:43;28436:18;28432:68;28422:96;;28514:1;28511;28504:12;28422:96;28541:33;;28593:20;;;-1:-1:-1;;;;;;28625:30:228;;28622:50;;;28668:1;28665;28658:12;28622:50;28701:4;28689:17;;-1:-1:-1;28752:1:228;28748:14;;;28732;28728:35;28718:46;;28715:66;;;28777:1;28774;28767:12;29361:245;29428:6;29481:2;29469:9;29460:7;29456:23;29452:32;29449:52;;;29497:1;29494;29487:12;29449:52;29529:9;29523:16;29548:28;29570:5;29548:28;:::i;29905:390::-;30064:2;30053:9;30046:21;30103:6;30098:2;30087:9;30083:18;30076:34;30160:6;30152;30147:2;30136:9;30132:18;30119:48;30216:1;30187:22;;;30211:2;30183:31;;;30176:42;;;;30279:2;30258:15;;;-1:-1:-1;;30254:29:228;30239:45;30235:54;;29905:390;-1:-1:-1;29905:390:228:o;30624:249::-;30693:6;30746:2;30734:9;30725:7;30721:23;30717:32;30714:52;;;30762:1;30759;30752:12;30714:52;30794:9;30788:16;30813:30;30837:5;30813:30;:::i;30878:269::-;31065:2;31054:9;31047:21;31028:4;31085:56;31137:2;31126:9;31122:18;31114:6;31085:56;:::i;31152:127::-;31213:10;31208:3;31204:20;31201:1;31194:31;31244:4;31241:1;31234:15;31268:4;31265:1;31258:15;31284:167;31379:10;31352:18;;;31372;;;31348:43;;31403:19;;31400:45;;;31425:18;;:::i;31456:731::-;31521:5;31574:3;31567:4;31559:6;31555:17;31551:27;31541:55;;31592:1;31589;31582:12;31541:55;31625:6;31619:13;31652:75;31668:58;31719:6;31668:58;:::i;31652:75::-;31751:3;31775:6;31770:3;31763:19;31807:4;31802:3;31798:14;31791:21;;31868:4;31858:6;31855:1;31851:14;31843:6;31839:27;31835:38;31821:52;;31896:3;31888:6;31885:15;31882:35;;;31913:1;31910;31903:12;31882:35;31949:4;31941:6;31937:17;31963:193;31979:6;31974:3;31971:15;31963:193;;;32071:10;;32094:18;;32141:4;32132:14;;;;31996;31963:193;;32192:1239;32340:6;32348;32401:2;32389:9;32380:7;32376:23;32372:32;32369:52;;;32417:1;32414;32407:12;32369:52;32450:9;32444:16;-1:-1:-1;;;;;32475:6:228;32472:30;32469:50;;;32515:1;32512;32505:12;32469:50;32538:22;;32591:4;32583:13;;32579:27;-1:-1:-1;32569:55:228;;32620:1;32617;32610:12;32569:55;32653:2;32647:9;32676:75;32692:58;32743:6;32692:58;:::i;32676:75::-;32773:3;32797:6;32792:3;32785:19;32829:4;32824:3;32820:14;32813:21;;32886:4;32876:6;32873:1;32869:14;32865:2;32861:23;32857:34;32843:48;;32914:7;32906:6;32903:19;32900:39;;;32935:1;32932;32925:12;32900:39;32967:4;32963:2;32959:13;32948:24;;32981:214;32997:6;32992:3;32989:15;32981:214;;;33072:3;33066:10;33089:31;33114:5;33089:31;:::i;:::-;33133:18;;33180:4;33014:14;;;;33171;;;;32981:214;;;33214:5;33204:15;;;;;;33265:4;33254:9;33250:20;33244:27;-1:-1:-1;;;;;33286:8:228;33283:32;33280:52;;;33328:1;33325;33318:12;33280:52;33351:74;33417:7;33406:8;33395:9;33391:24;33351:74;:::i;33436:230::-;33506:6;33559:2;33547:9;33538:7;33534:23;33530:32;33527:52;;;33575:1;33572;33565:12;33527:52;-1:-1:-1;33620:16:228;;33436:230;-1:-1:-1;33436:230:228:o;33671:125::-;33736:9;;;33757:10;;;33754:36;;;33770:18;;:::i;33801:388::-;-1:-1:-1;;;;;34027:32:228;;34009:51;;34096:2;34091;34076:18;;34069:30;;;-1:-1:-1;;34116:67:228;;34164:18;;34156:6;34116:67;:::i;34194:960::-;34288:6;34341:2;34329:9;34320:7;34316:23;34312:32;34309:52;;;34357:1;34354;34347:12;34309:52;34390:9;34384:16;-1:-1:-1;;;;;34415:6:228;34412:30;34409:50;;;34455:1;34452;34445:12;34409:50;34478:22;;34531:4;34523:13;;34519:27;-1:-1:-1;34509:55:228;;34560:1;34557;34550:12;34509:55;34593:2;34587:9;34616:75;34632:58;34683:6;34632:58;:::i;34616:75::-;34713:3;34737:6;34732:3;34725:19;34769:2;34764:3;34760:12;34753:19;;34824:2;34814:6;34811:1;34807:14;34803:2;34799:23;34795:32;34781:46;;34850:7;34842:6;34839:19;34836:39;;;34871:1;34868;34861:12;34836:39;34903:2;34899;34895:11;34884:22;;34915:209;34931:6;34926:3;34923:15;34915:209;;;35004:3;34998:10;35021:30;35045:5;35021:30;:::i;:::-;35064:18;;35111:2;34948:12;;;;35102;;;;34915:209;;35159:329;35256:4;35314:11;35301:25;35408:3;35404:8;35393;35377:14;35373:29;35369:44;35349:18;35345:69;35335:97;;35428:1;35425;35418:12;35493:204;35603:9;35640:51;35676:14;35669:5;35640:51;:::i;36268:241::-;36324:6;36377:2;36365:9;36356:7;36352:23;36348:32;36345:52;;;36393:1;36390;36383:12;36345:52;36432:9;36419:23;36451:28;36473:5;36451:28;:::i;37833:251::-;37903:6;37956:2;37944:9;37935:7;37931:23;37927:32;37924:52;;;37972:1;37969;37962:12;37924:52;38004:9;37998:16;38023:31;38048:5;38023:31;:::i;38486:390::-;-1:-1:-1;;;;;38725:32:228;;;38707:51;;38794:32;;;;38789:2;38774:18;;38767:60;38858:2;38843:18;;38836:34;;;;38695:2;38680:18;;38486:390::o;38881:135::-;38920:3;38941:17;;;38938:43;;38961:18;;:::i;:::-;-1:-1:-1;39008:1:228;38997:13;;38881:135::o;39021:544::-;39314:6;39303:9;39296:25;39357:2;39352;39341:9;39337:18;39330:30;39277:4;39383:56;39435:2;39424:9;39420:18;39412:6;39383:56;:::i;:::-;39487:9;39479:6;39475:22;39470:2;39459:9;39455:18;39448:50;39515:44;39552:6;39544;39515:44;:::i;40069:474::-;-1:-1:-1;;;;;40321:32:228;;40303:51;;40390:2;40385;40370:18;;40363:30;;;-1:-1:-1;;40410:67:228;;40458:18;;40450:6;40410:67;:::i;:::-;40402:75;;40525:10;40517:6;40513:23;40508:2;40497:9;40493:18;40486:51;40069:474;;;;;;:::o;40548:128::-;40615:9;;;40636:11;;;40633:37;;;40650:18;;:::i;40681:170::-;40778:10;40771:18;;;40751;;;40747:43;;40802:20;;40799:46;;;40825:18;;:::i;42354:343::-;42433:6;42441;42494:2;42482:9;42473:7;42469:23;42465:32;42462:52;;;42510:1;42507;42500:12;42462:52;-1:-1:-1;;42555:16:228;;42661:2;42646:18;;;42640:25;42555:16;;42640:25;;-1:-1:-1;42354:343:228:o;43124:127::-;43185:10;43180:3;43176:20;43173:1;43166:31;43216:4;43213:1;43206:15;43240:4;43237:1;43230:15;43606:194;-1:-1:-1;;;;;43704:26:228;;;43676;;;43672:59;;43743:28;;43740:54;;;43774:18;;:::i;43805:127::-;43866:10;43861:3;43857:20;43854:1;43847:31;43897:4;43894:1;43887:15;43921:4;43918:1;43911:15;43937:127;43998:10;43993:3;43989:20;43986:1;43979:31;44029:4;44026:1;44019:15;44053:4;44050:1;44043:15;44069:487;44244:6;44233:9;44226:25;44287:2;44282;44271:9;44267:18;44260:30;44207:4;44319:6;44313:13;44362:6;44357:2;44346:9;44342:18;44335:34;44421:6;44416:2;44408:6;44404:15;44399:2;44388:9;44384:18;44378:50;44477:1;44472:2;44463:6;44452:9;44448:22;44444:31;44437:42;44547:2;44540;44536:7;44531:2;44523:6;44519:15;44515:29;44504:9;44500:45;44496:54;44488:62;;;44069:487;;;;;:::o;44561:301::-;44690:3;44728:6;44722:13;44774:6;44767:4;44759:6;44755:17;44750:3;44744:37;44836:1;44800:16;;44825:13;;;-1:-1:-1;44800:16:228;44561:301;-1:-1:-1;44561:301:228:o;45056:217::-;45096:1;45122;45112:132;;45166:10;45161:3;45157:20;45154:1;45147:31;45201:4;45198:1;45191:15;45229:4;45226:1;45219:15;45112:132;-1:-1:-1;45258:9:228;;45056:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "67112": [
        {
          "start": 879,
          "length": 32
        },
        {
          "start": 3916,
          "length": 32
        },
        {
          "start": 6207,
          "length": 32
        },
        {
          "start": 9629,
          "length": 32
        },
        {
          "start": 16474,
          "length": 32
        }
      ],
      "67116": [
        {
          "start": 1081,
          "length": 32
        },
        {
          "start": 3966,
          "length": 32
        },
        {
          "start": 5773,
          "length": 32
        },
        {
          "start": 6379,
          "length": 32
        },
        {
          "start": 12870,
          "length": 32
        },
        {
          "start": 16512,
          "length": 32
        }
      ],
      "67120": [
        {
          "start": 1937,
          "length": 32
        },
        {
          "start": 3655,
          "length": 32
        },
        {
          "start": 4088,
          "length": 32
        },
        {
          "start": 5926,
          "length": 32
        },
        {
          "start": 7085,
          "length": 32
        },
        {
          "start": 9392,
          "length": 32
        },
        {
          "start": 10594,
          "length": 32
        },
        {
          "start": 13600,
          "length": 32
        }
      ],
      "67123": [
        {
          "start": 1857,
          "length": 32
        },
        {
          "start": 5362,
          "length": 32
        },
        {
          "start": 14068,
          "length": 32
        },
        {
          "start": 14610,
          "length": 32
        }
      ],
      "75968": [
        {
          "start": 1042,
          "length": 32
        },
        {
          "start": 13405,
          "length": 32
        }
      ],
      "76036": [
        {
          "start": 16576,
          "length": 32
        }
      ],
      "76039": [
        {
          "start": 16768,
          "length": 32
        }
      ],
      "76169": [
        {
          "start": 1441,
          "length": 32
        },
        {
          "start": 3039,
          "length": 32
        },
        {
          "start": 4376,
          "length": 32
        },
        {
          "start": 10196,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DELEGATION_APPROVAL_TYPEHASH()": "04a4f979",
    "allocationManager()": "ca8aa7c7",
    "beaconChainETHStrategy()": "9104c319",
    "burnOperatorShares(address,address,uint64,uint64)": "ee74937f",
    "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": "0b9f487a",
    "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": "597b36da",
    "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)": "e4cc3f90",
    "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])": "9435bb43",
    "convertToDepositShares(address,address[],uint256[])": "25df922e",
    "cumulativeWithdrawalsQueued(address)": "a1788484",
    "decreaseDelegatedShares(address,uint256,uint64)": "60a0d1ce",
    "delegateTo(address,(bytes,uint256),bytes32)": "eea9064b",
    "delegatedTo(address)": "65da1264",
    "delegationApprover(address)": "3cdeb5e0",
    "delegationApproverSaltIsSpent(address,bytes32)": "bb45fef2",
    "depositScalingFactor(address,address)": "bfae3fd2",
    "domainSeparator()": "f698da25",
    "eigenPodManager()": "4665bcda",
    "getDepositedShares(address)": "66d5ba93",
    "getOperatorShares(address,address[])": "90041347",
    "getOperatorsShares(address[],address[])": "f0e0e676",
    "getQueuedWithdrawals(address)": "5dd68579",
    "getSlashableSharesInQueue(address,address)": "6e174448",
    "getWithdrawableShares(address,address[])": "c978f7ac",
    "increaseDelegatedShares(address,address,uint256,uint256)": "3c651cf2",
    "initialize(address,uint256)": "cd6dc687",
    "isDelegated(address)": "3e28391d",
    "isOperator(address)": "6d70f7ae",
    "minWithdrawalDelayBlocks()": "c448feb8",
    "modifyOperatorDetails(address,address)": "54b7c96c",
    "operatorShares(address,address)": "778e55f3",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "pendingWithdrawals(bytes32)": "b7f06ebe",
    "permissionController()": "4657e26a",
    "queueWithdrawals((address[],uint256[],address)[])": "0dd8dd02",
    "queuedWithdrawals(bytes32)": "99f5371b",
    "redelegate(address,(bytes,uint256),bytes32)": "a33a3433",
    "registerAsOperator(address,uint32,string)": "2aa6d888",
    "renounceOwnership()": "715018a6",
    "strategyManager()": "39b70e38",
    "transferOwnership(address)": "f2fde38b",
    "undelegate(address)": "da8be864",
    "unpause(uint256)": "fabc1cbc",
    "updateOperatorMetadataURI(address,string)": "78296ec5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract IEigenPodManager\",\"name\":\"_eigenPodManager\",\"type\":\"address\"},{\"internalType\":\"contract IAllocationManager\",\"name\":\"_allocationManager\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_MIN_WITHDRAWAL_DELAY\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ActivelyDelegated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerCannotUndelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FullySlashed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSnapshotOrdering\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotActivelyDelegated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyAllocationManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyEigenPodManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyStrategyManagerOrEigenPodManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorsCannotUndelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaltSpent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalDelayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalNotQueued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawerNotCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawerNotStaker\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newDelegationApprover\",\"type\":\"address\"}],\"name\":\"DelegationApproverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDepositScalingFactor\",\"type\":\"uint256\"}],\"name\":\"DepositScalingFactorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"OperatorMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"SlashingWithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManagerTypes.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"sharesToWithdraw\",\"type\":\"uint256[]\"}],\"name\":\"SlashingWithdrawalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerForceUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"prevMaxMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"newMaxMagnitude\",\"type\":\"uint64\"}],\"name\":\"burnOperatorShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateDelegationApprovalDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawableShares\",\"type\":\"uint256[]\"}],\"name\":\"convertToDepositShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"cumulativeWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalQueued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"curDepositShares\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"beaconChainSlashingFactorDecrease\",\"type\":\"uint64\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegationApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"delegationApproverSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"spent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"depositScalingFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDepositedShares\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorsShares\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getQueuedWithdrawals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"shares\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getSlashableSharesInQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getWithdrawableShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"withdrawableShares\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"depositShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prevDepositShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedShares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newDelegationApprover\",\"type\":\"address\"}],\"name\":\"modifyOperatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"pending\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"depositShares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationManagerTypes.QueuedWithdrawalParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"queueWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"queuedWithdrawals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"newOperatorApproverSig\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"redelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initDelegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"allocationDelay\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateOperatorMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"errors\":{\"ActivelyDelegated()\":[{\"details\":\"Thrown when an account is actively delegated.\"}],\"CallerCannotUndelegate()\":[{\"details\":\"Thrown when caller cannot undelegate on behalf of a staker.\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"FullySlashed()\":[{\"details\":\"Thrown when an operator has been fully slashed(maxMagnitude is 0) for a strategy. or if the staker has had been natively slashed to the point of their beaconChainScalingFactor equalling 0.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InputArrayLengthZero()\":[{\"details\":\"Thrown when input arrays length is zero.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}],\"NotActivelyDelegated()\":[{\"details\":\"Thrown when an account is not actively delegated.\"}],\"OnlyAllocationManager()\":[{\"details\":\"Throw when msg.sender is not the AllocationManager\"}],\"OnlyEigenPodManager()\":[{\"details\":\"Thrown when msg.sender is not the EigenPodManager\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyStrategyManagerOrEigenPodManager()\":[{\"details\":\"Thrown when caller is neither the StrategyManager or EigenPodManager contract.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorNotRegistered()\":[{\"details\":\"Thrown when `operator` is not a registered operator.\"}],\"OperatorsCannotUndelegate()\":[{\"details\":\"Thrown when an operator attempts to undelegate.\"}],\"SaltSpent()\":[{\"details\":\"Thrown when attempting to spend a spent eip-712 salt.\"}],\"WithdrawalDelayNotElapsed()\":[{\"details\":\"Thrown when attempting to withdraw before delay has elapsed.\"}],\"WithdrawalExceedsMax()\":[{\"details\":\"Thrown when a withdraw amount larger than max is attempted.\"}],\"WithdrawalNotQueued()\":[{\"details\":\"Thrown when attempting to execute an action that was not queued.\"}],\"WithdrawerNotCaller()\":[{\"details\":\"Thrown when withdrawer is not the current caller.\"}],\"WithdrawerNotStaker()\":[{\"details\":\"Thrown when `withdrawer` is not staker.\"}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OperatorMetadataURIUpdated(address,string)\":{\"details\":\"Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\"},\"SlashingWithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]),uint256[])\":{\"params\":{\"sharesToWithdraw\":\"Is an array of the expected shares that were queued for withdrawal corresponding to the strategies in the `withdrawal`.\",\"withdrawal\":\"Is the withdrawal itself.\",\"withdrawalRoot\":\"Is the hash of the `withdrawal`.\"}}},\"kind\":\"dev\",\"methods\":{\"burnOperatorShares(address,address,uint64,uint64)\":{\"details\":\"Callable only by the AllocationManagerNote: Assumes `prevMaxMagnitude <= newMaxMagnitude`. This invariant is maintained in the AllocationManager.\",\"params\":{\"newMaxMagnitude\":\"the new maxMagnitude of the operator\",\"operator\":\"The operator to decrease shares for\",\"prevMaxMagnitude\":\"the previous maxMagnitude of the operator\",\"strategy\":\"The strategy to decrease shares for\"}},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"params\":{\"_delegationApprover\":\"the operator's `delegationApprover` who will be signing the delegationHash (in general)\",\"approverSalt\":\"A unique and single use value associated with the approver signature.\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account receiving delegated stake\",\"staker\":\"The account delegating their stake\"}},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)\":{\"details\":\"beaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.\",\"params\":{\"receiveAsTokens\":\"If true, the shares calculated to be withdrawn will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array.\",\"withdrawal\":\"The withdrawal to complete.\"}},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])\":{\"details\":\"See `completeQueuedWithdrawal` for relevant dev tags\",\"params\":{\"receiveAsTokens\":\"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\",\"tokens\":\"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\",\"withdrawals\":\"Array of Withdrawals to complete. See `completeQueuedWithdrawal` for the usage of a single Withdrawal.\"}},\"constructor\":{\"details\":\"Initializes the immutable addresses of the strategy mananger, eigenpod manager, and allocation manager.\"},\"convertToDepositShares(address,address[],uint256[])\":{\"details\":\"will be a few wei off due to rounding errors\",\"params\":{\"staker\":\"the staker to convert shares for\",\"strategies\":\"the strategies to convert shares for\",\"withdrawableShares\":\"the shares to convert\"},\"returns\":{\"_0\":\"the deposit shares\"}},\"decreaseDelegatedShares(address,uint256,uint64)\":{\"details\":\"Note: `beaconChainSlashingFactorDecrease` are assumed to ALWAYS be < 1 WAD. These invariants are maintained in the EigenPodManager.\",\"params\":{\"beaconChainSlashingFactorDecrease\":\"the amount that the staker's beaconChainSlashingFactor has decreased by\",\"curDepositShares\":\"the current deposit shares held by the staker\",\"staker\":\"the staker whose operator's balance will be decreased\"}},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"details\":\"The approverSignatureAndExpiry is used in the event that the operator's `delegationApprover` address is set to a non-zero value.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costsIf the staker delegating has shares in a strategy that the operator was slashed 100% for (the operator's maxMagnitude = 0), then delegation is blocked and will revert.\",\"params\":{\"approverSalt\":\"A unique single use value tied to an individual signature.\",\"approverSignatureAndExpiry\":\"Verifies the operator approves of this delegation\",\"operator\":\"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.Use `_calculateDomainSeparator` rather than using this function.\"},\"getOperatorShares(address,address[])\":{\"params\":{\"operator\":\"the operator to get shares for\",\"strategies\":\"the strategies to get shares for\"}},\"getOperatorsShares(address[],address[])\":{\"params\":{\"operators\":\"the operators to get shares for\",\"strategies\":\"the strategies to get shares for\"}},\"getSlashableSharesInQueue(address,address)\":{\"params\":{\"operator\":\"the operator to get shares for\",\"strategy\":\"the strategy to get shares for\"},\"returns\":{\"_0\":\"the amount of shares that are slashable in the withdrawal queue for an operator and a strategy\"}},\"increaseDelegatedShares(address,address,uint256,uint256)\":{\"details\":\"*If the staker is actively delegated*, then increases the `staker`'s delegated delegatedShares in `strategy`. Otherwise does nothing.If the operator was slashed 100% for the strategy (the operator's maxMagnitude = 0), then increasing delegated shares is blocked and will revert.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"addedShares\":\"The number of shares added to the staker's shares in the strategy\",\"prevDepositShares\":\"The number of deposit shares the staker already had in the strategy. This is the shares amount stored in the StrategyManager/EigenPodManager for the staker's shares.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to increase the delegated shares.\"}},\"initialize(address,uint256)\":{\"details\":\"Initializes the initial owner and paused status.\"},\"minWithdrawalDelayBlocks()\":{\"details\":\"Backwards-compatible interface to return the internal `MIN_WITHDRAWAL_DELAY_BLOCKS` valuePrevious value in storage was deprecated. See `__deprecated_minWithdrawalDelayBlocks`\"},\"modifyOperatorDetails(address,address)\":{\"details\":\"The caller must have previously registered as an operator in EigenLayer.\",\"params\":{\"newDelegationApprover\":\"is the new delegationApprover for the operator\",\"operator\":\"is the operator to update the delegationApprover for\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"queueWithdrawals((address[],uint256[],address)[])\":{\"details\":\"To view what the staker is able to queue withdraw, see `getWithdrawableShares()`\"},\"redelegate(address,(bytes,uint256),bytes32)\":{\"details\":\"This method acts like a call to `undelegate`, then `delegateTo`NOTE: the following 2 params are ONLY checked if `newOperator` has a `delegationApprover`. If not, they can be left empty.\",\"params\":{\"approverSalt\":\"A unique single use value tied to the approver's signature\",\"newOperator\":\"the new operator that will be delegated all assets\",\"newOperatorApproverSig\":\"A signature from the operator's `delegationApprover`\"}},\"registerAsOperator(address,uint32,string)\":{\"details\":\"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \\\"delegated to themself\\\".This function will revert if the caller is already delegated to an operator.Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"allocationDelay\":\"The delay before allocations take effect.\",\"initDelegationApprover\":\"is an address that, if set, must provide a signature when stakers delegate to an operator.\",\"metadataURI\":\"is a URI for the operator's metadata, i.e. a link providing more details on the operator.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"undelegate(address)\":{\"details\":\"Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \\\"delegationApprover\\\"Reverts if the `staker` is already undelegated.\",\"params\":{\"staker\":\"The account to be undelegated.\"},\"returns\":{\"withdrawalRoots\":\"The roots of the newly queued withdrawals, if a withdrawal was queued. Otherwise just bytes32(0).\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateOperatorMetadataURI(address,string)\":{\"details\":\"Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an operator\",\"operator\":\"The operator to update metadata for\"}}},\"title\":\"DelegationManager\",\"version\":1},\"userdoc\":{\"events\":{\"DelegationApproverUpdated(address,address)\":{\"notice\":\"Emitted when an operator updates their delegation approver\"},\"DepositScalingFactorUpdated(address,address,uint256)\":{\"notice\":\"Emitted when a staker's depositScalingFactor is updated\"},\"OperatorMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param operator indicates that they are updating their MetadataURI string\"},\"OperatorSharesBurned(address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are burned for a given strategy\"},\"OperatorSharesDecreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesIncreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"SlashingWithdrawalCompleted(bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"SlashingWithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]),uint256[])\":{\"notice\":\"Emitted when a new withdrawal is queued.\"},\"StakerDelegated(address,address)\":{\"notice\":\"Emitted when @param staker delegates to @param operator.\"},\"StakerForceUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker is undelegated via a call not originating from the staker themself\"},\"StakerUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker undelegates from @param operator.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `DelegationApproval` struct used by the contract\"},\"allocationManager()\":{\"notice\":\"The AllocationManager contract for EigenLayer\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"burnOperatorShares(address,address,uint64,uint64)\":{\"notice\":\"Decreases the operators shares in storage after a slash and burns the corresponding Strategy shares by calling into the StrategyManager or EigenPodManager to burn the shares.\"},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` function.\"},\"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Returns the keccak256 hash of `withdrawal`.\"},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)\":{\"notice\":\"Used to complete the lastest queued withdrawal.\"},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])\":{\"notice\":\"Used to complete the all queued withdrawals. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\"},\"convertToDepositShares(address,address[],uint256[])\":{\"notice\":\"Converts shares for a set of strategies to deposit shares, likely in order to input into `queueWithdrawals`\"},\"cumulativeWithdrawalsQueued(address)\":{\"notice\":\"Returns the total number of withdrawals that have been queued for a given `staker`.\"},\"decreaseDelegatedShares(address,uint256,uint64)\":{\"notice\":\"If the staker is delegated, decreases its operator's shares in response to a decrease in balance in the beaconChainETHStrategy\"},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates their stake to an operator.\"},\"delegatedTo(address)\":{\"notice\":\"Returns the `operator` a `staker` is delgated to, address(0) if not delegated.\"},\"delegationApprover(address)\":{\"notice\":\"Returns the delegationApprover account for an operator\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"notice\":\"Returns whether `delegationApprover` has already used the given `salt`.\"},\"depositScalingFactor(address,address)\":{\"notice\":\"Returns the scaling factor applied to a staker's deposits for a given strategy\"},\"domainSeparator()\":{\"notice\":\"Returns the current EIP-712 domain separator for this contract.\"},\"eigenPodManager()\":{\"notice\":\"The EigenPodManager contract for EigenLayer\"},\"getDepositedShares(address)\":{\"notice\":\"Returns the number of shares in storage for a staker and all their strategies\"},\"getOperatorShares(address,address[])\":{\"notice\":\"Returns the shares that an operator has delegated to them in a set of strategies\"},\"getOperatorsShares(address[],address[])\":{\"notice\":\"Returns the shares that a set of operators have delegated to them in a set of strategies\"},\"getQueuedWithdrawals(address)\":{\"notice\":\"Returns a list of pending queued withdrawals for a `staker`, and the `shares` to be withdrawn.\"},\"getSlashableSharesInQueue(address,address)\":{\"notice\":\"Returns amount of withdrawable shares from an operator for a strategy that is still in the queue and therefore slashable. Note that the *actual* slashable amount could be less than this value as this doesn't account for amounts that have already been slashed. This assumes that none of the shares have been slashed.\"},\"getWithdrawableShares(address,address[])\":{\"notice\":\"Given a staker and a set of strategies, return the shares they can queue for withdrawal and the corresponding depositShares. This value depends on which operator the staker is delegated to. The shares amount returned is the actual amount of Strategy shares the staker would receive (subject to each strategy's underlying shares to token ratio).\"},\"increaseDelegatedShares(address,address,uint256,uint256)\":{\"notice\":\"Increases a staker's delegated share balance in a strategy. Note that before adding to operator shares, the delegated delegatedShares. The staker's depositScalingFactor is updated here.\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns true is an operator has previously registered for delegation.\"},\"minWithdrawalDelayBlocks()\":{\"notice\":\"Returns the minimum withdrawal delay in blocks to pass for withdrawals queued to be completable. Also applies to legacy withdrawals so any withdrawals not completed prior to the slashing upgrade will be subject to this longer delay.\"},\"modifyOperatorDetails(address,address)\":{\"notice\":\"Updates an operator's stored `delegationApprover`.\"},\"operatorShares(address,address)\":{\"notice\":\"Returns the total number of shares owned by an `operator` for a given `strategy`.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"queueWithdrawals((address[],uint256[],address)[])\":{\"notice\":\"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be withdrawn after a delay. Withdrawals are still subject to slashing during the delay period so the amount withdrawn on completion may actually be less than what was queued if slashing has occurred in that period.\"},\"queuedWithdrawals(bytes32)\":{\"notice\":\"Returns the details of a queued withdrawal for a given `staker` and `withdrawalRoot`.\"},\"redelegate(address,(bytes,uint256),bytes32)\":{\"notice\":\"Undelegates the staker from their current operator, and redelegates to `newOperator` Queues a withdrawal for all of the staker's withdrawable shares. These shares will only be delegated to `newOperator` AFTER the withdrawal is completed.\"},\"registerAsOperator(address,uint32,string)\":{\"notice\":\"Registers the caller as an operator in EigenLayer.\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"undelegate(address)\":{\"notice\":\"Undelegates the staker from the operator who they are delegated to. Queues withdrawals of all of the staker's withdrawable shares in the StrategyManager (to the staker) and/or EigenPodManager, if necessary.\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateOperatorMetadataURI(address,string)\":{\"notice\":\"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for delegation in EigenLayer. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayer - allowing operators to specify parameters related to stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time) - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/DelegationManager.sol\":\"DelegationManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol\":{\"keccak256\":\"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d\",\"dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol\":{\"keccak256\":\"0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b\",\"dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/contracts/core/DelegationManager.sol\":{\"keccak256\":\"0xff5be64f438563731e13e277a2ffce2a4aaee6f13992d84861d8078b202d04e5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://65154c5dc8cb677f505a49f47e9d3178766480ed7ce478b2663b8943bfafbd4a\",\"dweb:/ipfs/QmTgEWRxvyegLFrSk89YAexZN5SuhghtVnh2mHhkG38FYV\"]},\"src/contracts/core/DelegationManagerStorage.sol\":{\"keccak256\":\"0x2e094729adf9b3cfb2a3384272325e91f77af201fde55d0950bc82423a57506e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4108255408f4a2f52a71d50209929cd9daa99397975630a2071ff20601c32712\",\"dweb:/ipfs/QmXD2PGi7ECvMzCXMR2fUwAuLdSwQyvceeKYdK1VAFFR8j\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0x6d5f209cc63b57e1db891e014a098bd277bb3cd54d815ee9455ade2cdf44020a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://50546cefb737b88803bc6a63cfa962b228fd0d1e2697d6be9166718577e7656e\",\"dweb:/ipfs/QmUP7uYvJV3Eq9vbKdqTJ61jaNZ4QZD6H4fJDBwLw5qyrv\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x3ef98720d9ec2a58926cf13a6aaa5581a1273d81e09582ee45c4fc58f7ae331e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b40d5e6449ae27d93d383818310c6e00f18e19bf99cd9f379b55e4cea663752\",\"dweb:/ipfs/QmRr4MkpoC1tSRsqTtM4K8ZRZT2yNrqf58ZTjjKaEnxRc2\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xcca5f89005bdbca12fe9f62490a34aeb9cf7a9aa78346ba2c5acc6c6727ddabd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1dd5b145f729db03f449b4c003032b25677494b916e29c266df71fe991bf566b\",\"dweb:/ipfs/QmVn4ZxdFfNqJ2Xbp6N1qpJ4qseKeQ34c54Jtsgm6RHAyh\"]},\"src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0x34641f2a5250d80fca927168a4d071d374b2fc66094c5c1ed6d3b9f0e041251c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://80ab9987fe8f7ad5c3ae57aed8191bc9d7aa56548266fae5738aade190298150\",\"dweb:/ipfs/QmaPFGoLTBqXgXCRP1JKt8RNpQtbBmSKyFHfd5deBRyGWE\"]},\"src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xacf744ab9a97e62b80a664063decad5ef1746fa100e650060c5f5b06f42c5a6a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8ae714e8fd53143d3880ca2597b8e949c2963af5a268062ef0eb5093355ecd8a\",\"dweb:/ipfs/QmdiuQUCw55gs8KdinU5HvCBS4A9k9ffQuUQr8YUfoZUMN\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8\",\"dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8\"]},\"src/contracts/interfaces/IShareManager.sol\":{\"keccak256\":\"0xd03653bc25fe5a64ec6071a0d3fb375280d1e32ece3a19c5d10fb14374de3537\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://65d3275df462c8db23b74ed96caa8cb7dbc7219e26bee2794c168b842517a1a5\",\"dweb:/ipfs/Qmen14WFvNLPE21WVdfcW33FQtEcLxMHEXZnwCkTbWNTQ1\"]},\"src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b\",\"dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4\",\"dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8\"]},\"src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xf5aa4a3486f10ba84a87ba4e9d90f0035c5ee7f8163e353edb113c45944fee99\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e9a7899486cf82b0c73bc3cbcdfb9924fcd1b1b0353248be1554de28cdb849bc\",\"dweb:/ipfs/QmNSvzDqizi6oQiuRZhsbx2W2e33JCdzYRv6ujUGtyPsag\"]},\"src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f\",\"dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX\"]},\"src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e\",\"dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6\",\"dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x63d44478f91bfb05bfc6d406587f7c2b49af6bd4616d01dd5c3b9ef65d605eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee1d930124139021384a9197deb5c9b7bfc74bf9d641c9bb449593bc23b2a1fe\",\"dweb:/ipfs/QmWRpQ9eL5oajiTF5CA9APF9zz6QyY1Lcg8tBTrpPTTkzx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0x90178e5e1b3397a8e6d8f1d086d145946c8a7fa99298f259ef226d9800d27b72\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://15a0d7b4dae1a950cd55c8990530679673bc8bf96f8a754f89ef8e3cf4e848fc\",\"dweb:/ipfs/QmNd1JhMSLQM7qtkzTF5LcEJhBuozL7MQomPVE1vqnS7sz\"]},\"src/contracts/libraries/Snapshots.sol\":{\"keccak256\":\"0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b\",\"dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/mixins/SignatureUtils.sol\":{\"keccak256\":\"0x7a6b997875627ceeb0195dfbef0b63b659d27f0165988c96fd4ea6f26f992fe5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://042c446665d23f4a1c45f81fa6a4d47c51e18d3d3108f895e53b4d482414e695\",\"dweb:/ipfs/QmPsufDgMNRfdttfBCZ6NEojgWWPr5U9bmNuGYJEq6JBzB\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd\",\"dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "_strategyManager",
              "type": "address"
            },
            {
              "internalType": "contract IEigenPodManager",
              "name": "_eigenPodManager",
              "type": "address"
            },
            {
              "internalType": "contract IAllocationManager",
              "name": "_allocationManager",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_MIN_WITHDRAWAL_DELAY",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ActivelyDelegated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerCannotUndelegate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FullySlashed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSnapshotOrdering"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotActivelyDelegated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyAllocationManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyEigenPodManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyStrategyManagerOrEigenPodManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorNotRegistered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorsCannotUndelegate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SaltSpent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureExpired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawalDelayNotElapsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawalExceedsMax"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawalNotQueued"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawerNotCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawerNotStaker"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newDelegationApprover",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegationApproverUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDepositScalingFactor",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositScalingFactorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesBurned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesDecreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlashingWithdrawalCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "sharesToWithdraw",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlashingWithdrawalQueued",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerDelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerForceUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DELEGATION_APPROVAL_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allocationManager",
          "outputs": [
            {
              "internalType": "contract IAllocationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "prevMaxMagnitude",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "newMaxMagnitude",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnOperatorShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateDelegationApprovalDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateWithdrawalRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "receiveAsTokens",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal[]",
              "name": "withdrawals",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[][]",
              "name": "tokens",
              "type": "address[][]"
            },
            {
              "internalType": "bool[]",
              "name": "receiveAsTokens",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "withdrawableShares",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToDepositShares",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeWithdrawalsQueued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalQueued",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "curDepositShares",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "beaconChainSlashingFactorDecrease",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "approverSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatedTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApprover",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApproverSaltIsSpent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "spent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "depositScalingFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenPodManager",
          "outputs": [
            {
              "internalType": "contract IEigenPodManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDepositedShares",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorShares",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsShares",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQueuedWithdrawals",
          "outputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal[]",
              "name": "withdrawals",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "uint256[][]",
              "name": "shares",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSlashableSharesInQueue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawableShares",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "withdrawableShares",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "depositShares",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "prevDepositShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minWithdrawalDelayBlocks",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newDelegationApprover",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyOperatorDetails"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingWithdrawals",
          "outputs": [
            {
              "internalType": "bool",
              "name": "pending",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManagerTypes.QueuedWithdrawalParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "depositShares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queueWithdrawals",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "queuedWithdrawals",
          "outputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startBlock",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOperator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "newOperatorApproverSig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redelegate",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "withdrawalRoots",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initDelegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "allocationDelay",
              "type": "uint32"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "withdrawalRoots",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorMetadataURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "burnOperatorShares(address,address,uint64,uint64)": {
            "details": "Callable only by the AllocationManagerNote: Assumes `prevMaxMagnitude <= newMaxMagnitude`. This invariant is maintained in the AllocationManager.",
            "params": {
              "newMaxMagnitude": "the new maxMagnitude of the operator",
              "operator": "The operator to decrease shares for",
              "prevMaxMagnitude": "the previous maxMagnitude of the operator",
              "strategy": "The strategy to decrease shares for"
            }
          },
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "params": {
              "_delegationApprover": "the operator's `delegationApprover` who will be signing the delegationHash (in general)",
              "approverSalt": "A unique and single use value associated with the approver signature.",
              "expiry": "Time after which the approver's signature becomes invalid",
              "operator": "The account receiving delegated stake",
              "staker": "The account delegating their stake"
            }
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)": {
            "details": "beaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.",
            "params": {
              "receiveAsTokens": "If true, the shares calculated to be withdrawn will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.",
              "tokens": "Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array.",
              "withdrawal": "The withdrawal to complete."
            }
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])": {
            "details": "See `completeQueuedWithdrawal` for relevant dev tags",
            "params": {
              "receiveAsTokens": "Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.",
              "tokens": "Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.",
              "withdrawals": "Array of Withdrawals to complete. See `completeQueuedWithdrawal` for the usage of a single Withdrawal."
            }
          },
          "constructor": {
            "details": "Initializes the immutable addresses of the strategy mananger, eigenpod manager, and allocation manager."
          },
          "convertToDepositShares(address,address[],uint256[])": {
            "details": "will be a few wei off due to rounding errors",
            "params": {
              "staker": "the staker to convert shares for",
              "strategies": "the strategies to convert shares for",
              "withdrawableShares": "the shares to convert"
            },
            "returns": {
              "_0": "the deposit shares"
            }
          },
          "decreaseDelegatedShares(address,uint256,uint64)": {
            "details": "Note: `beaconChainSlashingFactorDecrease` are assumed to ALWAYS be < 1 WAD. These invariants are maintained in the EigenPodManager.",
            "params": {
              "beaconChainSlashingFactorDecrease": "the amount that the staker's beaconChainSlashingFactor has decreased by",
              "curDepositShares": "the current deposit shares held by the staker",
              "staker": "the staker whose operator's balance will be decreased"
            }
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "details": "The approverSignatureAndExpiry is used in the event that the operator's `delegationApprover` address is set to a non-zero value.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costsIf the staker delegating has shares in a strategy that the operator was slashed 100% for (the operator's maxMagnitude = 0), then delegation is blocked and will revert.",
            "params": {
              "approverSalt": "A unique single use value tied to an individual signature.",
              "approverSignatureAndExpiry": "Verifies the operator approves of this delegation",
              "operator": "The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer."
            }
          },
          "domainSeparator()": {
            "details": "The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.Use `_calculateDomainSeparator` rather than using this function."
          },
          "getOperatorShares(address,address[])": {
            "params": {
              "operator": "the operator to get shares for",
              "strategies": "the strategies to get shares for"
            }
          },
          "getOperatorsShares(address[],address[])": {
            "params": {
              "operators": "the operators to get shares for",
              "strategies": "the strategies to get shares for"
            }
          },
          "getSlashableSharesInQueue(address,address)": {
            "params": {
              "operator": "the operator to get shares for",
              "strategy": "the strategy to get shares for"
            },
            "returns": {
              "_0": "the amount of shares that are slashable in the withdrawal queue for an operator and a strategy"
            }
          },
          "increaseDelegatedShares(address,address,uint256,uint256)": {
            "details": "*If the staker is actively delegated*, then increases the `staker`'s delegated delegatedShares in `strategy`. Otherwise does nothing.If the operator was slashed 100% for the strategy (the operator's maxMagnitude = 0), then increasing delegated shares is blocked and will revert.Callable only by the StrategyManager or EigenPodManager.",
            "params": {
              "addedShares": "The number of shares added to the staker's shares in the strategy",
              "prevDepositShares": "The number of deposit shares the staker already had in the strategy. This is the shares amount stored in the StrategyManager/EigenPodManager for the staker's shares.",
              "staker": "The address to increase the delegated shares for their operator.",
              "strategy": "The strategy in which to increase the delegated shares."
            }
          },
          "initialize(address,uint256)": {
            "details": "Initializes the initial owner and paused status."
          },
          "minWithdrawalDelayBlocks()": {
            "details": "Backwards-compatible interface to return the internal `MIN_WITHDRAWAL_DELAY_BLOCKS` valuePrevious value in storage was deprecated. See `__deprecated_minWithdrawalDelayBlocks`"
          },
          "modifyOperatorDetails(address,address)": {
            "details": "The caller must have previously registered as an operator in EigenLayer.",
            "params": {
              "newDelegationApprover": "is the new delegationApprover for the operator",
              "operator": "is the operator to update the delegationApprover for"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "queueWithdrawals((address[],uint256[],address)[])": {
            "details": "To view what the staker is able to queue withdraw, see `getWithdrawableShares()`"
          },
          "redelegate(address,(bytes,uint256),bytes32)": {
            "details": "This method acts like a call to `undelegate`, then `delegateTo`NOTE: the following 2 params are ONLY checked if `newOperator` has a `delegationApprover`. If not, they can be left empty.",
            "params": {
              "approverSalt": "A unique single use value tied to the approver's signature",
              "newOperator": "the new operator that will be delegated all assets",
              "newOperatorApproverSig": "A signature from the operator's `delegationApprover`"
            }
          },
          "registerAsOperator(address,uint32,string)": {
            "details": "Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".This function will revert if the caller is already delegated to an operator.Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event",
            "params": {
              "allocationDelay": "The delay before allocations take effect.",
              "initDelegationApprover": "is an address that, if set, must provide a signature when stakers delegate to an operator.",
              "metadataURI": "is a URI for the operator's metadata, i.e. a link providing more details on the operator."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "undelegate(address)": {
            "details": "Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \"delegationApprover\"Reverts if the `staker` is already undelegated.",
            "params": {
              "staker": "The account to be undelegated."
            },
            "returns": {
              "withdrawalRoots": "The roots of the newly queued withdrawals, if a withdrawal was queued. Otherwise just bytes32(0)."
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateOperatorMetadataURI(address,string)": {
            "details": "Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event",
            "params": {
              "metadataURI": "The URI for metadata associated with an operator",
              "operator": "The operator to update metadata for"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DELEGATION_APPROVAL_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `DelegationApproval` struct used by the contract"
          },
          "allocationManager()": {
            "notice": "The AllocationManager contract for EigenLayer"
          },
          "beaconChainETHStrategy()": {
            "notice": "Canonical, virtual beacon chain ETH strategy"
          },
          "burnOperatorShares(address,address,uint64,uint64)": {
            "notice": "Decreases the operators shares in storage after a slash and burns the corresponding Strategy shares by calling into the StrategyManager or EigenPodManager to burn the shares."
          },
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "notice": "Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` function."
          },
          "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": {
            "notice": "Returns the keccak256 hash of `withdrawal`."
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)": {
            "notice": "Used to complete the lastest queued withdrawal."
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])": {
            "notice": "Used to complete the all queued withdrawals. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`"
          },
          "convertToDepositShares(address,address[],uint256[])": {
            "notice": "Converts shares for a set of strategies to deposit shares, likely in order to input into `queueWithdrawals`"
          },
          "cumulativeWithdrawalsQueued(address)": {
            "notice": "Returns the total number of withdrawals that have been queued for a given `staker`."
          },
          "decreaseDelegatedShares(address,uint256,uint64)": {
            "notice": "If the staker is delegated, decreases its operator's shares in response to a decrease in balance in the beaconChainETHStrategy"
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "notice": "Caller delegates their stake to an operator."
          },
          "delegatedTo(address)": {
            "notice": "Returns the `operator` a `staker` is delgated to, address(0) if not delegated."
          },
          "delegationApprover(address)": {
            "notice": "Returns the delegationApprover account for an operator"
          },
          "delegationApproverSaltIsSpent(address,bytes32)": {
            "notice": "Returns whether `delegationApprover` has already used the given `salt`."
          },
          "depositScalingFactor(address,address)": {
            "notice": "Returns the scaling factor applied to a staker's deposits for a given strategy"
          },
          "domainSeparator()": {
            "notice": "Returns the current EIP-712 domain separator for this contract."
          },
          "eigenPodManager()": {
            "notice": "The EigenPodManager contract for EigenLayer"
          },
          "getDepositedShares(address)": {
            "notice": "Returns the number of shares in storage for a staker and all their strategies"
          },
          "getOperatorShares(address,address[])": {
            "notice": "Returns the shares that an operator has delegated to them in a set of strategies"
          },
          "getOperatorsShares(address[],address[])": {
            "notice": "Returns the shares that a set of operators have delegated to them in a set of strategies"
          },
          "getQueuedWithdrawals(address)": {
            "notice": "Returns a list of pending queued withdrawals for a `staker`, and the `shares` to be withdrawn."
          },
          "getSlashableSharesInQueue(address,address)": {
            "notice": "Returns amount of withdrawable shares from an operator for a strategy that is still in the queue and therefore slashable. Note that the *actual* slashable amount could be less than this value as this doesn't account for amounts that have already been slashed. This assumes that none of the shares have been slashed."
          },
          "getWithdrawableShares(address,address[])": {
            "notice": "Given a staker and a set of strategies, return the shares they can queue for withdrawal and the corresponding depositShares. This value depends on which operator the staker is delegated to. The shares amount returned is the actual amount of Strategy shares the staker would receive (subject to each strategy's underlying shares to token ratio)."
          },
          "increaseDelegatedShares(address,address,uint256,uint256)": {
            "notice": "Increases a staker's delegated share balance in a strategy. Note that before adding to operator shares, the delegated delegatedShares. The staker's depositScalingFactor is updated here."
          },
          "isDelegated(address)": {
            "notice": "Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
          },
          "isOperator(address)": {
            "notice": "Returns true is an operator has previously registered for delegation."
          },
          "minWithdrawalDelayBlocks()": {
            "notice": "Returns the minimum withdrawal delay in blocks to pass for withdrawals queued to be completable. Also applies to legacy withdrawals so any withdrawals not completed prior to the slashing upgrade will be subject to this longer delay."
          },
          "modifyOperatorDetails(address,address)": {
            "notice": "Updates an operator's stored `delegationApprover`."
          },
          "operatorShares(address,address)": {
            "notice": "Returns the total number of shares owned by an `operator` for a given `strategy`."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "queueWithdrawals((address[],uint256[],address)[])": {
            "notice": "Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be withdrawn after a delay. Withdrawals are still subject to slashing during the delay period so the amount withdrawn on completion may actually be less than what was queued if slashing has occurred in that period."
          },
          "queuedWithdrawals(bytes32)": {
            "notice": "Returns the details of a queued withdrawal for a given `staker` and `withdrawalRoot`."
          },
          "redelegate(address,(bytes,uint256),bytes32)": {
            "notice": "Undelegates the staker from their current operator, and redelegates to `newOperator` Queues a withdrawal for all of the staker's withdrawable shares. These shares will only be delegated to `newOperator` AFTER the withdrawal is completed."
          },
          "registerAsOperator(address,uint32,string)": {
            "notice": "Registers the caller as an operator in EigenLayer."
          },
          "strategyManager()": {
            "notice": "The StrategyManager contract for EigenLayer"
          },
          "undelegate(address)": {
            "notice": "Undelegates the staker from the operator who they are delegated to. Queues withdrawals of all of the staker's withdrawable shares in the StrategyManager (to the staker) and/or EigenPodManager, if necessary."
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateOperatorMetadataURI(address,string)": {
            "notice": "Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/DelegationManager.sol": "DelegationManager"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol": {
        "keccak256": "0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0",
        "urls": [
          "bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d",
          "dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol": {
        "keccak256": "0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df",
        "urls": [
          "bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b",
          "dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/contracts/core/DelegationManager.sol": {
        "keccak256": "0xff5be64f438563731e13e277a2ffce2a4aaee6f13992d84861d8078b202d04e5",
        "urls": [
          "bzz-raw://65154c5dc8cb677f505a49f47e9d3178766480ed7ce478b2663b8943bfafbd4a",
          "dweb:/ipfs/QmTgEWRxvyegLFrSk89YAexZN5SuhghtVnh2mHhkG38FYV"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/DelegationManagerStorage.sol": {
        "keccak256": "0x2e094729adf9b3cfb2a3384272325e91f77af201fde55d0950bc82423a57506e",
        "urls": [
          "bzz-raw://4108255408f4a2f52a71d50209929cd9daa99397975630a2071ff20601c32712",
          "dweb:/ipfs/QmXD2PGi7ECvMzCXMR2fUwAuLdSwQyvceeKYdK1VAFFR8j"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0x6d5f209cc63b57e1db891e014a098bd277bb3cd54d815ee9455ade2cdf44020a",
        "urls": [
          "bzz-raw://50546cefb737b88803bc6a63cfa962b228fd0d1e2697d6be9166718577e7656e",
          "dweb:/ipfs/QmUP7uYvJV3Eq9vbKdqTJ61jaNZ4QZD6H4fJDBwLw5qyrv"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0x3ef98720d9ec2a58926cf13a6aaa5581a1273d81e09582ee45c4fc58f7ae331e",
        "urls": [
          "bzz-raw://2b40d5e6449ae27d93d383818310c6e00f18e19bf99cd9f379b55e4cea663752",
          "dweb:/ipfs/QmRr4MkpoC1tSRsqTtM4K8ZRZT2yNrqf58ZTjjKaEnxRc2"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xcca5f89005bdbca12fe9f62490a34aeb9cf7a9aa78346ba2c5acc6c6727ddabd",
        "urls": [
          "bzz-raw://1dd5b145f729db03f449b4c003032b25677494b916e29c266df71fe991bf566b",
          "dweb:/ipfs/QmVn4ZxdFfNqJ2Xbp6N1qpJ4qseKeQ34c54Jtsgm6RHAyh"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0x34641f2a5250d80fca927168a4d071d374b2fc66094c5c1ed6d3b9f0e041251c",
        "urls": [
          "bzz-raw://80ab9987fe8f7ad5c3ae57aed8191bc9d7aa56548266fae5738aade190298150",
          "dweb:/ipfs/QmaPFGoLTBqXgXCRP1JKt8RNpQtbBmSKyFHfd5deBRyGWE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0xacf744ab9a97e62b80a664063decad5ef1746fa100e650060c5f5b06f42c5a6a",
        "urls": [
          "bzz-raw://8ae714e8fd53143d3880ca2597b8e949c2963af5a268062ef0eb5093355ecd8a",
          "dweb:/ipfs/QmdiuQUCw55gs8KdinU5HvCBS4A9k9ffQuUQr8YUfoZUMN"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b",
        "urls": [
          "bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8",
          "dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IShareManager.sol": {
        "keccak256": "0xd03653bc25fe5a64ec6071a0d3fb375280d1e32ece3a19c5d10fb14374de3537",
        "urls": [
          "bzz-raw://65d3275df462c8db23b74ed96caa8cb7dbc7219e26bee2794c168b842517a1a5",
          "dweb:/ipfs/Qmen14WFvNLPE21WVdfcW33FQtEcLxMHEXZnwCkTbWNTQ1"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de",
        "urls": [
          "bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b",
          "dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3",
        "urls": [
          "bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4",
          "dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xf5aa4a3486f10ba84a87ba4e9d90f0035c5ee7f8163e353edb113c45944fee99",
        "urls": [
          "bzz-raw://e9a7899486cf82b0c73bc3cbcdfb9924fcd1b1b0353248be1554de28cdb849bc",
          "dweb:/ipfs/QmNSvzDqizi6oQiuRZhsbx2W2e33JCdzYRv6ujUGtyPsag"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b",
        "urls": [
          "bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f",
          "dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Endian.sol": {
        "keccak256": "0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136",
        "urls": [
          "bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e",
          "dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436",
        "urls": [
          "bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6",
          "dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x63d44478f91bfb05bfc6d406587f7c2b49af6bd4616d01dd5c3b9ef65d605eba",
        "urls": [
          "bzz-raw://ee1d930124139021384a9197deb5c9b7bfc74bf9d641c9bb449593bc23b2a1fe",
          "dweb:/ipfs/QmWRpQ9eL5oajiTF5CA9APF9zz6QyY1Lcg8tBTrpPTTkzx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0x90178e5e1b3397a8e6d8f1d086d145946c8a7fa99298f259ef226d9800d27b72",
        "urls": [
          "bzz-raw://15a0d7b4dae1a950cd55c8990530679673bc8bf96f8a754f89ef8e3cf4e848fc",
          "dweb:/ipfs/QmNd1JhMSLQM7qtkzTF5LcEJhBuozL7MQomPVE1vqnS7sz"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Snapshots.sol": {
        "keccak256": "0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6",
        "urls": [
          "bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b",
          "dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY"
        ],
        "license": "MIT"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SignatureUtils.sol": {
        "keccak256": "0x7a6b997875627ceeb0195dfbef0b63b659d27f0165988c96fd4ea6f26f992fe5",
        "urls": [
          "bzz-raw://042c446665d23f4a1c45f81fa6a4d47c51e18d3d3108f895e53b4d482414e695",
          "dweb:/ipfs/QmPsufDgMNRfdttfBCZ6NEojgWWPr5U9bmNuGYJEq6JBzB"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666",
        "urls": [
          "bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd",
          "dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 105
}