{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_delegation",
          "type": "address",
          "internalType": "contract IDelegationManager"
        },
        {
          "name": "_eigenStrategy",
          "type": "address",
          "internalType": "contract IStrategy"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_DEALLOCATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_ALLOCATION_CONFIGURATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ALLOCATION_CONFIGURATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DEALLOCATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addStrategiesToOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "clearDeallocationQueue",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "numToClear",
          "type": "uint16[]",
          "internalType": "uint16[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createOperatorSets",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
          "components": [
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createRedistributingOperatorSets",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
          "components": [
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            }
          ]
        },
        {
          "name": "redistributionRecipients",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IDelegationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deregisterFromOperatorSets",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.DeregisterParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "eigenStrategy",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatableMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedStake",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedStrategies",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocation",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.Allocation",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocations",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEncumberedMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudesAtBlock",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "blockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMemberCount",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMembers",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMinimumSlashableStake",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "futureBlock",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "slashableStake",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetCount",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRedistributionRecipient",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRegisteredSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSlashCount",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategiesInOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isMemberOfOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorRedistributable",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorSlashable",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRedistributingOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "modifyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
          "components": [
            {
              "name": "operatorSet",
              "type": "tuple",
              "internalType": "struct OperatorSet",
              "components": [
                {
                  "name": "avs",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "id",
                  "type": "uint32",
                  "internalType": "uint32"
                }
              ]
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "newMagnitudes",
              "type": "uint64[]",
              "internalType": "uint64[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerForOperatorSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.RegisterParams",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeStrategiesFromOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "slashOperator",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.SlashingParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "wadsToSlash",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateAVSMetadataURI",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AVSMetadataURIUpdated",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AVSRegistrarSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "indexed": false,
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationDelaySet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "magnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EncumberedMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "encumberedMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "maxMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorAddedToOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetCreated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSlashed",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategies",
          "type": "address[]",
          "indexed": false,
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "wadSlashed",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "description",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RedistributionAddressSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "redistributionRecipient",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyAddedToOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Empty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAVSRegistrar",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCaller",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidRedistributionRecipient",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSnapshotOrdering",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidStrategy",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidWadToSlash",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ModificationAlreadyPending",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NonexistentAVSMetadata",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorNotSlashable",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OutOfBounds",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SameMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategiesMustBeInAscendingOrder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyAlreadyInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyNotInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "UninitializedAllocationDelay",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "520:45143:117:-:0;;;1203:582;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1732:8;1689:21;1538:11;1551:14;1567:19;1588:31;1638:15;-1:-1:-1;;;;;3618:38:154;;3610:67;;;;-1:-1:-1;;;3610:67:154;;;;;;;;;;;;-1:-1:-1;;;;;3687:32:154;;;;;6127:24:118;;;;;6161:30;;;;;6201:40;;;;;;6251:64;;;501:44:151;;;961:24:152;:8;:22;:24::i;:::-;950:35;;-1:-1:-1;1756:22:117::4;:20;:22::i;:::-;1203:582:::0;;;;;;;520:45143;;1711:286:37;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:37;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:37:o;5939:280:26:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:26;;3224:2:267;5998:66:26;;;3206:21:267;3263:2;3243:18;;;3236:30;3302:34;3282:18;;;3275:62;-1:-1:-1;;;3353:18:267;;;3346:37;3400:19;;5998:66:26;3022:403:267;5998:66:26;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:26;6140:15;6125:30;;;;;;6174:28;;3572:36:267;;;6174:28:26;;3560:2:267;3545:18;6174:28:26;;;;;;;6074:139;5939:280::o;14:151:267:-;-1:-1:-1;;;;;109:31:267;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:167::-;248:13;;301:10;290:22;;280:33;;270:61;;327:1;324;317:12;270:61;170:167;;;:::o;342:127::-;403:10;398:3;394:20;391:1;384:31;434:4;431:1;424:15;458:4;455:1;448:15;474:1818;709:6;717;725;733;741;749;757;810:3;798:9;789:7;785:23;781:33;778:53;;;827:1;824;817:12;778:53;859:9;853:16;878:51;923:5;878:51;:::i;:::-;998:2;983:18;;977:25;948:5;;-1:-1:-1;1011:53:267;977:25;1011:53;:::i;:::-;1135:2;1120:18;;1114:25;1083:7;;-1:-1:-1;1148:53:267;1114:25;1148:53;:::i;:::-;1272:2;1257:18;;1251:25;1220:7;;-1:-1:-1;1285:53:267;1251:25;1285:53;:::i;:::-;1357:7;-1:-1:-1;1383:49:267;1427:3;1412:19;;1383:49;:::i;:::-;1373:59;;1451:49;1495:3;1484:9;1480:19;1451:49;:::i;:::-;1544:3;1529:19;;1523:26;1441:59;;-1:-1:-1;;;;;;1561:30:267;;1558:50;;;1604:1;1601;1594:12;1558:50;1627:22;;1680:4;1672:13;;1668:27;-1:-1:-1;1658:55:267;;1709:1;1706;1699:12;1658:55;1736:9;;-1:-1:-1;;;;;1757:30:267;;1754:56;;;1790:18;;:::i;:::-;1839:2;1833:9;1931:2;1893:17;;-1:-1:-1;;1889:31:267;;;1922:2;1885:40;1881:54;1869:67;;-1:-1:-1;;;;;1951:34:267;;1987:22;;;1948:62;1945:88;;;2013:18;;:::i;:::-;2049:2;2042:22;2073;;;2114:15;;;2131:2;2110:24;2107:37;-1:-1:-1;2104:57:267;;;2157:1;2154;2147:12;2104:57;2206:6;2201:2;2197;2193:11;2188:2;2180:6;2176:15;2170:43;2259:1;2254:2;2245:6;2237;2233:19;2229:28;2222:39;2280:6;2270:16;;;;;474:1818;;;;;;;;;;:::o;2297:418::-;2446:2;2435:9;2428:21;2409:4;2478:6;2472:13;2521:6;2516:2;2505:9;2501:18;2494:34;2580:6;2575:2;2567:6;2563:15;2558:2;2547:9;2543:18;2537:50;2636:1;2631:2;2622:6;2611:9;2607:22;2603:31;2596:42;2706:2;2699;2695:7;2690:2;2682:6;2678:15;2674:29;2663:9;2659:45;2655:54;2647:62;;;2297:418;;;;:::o;2720:297::-;2838:12;;2885:4;2874:16;;;2868:23;;2838:12;2903:16;;2900:111;;;2997:1;2993:6;2983;2977:4;2973:17;2970:1;2966:25;2962:38;2955:5;2951:50;2942:59;;2900:111;;2720:297;;;:::o;3430:184::-;520:45143:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "520:45143:117:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43916:420;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1976:32:267;;;1958:51;;1946:2;1931:18;43916:420:117;;;;;;;;33800:303;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;43463:408::-;;;;;;:::i;:::-;;:::i;:::-;;;3630:14:267;;3623:22;3605:41;;3593:2;3578:18;43463:408:117;3465:187:267;3762:401:154;;;;;;:::i;:::-;;:::i;:::-;;32923:410:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;40757:177::-;;;;;;:::i;:::-;;:::i;12533:316::-;;;;;;:::i;:::-;;:::i;1772:42:118:-;;;;;;;;6297:10:267;6285:23;;;6267:42;;6255:2;6240:18;1772:42:118;6123:192:267;42875:543:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;42090:740::-;;;;;;:::i;:::-;;:::i;41420:232::-;;;;;;:::i;:::-;;:::i;12894:706::-;;;;;;:::i;:::-;;:::i;2013:709::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;34637:690::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;41697:348::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;354:59:151:-;;;;;38609:364:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7887:468::-;;;;;;:::i;:::-;;:::i;44623:153::-;;;;;;:::i;:::-;;:::i;:::-;;;16991:25:267;;;16979:2;16964:18;44623:153:117;16845:177:267;13645:554:117;;;;;;:::i;:::-;;:::i;38174:390::-;;;;;;:::i;:::-;;:::i;1031:106:152:-;;;:::i;:::-;;;;;;;:::i;11439:317:117:-;;;;;;:::i;:::-;;:::i;4199:85:154:-;;;:::i;4933:163::-;;;;;;:::i;:::-;5065:7;;5036:1;:10;;;;;;;;5065:14;;;5064:24;;4933:163;4810:87;4883:7;;4810:87;;40523:189:117;;;;;;:::i;:::-;;:::i;35653:240::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;19409:31:267;;;19391:50;;19379:2;19364:18;35653:240:117;19247:200:267;9809:1585:117;;;;;;:::i;:::-;;:::i;40979:178::-;;;;;;:::i;:::-;;:::i;40065:413::-;;;;;;:::i;:::-;;:::i;1894:54:118:-;;;;;1964:47:154;;;;;34148:444:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;39018:462::-;;;;;;:::i;:::-;;:::i;2767:5075::-;;;;;;:::i;:::-;;:::i;37964:165::-;;;;;;:::i;:::-;;:::i;12250:238::-;;;;;;:::i;:::-;;:::i;8400:1364::-;;;;;;:::i;:::-;;:::i;41202:173::-;;;;;;:::i;:::-;;:::i;14244:648::-;;;;;;:::i;:::-;;:::i;39525:495::-;;;;;;:::i;:::-;;:::i;:::-;;;;26562:14:267;;26555:22;26537:41;;26626:10;26614:23;;;26609:2;26594:18;;26587:51;26510:18;39525:495:117;26371:273:267;32739:139:117;;;;;;:::i;:::-;;:::i;33378:377::-;;;;;;:::i;:::-;;:::i;11801:404::-;;;;;;:::i;:::-;;:::i;1523:40:118:-;;;;;44821:840:117;;;;;;:::i;:::-;;:::i;1365:46:118:-;;;;;44381:197:117;;;;;;:::i;:::-;;:::i;35372:236::-;;;;;;:::i;:::-;;:::i;4320:454:154:-;;;;;;:::i;:::-;;:::i;1830:138:117:-;;;;;;:::i;:::-;;:::i;43916:420::-;44019:7;44148:31;44182:25;:44;44208:17;:11;:15;:17::i;:::-;44182:44;;;;;;;;;;;-1:-1:-1;44182:44:117;;-1:-1:-1;;;;;44182:44:117;;-1:-1:-1;44243:37:117;;:86;;44306:23;44243:86;;;597:42:118;44243:86:117;44236:93;43916:420;-1:-1:-1;;;43916:420:117:o;33800:303::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;34008:60:117;34030:8;34040:17;:11;:15;:17::i;:::-;34059:8;34008:21;:60::i;:::-;33973:95;33800:303;-1:-1:-1;;;;;;33800:303:117:o;43463:408::-;-1:-1:-1;;;;;43614:28:117;;43563:4;43614:28;;;:18;:28;;;;;43563:4;;;43643:17;:11;:15;:17::i;:::-;43614:47;;;;;;;;;;;;;;-1:-1:-1;43614:47:117;43579:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43579:82:117;43806:58;;;43843:6;:21;;;43827:37;;:12;:37;;43806:58;43799:65;;;43463:408;;;;;:::o;3762:401:154:-;2390:18;:16;:18::i;:::-;3876:7:::1;::::0;4025:37;;::::1;4024:62:::0;::::1;4016:97;;;;-1:-1:-1::0;;;4016:97:154::1;;;;;;;;;;;;4123:33;4140:15;4123:16;:33::i;:::-;3836:327;3762:401:::0;:::o;32923:410:117:-;-1:-1:-1;;;;;33051:23:117;;33034:14;33051:23;;;:13;:23;;;;;33002:20;;33034:14;33051:32;;:30;:32::i;:::-;33034:49;;33094:33;33148:6;-1:-1:-1;;;;;33130:25:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;33130:25:117;;;;;;;;;;;;;;;-1:-1:-1;33094:61:117;-1:-1:-1;33170:9:117;33165:132;33189:6;33185:1;:10;33165:132;;;-1:-1:-1;;;;;33256:23:117;;;;;;:13;:23;;;;;33234:52;;33256:29;;33283:1;33256:26;:29::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;703:137:147;;;;;;;;;767:2;750:19;;;703:137;;;;;;;;;;;559:288;33234:52:117;33216:12;33229:1;33216:15;;;;;;;;:::i;:::-;;;;;;;;;;:70;33197:3;;33165:132;;;-1:-1:-1;33314:12:117;32923:410;-1:-1:-1;;;32923:410:117:o;40757:177::-;40912:14;;;;;40886:15;;-1:-1:-1;;;;;40872:30:117;40849:4;40872:30;;;:13;:30;;;;;;:55;;;;;;;:39;:55;:::i;12533:316::-;12631:3;713:22:151;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:151;;;;;;;;;;;;-1:-1:-1;;;;;12654:27:117;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;12646:62;;;;-1:-1:-1::0;;;12646:62:117::1;;;;;;;;;;;;12723:9;12718:125;12738:17:::0;;::::1;12718:125;;;12776:56;12795:3;12800:6;;12807:1;12800:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;597:42:118;12776:18:117;:56::i;:::-;12757:3;;12718:125;;;;12533:316:::0;;;;:::o;42875:543::-;43046:18;43328:83;43354:11;43367:9;43378:10;43397:12;43328:25;:83::i;:::-;43321:90;42875:543;-1:-1:-1;;;;42875:543:117:o;42090:740::-;42296:33;42358:74;42384:11;42397:9;42408:10;42420:11;42358:25;:74::i;:::-;42341:91;-1:-1:-1;42448:9:117;42443:381;42467:9;:16;42463:1;:20;42443:381;;;42621:46;42641:9;42651:1;42641:12;;;;;;;;:::i;:::-;;;;;;;42655:11;42621:19;:46::i;:::-;42616:198;;42692:9;42687:113;42711:10;:17;42707:1;:21;42687:113;;;42780:1;42757:14;42772:1;42757:17;;;;;;;;:::i;:::-;;;;;;;42775:1;42757:20;;;;;;;;:::i;:::-;;;;;;;;;;:24;42730:3;;42687:113;;;;42616:198;42485:3;;42443:381;;;;42090:740;;;;;;:::o;41420:232::-;-1:-1:-1;;;;;41544:18:117;;;41493:13;41544:18;;;:13;:18;;;;;;41493:13;;41544:18;41580:32;;:65;;41636:9;41580:65;;;-1:-1:-1;41629:3:117;;41573:72;-1:-1:-1;41420:232:117:o;12894:706::-;13081:3;713:22:151;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:151;;;;;;;;;;;;13104:48:117;;::::1;13096:85;;;;-1:-1:-1::0;;;13096:85:117::1;;;;;;;;;;;;-1:-1:-1::0;;;;;13199:27:117;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;13191:62;;;;-1:-1:-1::0;;;13191:62:117::1;;;;;;;;;;;;13268:9;13263:331;13283:17:::0;;::::1;13263:331;;;13321:17;13341:24;;13366:1;13341:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13321:47:::0;-1:-1:-1;;;;;;13390:23:117;::::1;13382:52;;;;-1:-1:-1::0;;;13382:52:117::1;;;;;;;;;;;;-1:-1:-1::0;;;;;;;13456:33:117;::::1;::::0;13448:76:::1;;;;-1:-1:-1::0;;;13448:76:117::1;;;;;;;;;;;;13538:45;13557:3;13562:6;;13569:1;13562:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13573;13538:18;:45::i;:::-;-1:-1:-1::0;13302:3:117::1;;13263:331;;;;12894:706:::0;;;;;;:::o;2013:709::-;2183:7;2192:16;1094:1:118;2960:30:154;2984:5;2960:23;:30::i;:::-;2169:3:117::1;713:22:151;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:151::1;;;;;;;;;;;;2303:30:117::2;2336:38;;;;;;;;2348:3;-1:-1:-1::0;;;;;2336:38:117::2;;;;;2353:6;:20;;;;;;;;;;:::i;:::-;2336:38;;::::0;;2303:71;-1:-1:-1;2420:18:117::2;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;:25:::0;-1:-1:-1;2392:17:117::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;:53;2384:90;;;;-1:-1:-1::0;;;2384:90:117::2;;;;;;;;;;;;2532:14;::::0;;::::2;::::0;2506:15;;-1:-1:-1;;;;;2492:30:117::2;;::::0;;;:13:::2;:30:::0;;;;;;;:55:::2;::::0;::::2;::::0;;::::2;::::0;:39:::2;:55;:::i;:::-;2484:86;;;;-1:-1:-1::0;;;2484:86:117::2;;;;;;;;;;;;2588:49;2608:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;2625:11;2588:19;:49::i;:::-;2580:82;;;;-1:-1:-1::0;;;2580:82:117::2;;;;;;;;;;;;2680:35;2695:6;2703:11;2680:14;:35::i;:::-;2673:42;;;;;3000:1:154::1;2013:709:117::0;;;;;;:::o;34637:690::-;-1:-1:-1;;;;;34822:23:117;;34805:14;34822:23;;;:13;:23;;;;;34752:20;;;;34822:32;;:30;:32::i;:::-;34805:49;;34865:33;34919:6;-1:-1:-1;;;;;34901:25:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;34901:25:117;;;;;;;;;;;;;;;;34865:61;;34936:32;34988:6;-1:-1:-1;;;;;34971:24:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;34971:24:117;;-1:-1:-1;;34971:24:117;;;;;;;;;;;-1:-1:-1;34936:59:117;-1:-1:-1;35011:9:117;35006:269;35030:6;35026:1;:10;35006:269;;;-1:-1:-1;;;;;35112:23:117;;35057:30;35112:23;;;:13;:23;;;;;35090:52;;35112:29;;35139:1;35112:26;:29::i;35090:52::-;35057:85;;35175:11;35157:12;35170:1;35157:15;;;;;;;;:::i;:::-;;;;;;:29;;;;35218:46;35232:8;35242:11;35255:8;35218:13;:46::i;:::-;35200:12;35213:1;35200:15;;;;;;;;:::i;:::-;;;;;;;;;;:64;-1:-1:-1;35038:3:117;;35006:269;;;-1:-1:-1;35293:12:117;;-1:-1:-1;35307:12:117;-1:-1:-1;;34637:690:117;;;;;;:::o;41697:348::-;41802:18;41832:23;41858:50;:22;:41;41881:17;:11;:15;:17::i;:::-;41858:41;;;;;;;;;;;:48;:50::i;38609:364::-;38706:15;38733:29;38778:9;:16;-1:-1:-1;;;;;38765:30:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38765:30:117;-1:-1:-1;38733:62:117;-1:-1:-1;38811:9:117;38806:130;38830:9;:16;38826:1;:20;38806:130;;;38886:39;38902:9;38912:1;38902:12;;;;;;;;:::i;:::-;;;;;;;38916:8;38886:15;:39::i;:::-;38867:13;38881:1;38867:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;38867:58:117;;;:16;;;;;;;;;;;:58;38848:3;;38806:130;;7887:468;939:1:118;2960:30:154;2984:5;2960:23;:30::i;:::-;8102:38:117;;::::1;8094:75;;;;-1:-1:-1::0;;;8094:75:117::1;;;;;;;;;;;;8184:9;8179:170;8199:21:::0;;::::1;8179:170;;;8241:97;8276:8;8296:10;;8307:1;8296:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8323:10;;8334:1;8323:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8241:23;:97::i;:::-;8222:3;;8179:170;;44623:153:::0;44715:7;44741:9;:28;44751:17;:11;:15;:17::i;:::-;44741:28;;;;;;;;;;;;44734:35;;44623:153;;;:::o;13645:554::-;13801:3;713:22:151;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:151;;;;;;;;;;;;13849:31:117::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;13849:31:117;::::1;::::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;13816:30:::1;13898:18:::0;;;:13:::1;:18:::0;;;;;;13849:31;;13898:43:::1;::::0;:18;:27:::1;:43;:::i;:::-;13890:74;;;;-1:-1:-1::0;;;13890:74:117::1;;;;;;;;;;;;13980:9;13975:218;13995:21:::0;;::::1;13975:218;;;14037:145;14080:11;14093:10;;14104:1;14093:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;14108:60;14136:31;;;;;;;;14148:3;-1:-1:-1::0;;;;;14136:31:117::1;;;;;14153:13;14136:31;;;;::::0;14108:27:::1;:60::i;:::-;14037:25;:145::i;:::-;14018:3;;13975:218;;38174:390:::0;38294:15;38321:29;38366:10;:17;-1:-1:-1;;;;;38353:31:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38353:31:117;-1:-1:-1;38321:63:117;-1:-1:-1;38400:9:117;38395:132;38419:10;:17;38415:1;:21;38395:132;;;38476:40;38492:8;38502:10;38513:1;38502:13;;;;;;;;:::i;:::-;;;;;;;38476:15;:40::i;:::-;38457:13;38471:1;38457:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;38457:59:117;;;:16;;;;;;;;;;;:59;38438:3;;38395:132;;1031:106:152;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;11439:317:117:-;11522:10;-1:-1:-1;;;;;11544:10:117;11522:33;;11518:186;;11579:23;11593:8;11579:13;:23::i;:::-;11571:49;;;;-1:-1:-1;;;11571:49:117;;;;;;;;;;;;11642:31;;-1:-1:-1;;;11642:31:117;;-1:-1:-1;;;;;1976:32:267;;;11642:31:117;;;1958:51:267;11642:10:117;:21;;;;1931:18:267;;11642:31:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11634:59;;;;-1:-1:-1;;;11634:59:117;;;;;;;;;;;;11713:36;11733:8;11743:5;11713:19;:36::i;4199:85:154:-;2390:18;:16;:18::i;:::-;4249:28:::1;-1:-1:-1::0;;4249:16:154::1;:28::i;:::-;4199:85::o:0;40523:189:117:-;40625:4;40648:57;40696:8;40648:19;:38;40668:17;:11;:15;:17::i;:::-;40648:38;;;;;;;;;;;:47;;:57;;;;:::i;35653:240::-;35747:6;35768:30;35802:44;35827:8;35837;35802:24;:44::i;:::-;35765:81;35653:240;-1:-1:-1;;;;;35653:240:117:o;9809:1585::-;1276:1:118;2960:30:154;2984:5;2960:23;:30::i;:::-;10078::117::1;10092:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;10078:13;:30::i;:::-;:59;;;-1:-1:-1::0;10112:25:117::1;10126:10;::::0;;;::::1;::::0;::::1;;:::i;10112:25::-;10070:85;;;;-1:-1:-1::0;;;10070:85:117::1;;;;;;;;;;;;10171:9;10166:1062;10190:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;:28;;10186:1;:32;10166:1062;;;10321:30;10354:49;;;;;;;;10366:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10354:49:117::1;::::0;;::::1;;10378:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;10400:1;10378:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10354:49;;;;::::0;10321:82:::1;;10425:50;10460:11;:14;;;10425:50;;:13;:25;10439:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10425:25:117::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;10425:25:117;;:34:::1;:50::i;:::-;10417:81;;;;-1:-1:-1::0;;;10417:81:117::1;;;;;;;;;;;;10520:18;:35;10539:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;10520:35:117::1;-1:-1:-1::0;;;;;10520:35:117::1;;;;;;;;;;;;:54;10556:17;:11;:15;:17::i;:::-;10520:54:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;10520:54:117;:65;::::1;;10512:92;;;;-1:-1:-1::0;;;10512:92:117::1;;;;;;;;;;;;10668:57;10707:17;:11;:15;:17::i;:::-;10668:14;:31;10683:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;10668:31:117::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;10668:31:117;;:38:::1;:57::i;:::-;-1:-1:-1::0;10739:62:117::1;10785:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;10739:19;:38;10759:17;:11;:15;:17::i;:::-;10739:38;;;;;;;;;;;:45;;:62;;;;:::i;:::-;-1:-1:-1::0;10851:15:117::1;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;10820:60:117::1;;10868:11;10820:60;;;;;;:::i;:::-;;;;;;;;11073:144;::::0;;;;::::1;::::0;;;-1:-1:-1;11073:144:117;;::::1;::::0;::::1;11161:41;11184:18;11168:12;11161:41;:::i;:::-;11073:144;;::::0;;11016:18:::1;:35;11035:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;11016:35:117::1;-1:-1:-1::0;;;;;11016:35:117::1;;;;;;;;;;;;:54;11052:17;:11;:15;:17::i;:::-;11016:54:::0;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;11016:54:117;:201;;;;;;;::::1;::::0;::::1;;;;-1:-1:-1::0;;11016:201:117;::::1;;::::0;;;;-1:-1:-1;;11016:201:117;;;;;;;::::1;::::0;;-1:-1:-1;11016:201:117;10220:3:::1;10166:1062;;;-1:-1:-1::0;11289:27:117::1;11305:10;::::0;;;::::1;::::0;::::1;;:::i;11289:27::-;-1:-1:-1::0;;;;;11289:46:117::1;;11336:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;11353:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;11365:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;11289:98;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9809:1585:::0;;:::o;40979:178::-;41068:16;41103:47;:19;:38;41123:17;:11;:15;:17::i;40065:413::-;-1:-1:-1;;;;;40194:24:117;;40177:14;40194:24;;;:14;:24;;;;;40145:20;;40177:14;40194:33;;:31;:33::i;:::-;40177:50;;40237:33;40291:6;-1:-1:-1;;;;;40273:25:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;40273:25:117;;;;;;;;;;;;;;;-1:-1:-1;40237:61:117;-1:-1:-1;40314:9:117;40309:133;40333:6;40329:1;:10;40309:133;;;-1:-1:-1;;;;;40400:24:117;;;;;;:14;:24;;;;;40378:53;;40400:30;;40428:1;40400:27;:30::i;40378:53::-;40360:12;40373:1;40360:15;;;;;;;;:::i;:::-;;;;;;;;;;:71;40341:3;;40309:133;;34148:444;34305:19;34336:32;34388:9;:16;-1:-1:-1;;;;;34371:34:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;34371:34:117;;-1:-1:-1;;34371:34:117;;;;;;;;;;;-1:-1:-1;34336:69:117;-1:-1:-1;34421:9:117;34416:140;34440:9;:16;34436:1;:20;34416:140;;;34495:50;34509:9;34519:1;34509:12;;;;;;;;:::i;:::-;;;;;;;34523:11;34536:8;34495:13;:50::i;:::-;34477:12;34490:1;34477:15;;;;;;;;:::i;:::-;;;;;;;;;;:68;34458:3;;34416:140;;39018:462;39173:15;39200:29;39245:10;:17;-1:-1:-1;;;;;39232:31:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39232:31:117;-1:-1:-1;39200:63:117;-1:-1:-1;39279:9:117;39274:169;39298:10;:17;39294:1;:21;39274:169;;;-1:-1:-1;;;;;39355:30:117;;;;;;:20;:30;;;;;39386:13;;39355:77;;39419:11;;39355:30;39386:10;;39397:1;;39386:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;39355:45:117;-1:-1:-1;;;;;39355:45:117;;;;;;;;;;;;:57;;:77;;;;:::i;:::-;39336:13;39350:1;39336:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;39336:96:117;;;:16;;;;;;;;;;;:96;39317:3;;39274:169;;2767:5075;939:1:118;2960:30:154;2984:5;2960:23;:30::i;:::-;3099:23:117::1;3113:8;3099:13;:23::i;:::-;3091:49;;;;-1:-1:-1::0;;;3091:49:117::1;;;;;;;;;;;;3232:30;3287:10;3299:12;3315:28;3334:8;3315:18;:28::i;:::-;3286:57;;;;3365:5;3357:46;;;;-1:-1:-1::0;;;3357:46:117::1;;;;;;;;;;;;3443:5:::0;-1:-1:-1;3474:9:117::1;::::0;-1:-1:-1;3469:4367:117::1;3493:6;:13;3489:1;:17;3469:4367;;;3566:6;3573:1;3566:9;;;;;;;;:::i;:::-;;;;;;;:23;;;:30;3535:6;3542:1;3535:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;:61;3527:98;;;;-1:-1:-1::0;;;3527:98:117::1;;;;;;;;;;;;4078:30;4111:6;4118:1;4111:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;:21;4194:14;;::::1;::::0;4168:15;;-1:-1:-1;;;;;4154:30:117::1;4111:21;4154:30:::0;;;:13:::1;:30:::0;;;;;;;4111:21;;-1:-1:-1;4154:55:117::1;::::0;::::1;::::0;;::::1;::::0;:39:::1;:55;:::i;:::-;4146:86;;;;-1:-1:-1::0;;;4146:86:117::1;;;;;;;;;;;;4247:25;4275:42;4295:8;4305:11;4275:19;:42::i;:::-;4247:70:::0;-1:-1:-1;4337:9:117::1;4332:3494;4356:6;4363:1;4356:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;4352:1;:31;4332:3494;;;4408:18;4429:6;4436:1;4429:9;;;;;;;;:::i;:::-;;;;;;;:20;;;4450:1;4429:23;;;;;;;;:::i;:::-;;;;;;;4408:44;;4747:61;4771:8;4781;4791:16;4747:23;:61::i;:::-;4828:24;4854:28;4906:60;4928:8;4938:17;:11;:15;:17::i;4906:60::-;4827:139;;;;4992:10;:22;;;:27;;5018:1;4992:27;4984:66;;;;-1:-1:-1::0;;;4984:66:117::1;;;;;;;;;;;;5203:16;5222:79;5245:11;5258:8;5268:10;5280:20;5222:22;:79::i;:::-;5203:98;;5401:67;5412:10;:27;;;5441:6;5448:1;5441:9;;;;;;;;:::i;:::-;;;;;;;:23;;;5465:1;5441:26;;;;;;;;:::i;:::-;;;;;;;5401:10;:67::i;:::-;5376:92;;:22;::::0;::::1;:92:::0;;;5520:1:::1;5494:27:::0;5486:53:::1;;;;-1:-1:-1::0;;;5486:53:117::1;;;;;;;;;;;;5640:1;5615:10;:22;;;:26;;;5611:1725;;;5669:11;5665:1105;;;5903:65;5950:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;5903:27:117;;::::1;;::::0;;;:17:::1;:27;::::0;;;;;;;:37;;::::1;::::0;;;;;;;2195:10:83;;-1:-1:-1;;;2195:10:83;;;;;;2176:16;2215:22;;;:11;;;;:22;;;;;;:30;;;;2279:26;;-1:-1:-1;;;;;2279:26:83;;;2292:13;;;;2279:26;;;;;2096:226;5903:65:117::1;6245:41;6268:18;6252:12;6245:41;:::i;:::-;:45;::::0;6289:1:::1;6245:45;:::i;:::-;6220:70;;:22;::::0;::::1;:70:::0;5611:1725:::1;;5665:1105;6481:60;6492:4;:24;;;6518:10;:22;;;6481:10;:60::i;:::-;-1:-1:-1::0;;;;;6454:87:117::1;:24;::::0;::::1;:87:::0;6598:9;;:6;;6605:1;;6598:9;::::1;;;;;:::i;:::-;;;;;;;:23;;;6622:1;6598:26;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;6568:56:117::1;::::0;;:27:::1;6650:22:::0;;::::1;:26:::0;6702:45:::1;6734:12;6702:45;:22;::::0;::::1;:45:::0;5611:1725:::1;;;6823:1;6798:10;:22;;;:26;;;6794:542;;;7062:60;7073:4;:24;;;7099:10;:22;;;7062:10;:60::i;:::-;-1:-1:-1::0;;;;;7035:87:117;;::::1;:24;::::0;::::1;:87:::0;;;7180:17;;7152:45;;::::1;-1:-1:-1::0;7152:45:117::1;7144:79;;;;-1:-1:-1::0;;;7144:79:117::1;;;;;;;;;;;;7271:46;7294:23:::0;7278:12:::1;7271:46;:::i;:::-;7246:71;;:22;::::0;::::1;:71:::0;6794:542:::1;7389:78;7411:8;7421:17;:11;:15;:17::i;:::-;7440:8;7450:4;7456:10;7389:21;:78::i;:::-;7554:257;7593:8;7623:11;7656:8;7686:63;7697:10;:27;;;7726:10;:22;;;7686:10;:63::i;:::-;7771:10;:22;;;7554:257;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;4385:3:117::1;::::0;;::::1;::::0;-1:-1:-1;4332:3494:117::1;::::0;-1:-1:-1;4332:3494:117::1;;-1:-1:-1::0;;;3508:3:117::1;;3469:4367;;37964:165:::0;-1:-1:-1;;;;;38073:30:117;;;38048:6;38073:30;;;:20;:30;;;;;;;;:40;;;;;;;;;;;:49;;:47;:49::i;12250:238::-;12344:3;713:22:151;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:151;;;;;;;;;;;;-1:-1:-1;;;;;12364:27:117;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;12359:68;;-1:-1:-1::0;;;;;12393:27:117;::::1;;::::0;;;:22:::1;:27;::::0;;;;:34;;-1:-1:-1;;12393:34:117::1;12423:4;12393:34;::::0;;12359:68:::1;12464:3;-1:-1:-1::0;;;;;12442:39:117::1;;12469:11;;12442:39;;;;;;;:::i;:::-;;;;;;;;12250:238:::0;;;;:::o;8400:1364::-;1276:1:118;2960:30:154;2984:5;2960:23;:30::i;:::-;8598:8:117::1;713:22:151;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:151::1;;;;;;;;;;;;8675:31:117::2;::::0;-1:-1:-1;;;8675:31:117;;-1:-1:-1;;;;;1976:32:267;;;8675:31:117::2;::::0;::::2;1958:51:267::0;8675:10:117::2;:21;::::0;::::2;::::0;1931:18:267;;8675:31:117::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8667:59;;;;-1:-1:-1::0;;;8667:59:117::2;;;;;;;;;;;;8742:9;8737:814;8761:21;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;:28;;8757:1;:32;8737:814;;;8939:49;::::0;;;;::::2;::::0;;;8906:30:::2;::::0;8939:49;8951:10:::2;;::::0;::::2;:6:::0;:10:::2;:::i;:::-;-1:-1:-1::0;;;;;8939:49:117::2;;;;;8963:6;:21;;;;;;;;:::i;:::-;8985:1;8963:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8939:49;::::0;;::::2;::::0;;;9050:14:::2;::::0;;::::2;::::0;9024:15;;-1:-1:-1;;;;;9010:30:117::2;;::::0;;;:13:::2;:30:::0;;;;;;;8906:82;;-1:-1:-1;9010:55:117::2;::::0;:30;:55;;::::2;::::0;:39:::2;:55;:::i;:::-;9002:86;;;;-1:-1:-1::0;;;9002:86:117::2;;;;;;;;;;;;9111:42;9131:8;9141:11;9111:19;:42::i;:::-;9110:43;9102:74;;;;-1:-1:-1::0;;;9102:74:117::2;;;;;;;;;;;;9235:47;9264:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;9235:24:117;::::2;;::::0;;;:14:::2;:24;::::0;;;;;:28:::2;:47::i;:::-;;9296:52;9339:8;9296:19;:38;9316:17;:11;:15;:17::i;:::-;9296:38;;;;;;;;;;;:42;;:52;;;;:::i;:::-;;9394:8;-1:-1:-1::0;;;;;9367:49:117::2;;9404:11;9367:49;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;9475:28:117;::::2;;::::0;;;:18:::2;:28;::::0;;;;9536:4:::2;::::0;9504:17:::2;:11:::0;:15:::2;:17::i;:::-;9475:47:::0;;::::2;::::0;::::2;::::0;;;;;;-1:-1:-1;9475:47:117;:65;;-1:-1:-1;;9475:65:117::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;;8791:3:117::2;8737:814;;;-1:-1:-1::0;9655:27:117::2;9671:10;;::::0;::::2;:6:::0;:10:::2;:::i;9655:27::-;-1:-1:-1::0;;;;;9655:44:117::2;;9700:8:::0;9710:10:::2;;::::0;::::2;:6:::0;:10:::2;:::i;:::-;9722:21;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;9745:11;;::::0;::::2;:6:::0;:11:::2;:::i;:::-;9655:102;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3000:1:154::1;8400:1364:117::0;;;:::o;41202:173::-;41295:7;41321:47;:19;:38;41341:17;:11;:15;:17::i;:::-;41321:38;;;;;;;;;;;:45;:47::i;14244:648::-;14405:3;713:22:151;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:151;;;;;;;;;;;;14453:31:117::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;14453:31:117;::::1;::::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;14420:30:::1;14502:18:::0;;;:13:::1;:18:::0;;;;;;14453:31;;14502:43:::1;::::0;:18;:27:::1;:43;:::i;:::-;14494:74;;;;-1:-1:-1::0;;;14494:74:117::1;;;;;;;;;;;;14578:22;14603:17;:11;:15;:17::i;:::-;14578:42:::0;-1:-1:-1;14635:9:117::1;14630:256;14650:21:::0;;::::1;14630:256;;;14700:69;14754:10;;14765:1;14754:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;14700:38;::::0;;;:22:::1;:38;::::0;;;;;:45:::1;:69::i;:::-;14692:106;;;;-1:-1:-1::0;;;14692:106:117::1;;;;;;;;;;;;14817:58;14848:11;14861:10;;14872:1;14861:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;14817:58;;;;;;;:::i;:::-;;;;;;;;14673:3;;14630:256;;39525:495:::0;-1:-1:-1;;;;;39664:30:117;;39606:4;39664:30;;;:20;:30;;;;;;;;39630:64;;;;;;;;;;;;;;;;;-1:-1:-1;;;39630:64:117;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39630:64:117;;;;;;;;;;39606:4;;39630:64;;;;39847:21;;;;:57;;;39888:4;:16;;;39872:32;;:12;:32;;39847:57;39843:139;;;-1:-1:-1;;39928:17:117;;;;39967:4;39843:139;40000:5;40007;;-1:-1:-1;39525:495:117;-1:-1:-1;;;39525:495:117:o;32739:139::-;-1:-1:-1;;;;;32844:18:117;;32818:7;32844:18;;;:13;:18;;;;;:27;;:25;:27::i;33378:377::-;-1:-1:-1;;;;;33561:29:117;;33535:23;33561:29;;;:19;:29;;;;;33505:18;;33535:23;33561:57;;33535:23;33591:17;:11;:15;:17::i;11801:404::-;11886:3;713:22:151;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:151;;;;;;;;;;;;12051:26:117::1;::::0;-1:-1:-1;;;12051:26:117;;-1:-1:-1;;;;;1976:32:267;;;12051:26:117::1;::::0;::::1;1958:51:267::0;12051:21:117;::::1;::::0;::::1;::::0;1931:18:267;;12051:26:117::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12043:58;;;;-1:-1:-1::0;;;12043:58:117::1;;;;;;;;;;;;-1:-1:-1::0;;;;;12111:18:117;;::::1;;::::0;;;:13:::1;:18;::::0;;;;:30;;-1:-1:-1;;;;;;12111:30:117::1;::::0;;::::1;::::0;;;::::1;::::0;;12156:42:::1;12111:18:::0;12177:20:::1;12111:18:::0;12177:15:::1;:20::i;:::-;12156:42;::::0;;-1:-1:-1;;;;;35143:32:267;;;35125:51;;35212:32;;;;35207:2;35192:18;;35185:60;35098:18;12156:42:117::1;;;;;;;;11801:404:::0;;;:::o;44821:840::-;44911:4;45282:35;45320:27;45338:8;45320:17;:27::i;:::-;45282:65;;45357:34;45394:26;45411:8;45394:16;:26::i;:::-;45357:63;;45547:52;45574:8;45584:14;45547:26;:52::i;:::-;:107;;;;45603:51;45630:8;45640:13;45603:26;:51::i;44381:197::-;44485:4;597:42:118;44508:39:117;44535:11;44508:26;:39::i;:::-;-1:-1:-1;;;;;44508:63:117;;;;44381:197;-1:-1:-1;;44381:197:117:o;35372:236::-;35465:6;35484:29;35518:44;35543:8;35553;35518:24;:44::i;4320:454:154:-;2558:20;:18;:20::i;:::-;4438:7:::1;::::0;4632:20;::::1;4609:16:::0;::::1;4583:43:::0;::::1;4582:71;4574:106;;;;-1:-1:-1::0;;;4574:106:154::1;;;;;;;;;;;;4690:7;:25:::0;;;4730:37:::1;::::0;16991:25:267;;;4739:10:154::1;::::0;4730:37:::1;::::0;16979:2:267;16964:18;4730:37:154::1;;;;;;;4398:376;4320:454:::0;:::o;1830:138:117:-;3279:19:26;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:26;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:26;1713:19:34;:23;;;3387:66:26;;-1:-1:-1;3436:12:26;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:26;;35458:2:267;3325:201:26;;;35440:21:267;35497:2;35477:18;;;35470:30;35536:34;35516:18;;;35509:62;-1:-1:-1;;;35587:18:267;;;35580:44;35641:19;;3325:201:26;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:26;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:26;;;;;3562:65;1924:37:117::1;1941:19;1924:16;:37::i;:::-;3651:14:26::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:26;;;3721:14;;-1:-1:-1;35823:36:267;;3721:14:26;;35811:2:267;35796:18;3721:14:26;;;;;;;3269:483;1830:138:117;:::o;399:154:147:-;472:7;523:2;:6;;;538:2;:5;;;531:13;;506:39;;;;;;;;36045:2:267;36041:15;;;;-1:-1:-1;;36037:53:267;36025:66;;36147:3;36125:16;-1:-1:-1;;;;;;36121:59:267;36116:2;36107:12;;36100:81;36206:2;36197:12;;35870:345;506:39:147;;;;;;;;;;;;;498:48;;;:::i;25789:1185:117:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26012:175:117;;;;;;;-1:-1:-1;;;;;26053:30:117;;;;;:20;:30;;;;;:40;;;;;;;;;;;-1:-1:-1;;;26012:175:117;;26053:49;;:47;:49::i;:::-;-1:-1:-1;;;;;26012:175:117;;;;;-1:-1:-1;;;;;26137:29:117;;;;;;;:19;26012:175;26137:29;;;;;;;:39;;;;;;;;;;;;;;;26012:175;;;;;;;26229:21;;;:11;:21;;;;;:37;;;;;;;;:47;;;;;;;;;;26198:78;;;;;;;;;;;;;;-1:-1:-1;;;26198:78:117;;;;;;;;;;;-1:-1:-1;;;26198:78:117;;;;;;;;;;;25985:202;;-1:-1:-1;26361:12:117;:37;26357:93;;;26422:4;;-1:-1:-1;26428:10:117;-1:-1:-1;26414:25:117;;26357:93;26564:63;26575:10;:27;;;26604:10;:22;;;26564:10;:63::i;:::-;-1:-1:-1;;;;;26534:93:117;;;26719:22;;;;26534:27;26719:26;;;;;;26715:144;;;26788:60;26799:4;:24;;;26825:10;:22;;;26788:10;:60::i;:::-;-1:-1:-1;;;;;26761:87:117;:24;;;:87;26715:144;26894:1;26869:22;;;:26;;;26905:22;;;:26;26950:4;;-1:-1:-1;26869:10:117;-1:-1:-1;25789:1185:117;;;;;;;:::o;3014:117:154:-;3074:35;;-1:-1:-1;;;3074:35:154;;3098:10;3074:35;;;1958:51:267;3074:14:154;-1:-1:-1;;;;;3074:23:154;;;;1931:18:267;;3074:35:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3066:58;;;;-1:-1:-1;;;3066:58:154;;;;;;;;;;;5200:157;5281:7;:22;;;5318:32;;16991:25:267;;;5325:10:154;;5318:32;;16979:2:267;16964:18;5318:32:154;;;;;;;5200:157;:::o;6639:115:85:-;6702:7;6728:19;6736:3;4545:18;;4463:107;7096:129;7170:7;7196:22;7200:3;7212:5;7196:3;:22::i;11306:144::-;11383:4;4351:19;;;:12;;;:19;;;;;;:24;;11406:37;4255:127;1080:175:151;1175:73;;-1:-1:-1;;;1175:73:151;;-1:-1:-1;;;;;36769:32:267;;;1175:73:151;;;36751:51:267;1213:10:151;36818:18:267;;;36811:60;1233:4:151;36887:18:267;;;36880:60;1152:4:151;1240:7;;-1:-1:-1;;;;;;1240:7:151;36956:18:267;;;36949:61;1152:4:151;1175:20;:28;;;;;;36723:19:267;;1175:73:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;21127:890:117:-;21283:30;21316:38;;;;;;;;21328:3;-1:-1:-1;;;;;21316:38:117;;;;;21333:6;:20;;;;;;;;;;:::i;:::-;21316:38;;;;;21283:71;;21445:38;21468:11;:14;;;21445:38;;:13;:18;21459:3;-1:-1:-1;;;;;21445:18:117;-1:-1:-1;;;;;21445:18:117;;;;;;;;;;;;:22;;:38;;;;:::i;:::-;21437:69;;;;-1:-1:-1;;;21437:69:117;;;;;;;;;;;;21521:31;21540:11;21521:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;21587:47:117;;597:42:118;21587:47:117;;;;21645:198;;21728:23;21681:25;:44;21707:17;:11;:15;:17::i;:::-;21681:44;;;;;;;;;;;;:70;;;;;-1:-1:-1;;;;;21681:70:117;;;;;-1:-1:-1;;;;;21681:70:117;;;;;;21770:62;21795:11;21808:23;21770:62;;;;;;;:::i;:::-;;;;;;;;21645:198;21858:9;21853:158;21877:17;;;;:6;:17;:::i;:::-;:24;;21873:1;:28;21853:158;;;21922:78;21948:11;21961:17;;;;:6;:17;:::i;:::-;21979:1;21961:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;21983:16;21922:25;:78::i;:::-;21903:3;;21853:158;;29288:1907;29495:33;29573:9;:16;-1:-1:-1;;;;;29557:33:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29540:50;;29600:33;29636:10;-1:-1:-1;;;;;29636:29:117;;29666:9;29677:10;29636:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29636:52:117;;;;;;;;;;;;:::i;:::-;29600:88;-1:-1:-1;29704:9:117;29699:1490;29723:9;:16;29719:1;:20;29699:1490;;;29760:16;29779:9;29789:1;29779:12;;;;;;;;:::i;:::-;;;;;;;29760:31;;29840:10;:17;-1:-1:-1;;;;;29826:32:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29826:32:117;;29806:14;29821:1;29806:17;;;;;;;;:::i;:::-;;;;;;;;;;:52;29878:9;29873:1306;29897:10;:17;29893:1;:21;29873:1306;;;29939:18;29960:10;29971:1;29960:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;30234:30:117;;;30212:19;30234:30;;;:20;:30;;;;;;:40;;;;;;;;;;;29960:13;;-1:-1:-1;30234:49:117;;:47;:49::i;:::-;30212:71;;30305:12;-1:-1:-1;;;;;30305:17:117;30321:1;30305:17;30301:72;;30346:8;;;;30301:72;30391:23;30417:46;30431:8;30441:11;30454:8;30417:13;:46::i;:::-;30391:72;;30818:11;30797:32;;:5;:17;;;:32;;;;:57;;;;;30853:1;30833:5;:17;;;:21;;;30797:57;30793:182;;;30903:53;30914:5;:22;;;30938:5;:17;;;30903:10;:53::i;:::-;-1:-1:-1;;;;;30878:78:117;;;30793:182;31031:22;;30993:27;;31023:52;;-1:-1:-1;;;;;31023:31:117;;;;:52;;:38;:52::i;:::-;30993:82;;31116:48;31144:19;31116:14;31131:1;31116:17;;;;;;;;:::i;:::-;;;;;;;31134:1;31116:20;;;;;;;;:::i;:::-;;;;;;;:27;;:48;;;;:::i;:::-;31093:14;31108:1;31093:17;;;;;;;;:::i;:::-;;;;;;;31111:1;31093:20;;;;;;;;:::i;:::-;;;;;;:71;;;;;29921:1258;;;;29873:1306;29916:3;;29873:1306;;;-1:-1:-1;;29741:3:117;;29699:1490;;;;29530:1665;29288:1907;;;;;;:::o;3380:133:154:-;5065:7;;5036:1;:10;;;;5065:14;;;5064:24;3464:42;;;;-1:-1:-1;;;3464:42:154;;;;;;;;;;;;3380:133;:::o;15399:4301:117:-;15527:15;15544:23;15527:15;15623:17;;;;:6;:17;:::i;:::-;:24;;-1:-1:-1;;;;;15609:39:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15609:39:117;-1:-1:-1;15579:69:117;-1:-1:-1;15681:17:117;;;;:6;:17;:::i;:::-;:24;;-1:-1:-1;;;;;15667:39:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15667:39:117;;15658:48;;15788:9;:28;15798:17;:11;:15;:17::i;:::-;15788:28;;;;;;;;;;;;15786:30;;;;;:::i;:::-;;;;;-1:-1:-1;15786:30:117;-1:-1:-1;15912:9:117;15907:3675;15931:17;;;;:6;:17;:::i;:::-;:24;;15927:1;:28;15907:3675;;;16063:6;;;:93;;-1:-1:-1;16130:17:117;;;;:6;:17;:::i;:::-;16148:5;16152:1;16148;:5;:::i;:::-;16130:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16073:83:117;16089:17;;;;:6;:17;:::i;:::-;16107:1;16089:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16073:83:117;;16063:93;16038:184;;;;-1:-1:-1;;;16038:184:117;;;;;;;;;;;;16316:18;;;;:6;:18;:::i;:::-;16335:1;16316:21;;;;;;;:::i;:::-;;;;;;;16312:1;:25;:57;;;;-1:-1:-1;552:4:148;16341:18:117;;;;:6;:18;:::i;:::-;16360:1;16341:21;;;;;;;:::i;:::-;;;;;;;:28;;16312:57;16304:87;;;;-1:-1:-1;;;16304:87:117;;;;;;;;;;;;16496:81;16555:17;;;;:6;:17;:::i;:::-;16573:1;16555:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;16496:22;:41;16519:17;:11;:15;:17::i;16496:81::-;16471:164;;;;-1:-1:-1;;;16471:164:117;;;;;;;;;;;;16738:24;;16812:79;16834:15;;;;:6;:15;:::i;:::-;16851:17;:11;:15;:17::i;:::-;16870;;;;:6;:17;:::i;:::-;16888:1;16870:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;16812:21;:79::i;:::-;17198:27;;16737:154;;-1:-1:-1;16737:154:117;-1:-1:-1;;;;;;17198:32:117;:27;:32;17194:79;;17250:8;;;;17194:79;17504:23;17537:73;17588:18;;;;:6;:18;:::i;:::-;17607:1;17588:21;;;;;;;:::i;:::-;17545:27;;-1:-1:-1;;;;;17537:36:117;;17588:21;;;;;;;-1:-1:-1;17537:50:117;:73::i;:::-;17651:17;;17504:107;;-1:-1:-1;17698:51:117;-1:-1:-1;;;;;17698:25:117;;;;:51;;:32;:51::i;:::-;17682:10;17693:1;17682:13;;;;;;;;:::i;:::-;;;;;;:67;;;;;17795:16;17764:10;:27;;:47;;;;;;;:::i;:::-;-1:-1:-1;;;;;17764:47:117;;;-1:-1:-1;17825:37:117;;17846:16;;17825:4;;:37;;17846:16;;17825:37;:::i;:::-;-1:-1:-1;;;;;17825:37:117;;;-1:-1:-1;17876:24:117;;;:44;;17904:16;;17876:24;:44;;17904:16;;17876:44;:::i;:::-;-1:-1:-1;;;;;17876:44:117;;;-1:-1:-1;18135:22:117;;;;18160:1;18135:26;;;;;;18131:570;;;18181:21;18232:78;18288:18;;;;:6;:18;:::i;:::-;18307:1;18288:21;;;;;;;:::i;:::-;;;;;;;18249:10;:22;;;18248:23;;;:::i;:::-;-1:-1:-1;;;;;18232:41:117;;:55;:78::i;:::-;18181:130;;18370:14;-1:-1:-1;;;;;18362:23:117;18329:10;:22;;:57;;;;;;;:::i;:::-;;;;;-1:-1:-1;18410:276:117;18449:15;;;;:6;:15;:::i;:::-;18486:11;18519:17;;;;:6;:17;:::i;:::-;18537:1;18519:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18561:63;18572:10;:27;;;18601:10;:22;;;18561:10;:63::i;:::-;18646:10;:22;;;18410:276;;;;;;;;;;:::i;:::-;;;;;;;;18163:538;18131:570;18746:97;18768:15;;;;:6;:15;:::i;:::-;18785:17;:11;:15;:17::i;:::-;18804;;;;:6;:17;:::i;:::-;18822:1;18804:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18826:4;18832:10;18746:21;:97::i;:::-;18919:150;18954:15;;;;:6;:15;:::i;:::-;18971:11;18984:17;;;;:6;:17;:::i;:::-;19002:1;18984:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;19006:27;;18919:150;;;;;;;19006:27;19042:12;;18919:150;:::i;:::-;;;;;;;;19084:77;19104:15;;;;:6;:15;:::i;:::-;19121:17;;;;:6;:17;:::i;:::-;19139:1;19121:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;19143:17;;19084:19;:77::i;:::-;-1:-1:-1;;;;;19254:10:117;:30;;19313:15;;;;:6;:15;:::i;:::-;19359:11;19397:7;19432:6;:17;;;;;;;;:::i;:::-;19450:1;19432:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;19539:17;;19254:317;;-1:-1:-1;;;;;;19254:317:117;;;;;;;;;;;;;19488:16;;19254:317;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19242:6;19249:1;19242:9;;;;;;;;:::i;:::-;;;;;;:329;;;;;15962:3620;;;;15907:3675;15957:3;;15907:3675;;;-1:-1:-1;19597:96:117;19613:15;;;;:6;:15;:::i;:::-;19630:11;19643:17;;;;:6;:17;:::i;:::-;19662:10;19674:18;;;;:6;:18;:::i;:::-;19597:96;;;;;;;;;;;;:::i;:::-;;;;;;;;15569:4131;15399:4301;;;;;:::o;10259:300:85:-;10322:16;10350:22;10375:19;10383:3;10375:7;:19::i;22323:1209:117:-;-1:-1:-1;;;;;22477:27:117;;;22432:18;22477:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;5684:12:83;;;;;-1:-1:-1;;;5663:10:83;;;;;5656:41;22534:992:117;22550:1;22541:6;:10;:37;;;;;22568:10;22555:23;;:10;:23;22541:37;22534:992;;;-1:-1:-1;;;;;22619:27:117;;;22594:22;22619:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:45;;:43;:45::i;:::-;22594:70;;22679:24;22705:28;22753:57;22775:8;22785:14;22801:8;22753:21;:57::i;:::-;22678:132;;;;23011:10;:22;;;22996:37;;:12;:37;22992:81;;;23053:5;;;;;22992:81;23275:75;23297:8;23307:14;23323:8;23333:4;23339:10;23275:21;:75::i;:::-;-1:-1:-1;;;;;23419:27:117;;;;;;;:17;:27;;;;;;;;:37;;;;;;;;;:48;;:46;:48::i;:::-;-1:-1:-1;23481:12:117;;;:::i;:::-;;-1:-1:-1;23507:8:117;;;:::i;:::-;;;22580:946;;;22534:992;;19976:562;20219:16;20215:137;;;-1:-1:-1;;;;;20259:33:117;;752:42:118;20259:33:117;;;;:62;;;20308:13;-1:-1:-1;;;;;20296:25:117;:8;-1:-1:-1;;;;;20296:25:117;;;20259:62;20251:90;;;;-1:-1:-1;;;20251:90:117;;;;;;;;;;;;20370:64;20424:8;20370:22;:41;20393:17;:11;:15;:17::i;20370:64::-;20362:105;;;;-1:-1:-1;;;20362:105:117;;;;;;;;;;;;20482:49;20509:11;20522:8;20482:49;;;;;;;:::i;2081:405:37:-;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:37;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:37;;;-1:-1:-1;2438:4:37;2429:14;;2422:28;;;;-1:-1:-1;2393:16:37;2081:405::o;23858:619:117:-;-1:-1:-1;;;;;23972:30:117;;23938:31;23972:30;;;:20;:30;;;;;;;;;23938:64;;;;;;;;;;;;;;;;-1:-1:-1;;;23938:64:117;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;23938:64:117;;;;;;;;;;24088:21;;;;:57;;;24129:4;:16;;;24113:32;;:12;:32;;24088:57;24084:149;;;24174:17;;;;24161:30;;;;24218:4;24205:10;;;:17;24084:149;24243:25;;;:17;;;:25;24297:53;24320:30;24304:12;24297:53;:::i;:::-;:57;;24353:1;24297:57;:::i;:::-;24278:76;;;;:16;;;;:76;;;-1:-1:-1;;;;;24365:30:117;;;;;;:20;:30;;;;;;;;;:37;;;;;;;;;;;;;;;;;-1:-1:-1;;24365:37:117;;;;;;;-1:-1:-1;;;24365:37:117;;;;;;;;-1:-1:-1;;24365:37:117;;;;;;;;;-1:-1:-1;;24365:37:117;;;;;-1:-1:-1;;;24365:37:117;;;;;;;;;24417:53;;43833:51:267;;;43920:23;;;43900:18;;;43893:51;;;;43960:18;;;43953:51;;;;24417:53:117;;43806:18:267;24417:53:117;43635:375:267;8860:165:85;-1:-1:-1;;;;;8993:23:85;;8940:4;4351:19;;;:12;;;:19;;;;;;:24;;8963:55;4255:127;36115:1804:117;-1:-1:-1;;;;;36634:29:117;;;36232;36634;;;:19;:29;;;;;;;;:39;;;;;;;;;;;;;36701:27;;;:17;:27;;;;;:37;;;;;;;;;5684:12:83;-1:-1:-1;;;;;36634:39:117;;;;36232:29;5684:12:83;;;;-1:-1:-1;;;5663:10:83;;;;;5656:41;36232:29:117;36757:836;36781:6;36777:1;:10;36757:836;;;-1:-1:-1;;;;;36833:27:117;;;36808:22;36833:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:43;;36874:1;36833:40;:43::i;:::-;-1:-1:-1;;;;;36921:21:117;;;36890:28;36921:21;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;36890:78;;;;;;;;;-1:-1:-1;;;;;36890:78:117;;;;-1:-1:-1;;;36890:78:117;;;;;;;;;;;-1:-1:-1;;;36890:78:117;;;;;;;;;;;36921:37;;-1:-1:-1;37155:12:117;:37;37151:81;;;37212:5;;;;37151:81;37524:58;37535:22;37559:10;:22;;;37524:10;:58::i;:::-;37499:83;;36794:799;;36789:3;;;;;36757:836;;;-1:-1:-1;;;;;;37772:30:117;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;37824:22;;37772:49;;:47;:49::i;:::-;:74;;;;:::i;:::-;37746:100;;37856:56;36115:1804;;;;;:::o;6210:129:85:-;6283:4;6306:26;6314:3;6326:5;6306:7;:26::i;8623:156::-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:85;;8719:7;:53::i;2408:167:149:-;2496:6;2528:39;2541:4;2558:3;552:4:148;2528:12:149;:39::i;24580:719:117:-;24782:4;24961:69;25020:8;24961:22;:41;24984:17;:11;:15;:17::i;24961:69::-;:205;;;;;25146:20;24961:205;:331;;;;-1:-1:-1;;25260:27:117;;-1:-1:-1;;;;;25260:32:117;;;;24838:454;-1:-1:-1;;;24580:719:117:o;31493:186::-;31582:6;31607:65;-1:-1:-1;;;;;31646:25:117;;;;31614:21;;31607:65;:::i;31742:145::-;31805:6;31830:50;31845:22;31866:1;-1:-1:-1;;;;;31852:10:117;;31845:22;:::i;:::-;31838:30;;31830:48;:50::i;26980:1893::-;27383:24;;;;;-1:-1:-1;;;;;27340:29:117;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;-1:-1:-1;;;;;27340:39:117;;;:67;;;27336:255;;27465:24;;;;;;-1:-1:-1;;;;;27423:29:117;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;:66;;-1:-1:-1;;27423:66:117;-1:-1:-1;;;;;27423:66:117;;;;;;27555:24;;27508:72;;44488:51:267;;;44555:18;;;44548:60;;;;44644:31;;44624:18;;;44617:59;27508:72:117;;44476:2:267;44461:18;27508:72:117;;;;;;;27336:255;-1:-1:-1;;;;;27916:21:117;;;;;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;:60;;;;;;;;;;;;;;-1:-1:-1;;;27916:60:117;-1:-1:-1;;;;;;;;;27916:60:117;;-1:-1:-1;;;27916:60:117;-1:-1:-1;;;;;;27916:60:117;;;-1:-1:-1;;;;;27916:60:117;;;;;;;;;;;;;;;;;;;;28098:27;28094:773;;-1:-1:-1;;;;;28285:29:117;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:68;;28343:8;28285:49;:68::i;:::-;-1:-1:-1;;;;;;28367:23:117;;;;;;:13;:23;;;;;:43;;28395:14;28367:27;:43::i;:::-;;28094:773;;;28431:27;;-1:-1:-1;;;;;28431:32:117;:27;:32;28427:440;;-1:-1:-1;;;;;28627:29:117;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:71;;28688:8;28627:52;:71::i;:::-;-1:-1:-1;;;;;;28717:29:117;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:54;;:52;:54::i;:::-;28775:1;28717:59;28713:144;;-1:-1:-1;;;;;28796:23:117;;;;;;:13;:23;;;;;:46;;28827:14;28796:30;:46::i;3045:154:149:-;3130:6;3162:29;3170:4;552::148;3162:7:149;:29::i;5919:123:85:-;5989:4;6012:23;6017:3;6029:5;6012:4;:23::i;8305:150::-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:85;;8398:4;:50::i;32221:396:117:-;32355:4;;32371:218;32395:12;:19;32391:1;:23;32371:218;;;32439:46;32459:8;32469:12;32482:1;32469:15;;;;;;;;:::i;:::-;;;;;;;32439:19;:46::i;:::-;:94;;;;;32489:44;32517:12;32530:1;32517:15;;;;;;;;:::i;:::-;;;;;;;32489:27;:44::i;:::-;32435:144;;;32560:4;32553:11;;;;;32435:144;32416:3;;32371:218;;;-1:-1:-1;32605:5:117;;32221:396;-1:-1:-1;;;32221:396:117:o;3137:125:154:-;3213:14;-1:-1:-1;;;;;3213:23:154;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3199:39:154;:10;-1:-1:-1;;;;;3199:39:154;;3191:64;;;;-1:-1:-1;;;3191:64:154;;;;;;;;;;;4912:118:85;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;1804:110:148:-;1865:7;1891:16;:1;552:4;1905:1;1891:8;:16::i;1688:110::-;1749:7;1775:16;:1;1784;552:4;1775:8;:16::i;2244:135::-;2312:7;2338:34;:1;2347;552:4;2355:16;2338:8;:34::i;31201:286:117:-;-1:-1:-1;;;;;31311:30:117;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;:98;;31370:12;31392:15;31311:45;:98::i;:::-;31424:56;;;-1:-1:-1;;;;;44506:32:267;;;44488:51;;44575:32;;44570:2;44555:18;;44548:60;-1:-1:-1;;;;;44644:31:267;;44624:18;;;44617:59;;;;31424:56:117;;44476:2:267;44461:18;31424:56:117;44269:413:267;5570:109:85;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;3759:212:83:-;3825:13;3854:12;3860:5;5888:12;;;;;-1:-1:-1;;;5874:10:83;;;;;:26;;;5785:122;3854:12;3850:32;;;3875:7;;-1:-1:-1;;;3875:7:83;;;;;;;;;;;3850:32;-1:-1:-1;3912:12:83;;;;3892:17;3941:23;;;3912:12;3941:11;;;:23;;;;;;;3759:212::o;3295:324::-;3359:13;3388:12;3394:5;5888:12;;;;;-1:-1:-1;;;5874:10:83;;;;;:26;;;5785:122;3388:12;3384:32;;;3409:7;;-1:-1:-1;;;3409:7:83;;;;;;;;;;;3384:32;-1:-1:-1;3446:12:83;;;;3426:17;3476:23;;;3446:12;3476:11;;;:23;;;;;;;3509:30;;;3573:29;;-1:-1:-1;;3573:29:83;3588:14;;-1:-1:-1;;;;;3573:29:83;;;;;;;;3476:23;3295:324::o;2558:245:37:-;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:37;;;;;;;;;;;4606:324:83;4684:13;4758:10;4771:66;4812:24;4830:5;4812:17;:24::i;:::-;4796:12;;4789:47;;;4796:12;;4789:47;:::i;:::-;4771:17;:66::i;:::-;4858:10;;4758:79;;-1:-1:-1;;;;4858:10:83;;;;;;4851:17;;;;;4847:43;;4877:13;;-1:-1:-1;;;4877:13:83;;;;;;;;;;;4847:43;4907:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4907:16:83;;;;;4606:324::o;2786:1388:85:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:85;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;4889:343:149;5060:16;;5027:7;;;5100:42;5060:9;5130:3;5027:7;5060:16;5100:18;:42::i;:::-;5086:56;-1:-1:-1;5159:8:149;;:66;;5185:33;5199:9;5210:7;5216:1;5210:3;:7;:::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;;6703:28;;6514:233;5185:33;:40;-1:-1:-1;;;5185:40:149;;-1:-1:-1;;;;;5185:40:149;5159:66;;;-1:-1:-1;5170:12:149;;5152:73;-1:-1:-1;;;;4889:343:149:o;13216:187:81:-;13272:6;-1:-1:-1;;;;;13298:25:81;;;13290:76;;;;-1:-1:-1;;;13290:76:81;;45498:2:267;13290:76:81;;;45480:21:267;45537:2;45517:18;;;45510:30;45576:34;45556:18;;;45549:62;-1:-1:-1;;;45627:18:267;;;45620:36;45673:19;;13290:76:81;45296:402:267;13290:76:81;-1:-1:-1;13390:5:81;13216:187::o;5358:230:149:-;5482:16;;5449:7;;5515:8;;:66;;5541:33;5555:9;5566:7;5572:1;5566:3;:7;:::i;5541:33::-;:40;-1:-1:-1;;;5541:40:149;;-1:-1:-1;;;;;5541:40:149;5515:66;;;-1:-1:-1;5526:12:149;;5358:230;-1:-1:-1;;5358:230:149:o;2214:404:85:-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:85;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:85;2589:12;;1667:4213:80;1749:14;;;-1:-1:-1;;2286:1:80;2283;2276:20;2329:1;2326;2322:9;2313:18;;2384:5;2380:2;2377:13;2369:5;2365:2;2361:14;2357:34;2348:43;;;2486:5;2495:1;2486:10;2482:368;;2824:11;2816:5;:19;;;;;:::i;:::-;;2809:26;;;;;;2482:368;2974:5;2960:11;:19;2952:53;;;;-1:-1:-1;;;2952:53:80;;46037:2:267;2952:53:80;;;46019:21:267;46076:2;46056:18;;;46049:30;-1:-1:-1;;;46095:18:267;;;46088:51;46156:18;;2952:53:80;45835:345:267;2952:53:80;3261:17;3396:11;3393:1;3390;3383:25;4774:1;3944;3929:12;;:16;;3914:32;;4049:22;;;;4755:1;:15;;4754:21;;5007;;;5003:25;;4992:36;5076:21;;;5072:25;;5061:36;5146:21;;;5142:25;;5131:36;5216:21;;;5212:25;;5201:36;5286:21;;;5282:25;;5271:36;5357:21;;;5353:25;;;5342:36;;;3899:12;4294;;;4290:23;;;4286:31;;;3510:20;;;3499:32;;;4406:12;;;;3557:21;;4147:16;;;;4397:21;;;;5821:15;;;-1:-1:-1;;;;1667:4213:80:o;6012:299::-;6113:7;6132:14;6149:25;6156:1;6159;6162:11;6149:6;:25::i;:::-;6132:42;-1:-1:-1;6200:11:80;6188:8;:23;;;;;;;;:::i;:::-;;:56;;;;;6243:1;6228:11;6215:25;;;;;:::i;:::-;6225:1;6222;6215:25;:29;6188:56;6184:98;;;6260:11;6270:1;6260:11;;:::i;1700:134:149:-;1791:36;1799:4;1816:3;-1:-1:-1;;;;;1791:36:149;;:7;:36::i;:::-;1700:134;;;:::o;34781:297:81:-;34837:6;-1:-1:-1;;;;;34962:5:81;:34;;34954:87;;;;-1:-1:-1;;;34954:87:81;;46649:2:267;34954:87:81;;;46631:21:267;46688:2;46668:18;;;46661:30;46727:34;46707:18;;;46700:62;-1:-1:-1;;;46778:18:267;;;46771:38;46826:19;;34954:87:81;46447:404:267;26101:198:81;26205:5;26229:19;;;;;;26221:71;;;;-1:-1:-1;;;26221:71:81;;47058:2:267;26221:71:81;;;47040:21:267;47097:2;47077:18;;;47070:30;47136:34;47116:18;;;47109:62;-1:-1:-1;;;47187:18:267;;;47180:37;47234:19;;26221:71:81;46856:403:267;26221:71:81;26101:198;;;:::o;5932:439:149:-;6084:7;6103:241;6116:4;6110:3;:10;6103:241;;;6136:11;6150:34;6174:3;6179:4;6150:23;:34::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;6136:48;;-1:-1:-1;6202:35:149;;;;6703:28;;6202:29;;;:35;6198:136;;;6264:3;6257:10;;6198:136;;;6312:7;:3;6318:1;6312:7;:::i;:::-;6306:13;;6198:136;6122:222;6103:241;;4054:667;4155:11;;4181:7;;4177:422;;4278:20;4301:28;4315:4;4321:7;4327:1;4321:3;:7;:::i;4301:28::-;4278:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4278:51:149;;;-1:-1:-1;;;;;4278:51:149;;;;;;;-1:-1:-1;4351:16:149;;;-1:-1:-1;4351:16:149;4343:52;;;;-1:-1:-1;;;4343:52:149;;;;;;;;;;;;4471:9;;:16;;;;;;;4467:122;;4545:5;4507:28;4521:4;4527:7;4533:1;4527:3;:7;:::i;4507:28::-;:43;;-1:-1:-1;;;;;4507:43:149;;;;-1:-1:-1;;;4507:43:149;;;;;;;;;;;-1:-1:-1;;;;;4054:667:149:o;4467:122::-;4190:409;4177:422;-1:-1:-1;4677:36:149;;;;;;;;;;;;;;;-1:-1:-1;;;;;4677:36:149;;;;;;;;;;4667:47;;;;;;;-1:-1:-1;4667:47:149;;;;;;;;;;;;-1:-1:-1;;;4667:47:149;;;;;;;;;4054:667::o;816:153:43:-;878:7;951:11;961:1;952:5;;;951:11;:::i;:::-;941:21;;942:5;;;941:21;:::i;14:127:267:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:267;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:275::-;475:2;469:9;540:2;521:13;;-1:-1:-1;;517:27:267;505:40;;-1:-1:-1;;;;;560:34:267;;596:22;;;557:62;554:88;;;622:18;;:::i;:::-;658:2;651:22;404:275;;-1:-1:-1;404:275:267:o;684:131::-;-1:-1:-1;;;;;759:31:267;;749:42;;739:70;;805:1;802;795:12;820:163;887:20;;947:10;936:22;;926:33;;916:61;;973:1;970;963:12;988:578;1046:5;1094:4;1082:9;1077:3;1073:19;1069:30;1066:50;;;1112:1;1109;1102:12;1066:50;1165:4;1159:11;;;1197:17;;-1:-1:-1;;;;;1229:34:267;;1265:22;;;1226:62;1223:88;;;1291:18;;:::i;:::-;1327:4;1320:24;1362:6;-1:-1:-1;1362:6:267;1392:23;;1424:33;1392:23;1424:33;:::i;:::-;1466:23;;1522:37;1555:2;1540:18;;1522:37;:::i;:::-;1517:2;1509:6;1505:15;1498:62;;988:578;;;;:::o;1571:236::-;1660:6;1713:2;1701:9;1692:7;1688:23;1684:32;1681:52;;;1729:1;1726;1719:12;1681:52;1752:49;1793:7;1782:9;1752:49;:::i;2020:532::-;2146:6;2154;2162;2215:3;2203:9;2194:7;2190:23;2186:33;2183:53;;;2232:1;2229;2222:12;2183:53;2271:9;2258:23;2290:31;2315:5;2290:31;:::i;:::-;2340:5;-1:-1:-1;2364:58:267;2414:7;2409:2;2394:18;;2364:58;:::i;:::-;2354:68;;2474:2;2463:9;2459:18;2446:32;2487:33;2512:7;2487:33;:::i;:::-;2539:7;2529:17;;;2020:532;;;;;:::o;2827:257::-;2637:12;;-1:-1:-1;;;;;2633:37:267;2621:50;;2735:4;2724:16;;;2718:23;2714:2;2703:39;2687:14;;;2680:63;2796:4;2785:16;;;2779:23;2804:10;2775:40;2759:14;;;2752:64;3019:2;3004:18;;3031:47;2557:265;3089:371;3187:6;3195;3248:2;3236:9;3227:7;3223:23;3219:32;3216:52;;;3264:1;3261;3254:12;3216:52;3303:9;3290:23;3322:31;3347:5;3322:31;:::i;:::-;3372:5;-1:-1:-1;3396:58:267;3446:7;3441:2;3426:18;;3396:58;:::i;:::-;3386:68;;3089:371;;;;;:::o;3657:180::-;3716:6;3769:2;3757:9;3748:7;3744:23;3740:32;3737:52;;;3785:1;3782;3775:12;3737:52;-1:-1:-1;3808:23:267;;3657:180;-1:-1:-1;3657:180:267:o;3842:247::-;3901:6;3954:2;3942:9;3933:7;3929:23;3925:32;3922:52;;;3970:1;3967;3960:12;3922:52;4009:9;3996:23;4028:31;4053:5;4028:31;:::i;4094:195::-;4175:12;;-1:-1:-1;;;;;4171:38:267;4159:51;;4263:4;4252:16;;;4246:23;4271:10;4242:40;4226:14;;4219:64;4094:195::o;4294:454::-;4358:3;4396:5;4390:12;4423:6;4418:3;4411:19;4455:4;4450:3;4446:14;4439:21;;4494:4;4487:5;4483:16;4517:1;4527:196;4541:6;4538:1;4535:13;4527:196;;;4590:49;4635:3;4626:6;4620:13;4590:49;:::i;:::-;4668:4;4659:14;;;;;4708:4;4696:17;;;;;4563:1;4556:9;4527:196;;;-1:-1:-1;4739:3:267;;4294:454;-1:-1:-1;;;;4294:454:267:o;4753:332::-;4992:2;4981:9;4974:21;4955:4;5012:67;5075:2;5064:9;5060:18;5052:6;5012:67;:::i;5090:391::-;5177:8;5187:6;5241:3;5234:4;5226:6;5222:17;5218:27;5208:55;;5259:1;5256;5249:12;5208:55;-1:-1:-1;5282:20:267;;-1:-1:-1;;;;;5314:30:267;;5311:50;;;5357:1;5354;5347:12;5311:50;5394:4;5386:6;5382:17;5370:29;;5454:3;5447:4;5437:6;5434:1;5430:14;5422:6;5418:27;5414:38;5411:47;5408:67;;;5471:1;5468;5461:12;5486:632;5617:6;5625;5633;5686:2;5674:9;5665:7;5661:23;5657:32;5654:52;;;5702:1;5699;5692:12;5654:52;5741:9;5728:23;5760:31;5785:5;5760:31;:::i;:::-;5810:5;-1:-1:-1;5866:2:267;5851:18;;5838:32;-1:-1:-1;;;;;5882:30:267;;5879:50;;;5925:1;5922;5915:12;5879:50;5964:94;6050:7;6041:6;6030:9;6026:22;5964:94;:::i;:::-;5486:632;;6077:8;;-1:-1:-1;5938:120:267;;-1:-1:-1;;;;5486:632:267:o;6320:183::-;6380:4;-1:-1:-1;;;;;6405:6:267;6402:30;6399:56;;;6435:18;;:::i;:::-;-1:-1:-1;6480:1:267;6476:14;6492:4;6472:25;;6320:183::o;6508:744::-;6562:5;6615:3;6608:4;6600:6;6596:17;6592:27;6582:55;;6633:1;6630;6623:12;6582:55;6673:6;6660:20;6700:64;6716:47;6756:6;6716:47;:::i;:::-;6700:64;:::i;:::-;6788:3;6812:6;6807:3;6800:19;6844:4;6839:3;6835:14;6828:21;;6905:4;6895:6;6892:1;6888:14;6880:6;6876:27;6872:38;6858:52;;6933:3;6925:6;6922:15;6919:35;;;6950:1;6947;6940:12;6919:35;6986:4;6978:6;6974:17;7000:221;7016:6;7011:3;7008:15;7000:221;;;7098:3;7085:17;7115:31;7140:5;7115:31;:::i;:::-;7159:18;;7206:4;7197:14;;;;7033;7000:221;;;-1:-1:-1;7239:7:267;6508:744;-1:-1:-1;;;;;6508:744:267:o;7257:734::-;7433:6;7441;7449;7502:3;7490:9;7481:7;7477:23;7473:33;7470:53;;;7519:1;7516;7509:12;7470:53;7542:49;7583:7;7572:9;7542:49;:::i;:::-;7532:59;;7642:2;7631:9;7627:18;7614:32;-1:-1:-1;;;;;7661:6:267;7658:30;7655:50;;;7701:1;7698;7691:12;7655:50;7724:61;7777:7;7768:6;7757:9;7753:22;7724:61;:::i;:::-;7714:71;;;7838:2;7827:9;7823:18;7810:32;-1:-1:-1;;;;;7857:8:267;7854:32;7851:52;;;7899:1;7896;7889:12;7851:52;7922:63;7977:7;7966:8;7955:9;7951:24;7922:63;:::i;:::-;7912:73;;;7257:734;;;;;:::o;7996:420::-;8049:3;8087:5;8081:12;8114:6;8109:3;8102:19;8146:4;8141:3;8137:14;8130:21;;8185:4;8178:5;8174:16;8208:1;8218:173;8232:6;8229:1;8226:13;8218:173;;;8293:13;;8281:26;;8336:4;8327:14;;;;8364:17;;;;8254:1;8247:9;8218:173;;8421:823;8613:4;8661:2;8650:9;8646:18;8691:2;8680:9;8673:21;8714:6;8749;8743:13;8780:6;8772;8765:22;8818:2;8807:9;8803:18;8796:25;;8880:2;8870:6;8867:1;8863:14;8852:9;8848:30;8844:39;8830:53;;8918:2;8910:6;8906:15;8939:1;8949:266;8963:6;8960:1;8957:13;8949:266;;;9056:2;9052:7;9040:9;9032:6;9028:22;9024:36;9019:3;9012:49;9084:51;9128:6;9119;9113:13;9084:51;:::i;:::-;9074:61;-1:-1:-1;9170:2:267;9193:12;;;;9158:15;;;;;8985:1;8978:9;8949:266;;;-1:-1:-1;9232:6:267;;8421:823;-1:-1:-1;;;;;;8421:823:267:o;9249:807::-;9433:6;9441;9449;9457;9510:3;9498:9;9489:7;9485:23;9481:33;9478:53;;;9527:1;9524;9517:12;9478:53;9550:49;9591:7;9580:9;9550:49;:::i;:::-;9540:59;;9650:2;9639:9;9635:18;9622:32;-1:-1:-1;;;;;9669:6:267;9666:30;9663:50;;;9709:1;9706;9699:12;9663:50;9732:61;9785:7;9776:6;9765:9;9761:22;9732:61;:::i;:::-;9722:71;;;9846:2;9835:9;9831:18;9818:32;-1:-1:-1;;;;;9865:8:267;9862:32;9859:52;;;9907:1;9904;9897:12;9859:52;9930:63;9985:7;9974:8;9963:9;9959:24;9930:63;:::i;:::-;9920:73;;;10012:38;10045:3;10034:9;10030:19;10012:38;:::i;:::-;10002:48;;9249:807;;;;;;;:::o;10292:987::-;10459:6;10467;10475;10483;10491;10544:2;10532:9;10523:7;10519:23;10515:32;10512:52;;;10560:1;10557;10550:12;10512:52;10599:9;10586:23;10618:31;10643:5;10618:31;:::i;:::-;10668:5;-1:-1:-1;10724:2:267;10709:18;;10696:32;-1:-1:-1;;;;;10740:30:267;;10737:50;;;10783:1;10780;10773:12;10737:50;10822:94;10908:7;10899:6;10888:9;10884:22;10822:94;:::i;:::-;10935:8;;-1:-1:-1;10796:120:267;-1:-1:-1;;11023:2:267;11008:18;;10995:32;-1:-1:-1;;;;;11039:32:267;;11036:52;;;11084:1;11081;11074:12;11036:52;11123:96;11211:7;11200:8;11189:9;11185:24;11123:96;:::i;:::-;10292:987;;;;-1:-1:-1;10292:987:267;;-1:-1:-1;11238:8:267;;11097:122;10292:987;-1:-1:-1;;;10292:987:267:o;11284:530::-;11387:6;11395;11448:2;11436:9;11427:7;11423:23;11419:32;11416:52;;;11464:1;11461;11454:12;11416:52;11503:9;11490:23;11522:31;11547:5;11522:31;:::i;:::-;11572:5;-1:-1:-1;11628:2:267;11613:18;;11600:32;-1:-1:-1;;;;;11644:30:267;;11641:50;;;11687:1;11684;11677:12;11641:50;11710:22;;11766:3;11748:16;;;11744:26;11741:46;;;11783:1;11780;11773:12;11741:46;11806:2;11796:12;;;11284:530;;;;;:::o;11819:332::-;12026:6;12015:9;12008:25;12069:2;12064;12053:9;12049:18;12042:30;11989:4;12089:56;12141:2;12130:9;12126:18;12118:6;12089:56;:::i;12156:407::-;12243:6;12251;12304:2;12292:9;12283:7;12279:23;12275:32;12272:52;;;12320:1;12317;12310:12;12272:52;12359:9;12346:23;12378:31;12403:5;12378:31;:::i;:::-;12428:5;-1:-1:-1;12485:2:267;12470:18;;12457:32;12498:33;12457:32;12498:33;:::i;12568:452::-;12631:3;12669:5;12663:12;12696:6;12691:3;12684:19;12728:4;12723:3;12719:14;12712:21;;12767:4;12760:5;12756:16;12790:1;12800:195;12814:6;12811:1;12808:13;12800:195;;;12863:48;12907:3;12898:6;12892:13;2637:12;;-1:-1:-1;;;;;2633:37:267;2621:50;;2735:4;2724:16;;;2718:23;2714:2;2703:39;2687:14;;;2680:63;2796:4;2785:16;;;2779:23;2804:10;2775:40;2759:14;;2752:64;2557:265;12863:48;12940:4;12931:14;;;;;12980:4;12968:17;;;;;12836:1;12829:9;12800:195;;13025:604;13400:2;13389:9;13382:21;13363:4;13426:67;13489:2;13478:9;13474:18;13466:6;13426:67;:::i;:::-;13541:9;13533:6;13529:22;13524:2;13513:9;13509:18;13502:50;13569:54;13616:6;13608;13569:54;:::i;13634:551::-;13698:3;13736:5;13730:12;13763:6;13758:3;13751:19;13795:4;13790:3;13786:14;13779:21;;13834:4;13827:5;13823:16;13857:1;13867:293;13881:6;13878:1;13875:13;13867:293;;;13940:13;;-1:-1:-1;;;;;14010:28:267;13998:41;;14075:4;14066:14;;;;14133:17;;;;14035:1;13896:9;13867:293;;14190:291;14388:2;14377:9;14370:21;14351:4;14408:67;14471:2;14460:9;14456:18;14448:6;14408:67;:::i;14725:502::-;14837:6;14845;14898:2;14886:9;14877:7;14873:23;14869:32;14866:52;;;14914:1;14911;14904:12;14866:52;14954:9;14941:23;-1:-1:-1;;;;;14979:6:267;14976:30;14973:50;;;15019:1;15016;15009:12;14973:50;15042:61;15095:7;15086:6;15075:9;15071:22;15042:61;:::i;:::-;15032:71;;;15153:2;15142:9;15138:18;15125:32;15166:31;15191:5;15166:31;:::i;15232:634::-;15420:2;15432:21;;;15502:13;;15405:18;;;15524:22;;;15372:4;;15603:15;;;15577:2;15562:18;;;15372:4;15646:194;15660:6;15657:1;15654:13;15646:194;;;15725:13;;-1:-1:-1;;;;;15721:38:267;15709:51;;15789:2;15815:15;;;;15780:12;;;;15682:1;15675:9;15646:194;;;-1:-1:-1;15857:3:267;;15232:634;-1:-1:-1;;;;;15232:634:267:o;17027:687::-;17149:6;17157;17165;17173;17226:2;17214:9;17205:7;17201:23;17197:32;17194:52;;;17242:1;17239;17232:12;17194:52;17281:9;17268:23;17300:31;17325:5;17300:31;:::i;:::-;17350:5;-1:-1:-1;17374:37:267;17407:2;17392:18;;17374:37;:::i;:::-;17364:47;;17462:2;17451:9;17447:18;17434:32;-1:-1:-1;;;;;17481:6:267;17478:30;17475:50;;;17521:1;17518;17511:12;17475:50;17560:94;17646:7;17637:6;17626:9;17622:22;17560:94;:::i;:::-;17027:687;;;;-1:-1:-1;17673:8:267;-1:-1:-1;;;;17027:687:267:o;17719:502::-;17831:6;17839;17892:2;17880:9;17871:7;17867:23;17863:32;17860:52;;;17908:1;17905;17898:12;17860:52;17947:9;17934:23;17966:31;17991:5;17966:31;:::i;:::-;18016:5;-1:-1:-1;18072:2:267;18057:18;;18044:32;-1:-1:-1;;;;;18088:30:267;;18085:50;;;18131:1;18128;18121:12;18085:50;18154:61;18207:7;18198:6;18187:9;18183:22;18154:61;:::i;18226:418::-;18375:2;18364:9;18357:21;18338:4;18407:6;18401:13;18450:6;18445:2;18434:9;18430:18;18423:34;18509:6;18504:2;18496:6;18492:15;18487:2;18476:9;18472:18;18466:50;18565:1;18560:2;18551:6;18540:9;18536:22;18532:31;18525:42;18635:2;18628;18624:7;18619:2;18611:6;18607:15;18603:29;18592:9;18588:45;18584:54;18576:62;;;18226:418;;;;:::o;18649:319::-;18716:6;18724;18777:2;18765:9;18756:7;18752:23;18748:32;18745:52;;;18793:1;18790;18783:12;18745:52;18832:9;18819:23;18851:31;18876:5;18851:31;:::i;:::-;18901:5;-1:-1:-1;18925:37:267;18958:2;18943:18;;18925:37;:::i;18973:269::-;19030:6;19083:2;19071:9;19062:7;19058:23;19054:32;19051:52;;;19099:1;19096;19089:12;19051:52;19138:9;19125:23;19188:4;19181:5;19177:16;19170:5;19167:27;19157:55;;19208:1;19205;19198:12;19452:164;19521:5;19566:2;19557:6;19552:3;19548:16;19544:25;19541:45;;;19582:1;19579;19572:12;19541:45;-1:-1:-1;19604:6:267;19452:164;-1:-1:-1;19452:164:267:o;19621:375::-;19717:6;19770:2;19758:9;19749:7;19745:23;19741:32;19738:52;;;19786:1;19783;19776:12;19738:52;19826:9;19813:23;-1:-1:-1;;;;;19851:6:267;19848:30;19845:50;;;19891:1;19888;19881:12;19845:50;19914:76;19982:7;19973:6;19962:9;19958:22;19914:76;:::i;20951:627::-;21102:6;21110;21118;21171:3;21159:9;21150:7;21146:23;21142:33;21139:53;;;21188:1;21185;21178:12;21139:53;21228:9;21215:23;-1:-1:-1;;;;;21253:6:267;21250:30;21247:50;;;21293:1;21290;21283:12;21247:50;21316:61;21369:7;21360:6;21349:9;21345:22;21316:61;:::i;:::-;21306:71;;;21396:58;21446:7;21441:2;21430:9;21426:18;21396:58;:::i;21583:329::-;21820:2;21809:9;21802:21;21783:4;21840:66;21902:2;21891:9;21887:18;21879:6;21840:66;:::i;21917:574::-;22037:6;22045;22053;22106:2;22094:9;22085:7;22081:23;22077:32;22074:52;;;22122:1;22119;22112:12;22074:52;22161:9;22148:23;22180:31;22205:5;22180:31;:::i;:::-;22230:5;-1:-1:-1;22286:2:267;22271:18;;22258:32;-1:-1:-1;;;;;22302:30:267;;22299:50;;;22345:1;22342;22335:12;22299:50;22368:61;22421:7;22412:6;22401:9;22397:22;22368:61;:::i;:::-;22358:71;;;22448:37;22481:2;22470:9;22466:18;22448:37;:::i;:::-;22438:47;;21917:574;;;;;:::o;22496:2630::-;22622:6;22630;22683:2;22671:9;22662:7;22658:23;22654:32;22651:52;;;22699:1;22696;22689:12;22651:52;22738:9;22725:23;22757:31;22782:5;22757:31;:::i;:::-;22807:5;-1:-1:-1;22863:2:267;22848:18;;22835:32;-1:-1:-1;;;;;22879:30:267;;22876:50;;;22922:1;22919;22912:12;22876:50;22945:22;;22998:4;22990:13;;22986:27;-1:-1:-1;22976:55:267;;23027:1;23024;23017:12;22976:55;23067:2;23054:16;23090:64;23106:47;23146:6;23106:47;:::i;23090:64::-;23176:3;23200:6;23195:3;23188:19;23232:2;23227:3;23223:12;23216:19;;23287:2;23277:6;23274:1;23270:14;23266:2;23262:23;23258:32;23244:46;;23313:7;23305:6;23302:19;23299:39;;;23334:1;23331;23324:12;23299:39;23366:2;23362;23358:11;23378:1718;23394:6;23389:3;23386:15;23378:1718;;;23480:3;23467:17;-1:-1:-1;;;;;23503:11:267;23500:35;23497:55;;;23548:1;23545;23538:12;23497:55;23575:20;;23647:4;23619:16;;;-1:-1:-1;;23615:30:267;23611:41;23608:61;;;23665:1;23662;23655:12;23608:61;23697:22;;:::i;:::-;23748:51;23791:7;23786:2;23782;23778:11;23748:51;:::i;:::-;23739:7;23732:68;23850:4;23846:2;23842:13;23829:27;-1:-1:-1;;;;;23875:8:267;23872:32;23869:52;;;23917:1;23914;23907:12;23869:52;23959:65;24016:7;24011:2;24000:8;23996:2;23992:17;23988:26;23959:65;:::i;:::-;23954:2;23945:7;23941:16;23934:91;;24075:4;24071:2;24067:13;24054:27;-1:-1:-1;;;;;24100:8:267;24097:32;24094:52;;;24142:1;24139;24132:12;24094:52;24192:2;24181:8;24177:2;24173:17;24169:26;24159:36;;;24237:7;24230:4;24226:2;24222:13;24218:27;24208:55;;24259:1;24256;24249:12;24208:55;24305:2;24292:16;24334:66;24350:49;24390:8;24350:49;:::i;24334:66::-;24428:5;24460:8;24453:5;24446:23;24502:2;24495:5;24491:14;24482:23;;24565:2;24553:8;24550:1;24546:16;24542:2;24538:25;24534:34;24518:50;;24597:7;24587:8;24584:21;24581:41;;;24618:1;24615;24608:12;24581:41;24656:2;24652;24648:11;24635:24;;24672:303;24690:8;24683:5;24680:19;24672:303;;;24786:5;24773:19;-1:-1:-1;;;;;24835:7:267;24831:32;24822:7;24819:45;24809:73;;24878:1;24875;24868:12;24809:73;24899:22;;24958:2;24711:14;;;;24947;;;;24672:303;;;25008:2;24995:16;;24988:33;-1:-1:-1;;25034:20:267;;-1:-1:-1;25083:2:267;25074:12;;;;23411;23378:1718;;;23382:3;25115:5;25105:15;;;;;;22496:2630;;;;;:::o;25131:722::-;25211:6;25219;25227;25280:2;25268:9;25259:7;25255:23;25251:32;25248:52;;;25296:1;25293;25286:12;25248:52;25335:9;25322:23;25354:31;25379:5;25354:31;:::i;:::-;25404:5;-1:-1:-1;25460:2:267;25445:18;;25432:32;-1:-1:-1;;;;;25476:30:267;;25473:50;;;25519:1;25516;25509:12;25473:50;25542:22;;25595:4;25587:13;;25583:27;-1:-1:-1;25573:55:267;;25624:1;25621;25614:12;25573:55;25664:2;25651:16;-1:-1:-1;;;;;25682:6:267;25679:30;25676:50;;;25722:1;25719;25712:12;25676:50;25767:7;25762:2;25753:6;25749:2;25745:15;25741:24;25738:37;25735:57;;;25788:1;25785;25778:12;25735:57;25131:722;;25819:2;25811:11;;;;;-1:-1:-1;25841:6:267;;-1:-1:-1;;;25131:722:267:o;25858:508::-;25961:6;25969;26022:2;26010:9;26001:7;25997:23;25993:32;25990:52;;;26038:1;26035;26028:12;25990:52;26077:9;26064:23;26096:31;26121:5;26096:31;:::i;:::-;26146:5;-1:-1:-1;26202:2:267;26187:18;;26174:32;-1:-1:-1;;;;;26218:30:267;;26215:50;;;26261:1;26258;26251:12;26215:50;26284:76;26352:7;26343:6;26332:9;26328:22;26284:76;:::i;27528:127::-;27589:10;27584:3;27580:20;27577:1;27570:31;27620:4;27617:1;27610:15;27644:4;27641:1;27634:15;27660:333;27762:4;27820:11;27807:25;27914:2;27910:7;27899:8;27883:14;27879:29;27875:43;27855:18;27851:68;27841:96;;27933:1;27930;27923:12;27841:96;27954:33;;;;;27660:333;-1:-1:-1;;27660:333:267:o;27998:184::-;28056:6;28109:2;28097:9;28088:7;28084:23;28080:32;28077:52;;;28125:1;28122;28115:12;28077:52;28148:28;28166:9;28148:28;:::i;28187:545::-;28280:4;28286:6;28346:11;28333:25;28440:2;28436:7;28425:8;28409:14;28405:29;28401:43;28381:18;28377:68;28367:96;;28459:1;28456;28449:12;28367:96;28486:33;;28538:20;;;-1:-1:-1;;;;;;28570:30:267;;28567:50;;;28613:1;28610;28603:12;28567:50;28646:4;28634:17;;-1:-1:-1;28697:1:267;28693:14;;;28677;28673:35;28663:46;;28660:66;;;28722:1;28719;28712:12;29577:272;29635:6;29688:2;29676:9;29667:7;29663:23;29659:32;29656:52;;;29704:1;29701;29694:12;29656:52;29743:9;29730:23;29793:6;29786:5;29782:18;29775:5;29772:29;29762:57;;29815:1;29812;29805:12;29854:277;29921:6;29974:2;29962:9;29953:7;29949:23;29945:32;29942:52;;;29990:1;29987;29980:12;29942:52;30022:9;30016:16;30075:5;30068:13;30061:21;30054:5;30051:32;30041:60;;30097:1;30094;30087:12;30685:260;30879:2;30864:18;;30891:48;30868:9;30921:6;30891:48;:::i;30950:127::-;31011:10;31006:3;31002:20;30999:1;30992:31;31042:4;31039:1;31032:15;31066:4;31063:1;31056:15;31082:167;31177:10;31150:18;;;31170;;;31146:43;;31201:19;;31198:45;;;31223:18;;:::i;31254:419::-;31353:6;31348:3;31341:19;31385:4;31380:3;31376:14;31369:21;;31323:3;31413:5;31436:1;31446:202;31460:6;31457:1;31454:13;31446:202;;;31552:10;31525:25;31543:6;31525:25;:::i;:::-;31521:42;31509:55;;31593:4;31584:14;;;;31621:17;;;;;31482:1;31475:9;31446:202;;31678:479;-1:-1:-1;;;;;31921:32:267;;;31903:51;;31990:32;;31985:2;31970:18;;31963:60;32059:2;32054;32039:18;;32032:30;;;-1:-1:-1;;32079:72:267;;32132:18;;32124:6;32116;32079:72;:::i;32162:656::-;-1:-1:-1;;;;;32514:32:267;;32496:51;;32483:3;32468:19;;32556:57;32609:2;32594:18;;32586:6;32556:57;:::i;:::-;-1:-1:-1;;;;;32649:32:267;;;;32644:2;32629:18;;32622:60;-1:-1:-1;;;;;32719:31:267;;;;32713:3;32698:19;;32691:60;32800:10;32788:23;32669:3;32767:19;;;32760:52;32649:32;32162:656;-1:-1:-1;;32162:656:267:o;32823:267::-;32912:6;32907:3;32900:19;32964:6;32957:5;32950:4;32945:3;32941:14;32928:43;-1:-1:-1;33016:1:267;32991:16;;;33009:4;32987:27;;;32980:38;;;;33072:2;33051:15;;;-1:-1:-1;;33047:29:267;33038:39;;;33034:50;;32823:267::o;33095:247::-;33254:2;33243:9;33236:21;33217:4;33274:62;33332:2;33321:9;33317:18;33309:6;33301;33274:62;:::i;33347:521::-;33424:4;33430:6;33490:11;33477:25;33584:2;33580:7;33569:8;33553:14;33549:29;33545:43;33525:18;33521:68;33511:96;;33603:1;33600;33593:12;33511:96;33630:33;;33682:20;;;-1:-1:-1;;;;;;33714:30:267;;33711:50;;;33757:1;33754;33747:12;33711:50;33790:4;33778:17;;-1:-1:-1;33821:14:267;33817:27;;;33807:38;;33804:58;;;33858:1;33855;33848:12;33873:669;-1:-1:-1;;;;;34172:32:267;;;34154:51;;34241:32;;34236:2;34221:18;;34214:60;34310:3;34305:2;34290:18;;34283:31;;;-1:-1:-1;;34337:73:267;;34390:19;;34382:6;34374;34337:73;:::i;:::-;34458:9;34450:6;34446:22;34441:2;34430:9;34426:18;34419:50;34486;34529:6;34521;34513;34486:50;:::i;:::-;34478:58;33873:669;-1:-1:-1;;;;;;;;;33873:669:267:o;34547:376::-;34788:2;34773:18;;34800:48;34777:9;34830:6;34800:48;:::i;:::-;-1:-1:-1;;;;;34884:32:267;;;;34879:2;34864:18;;;;34857:60;34547:376;;-1:-1:-1;34547:376:267:o;36220:297::-;36338:12;;36385:4;36374:16;;;36368:23;;36338:12;36403:16;;36400:111;;;-1:-1:-1;;36477:4:267;36473:17;;;;36470:1;36466:25;36462:38;36451:50;;36220:297;-1:-1:-1;36220:297:267:o;37383:495::-;37659:2;37648:9;37641:21;37622:4;37685:56;37737:2;37726:9;37722:18;37714:6;37685:56;:::i;:::-;37789:9;37781:6;37777:22;37772:2;37761:9;37757:18;37750:50;37817:55;37865:6;37857;37817:55;:::i;37883:1766::-;38003:6;38056:2;38044:9;38035:7;38031:23;38027:32;38024:52;;;38072:1;38069;38062:12;38024:52;38105:9;38099:16;-1:-1:-1;;;;;38130:6:267;38127:30;38124:50;;;38170:1;38167;38160:12;38124:50;38193:22;;38246:4;38238:13;;38234:27;-1:-1:-1;38224:55:267;;38275:1;38272;38265:12;38224:55;38308:2;38302:9;38331:64;38347:47;38387:6;38347:47;:::i;38331:64::-;38417:3;38441:6;38436:3;38429:19;38473:2;38468:3;38464:12;38457:19;;38528:2;38518:6;38515:1;38511:14;38507:2;38503:23;38499:32;38485:46;;38554:7;38546:6;38543:19;38540:39;;;38575:1;38572;38565:12;38540:39;38607:2;38603;38599:11;38619:1000;38635:6;38630:3;38627:15;38619:1000;;;38714:3;38708:10;-1:-1:-1;;;;;38737:11:267;38734:35;38731:55;;;38782:1;38779;38772:12;38731:55;38809:20;;38864:2;38856:11;;38852:25;-1:-1:-1;38842:53:267;;38891:1;38888;38881:12;38842:53;38938:2;38934;38930:11;38924:18;38968:66;38984:49;39024:8;38984:49;:::i;38968:66::-;39062:5;39094:8;39087:5;39080:23;39136:2;39129:5;39125:14;39116:23;;39208:2;39203;39191:8;39188:1;39184:16;39180:2;39176:25;39172:34;39168:43;39152:59;;39240:7;39230:8;39227:21;39224:41;;;39261:1;39258;39251:12;39224:41;39299:2;39295;39291:11;39278:24;;39315:229;39333:8;39326:5;39323:19;39315:229;;;39441:12;;39470:20;;39527:2;39354:14;;;;39516;;;;39315:229;;;39557:20;;-1:-1:-1;;39606:2:267;39597:12;;;;38652;;;;;-1:-1:-1;38619:1000:267;;;-1:-1:-1;39638:5:267;37883:1766;-1:-1:-1;;;;;;37883:1766:267:o;39654:135::-;39693:3;39714:17;;;39711:43;;39734:18;;:::i;:::-;-1:-1:-1;39781:1:267;39770:13;;39654:135::o;39794:128::-;39861:9;;;39882:11;;;39879:37;;;39896:18;;:::i;39927:194::-;-1:-1:-1;;;;;40025:26:267;;;39997;;;39993:59;;40064:28;;40061:54;;;40095:18;;:::i;40126:213::-;40161:3;40209:5;40205:2;40194:21;-1:-1:-1;;;;;40239:39:267;40230:7;40227:52;40224:78;;40282:18;;:::i;:::-;40322:1;40318:15;;40126:213;-1:-1:-1;;40126:213:267:o;40344:245::-;40442:2;40412:17;;;40431;;;;40408:41;-1:-1:-1;;;;;40464:44:267;;-1:-1:-1;;;;;;40510:49:267;;40461:99;40458:125;;;40563:18;;:::i;40594:736::-;-1:-1:-1;;;;;40974:32:267;;40956:51;;40943:3;40928:19;;41016:57;41069:2;41054:18;;41046:6;41016:57;:::i;:::-;41104:2;41089:18;;41082:34;;;;-1:-1:-1;;;;;41153:32:267;;;;41147:3;41132:19;;41125:61;-1:-1:-1;;;;;41223:31:267;;;41173:3;41202:19;;41195:60;41292:31;41286:3;41271:19;;;41264:60;40594:736;;-1:-1:-1;;40594:736:267:o;41335:230::-;41405:6;41458:2;41446:9;41437:7;41433:23;41429:32;41426:52;;;41474:1;41471;41464:12;41426:52;-1:-1:-1;41519:16:267;;41335:230;-1:-1:-1;41335:230:267:o;42097:1392::-;-1:-1:-1;;;;;42599:32:267;;42581:51;;42520:4;42568:3;42553:19;;42641:57;42694:2;42679:18;;42671:6;42641:57;:::i;:::-;42734:3;42729:2;42714:18;;42707:31;42773:22;;;42853:6;42826:3;42811:19;;42877:1;42887:348;42901:6;42898:1;42895:13;42887:348;;;42976:6;42963:20;42996:31;43021:5;42996:31;:::i;:::-;-1:-1:-1;;;;;43084:31:267;43072:44;;43152:4;43210:15;;;;43143:14;;;;43112:1;42916:9;42887:348;;;42891:3;43281:9;43276:3;43272:19;43266:3;43255:9;43251:19;43244:48;43315:41;43352:3;43344:6;43315:41;:::i;:::-;43301:55;;;43405:9;43397:6;43393:22;43387:3;43376:9;43372:19;43365:51;43433:50;43476:6;43468;43460;43433:50;:::i;:::-;43425:58;42097:1392;-1:-1:-1;;;;;;;;;;42097:1392:267:o;43494:136::-;43533:3;43561:5;43551:39;;43570:18;;:::i;:::-;-1:-1:-1;;;43606:18:267;;43494:136::o;44015:249::-;44115:2;44104:17;;;44085;;;;44081:41;-1:-1:-1;;;;;;44137:50:267;;-1:-1:-1;;;;;44189:45:267;;44134:101;44131:127;;;44238:18;;:::i;44687:251::-;44757:6;44810:2;44798:9;44789:7;44785:23;44781:32;44778:52;;;44826:1;44823;44816:12;44778:52;44858:9;44852:16;44877:31;44902:5;44877:31;:::i;44943:216::-;45007:9;;;45035:11;;;44982:3;45065:9;;45093:10;;45089:19;;45118:10;;45110:19;;45086:44;45083:70;;;45133:18;;:::i;:::-;45083:70;;44943:216;;;;:::o;45164:127::-;45225:10;45220:3;45216:20;45213:1;45206:31;45256:4;45253:1;45246:15;45280:4;45277:1;45270:15;45703:127;45764:10;45759:3;45755:20;45752:1;45745:31;45795:4;45792:1;45785:15;45819:4;45816:1;45809:15;46185:127;46246:10;46241:3;46237:20;46234:1;46227:31;46277:4;46274:1;46267:15;46301:4;46298:1;46291:15;46317:125;46382:9;;;46403:10;;;46400:36;;;46416:18;;:::i;47264:217::-;47304:1;47330;47320:132;;47374:10;47369:3;47365:20;47362:1;47355:31;47409:4;47406:1;47399:15;47437:4;47434:1;47427:15;47320:132;-1:-1:-1;47466:9:267;;47264:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "73606": [
        {
          "start": 2005,
          "length": 32
        },
        {
          "start": 5025,
          "length": 32
        },
        {
          "start": 5131,
          "length": 32
        },
        {
          "start": 8473,
          "length": 32
        },
        {
          "start": 12037,
          "length": 32
        },
        {
          "start": 14242,
          "length": 32
        }
      ],
      "73610": [
        {
          "start": 1947,
          "length": 32
        },
        {
          "start": 14924,
          "length": 32
        }
      ],
      "73613": [
        {
          "start": 982,
          "length": 32
        },
        {
          "start": 5990,
          "length": 32
        },
        {
          "start": 7737,
          "length": 32
        }
      ],
      "73616": [
        {
          "start": 1600,
          "length": 32
        },
        {
          "start": 15328,
          "length": 32
        }
      ],
      "86636": [
        {
          "start": 1229,
          "length": 32
        },
        {
          "start": 11409,
          "length": 32
        }
      ],
      "86698": [
        {
          "start": 4973,
          "length": 32
        }
      ],
      "86885": [
        {
          "start": 1639,
          "length": 32
        },
        {
          "start": 11101,
          "length": 32
        },
        {
          "start": 16888,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ALLOCATION_CONFIGURATION_DELAY()": "7bc1ef61",
    "DEALLOCATION_DELAY()": "2981eb77",
    "addStrategiesToOperatorSet(address,uint32,address[])": "50feea20",
    "clearDeallocationQueue(address,address[],uint16[])": "4b5046ef",
    "createOperatorSets(address,(uint32,address[])[])": "261f84e0",
    "createRedistributingOperatorSets(address,(uint32,address[])[],address[])": "32a879e4",
    "delegation()": "df5cf723",
    "deregisterFromOperatorSets((address,address,uint32[]))": "6e3492b5",
    "eigenStrategy()": "db4df761",
    "getAVSRegistrar(address)": "304c10cd",
    "getAllocatableMagnitude(address,address)": "6cfb4481",
    "getAllocatedSets(address)": "15fe5028",
    "getAllocatedStake((address,uint32),address[],address[])": "2b453a9a",
    "getAllocatedStrategies(address,(address,uint32))": "c221d8ae",
    "getAllocation(address,(address,uint32),address)": "10e1b9b8",
    "getAllocationDelay(address)": "b9fbaed1",
    "getAllocations(address[],(address,uint32),address)": "8ce64854",
    "getEncumberedMagnitude(address,address)": "f605ce08",
    "getMaxMagnitude(address,address)": "a9333ec8",
    "getMaxMagnitudes(address,address[])": "547afb87",
    "getMaxMagnitudes(address[],address)": "4a10ffe5",
    "getMaxMagnitudesAtBlock(address,address[],uint32)": "94d7d00c",
    "getMemberCount((address,uint32))": "b2447af7",
    "getMembers((address,uint32))": "6e875dba",
    "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": "2bab2c4a",
    "getOperatorSetCount(address)": "ba1a84e5",
    "getRedistributionRecipient((address,uint32))": "0f3df50e",
    "getRegisteredSets(address)": "79ae50cd",
    "getSlashCount((address,uint32))": "4cfd2939",
    "getStrategiesInOperatorSet((address,uint32))": "4177a87c",
    "getStrategyAllocations(address,address)": "40120dab",
    "initialize(uint256)": "fe4b84df",
    "isMemberOfOperatorSet(address,(address,uint32))": "670d3ba2",
    "isOperatorRedistributable(address)": "dc2af692",
    "isOperatorSet((address,uint32))": "260dc758",
    "isOperatorSlashable(address,(address,uint32))": "1352c3e6",
    "isRedistributingOperatorSet((address,uint32))": "f231bd08",
    "modifyAllocations(address,((address,uint32),address[],uint64[])[])": "952899ee",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionController()": "4657e26a",
    "registerForOperatorSets(address,(address,uint32[],bytes))": "adc2e3d9",
    "removeStrategiesFromOperatorSet(address,uint32,address[])": "b66bd989",
    "setAVSRegistrar(address,address)": "d3d96ff4",
    "setAllocationDelay(address,uint32)": "56c483e6",
    "slashOperator(address,(address,uint32,address[],uint256[],string))": "36352057",
    "unpause(uint256)": "fabc1cbc",
    "updateAVSMetadataURI(address,string)": "a9821821",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"_eigenStrategy\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_DEALLOCATION_DELAY\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_ALLOCATION_CONFIGURATION_DELAY\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAVSRegistrar\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRedistributionRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSnapshotOrdering\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWadToSlash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModificationAlreadyPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonexistentAVSMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotSlashable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategiesMustBeInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyAlreadyInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotInOperatorSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UninitializedAllocationDelay\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AVSMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"AVSRegistrarSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"magnitude\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"encumberedMagnitude\",\"type\":\"uint64\"}],\"name\":\"EncumberedMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"maxMagnitude\",\"type\":\"uint64\"}],\"name\":\"MaxMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorSetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"wadSlashed\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"OperatorSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redistributionRecipient\",\"type\":\"address\"}],\"name\":\"RedistributionAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALLOCATION_CONFIGURATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEALLOCATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"addStrategiesToOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"numToClear\",\"type\":\"uint16[]\"}],\"name\":\"clearDeallocationQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"internalType\":\"struct IAllocationManagerTypes.CreateSetParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"internalType\":\"struct IAllocationManagerTypes.CreateSetParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"redistributionRecipients\",\"type\":\"address[]\"}],\"name\":\"createRedistributingOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"internalType\":\"struct IAllocationManagerTypes.DeregisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deregisterFromOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getAVSRegistrar\",\"outputs\":[{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocatableMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocatedSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getAllocatedStake\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getAllocatedStrategies\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocationDelay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getEncumberedMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getMaxMagnitudesAtBlock\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"futureBlock\",\"type\":\"uint32\"}],\"name\":\"getMinimumSlashableStake\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"slashableStake\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getOperatorSetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getRedistributionRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getRegisteredSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getSlashCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getStrategiesInOperatorSet\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getStrategyAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isMemberOfOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperatorRedistributable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isOperatorSlashable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isRedistributingOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"newMagnitudes\",\"type\":\"uint64[]\"}],\"internalType\":\"struct IAllocationManagerTypes.AllocateParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"modifyAllocations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IAllocationManagerTypes.RegisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"registerForOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"setAVSRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"setAllocationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"wadsToSlash\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IAllocationManagerTypes.SlashingParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"slashOperator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AlreadyMemberOfSet()\":[{\"details\":\"Thrown when trying to add an operator to a set they are already a member of\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InsufficientMagnitude()\":[{\"details\":\"Thrown when an allocation is attempted that exceeds a given operators total allocatable magnitude.\"}],\"InvalidAVSRegistrar()\":[{\"details\":\"Thrown when the AVSRegistrar is not correctly configured to prevent an AVSRegistrar contract from being used with the wrong AVS\"}],\"InvalidCaller()\":[{\"details\":\"Thrown when caller is not authorized to call a function.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidOperator()\":[{\"details\":\"Thrown when an invalid operator is provided.\"}],\"InvalidOperatorSet()\":[{\"details\":\"Thrown when an invalid operator set is provided.\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}],\"InvalidRedistributionRecipient()\":[{\"details\":\"Thrown when an invalid redistribution recipient is provided.\"}],\"InvalidStrategy()\":[{\"details\":\"Thrown when an invalid strategy is provided.\"}],\"InvalidWadToSlash()\":[{\"details\":\"Thrown when `wadToSlash` is zero or greater than 1e18\"}],\"ModificationAlreadyPending()\":[{\"details\":\"Thrown when an allocation is attempted for a given operator when they have pending allocations or deallocations.\"}],\"NonexistentAVSMetadata()\":[{\"details\":\"Thrown when an invalid avs whose metadata is not registered is provided.\"}],\"NotMemberOfSet()\":[{\"details\":\"Thrown when trying to slash/remove an operator from a set they are not a member of\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorNotSlashable()\":[{\"details\":\"Thrown when attempting to slash an operator when they are not slashable.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}],\"SameMagnitude()\":[{\"details\":\"Thrown when an operator attempts to set their allocation for an operatorSet to the same value\"}],\"StrategiesMustBeInAscendingOrder()\":[{\"details\":\"Thrown when provided `strategies` are not in ascending order.\"}],\"StrategyAlreadyInOperatorSet()\":[{\"details\":\"Thrown when trying to add a strategy to an operator set that already contains it.\"}],\"StrategyNotInOperatorSet()\":[{\"details\":\"Thrown when a strategy is referenced that does not belong to an operator set.\"}],\"UninitializedAllocationDelay()\":[{\"details\":\"Thrown when an operator's allocation delay has yet to be set.\"}]},\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"details\":\"The URI is never stored; it is simply emitted through an event for off-chain indexing.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST NOT already exist in the operator setIf the operatorSet is redistributing, the `BEACONCHAIN_ETH_STRAT` may not be added, since redistribution is not supported for native eth\",\"params\":{\"avs\":\"the avs to set strategies for\",\"operatorSetId\":\"the operator set to add strategies to\",\"strategies\":\"the strategies to add\"}},\"clearDeallocationQueue(address,address[],uint16[])\":{\"details\":\"can be called permissionlessly by anyone\",\"params\":{\"numToClear\":\"a list of number of pending deallocations to clear for each strategy\",\"operator\":\"address to clear deallocations for\",\"strategies\":\"a list of strategies to clear deallocations for\"}},\"constructor\":{\"details\":\"Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay.\"},\"createRedistributingOperatorSets(address,(uint32,address[])[],address[])\":{\"details\":\"Same logic as `createOperatorSets`, except `redistributionRecipients` corresponding to each operator set are stored.      Additionally, emits `RedistributionOperatorSetCreated` event instead of `OperatorSetCreated` for each created operator set.\",\"params\":{\"avs\":\"The AVS creating the new operator sets.\",\"params\":\"An array of operator set creation parameters.\",\"redistributionRecipients\":\"An array of addresses that will receive redistributed funds when operators are slashed.\"}},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"details\":\"After deregistering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. deregisterOperator` method to complete deregistration. This call MUST succeed in order for deregistration to be successful.\"},\"getAllocatableMagnitude(address,address)\":{\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get allocatable magnitude for\"},\"returns\":{\"_0\":\"magnitude available to be allocated to an operator set\"}},\"getAllocatedSets(address)\":{\"params\":{\"operator\":\"the operator to query\"},\"returns\":{\"_0\":\"the list of operator sets the operator has current or pending allocations/deallocations in\"}},\"getAllocatedStake((address,uint32),address[],address[])\":{\"params\":{\"operatorSet\":\"the operator set to query\",\"operators\":\"the operators to query\",\"strategies\":\"the strategies to query\"}},\"getAllocatedStrategies(address,(address,uint32))\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\"},\"returns\":{\"_0\":\"the list of strategies\"}},\"getAllocation(address,(address,uint32),address)\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the current/pending stake allocation\"}},\"getAllocationDelay(address)\":{\"details\":\"The operator must have a configured delay before allocating magnitude\",\"params\":{\"operator\":\"The operator to query\"},\"returns\":{\"_0\":\"Whether the operator has configured a delay\",\"_1\":\"The time in blocks between allocating magnitude and magnitude becoming slashable\"}},\"getAllocations(address[],(address,uint32),address)\":{\"params\":{\"operatorSet\":\"the operator set to query\",\"operators\":\"the operators to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"each operator's allocation\"}},\"getEncumberedMagnitude(address,address)\":{\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get allocatable magnitude for\"},\"returns\":{\"_0\":\"currently allocated magnitude\"}},\"getMaxMagnitude(address,address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get the max magnitude for\"},\"returns\":{\"_0\":\"the max magnitude for the strategy\"}},\"getMaxMagnitudes(address,address[])\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMaxMagnitudes(address[],address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operators\":\"the operators to query\",\"strategy\":\"the strategy to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each operator\"}},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"blockNumber\":\"the blockNumber at which to check the max magnitudes\",\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMemberCount((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to get the member count for\"}},\"getMembers((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"details\":\"This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents. This method does not consider slashable stake in the withdrawal queue even though there could be slashable stake in the queue.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.\",\"params\":{\"futureBlock\":\"the block at which to get allocation information. Should be a future block.\",\"operatorSet\":\"the operator set to query\",\"operators\":\"the list of operators whose slashable stakes will be returned\",\"strategies\":\"the strategies that each slashable stake corresponds to\"}},\"getOperatorSetCount(address)\":{\"params\":{\"avs\":\"the AVS to query\"}},\"getRedistributionRecipient((address,uint32))\":{\"params\":{\"operatorSet\":\"The Operator Set to query.\"},\"returns\":{\"_0\":\"For redistributing Operator Sets, returns the configured redistribution address set during Operator Set creation.         For non-redistributing operator sets, returns the `DEFAULT_BURN_ADDRESS`.\"}},\"getRegisteredSets(address)\":{\"params\":{\"operator\":\"The operator address to query.\"}},\"getSlashCount((address,uint32))\":{\"params\":{\"operatorSet\":\"The operator set to query.\"},\"returns\":{\"_0\":\"The number of slashes for the operator set.\"}},\"getStrategiesInOperatorSet((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getStrategyAllocations(address,address)\":{\"details\":\"Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the list of all operator sets the operator has allocations for\",\"_1\":\"the corresponding list of allocations from the specific `strategy`\"}},\"initialize(uint256)\":{\"details\":\"Initializes the initial owner and paused status.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"params\":{\"operator\":\"The operator to query\",\"operatorSet\":\"The operator set to query\"}},\"isOperatorRedistributable(address)\":{\"params\":{\"operator\":\"The operator to query.\"}},\"isOperatorSlashable(address,(address,uint32))\":{\"params\":{\"operator\":\"the operator to check slashability for\",\"operatorSet\":\"the operator set to check slashability for\"}},\"isRedistributingOperatorSet((address,uint32))\":{\"params\":{\"operatorSet\":\"The Operator Set to query.\"},\"returns\":{\"_0\":\"For redistributing Operator Sets, returns true.         For non-redistributing Operator Sets, returns false.\"}},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"details\":\"Updates encumberedMagnitude for the updated strategies\",\"params\":{\"operator\":\"the operator to modify allocations for\",\"params\":\"array of magnitude adjustments for one or more operator sets\"}},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"details\":\"After registering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. registerOperator` method to complete registration. This call MUST succeed in order for registration to be successful.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST already exist in the operator set\",\"params\":{\"avs\":\"the avs to remove strategies for\",\"operatorSetId\":\"the operator set to remove strategies from\",\"strategies\":\"the strategies to remove\"}},\"setAVSRegistrar(address,address)\":{\"params\":{\"registrar\":\"the new registrar address\"}},\"setAllocationDelay(address,uint32)\":{\"params\":{\"delay\":\"the allocation delay in blocks\",\"operator\":\"The operator to set the delay on behalf of.\"}},\"slashOperator(address,(address,uint32,address[],uint256[],string))\":{\"details\":\"For each strategy:      1. Reduces the operator's current allocation magnitude by wadToSlash proportion.      2. Reduces the strategy's max and encumbered magnitudes proportionally.      3. If there is a pending deallocation, reduces it proportionally.      4. Updates the operator's shares in the DelegationManager.Small slashing amounts may not result in actual token burns due to      rounding, which will result in small amounts of tokens locked in the contract      rather than fully burning through the burn mechanism.\",\"params\":{\"avs\":\"The AVS address initiating the slash.\",\"params\":\"The slashing parameters, containing:  - operator: The operator to slash.  - operatorSetId: The ID of the operator set the operator is being slashed from.  - strategies: Array of strategies to slash allocations from (must be in ascending order).  - wadsToSlash: Array of proportions to slash from each strategy (must be between 0 and 1e18).  - description: Description of why the operator was slashed.\"},\"returns\":{\"_0\":\"The ID of the slash.\",\"_1\":\"The amount of shares that were slashed for each strategy.\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateAVSMetadataURI(address,string)\":{\"details\":\"Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an AVS.\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when an AVS updates their metadata URI (Uniform Resource Identifier).\"},\"AVSRegistrarSet(address,address)\":{\"notice\":\"Emitted when an AVS configures the address that will handle registration/deregistration\"},\"AllocationDelaySet(address,uint32,uint32)\":{\"notice\":\"Emitted when operator updates their allocation delay.\"},\"AllocationUpdated(address,(address,uint32),address,uint64,uint32)\":{\"notice\":\"Emitted when an operator's magnitude is updated for a given operatorSet and strategy\"},\"EncumberedMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when operator's encumbered magnitude is updated for a given strategy\"},\"MaxMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when an operator's max magnitude is updated for a given strategy\"},\"OperatorAddedToOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is added to an operator set.\"},\"OperatorRemovedFromOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is removed from an operator set.\"},\"OperatorSetCreated((address,uint32))\":{\"notice\":\"Emitted when an operator set is created by an AVS.\"},\"OperatorSlashed(address,(address,uint32),address[],uint256[],string)\":{\"notice\":\"Emitted when an operator is slashed by an operator set for a strategy `wadSlashed` is the proportion of the operator's total delegated stake that was slashed\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"RedistributionAddressSet((address,uint32),address)\":{\"notice\":\"Emitted when a redistributing operator set is created by an AVS.\"},\"StrategyAddedToOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is added to an operator set.\"},\"StrategyRemovedFromOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is removed from an operator set.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"ALLOCATION_CONFIGURATION_DELAY()\":{\"notice\":\"Delay before alloaction delay modifications take effect.\"},\"DEALLOCATION_DELAY()\":{\"notice\":\"Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to.\"},\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to add strategies to an operator set\"},\"clearDeallocationQueue(address,address[],uint16[])\":{\"notice\":\"This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed.\"},\"createOperatorSets(address,(uint32,address[])[])\":{\"notice\":\"Allows an AVS to create new operator sets, defining strategies that the operator set uses\"},\"createRedistributingOperatorSets(address,(uint32,address[])[],address[])\":{\"notice\":\"Allows an AVS to create new Redistribution operator sets.\"},\"delegation()\":{\"notice\":\"The DelegationManager contract for EigenLayer\"},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"notice\":\"Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed.\"},\"eigenStrategy()\":{\"notice\":\"The Eigen strategy contract\"},\"getAVSRegistrar(address)\":{\"notice\":\"Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)\"},\"getAllocatableMagnitude(address,address)\":{\"notice\":\"For a strategy, get the amount of magnitude not currently allocated to any operator set\"},\"getAllocatedSets(address)\":{\"notice\":\"Returns the list of operator sets the operator has current or pending allocations/deallocations in\"},\"getAllocatedStake((address,uint32),address[],address[])\":{\"notice\":\"Returns the current allocated stake, irrespective of the operator's slashable status for the operatorSet.\"},\"getAllocatedStrategies(address,(address,uint32))\":{\"notice\":\"Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set.\"},\"getAllocation(address,(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocation an operator has from a strategy to an operator set\"},\"getAllocationDelay(address)\":{\"notice\":\"Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false.\"},\"getAllocations(address[],(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocations for multiple operators from a strategy to an operator set\"},\"getEncumberedMagnitude(address,address)\":{\"notice\":\"For a strategy, get the amount of magnitude that is allocated across one or more operator sets\"},\"getMaxMagnitude(address,address)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategy\"},\"getMaxMagnitudes(address,address[])\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies\"},\"getMaxMagnitudes(address[],address)\":{\"notice\":\"Returns the maximum magnitudes each operator can allocate for the given strategy\"},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies at a given block number\"},\"getMemberCount((address,uint32))\":{\"notice\":\"Returns the number of operators registered to an operatorSet.\"},\"getMembers((address,uint32))\":{\"notice\":\"Returns all the operators registered to an operator set\"},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"notice\":\"Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set. Note that this function will return 0 for the slashable stake if the operator is not slashable at the time of the call.\"},\"getOperatorSetCount(address)\":{\"notice\":\"Returns the number of operator sets for the AVS\"},\"getRedistributionRecipient((address,uint32))\":{\"notice\":\"Returns the address where slashed funds will be sent for a given operator set.\"},\"getRegisteredSets(address)\":{\"notice\":\"Returns a list of all operator sets the operator is registered for\"},\"getSlashCount((address,uint32))\":{\"notice\":\"Returns the number of slashes for a given operator set.\"},\"getStrategiesInOperatorSet((address,uint32))\":{\"notice\":\"Returns an array of strategies in the operatorSet.\"},\"getStrategyAllocations(address,address)\":{\"notice\":\"Given a strategy, returns a list of operator sets and corresponding stake allocations.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"notice\":\"Returns whether the operator is registered for the operator set\"},\"isOperatorRedistributable(address)\":{\"notice\":\"Returns whether an operator is slashable by a redistributing operator set.\"},\"isOperatorSet((address,uint32))\":{\"notice\":\"Returns whether the operator set exists\"},\"isOperatorSlashable(address,(address,uint32))\":{\"notice\":\"Returns whether an operator is slashable by an operator set. This returns true if the operator is registered or their slashableUntil block has not passed. This is because even when operators are deregistered, they still remain slashable for a period of time.\"},\"isRedistributingOperatorSet((address,uint32))\":{\"notice\":\"Returns whether a given operator set supports redistribution or not when funds are slashed and burned from EigenLayer.\"},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"notice\":\"Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"notice\":\"Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to remove strategies from an operator set\"},\"setAVSRegistrar(address,address)\":{\"notice\":\"Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address.\"},\"setAllocationDelay(address,uint32)\":{\"notice\":\"Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable.\"},\"slashOperator(address,(address,uint32,address[],uint256[],string))\":{\"notice\":\"Called by an AVS to slash an operator in a given operator set. The operator must be registered and have slashable stake allocated to the operator set.\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateAVSMetadataURI(address,string)\":{\"notice\":\"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/AllocationManager.sol\":\"AllocationManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/contracts/core/AllocationManager.sol\":{\"keccak256\":\"0x106a8121be13e63c20bd844f23ef1295cb37b9f8c2ea3ebedf28f9e78522c41f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4332706161466a1a5ba6498aa045a68fbc3c5be8fd564337ae435c006a6df613\",\"dweb:/ipfs/QmV4z8gzok4VwH8QsJN1XeR4RewnkLjQpaMnSR5mzpdsiW\"]},\"src/contracts/core/AllocationManagerStorage.sol\":{\"keccak256\":\"0x1f8de1546353ba85854fefca6e46ee116741952125d5f1ac68638bef69008e22\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a3404bafdf04aca79d91cd4df67cf4fa7c9f4a117afb2f89c472065fd9135be2\",\"dweb:/ipfs/QmaonTNkZMByoWFCCGZ9RbUG3ysGUPkPRsZ1imynnQVCfc\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x367f6a78c42fbd447b6598128e099602c8158f9fb2fb04b386e8dd629d160e5d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://157f343e043e561ea7c5c9252f73506689af058e84c4f624635a8c69cbbb3f9c\",\"dweb:/ipfs/QmY8iTTj8yEsuduDV1SQPasP9xoP74ZwVW9JrVa3c7ANqZ\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xb1ef3d6c53eb535f01fb07c8f0247f8b3f9d31a88e5f397c8074363c73251f0f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f3cab7243290d74aaf382ee5e8c820f4a2dab99841fa7d48ff13c01a5a2f7cc3\",\"dweb:/ipfs/QmXq16ZQwHijHSFbcA54vniRBkn7z7WMmAQ6nSDQzhSirF\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f\",\"dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e\",\"dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add\",\"dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L\"]},\"src/contracts/libraries/Snapshots.sol\":{\"keccak256\":\"0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b\",\"dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY\"]},\"src/contracts/mixins/Deprecated_OwnableUpgradeable.sol\":{\"keccak256\":\"0xbc4f8d56fb4828b9c6bc8d7281aa269680c390213e0c9f5718b9dfda7118ddf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://27c580b74186c53bd28ecbb2a6135eaace3e3d221967016d001c12999b496b8f\",\"dweb:/ipfs/Qmbn94Mku6QXDgrp1XMpi5onBisTC3dtTWPJymBa2v22ts\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99\",\"dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegation",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "_eigenStrategy",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_DEALLOCATION_DELAY",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_ALLOCATION_CONFIGURATION_DELAY",
              "type": "uint32"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Empty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAVSRegistrar"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRedistributionRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSnapshotOrdering"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidStrategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidWadToSlash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ModificationAlreadyPending"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonexistentAVSMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorNotSlashable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutOfBounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategiesMustBeInAscendingOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyAlreadyInOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotInOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UninitializedAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSRegistrarSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "magnitude",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "encumberedMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EncumberedMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "maxMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "wadSlashed",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSlashed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "redistributionRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RedistributionAddressSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ALLOCATION_CONFIGURATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEALLOCATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategiesToOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint16[]",
              "name": "numToClear",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearDeallocationQueue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "redistributionRecipients",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRedistributingOperatorSets"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAllocationManagerTypes.DeregisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterFromOperatorSets"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAVSRegistrar",
          "outputs": [
            {
              "internalType": "contract IAVSRegistrar",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatableMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedStake",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedStrategies",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocation",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocationDelay",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocations",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEncumberedMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudesAtBlock",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "futureBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinimumSlashableStake",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "slashableStake",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRedistributionRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegisteredSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSlashCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategiesInOperatorSet",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategyAllocations",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMemberOfOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorRedistributable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorSlashable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRedistributingOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OperatorSet",
                  "name": "operatorSet",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "avs",
                      "type": "address"
                    },
                    {
                      "internalType": "uint32",
                      "name": "id",
                      "type": "uint32"
                    }
                  ]
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint64[]",
                  "name": "newMagnitudes",
                  "type": "uint64[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyAllocations"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.RegisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerForOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategiesFromOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAVSRegistrar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.SlashingParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "wadsToSlash",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "slashOperator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAVSMetadataURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST NOT already exist in the operator setIf the operatorSet is redistributing, the `BEACONCHAIN_ETH_STRAT` may not be added, since redistribution is not supported for native eth",
            "params": {
              "avs": "the avs to set strategies for",
              "operatorSetId": "the operator set to add strategies to",
              "strategies": "the strategies to add"
            }
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "details": "can be called permissionlessly by anyone",
            "params": {
              "numToClear": "a list of number of pending deallocations to clear for each strategy",
              "operator": "address to clear deallocations for",
              "strategies": "a list of strategies to clear deallocations for"
            }
          },
          "constructor": {
            "details": "Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay."
          },
          "createRedistributingOperatorSets(address,(uint32,address[])[],address[])": {
            "details": "Same logic as `createOperatorSets`, except `redistributionRecipients` corresponding to each operator set are stored.      Additionally, emits `RedistributionOperatorSetCreated` event instead of `OperatorSetCreated` for each created operator set.",
            "params": {
              "avs": "The AVS creating the new operator sets.",
              "params": "An array of operator set creation parameters.",
              "redistributionRecipients": "An array of addresses that will receive redistributed funds when operators are slashed."
            }
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "details": "After deregistering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. deregisterOperator` method to complete deregistration. This call MUST succeed in order for deregistration to be successful."
          },
          "getAllocatableMagnitude(address,address)": {
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get allocatable magnitude for"
            },
            "returns": {
              "_0": "magnitude available to be allocated to an operator set"
            }
          },
          "getAllocatedSets(address)": {
            "params": {
              "operator": "the operator to query"
            },
            "returns": {
              "_0": "the list of operator sets the operator has current or pending allocations/deallocations in"
            }
          },
          "getAllocatedStake((address,uint32),address[],address[])": {
            "params": {
              "operatorSet": "the operator set to query",
              "operators": "the operators to query",
              "strategies": "the strategies to query"
            }
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query"
            },
            "returns": {
              "_0": "the list of strategies"
            }
          },
          "getAllocation(address,(address,uint32),address)": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the current/pending stake allocation"
            }
          },
          "getAllocationDelay(address)": {
            "details": "The operator must have a configured delay before allocating magnitude",
            "params": {
              "operator": "The operator to query"
            },
            "returns": {
              "_0": "Whether the operator has configured a delay",
              "_1": "The time in blocks between allocating magnitude and magnitude becoming slashable"
            }
          },
          "getAllocations(address[],(address,uint32),address)": {
            "params": {
              "operatorSet": "the operator set to query",
              "operators": "the operators to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "each operator's allocation"
            }
          },
          "getEncumberedMagnitude(address,address)": {
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get allocatable magnitude for"
            },
            "returns": {
              "_0": "currently allocated magnitude"
            }
          },
          "getMaxMagnitude(address,address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get the max magnitude for"
            },
            "returns": {
              "_0": "the max magnitude for the strategy"
            }
          },
          "getMaxMagnitudes(address,address[])": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMaxMagnitudes(address[],address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operators": "the operators to query",
              "strategy": "the strategy to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each operator"
            }
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "blockNumber": "the blockNumber at which to check the max magnitudes",
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMemberCount((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to get the member count for"
            }
          },
          "getMembers((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "details": "This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents. This method does not consider slashable stake in the withdrawal queue even though there could be slashable stake in the queue.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.",
            "params": {
              "futureBlock": "the block at which to get allocation information. Should be a future block.",
              "operatorSet": "the operator set to query",
              "operators": "the list of operators whose slashable stakes will be returned",
              "strategies": "the strategies that each slashable stake corresponds to"
            }
          },
          "getOperatorSetCount(address)": {
            "params": {
              "avs": "the AVS to query"
            }
          },
          "getRedistributionRecipient((address,uint32))": {
            "params": {
              "operatorSet": "The Operator Set to query."
            },
            "returns": {
              "_0": "For redistributing Operator Sets, returns the configured redistribution address set during Operator Set creation.         For non-redistributing operator sets, returns the `DEFAULT_BURN_ADDRESS`."
            }
          },
          "getRegisteredSets(address)": {
            "params": {
              "operator": "The operator address to query."
            }
          },
          "getSlashCount((address,uint32))": {
            "params": {
              "operatorSet": "The operator set to query."
            },
            "returns": {
              "_0": "The number of slashes for the operator set."
            }
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getStrategyAllocations(address,address)": {
            "details": "Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the list of all operator sets the operator has allocations for",
              "_1": "the corresponding list of allocations from the specific `strategy`"
            }
          },
          "initialize(uint256)": {
            "details": "Initializes the initial owner and paused status."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "params": {
              "operator": "The operator to query",
              "operatorSet": "The operator set to query"
            }
          },
          "isOperatorRedistributable(address)": {
            "params": {
              "operator": "The operator to query."
            }
          },
          "isOperatorSlashable(address,(address,uint32))": {
            "params": {
              "operator": "the operator to check slashability for",
              "operatorSet": "the operator set to check slashability for"
            }
          },
          "isRedistributingOperatorSet((address,uint32))": {
            "params": {
              "operatorSet": "The Operator Set to query."
            },
            "returns": {
              "_0": "For redistributing Operator Sets, returns true.         For non-redistributing Operator Sets, returns false."
            }
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "details": "Updates encumberedMagnitude for the updated strategies",
            "params": {
              "operator": "the operator to modify allocations for",
              "params": "array of magnitude adjustments for one or more operator sets"
            }
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "details": "After registering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. registerOperator` method to complete registration. This call MUST succeed in order for registration to be successful."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST already exist in the operator set",
            "params": {
              "avs": "the avs to remove strategies for",
              "operatorSetId": "the operator set to remove strategies from",
              "strategies": "the strategies to remove"
            }
          },
          "setAVSRegistrar(address,address)": {
            "params": {
              "registrar": "the new registrar address"
            }
          },
          "setAllocationDelay(address,uint32)": {
            "params": {
              "delay": "the allocation delay in blocks",
              "operator": "The operator to set the delay on behalf of."
            }
          },
          "slashOperator(address,(address,uint32,address[],uint256[],string))": {
            "details": "For each strategy:      1. Reduces the operator's current allocation magnitude by wadToSlash proportion.      2. Reduces the strategy's max and encumbered magnitudes proportionally.      3. If there is a pending deallocation, reduces it proportionally.      4. Updates the operator's shares in the DelegationManager.Small slashing amounts may not result in actual token burns due to      rounding, which will result in small amounts of tokens locked in the contract      rather than fully burning through the burn mechanism.",
            "params": {
              "avs": "The AVS address initiating the slash.",
              "params": "The slashing parameters, containing:  - operator: The operator to slash.  - operatorSetId: The ID of the operator set the operator is being slashed from.  - strategies: Array of strategies to slash allocations from (must be in ascending order).  - wadsToSlash: Array of proportions to slash from each strategy (must be between 0 and 1e18).  - description: Description of why the operator was slashed."
            },
            "returns": {
              "_0": "The ID of the slash.",
              "_1": "The amount of shares that were slashed for each strategy."
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateAVSMetadataURI(address,string)": {
            "details": "Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.",
            "params": {
              "metadataURI": "The URI for metadata associated with an AVS."
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ALLOCATION_CONFIGURATION_DELAY()": {
            "notice": "Delay before alloaction delay modifications take effect."
          },
          "DEALLOCATION_DELAY()": {
            "notice": "Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to."
          },
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to add strategies to an operator set"
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "notice": "This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed."
          },
          "createOperatorSets(address,(uint32,address[])[])": {
            "notice": "Allows an AVS to create new operator sets, defining strategies that the operator set uses"
          },
          "createRedistributingOperatorSets(address,(uint32,address[])[],address[])": {
            "notice": "Allows an AVS to create new Redistribution operator sets."
          },
          "delegation()": {
            "notice": "The DelegationManager contract for EigenLayer"
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "notice": "Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed."
          },
          "eigenStrategy()": {
            "notice": "The Eigen strategy contract"
          },
          "getAVSRegistrar(address)": {
            "notice": "Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)"
          },
          "getAllocatableMagnitude(address,address)": {
            "notice": "For a strategy, get the amount of magnitude not currently allocated to any operator set"
          },
          "getAllocatedSets(address)": {
            "notice": "Returns the list of operator sets the operator has current or pending allocations/deallocations in"
          },
          "getAllocatedStake((address,uint32),address[],address[])": {
            "notice": "Returns the current allocated stake, irrespective of the operator's slashable status for the operatorSet."
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "notice": "Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set."
          },
          "getAllocation(address,(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocation an operator has from a strategy to an operator set"
          },
          "getAllocationDelay(address)": {
            "notice": "Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false."
          },
          "getAllocations(address[],(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocations for multiple operators from a strategy to an operator set"
          },
          "getEncumberedMagnitude(address,address)": {
            "notice": "For a strategy, get the amount of magnitude that is allocated across one or more operator sets"
          },
          "getMaxMagnitude(address,address)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategy"
          },
          "getMaxMagnitudes(address,address[])": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies"
          },
          "getMaxMagnitudes(address[],address)": {
            "notice": "Returns the maximum magnitudes each operator can allocate for the given strategy"
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies at a given block number"
          },
          "getMemberCount((address,uint32))": {
            "notice": "Returns the number of operators registered to an operatorSet."
          },
          "getMembers((address,uint32))": {
            "notice": "Returns all the operators registered to an operator set"
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "notice": "Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set. Note that this function will return 0 for the slashable stake if the operator is not slashable at the time of the call."
          },
          "getOperatorSetCount(address)": {
            "notice": "Returns the number of operator sets for the AVS"
          },
          "getRedistributionRecipient((address,uint32))": {
            "notice": "Returns the address where slashed funds will be sent for a given operator set."
          },
          "getRegisteredSets(address)": {
            "notice": "Returns a list of all operator sets the operator is registered for"
          },
          "getSlashCount((address,uint32))": {
            "notice": "Returns the number of slashes for a given operator set."
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "notice": "Returns an array of strategies in the operatorSet."
          },
          "getStrategyAllocations(address,address)": {
            "notice": "Given a strategy, returns a list of operator sets and corresponding stake allocations."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "notice": "Returns whether the operator is registered for the operator set"
          },
          "isOperatorRedistributable(address)": {
            "notice": "Returns whether an operator is slashable by a redistributing operator set."
          },
          "isOperatorSet((address,uint32))": {
            "notice": "Returns whether the operator set exists"
          },
          "isOperatorSlashable(address,(address,uint32))": {
            "notice": "Returns whether an operator is slashable by an operator set. This returns true if the operator is registered or their slashableUntil block has not passed. This is because even when operators are deregistered, they still remain slashable for a period of time."
          },
          "isRedistributingOperatorSet((address,uint32))": {
            "notice": "Returns whether a given operator set supports redistribution or not when funds are slashed and burned from EigenLayer."
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "notice": "Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "notice": "Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to remove strategies from an operator set"
          },
          "setAVSRegistrar(address,address)": {
            "notice": "Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address."
          },
          "setAllocationDelay(address,uint32)": {
            "notice": "Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable."
          },
          "slashOperator(address,(address,uint32,address[],uint256[],string))": {
            "notice": "Called by an AVS to slash an operator in a given operator set. The operator must be registered and have slashable stake allocated to the operator set."
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateAVSMetadataURI(address,string)": {
            "notice": "Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated."
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/AllocationManager.sol": "AllocationManager"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol": {
        "keccak256": "0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c",
        "urls": [
          "bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7",
          "dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/contracts/core/AllocationManager.sol": {
        "keccak256": "0x106a8121be13e63c20bd844f23ef1295cb37b9f8c2ea3ebedf28f9e78522c41f",
        "urls": [
          "bzz-raw://4332706161466a1a5ba6498aa045a68fbc3c5be8fd564337ae435c006a6df613",
          "dweb:/ipfs/QmV4z8gzok4VwH8QsJN1XeR4RewnkLjQpaMnSR5mzpdsiW"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/AllocationManagerStorage.sol": {
        "keccak256": "0x1f8de1546353ba85854fefca6e46ee116741952125d5f1ac68638bef69008e22",
        "urls": [
          "bzz-raw://a3404bafdf04aca79d91cd4df67cf4fa7c9f4a117afb2f89c472065fd9135be2",
          "dweb:/ipfs/QmaonTNkZMByoWFCCGZ9RbUG3ysGUPkPRsZ1imynnQVCfc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d",
        "urls": [
          "bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc",
          "dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0x367f6a78c42fbd447b6598128e099602c8158f9fb2fb04b386e8dd629d160e5d",
        "urls": [
          "bzz-raw://157f343e043e561ea7c5c9252f73506689af058e84c4f624635a8c69cbbb3f9c",
          "dweb:/ipfs/QmY8iTTj8yEsuduDV1SQPasP9xoP74ZwVW9JrVa3c7ANqZ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xb1ef3d6c53eb535f01fb07c8f0247f8b3f9d31a88e5f397c8074363c73251f0f",
        "urls": [
          "bzz-raw://f3cab7243290d74aaf382ee5e8c820f4a2dab99841fa7d48ff13c01a5a2f7cc3",
          "dweb:/ipfs/QmXq16ZQwHijHSFbcA54vniRBkn7z7WMmAQ6nSDQzhSirF"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f",
        "urls": [
          "bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f",
          "dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtilsMixin.sol": {
        "keccak256": "0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b",
        "urls": [
          "bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10",
          "dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5",
        "urls": [
          "bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e",
          "dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469",
        "urls": [
          "bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add",
          "dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Snapshots.sol": {
        "keccak256": "0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6",
        "urls": [
          "bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b",
          "dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY"
        ],
        "license": "MIT"
      },
      "src/contracts/mixins/Deprecated_OwnableUpgradeable.sol": {
        "keccak256": "0xbc4f8d56fb4828b9c6bc8d7281aa269680c390213e0c9f5718b9dfda7118ddf9",
        "urls": [
          "bzz-raw://27c580b74186c53bd28ecbb2a6135eaace3e3d221967016d001c12999b496b8f",
          "dweb:/ipfs/Qmbn94Mku6QXDgrp1XMpi5onBisTC3dtTWPJymBa2v22ts"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446",
        "urls": [
          "bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99",
          "dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 117
}