{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_strategyManager",
          "type": "address",
          "internalType": "contract IStrategyManager"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "newShares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "explanation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getTVLLimits",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_maxPerDeposit",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_maxTotalDeposits",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_underlyingToken",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_underlyingToken",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "maxPerDeposit",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxTotalDeposits",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setTVLLimits",
      "inputs": [
        {
          "name": "newMaxPerDeposit",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "newMaxTotalDeposits",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "shares",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "sharesToUnderlying",
      "inputs": [
        {
          "name": "amountShares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "sharesToUnderlyingView",
      "inputs": [
        {
          "name": "amountShares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "strategyManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategyManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalShares",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "underlyingToShares",
      "inputs": [
        {
          "name": "amountUnderlying",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "underlyingToSharesView",
      "inputs": [
        {
          "name": "amountUnderlying",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "underlyingToken",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "userUnderlying",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "userUnderlyingView",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        },
        {
          "name": "amountShares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ExchangeRateEmitted",
      "inputs": [
        {
          "name": "rate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxPerDepositUpdated",
      "inputs": [
        {
          "name": "previousValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxTotalDepositsUpdated",
      "inputs": [
        {
          "name": "previousValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyTokenSet",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "indexed": false,
          "internalType": "contract IERC20"
        },
        {
          "name": "decimals",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "BalanceExceedsMaxTotalDeposits",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MaxPerDepositExceedsMax",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NewSharesZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyStrategyManager",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnderlyingToken",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "TotalSharesExceedsMax",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WithdrawalAmountExceedsTotalDeposits",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561000f575f5ffd5b5060405161181738038061181783398101604081905261002e916101bc565b82828280826001600160a01b03811661005a576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b031660805261006f81610093565b60a052506001600160a01b03831660c0526100886100d9565b5050505050506102ed565b5f5f829050601f815111156100c6578260405163305a27a960e01b81526004016100bd9190610292565b60405180910390fd5b80516100d1826102c7565b179392505050565b5f54610100900460ff16156101405760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b60648201526084016100bd565b5f5460ff9081161461018f575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146101a5575f5ffd5b50565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f606084860312156101ce575f5ffd5b83516101d981610191565b60208501519093506101ea81610191565b60408501519092506001600160401b03811115610205575f5ffd5b8401601f81018613610215575f5ffd5b80516001600160401b0381111561022e5761022e6101a8565b604051601f8201601f19908116603f011681016001600160401b038111828210171561025c5761025c6101a8565b604052818152828201602001881015610273575f5ffd5b8160208401602083015e5f602083830101528093505050509250925092565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156102e7575f198160200360031b1b821691505b50919050565b60805160a05160c0516114dd61033a5f395f81816101e801528181610417015281816107cf015261085101525f61053701525f81816102c5015281816109ec0152610b5401526114dd5ff3fe608060405234801561000f575f5ffd5b5060043610610187575f3560e01c80637a8b2637116100d9578063c4d66de811610093578063df6fadc11161006e578063df6fadc114610361578063e3dae51c1461037c578063f3e738751461038f578063fabc1cbc146103a2575f5ffd5b8063c4d66de814610328578063ce7c2ac21461033b578063d9caed121461034e575f5ffd5b80637a8b2637146102ad578063886f1195146102c05780638c871019146102e75780638f6a6240146102fa578063a6ab36f21461030d578063ab5921e114610320575f5ffd5b806347e7ef2411610144578063595c6a671161011f578063595c6a67146102655780635ac86ab71461026d5780635c975abb1461029c57806361b01b5d146102a4575f5ffd5b806347e7ef241461022a57806354fd4d501461023d578063553ca5f814610252575f5ffd5b806311c70c9d1461018b578063136439dd146101a05780632495a599146101b357806339b70e38146101e35780633a98ef391461020a57806343fe08b014610221575b5f5ffd5b61019e6101993660046111b1565b6103b5565b005b61019e6101ae3660046111d1565b6103cb565b6032546101c6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101c67f000000000000000000000000000000000000000000000000000000000000000081565b61021360335481565b6040519081526020016101da565b61021360645481565b6102136102383660046111fc565b610401565b610245610530565b6040516101da9190611226565b61021361026036600461125b565b610560565b61019e610573565b61028c61027b36600461128b565b6001805460ff9092161b9081161490565b60405190151581526020016101da565b600154610213565b61021360655481565b6102136102bb3660046111d1565b610587565b6101c67f000000000000000000000000000000000000000000000000000000000000000081565b6102136102f53660046111d1565b6105d0565b61021361030836600461125b565b6105da565b61019e61031b3660046112a6565b6105e7565b6102456106c2565b61019e61033636600461125b565b6106e2565b61021361034936600461125b565b6107a8565b61021361035c3660046112dc565b61083a565b606454606554604080519283526020830191909152016101da565b61021361038a3660046111d1565b61093c565b61021361039d3660046111d1565b610973565b61019e6103b03660046111d1565b61097d565b6103bd6109ea565b6103c78282610a9b565b5050565b6103d3610b3f565b60015481811681146103f85760405163c61dca5d60e01b815260040160405180910390fd5b6103c782610be2565b5f5f61040c81610c1f565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610455576040516348da714f60e01b815260040160405180910390fd5b61045f8484610c55565b6033545f61046f6103e88361132e565b90505f6103e861047d610cac565b610487919061132e565b90505f6104948783611341565b9050806104a18489611354565b6104ab919061136b565b9550855f036104cd57604051630c392ed360e11b815260040160405180910390fd5b6104d7868561132e565b60338190556f4b3b4ca85a86c47a098a223fffffffff101561050c57604051632f14e8a360e11b815260040160405180910390fd5b610525826103e8603354610520919061132e565b610d16565b505050505092915050565b606061055b7f0000000000000000000000000000000000000000000000000000000000000000610d62565b905090565b5f61056d6102bb836107a8565b92915050565b61057b610b3f565b6105855f19610be2565b565b5f5f6103e8603354610599919061132e565b90505f6103e86105a7610cac565b6105b1919061132e565b9050816105be8583611354565b6105c8919061136b565b949350505050565b5f61056d8261093c565b5f61056d61039d836107a8565b5f54610100900460ff161580801561060557505f54600160ff909116105b8061061e5750303b15801561061e57505f5460ff166001145b6106435760405162461bcd60e51b815260040161063a9061138a565b60405180910390fd5b5f805460ff191660011790558015610664575f805461ff0019166101001790555b61066e8484610a9b565b61067782610d9f565b80156106bc575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60606040518060800160405280604d815260200161145b604d9139905090565b5f54610100900460ff161580801561070057505f54600160ff909116105b806107195750303b15801561071957505f5460ff166001145b6107355760405162461bcd60e51b815260040161063a9061138a565b5f805460ff191660011790558015610756575f805461ff0019166101001790555b61075f82610d9f565b80156103c7575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15050565b60405163fe243a1760e01b81526001600160a01b0382811660048301523060248301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063fe243a1790604401602060405180830381865afa158015610816573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056d91906113d8565b5f600161084681610c1f565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461088f576040516348da714f60e01b815260040160405180910390fd5b61089a858585610eea565b603354808411156108be57604051630b469df360e41b815260040160405180910390fd5b5f6108cb6103e88361132e565b90505f6103e86108d9610cac565b6108e3919061132e565b9050816108f08783611354565b6108fa919061136b565b94506109068684611341565b6033556109266109168683611341565b6103e8603354610520919061132e565b610931888887610f1d565b505050509392505050565b5f5f6103e860335461094e919061132e565b90505f6103e861095c610cac565b610966919061132e565b9050806105be8386611354565b5f61056d82610587565b6109856109ea565b600154801982198116146109ac5760405163c61dca5d60e01b815260040160405180910390fd5b600182905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a46573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6a91906113ef565b6001600160a01b0316336001600160a01b0316146105855760405163794821ff60e01b815260040160405180910390fd5b60645460408051918252602082018490527ff97ed4e083acac67830025ecbc756d8fe847cdbdca4cee3fe1e128e98b54ecb5910160405180910390a160655460408051918252602082018390527f6ab181e0440bfbf4bacdf2e99674735ce6638005490688c5f994f5399353e452910160405180910390a180821115610b345760405163052b07b760e21b815260040160405180910390fd5b606491909155606555565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015610ba1573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc5919061140a565b61058557604051631d77d47760e21b815260040160405180910390fd5b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b610c34816001805460ff9092161b9081161490565b15610c525760405163840a48d560e01b815260040160405180910390fd5b50565b606454811115610c785760405163052b07b760e21b815260040160405180910390fd5b606554610c83610cac565b1115610ca25760405163d86bae6760e01b815260040160405180910390fd5b6103c78282610f31565b6032546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cf2573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055b91906113d8565b7fd2494f3479e5da49d386657c292c610b5b01df313d07c62eb0cfa49924a31be881610d4a84670de0b6b3a7640000611354565b610d54919061136b565b60405190815260200161079c565b60605f610d6e83610f5f565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f54610100900460ff16610e095760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b603280546001600160a01b0319166001600160a01b038316179055610e2d5f610be2565b7f1c540707b00eb5427b6b774fc799d756516a54aee108b64b327acc55af55750760325f9054906101000a90046001600160a01b0316826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ec39190611429565b604080516001600160a01b03909316835260ff90911660208301520160405180910390a150565b6032546001600160a01b03838116911614610f1857604051630312abdd60e61b815260040160405180910390fd5b505050565b610f186001600160a01b0383168483610f86565b6032546001600160a01b038381169116146103c757604051630312abdd60e61b815260040160405180910390fd5b5f60ff8216601f81111561056d57604051632cd44ac360e21b815260040160405180910390fd5b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610f18928692915f91611015918516908490611094565b905080515f1480611035575080806020019051810190611035919061140a565b610f185760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161063a565b60606105c884845f85855f5f866001600160a01b031685876040516110b99190611444565b5f6040518083038185875af1925050503d805f81146110f3576040519150601f19603f3d011682016040523d82523d5f602084013e6110f8565b606091505b509150915061110987838387611114565b979650505050505050565b606083156111825782515f0361117b576001600160a01b0385163b61117b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063a565b50816105c8565b6105c883838151156111975781518083602001fd5b8060405162461bcd60e51b815260040161063a9190611226565b5f5f604083850312156111c2575f5ffd5b50508035926020909101359150565b5f602082840312156111e1575f5ffd5b5035919050565b6001600160a01b0381168114610c52575f5ffd5b5f5f6040838503121561120d575f5ffd5b8235611218816111e8565b946020939093013593505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f6020828403121561126b575f5ffd5b8135611276816111e8565b9392505050565b60ff81168114610c52575f5ffd5b5f6020828403121561129b575f5ffd5b81356112768161127d565b5f5f5f606084860312156112b8575f5ffd5b833592506020840135915060408401356112d1816111e8565b809150509250925092565b5f5f5f606084860312156112ee575f5ffd5b83356112f9816111e8565b92506020840135611309816111e8565b929592945050506040919091013590565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561056d5761056d61131a565b8181038181111561056d5761056d61131a565b808202811582820484141761056d5761056d61131a565b5f8261138557634e487b7160e01b5f52601260045260245ffd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b5f602082840312156113e8575f5ffd5b5051919050565b5f602082840312156113ff575f5ffd5b8151611276816111e8565b5f6020828403121561141a575f5ffd5b81518015158114611276575f5ffd5b5f60208284031215611439575f5ffd5b81516112768161127d565b5f82518060208501845e5f92019182525091905056fe4261736520537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73a26469706673582212208b0cfacd4d018167cd169b64d964681d0f6f22f263438f2636ee8aae671eb4d264736f6c634300081b0033",
    "sourceMap": "533:4289:165:-:0;;;1227:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1374:16;1392:15;1409:8;;1392:15;-1:-1:-1;;;;;3618:38:154;;3610:67;;;;-1:-1:-1;;;3610:67:154;;;;;;;;;;;;-1:-1:-1;;;;;3687:32:154;;;961:24:152;:8;:22;:24::i;:::-;950:35;;-1:-1:-1;;;;;;4322:34:164;::::2;;::::0;4366:22:::2;:20;:22::i;:::-;4130:265:::0;;;1227:194:165;;;533:4289;;1711:286:37;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:37;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:37:o;5939:280:26:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:26;;2516:2:267;5998:66:26;;;2498:21:267;2555:2;2535:18;;;2528:30;2594:34;2574:18;;;2567:62;-1:-1:-1;;;2645:18:267;;;2638:37;2692:19;;5998:66:26;2314:403:267;5998:66:26;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:26;6140:15;6125:30;;;;;;6174:28;;2864:36:267;;;6174:28:26;;2852:2:267;2837:18;6174:28:26;;;;;;;6074:139;5939:280::o;14:149:267:-;-1:-1:-1;;;;;107:31:267;;97:42;;87:70;;153:1;150;143:12;87:70;14:149;:::o;168:127::-;229:10;224:3;220:20;217:1;210:31;260:4;257:1;250:15;284:4;281:1;274:15;300:1284;449:6;457;465;518:2;506:9;497:7;493:23;489:32;486:52;;;534:1;531;524:12;486:52;566:9;560:16;585:49;628:5;585:49;:::i;:::-;703:2;688:18;;682:25;653:5;;-1:-1:-1;716:51:267;682:25;716:51;:::i;:::-;837:2;822:18;;816:25;786:7;;-1:-1:-1;;;;;;853:30:267;;850:50;;;896:1;893;886:12;850:50;919:22;;972:4;964:13;;960:27;-1:-1:-1;950:55:267;;1001:1;998;991:12;950:55;1028:9;;-1:-1:-1;;;;;1049:30:267;;1046:56;;;1082:18;;:::i;:::-;1131:2;1125:9;1223:2;1185:17;;-1:-1:-1;;1181:31:267;;;1214:2;1177:40;1173:54;1161:67;;-1:-1:-1;;;;;1243:34:267;;1279:22;;;1240:62;1237:88;;;1305:18;;:::i;:::-;1341:2;1334:22;1365;;;1406:15;;;1423:2;1402:24;1399:37;-1:-1:-1;1396:57:267;;;1449:1;1446;1439:12;1396:57;1498:6;1493:2;1489;1485:11;1480:2;1472:6;1468:15;1462:43;1551:1;1546:2;1537:6;1529;1525:19;1521:28;1514:39;1572:6;1562:16;;;;;300:1284;;;;;:::o;1589:418::-;1738:2;1727:9;1720:21;1701:4;1770:6;1764:13;1813:6;1808:2;1797:9;1793:18;1786:34;1872:6;1867:2;1859:6;1855:15;1850:2;1839:9;1835:18;1829:50;1928:1;1923:2;1914:6;1903:9;1899:22;1895:31;1888:42;1998:2;1991;1987:7;1982:2;1974:6;1970:15;1966:29;1955:9;1951:45;1947:54;1939:62;;;1589:418;;;;:::o;2012:297::-;2130:12;;2177:4;2166:16;;;2160:23;;2130:12;2195:16;;2192:111;;;2289:1;2285:6;2275;2269:4;2265:17;2262:1;2258:25;2254:38;2247:5;2243:50;2234:59;;2192:111;;2012:297;;;:::o;2722:184::-;533:4289:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b5060043610610187575f3560e01c80637a8b2637116100d9578063c4d66de811610093578063df6fadc11161006e578063df6fadc114610361578063e3dae51c1461037c578063f3e738751461038f578063fabc1cbc146103a2575f5ffd5b8063c4d66de814610328578063ce7c2ac21461033b578063d9caed121461034e575f5ffd5b80637a8b2637146102ad578063886f1195146102c05780638c871019146102e75780638f6a6240146102fa578063a6ab36f21461030d578063ab5921e114610320575f5ffd5b806347e7ef2411610144578063595c6a671161011f578063595c6a67146102655780635ac86ab71461026d5780635c975abb1461029c57806361b01b5d146102a4575f5ffd5b806347e7ef241461022a57806354fd4d501461023d578063553ca5f814610252575f5ffd5b806311c70c9d1461018b578063136439dd146101a05780632495a599146101b357806339b70e38146101e35780633a98ef391461020a57806343fe08b014610221575b5f5ffd5b61019e6101993660046111b1565b6103b5565b005b61019e6101ae3660046111d1565b6103cb565b6032546101c6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101c67f000000000000000000000000000000000000000000000000000000000000000081565b61021360335481565b6040519081526020016101da565b61021360645481565b6102136102383660046111fc565b610401565b610245610530565b6040516101da9190611226565b61021361026036600461125b565b610560565b61019e610573565b61028c61027b36600461128b565b6001805460ff9092161b9081161490565b60405190151581526020016101da565b600154610213565b61021360655481565b6102136102bb3660046111d1565b610587565b6101c67f000000000000000000000000000000000000000000000000000000000000000081565b6102136102f53660046111d1565b6105d0565b61021361030836600461125b565b6105da565b61019e61031b3660046112a6565b6105e7565b6102456106c2565b61019e61033636600461125b565b6106e2565b61021361034936600461125b565b6107a8565b61021361035c3660046112dc565b61083a565b606454606554604080519283526020830191909152016101da565b61021361038a3660046111d1565b61093c565b61021361039d3660046111d1565b610973565b61019e6103b03660046111d1565b61097d565b6103bd6109ea565b6103c78282610a9b565b5050565b6103d3610b3f565b60015481811681146103f85760405163c61dca5d60e01b815260040160405180910390fd5b6103c782610be2565b5f5f61040c81610c1f565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610455576040516348da714f60e01b815260040160405180910390fd5b61045f8484610c55565b6033545f61046f6103e88361132e565b90505f6103e861047d610cac565b610487919061132e565b90505f6104948783611341565b9050806104a18489611354565b6104ab919061136b565b9550855f036104cd57604051630c392ed360e11b815260040160405180910390fd5b6104d7868561132e565b60338190556f4b3b4ca85a86c47a098a223fffffffff101561050c57604051632f14e8a360e11b815260040160405180910390fd5b610525826103e8603354610520919061132e565b610d16565b505050505092915050565b606061055b7f0000000000000000000000000000000000000000000000000000000000000000610d62565b905090565b5f61056d6102bb836107a8565b92915050565b61057b610b3f565b6105855f19610be2565b565b5f5f6103e8603354610599919061132e565b90505f6103e86105a7610cac565b6105b1919061132e565b9050816105be8583611354565b6105c8919061136b565b949350505050565b5f61056d8261093c565b5f61056d61039d836107a8565b5f54610100900460ff161580801561060557505f54600160ff909116105b8061061e5750303b15801561061e57505f5460ff166001145b6106435760405162461bcd60e51b815260040161063a9061138a565b60405180910390fd5b5f805460ff191660011790558015610664575f805461ff0019166101001790555b61066e8484610a9b565b61067782610d9f565b80156106bc575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60606040518060800160405280604d815260200161145b604d9139905090565b5f54610100900460ff161580801561070057505f54600160ff909116105b806107195750303b15801561071957505f5460ff166001145b6107355760405162461bcd60e51b815260040161063a9061138a565b5f805460ff191660011790558015610756575f805461ff0019166101001790555b61075f82610d9f565b80156103c7575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15050565b60405163fe243a1760e01b81526001600160a01b0382811660048301523060248301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063fe243a1790604401602060405180830381865afa158015610816573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056d91906113d8565b5f600161084681610c1f565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461088f576040516348da714f60e01b815260040160405180910390fd5b61089a858585610eea565b603354808411156108be57604051630b469df360e41b815260040160405180910390fd5b5f6108cb6103e88361132e565b90505f6103e86108d9610cac565b6108e3919061132e565b9050816108f08783611354565b6108fa919061136b565b94506109068684611341565b6033556109266109168683611341565b6103e8603354610520919061132e565b610931888887610f1d565b505050509392505050565b5f5f6103e860335461094e919061132e565b90505f6103e861095c610cac565b610966919061132e565b9050806105be8386611354565b5f61056d82610587565b6109856109ea565b600154801982198116146109ac5760405163c61dca5d60e01b815260040160405180910390fd5b600182905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a46573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6a91906113ef565b6001600160a01b0316336001600160a01b0316146105855760405163794821ff60e01b815260040160405180910390fd5b60645460408051918252602082018490527ff97ed4e083acac67830025ecbc756d8fe847cdbdca4cee3fe1e128e98b54ecb5910160405180910390a160655460408051918252602082018390527f6ab181e0440bfbf4bacdf2e99674735ce6638005490688c5f994f5399353e452910160405180910390a180821115610b345760405163052b07b760e21b815260040160405180910390fd5b606491909155606555565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015610ba1573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc5919061140a565b61058557604051631d77d47760e21b815260040160405180910390fd5b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b610c34816001805460ff9092161b9081161490565b15610c525760405163840a48d560e01b815260040160405180910390fd5b50565b606454811115610c785760405163052b07b760e21b815260040160405180910390fd5b606554610c83610cac565b1115610ca25760405163d86bae6760e01b815260040160405180910390fd5b6103c78282610f31565b6032546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cf2573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055b91906113d8565b7fd2494f3479e5da49d386657c292c610b5b01df313d07c62eb0cfa49924a31be881610d4a84670de0b6b3a7640000611354565b610d54919061136b565b60405190815260200161079c565b60605f610d6e83610f5f565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f54610100900460ff16610e095760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b603280546001600160a01b0319166001600160a01b038316179055610e2d5f610be2565b7f1c540707b00eb5427b6b774fc799d756516a54aee108b64b327acc55af55750760325f9054906101000a90046001600160a01b0316826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ec39190611429565b604080516001600160a01b03909316835260ff90911660208301520160405180910390a150565b6032546001600160a01b03838116911614610f1857604051630312abdd60e61b815260040160405180910390fd5b505050565b610f186001600160a01b0383168483610f86565b6032546001600160a01b038381169116146103c757604051630312abdd60e61b815260040160405180910390fd5b5f60ff8216601f81111561056d57604051632cd44ac360e21b815260040160405180910390fd5b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610f18928692915f91611015918516908490611094565b905080515f1480611035575080806020019051810190611035919061140a565b610f185760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161063a565b60606105c884845f85855f5f866001600160a01b031685876040516110b99190611444565b5f6040518083038185875af1925050503d805f81146110f3576040519150601f19603f3d011682016040523d82523d5f602084013e6110f8565b606091505b509150915061110987838387611114565b979650505050505050565b606083156111825782515f0361117b576001600160a01b0385163b61117b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063a565b50816105c8565b6105c883838151156111975781518083602001fd5b8060405162461bcd60e51b815260040161063a9190611226565b5f5f604083850312156111c2575f5ffd5b50508035926020909101359150565b5f602082840312156111e1575f5ffd5b5035919050565b6001600160a01b0381168114610c52575f5ffd5b5f5f6040838503121561120d575f5ffd5b8235611218816111e8565b946020939093013593505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f6020828403121561126b575f5ffd5b8135611276816111e8565b9392505050565b60ff81168114610c52575f5ffd5b5f6020828403121561129b575f5ffd5b81356112768161127d565b5f5f5f606084860312156112b8575f5ffd5b833592506020840135915060408401356112d1816111e8565b809150509250925092565b5f5f5f606084860312156112ee575f5ffd5b83356112f9816111e8565b92506020840135611309816111e8565b929592945050506040919091013590565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561056d5761056d61131a565b8181038181111561056d5761056d61131a565b808202811582820484141761056d5761056d61131a565b5f8261138557634e487b7160e01b5f52601260045260245ffd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b5f602082840312156113e8575f5ffd5b5051919050565b5f602082840312156113ff575f5ffd5b8151611276816111e8565b5f6020828403121561141a575f5ffd5b81518015158114611276575f5ffd5b5f60208284031215611439575f5ffd5b81516112768161127d565b5f82518060208501845e5f92019182525091905056fe4261736520537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73a26469706673582212208b0cfacd4d018167cd169b64d964681d0f6f22f263438f2636ee8aae671eb4d264736f6c634300081b0033",
    "sourceMap": "533:4289:165:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:168;;;;;;:::i;:::-;;:::i;:::-;;3762:401:154;;;;;;:::i;:::-;;:::i;3582:29:164:-;;;;;-1:-1:-1;;;;;3582:29:164;;;;;;-1:-1:-1;;;;;776:32:267;;;758:51;;746:2;731:18;3582:29:164;;;;;;;;3461:49;;;;;3685:26;;;;;;;;;1200:25:267;;;1188:2;1173:18;3685:26:164;1054:177:267;678:28:165;;;;;;6071:1669:164;;;;;;:::i;:::-;;:::i;1031:106:152:-;;;:::i;:::-;;;;;;;:::i;12961:156:164:-;;;;;;:::i;:::-;;:::i;4199:85:154:-;;;:::i;4933:163::-;;;;;;:::i;:::-;5036:1;5065:7;;5036:10;;;;;5065:14;;;5064:24;;4933:163;;;;2991:14:267;;2984:22;2966:41;;2954:2;2939:18;4933:163:154;2826:187:267;4810:87:154;4883:7;;4810:87;;792:31:165;;;;;;11495:490:164;;;;;;:::i;:::-;;:::i;1964:47:154:-;;;;;12753:172:164;;;;;;:::i;:::-;;:::i;13153:143::-;;;;;;:::i;:::-;;:::i;1427:269:165:-;;;;;;:::i;:::-;;:::i;11278:181:164:-;;;:::i;4401:144::-;;;;;;:::i;:::-;;:::i;13332:173::-;;;;;;:::i;:::-;;:::i;8387:1543::-;;;;;;:::i;:::-;;:::i;2461:122:165:-;2544:13;;2559:16;;2461:122;;;4762:25:267;;;4818:2;4803:18;;4796:34;;;;4735:18;2461:122:165;4588:248:267;12228:489:164;;;;;;:::i;:::-;;:::i;12021:171::-;;;;;;:::i;:::-;;:::i;4320:454:154:-;;;;;;:::i;:::-;;:::i;2173:168:165:-;2558:20:154;:18;:20::i;:::-;2282:52:165::1;2296:16;2314:19;2282:13;:52::i;:::-;2173:168:::0;;:::o;3762:401:154:-;2390:18;:16;:18::i;:::-;3876:7:::1;::::0;4025:37;;::::1;4024:62:::0;::::1;4016:97;;;;-1:-1:-1::0;;;4016:97:154::1;;;;;;;;;;;;4123:33;4140:15;4123:16;:33::i;6071:1669:164:-:0;6230:17;2447:1;2960:30:154;2984:5;2960:23;:30::i;:::-;3899:10:164::1;-1:-1:-1::0;;;;;3921:15:164::1;3899:38;;3891:70;;;;-1:-1:-1::0;;;3891:70:164::1;;;;;;;;;;;;6315:29:::2;6330:5;6337:6;6315:14;:29::i;:::-;6449:11;::::0;6422:24:::2;6849:32;2840:3;6449:11:::0;6849:32:::2;:::i;:::-;6820:61;;6891:27;3183:3;6921:15;:13;:15::i;:::-;:32;;;;:::i;:::-;6891:62:::0;-1:-1:-1;7083:32:164::2;7118:28;7140:6:::0;6891:62;7118:28:::2;:::i;:::-;7083:63:::0;-1:-1:-1;7083:63:164;7169:27:::2;7178:18:::0;7169:6;:27:::2;:::i;:::-;7168:56;;;;:::i;:::-;7156:68;;7376:9;7389:1;7376:14:::0;7368:40:::2;;;;-1:-1:-1::0;;;7368:40:164::2;;;;;;;;;;;;7494:28;7513:9:::0;7494:16;:28:::2;:::i;:::-;7479:11;:44:::0;;;3392:8:::2;-1:-1:-1::0;7541:31:164::2;7533:65;;;;-1:-1:-1::0;;;7533:65:164::2;;;;;;;;;;;;7639:67;7657:19;2840:3;7678:11;;:27;;;;:::i;:::-;7639:17;:67::i;:::-;7717:16;;;;6071:1669:::0;;;;;:::o;1031:106:152:-;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;12961:156:164:-;13048:7;13074:36;13097:12;13104:4;13097:6;:12::i;13074:36::-;13067:43;12961:156;-1:-1:-1;;12961:156:164:o;4199:85:154:-;2390:18;:16;:18::i;:::-;4249:28:::1;-1:-1:-1::0;;4249:16:154::1;:28::i;:::-;4199:85::o:0;11495:490:164:-;11601:7;11670:26;2840:3;11699:11;;:27;;;;:::i;:::-;11670:56;;11736:27;3183:3;11766:15;:13;:15::i;:::-;:32;;;;:::i;:::-;11736:62;-1:-1:-1;11960:18:164;11922:34;11944:12;11736:62;11922:34;:::i;:::-;11921:57;;;;:::i;:::-;11914:64;11495:490;-1:-1:-1;;;;11495:490:164:o;12753:172::-;12852:7;12878:40;12901:16;12878:22;:40::i;13153:143::-;13231:7;13257:32;13276:12;13283:4;13276:6;:12::i;1427:269:165:-;3279:19:26;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:26;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:26;1713:19:34;:23;;;3387:66:26;;-1:-1:-1;3436:12:26;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:26;;;;;;;:::i;:::-;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:26;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:26;;;;;3562:65;1590:48:165::1;1604:14;1620:17;1590:13;:48::i;:::-;1648:41;1672:16;1648:23;:41::i;:::-;3651:14:26::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:26;;;3721:14;;-1:-1:-1;6198:36:267;;3721:14:26;;6186:2:267;6171:18;3721:14:26;;;;;;;3647:99;3269:483;1427:269:165;;;:::o;11278:181:164:-;11341:13;11366:86;;;;;;;;;;;;;;;;;;;11278:181;:::o;4401:144::-;3279:19:26;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:26;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:26;1713:19:34;:23;;;3387:66:26;;-1:-1:-1;3436:12:26;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:26;;;;;;;:::i;:::-;3536:12;:16;;-1:-1:-1;;3536:16:26;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:26;;;;;3562:65;4497:41:164::1;4521:16;4497:23;:41::i;:::-;3651:14:26::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:26;;;3721:14;;-1:-1:-1;6198:36:267;;3721:14:26;;6186:2:267;6171:18;3721:14:26;;;;;;;;3269:483;4401:144:164;:::o;13332:173::-;13431:67;;-1:-1:-1;;;13431:67:164;;-1:-1:-1;;;;;6456:32:267;;;13431:67:164;;;6438:51:267;13491:4:164;6505:18:267;;;6498:60;13405:7:164;;13431:15;:35;;;;;;6411:18:267;;13431:67:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8387:1543::-;8583:17;2499:1;2960:30:154;2984:5;2960:23;:30::i;:::-;3899:10:164::1;-1:-1:-1::0;;;;;3921:15:164::1;3899:38;;3891:70;;;;-1:-1:-1::0;;;3891:70:164::1;;;;;;;;;;;;8671:49:::2;8689:9;8700:5;8707:12;8671:17;:49::i;:::-;8825:11;::::0;8854:32;;::::2;;8846:81;;;;-1:-1:-1::0;;;8846:81:164::2;;;;;;;;;;;;9266:31;9300:32;2840:3;9300:16:::0;:32:::2;:::i;:::-;9266:66;;9342:27;3183:3;9372:15;:13;:15::i;:::-;:32;;;;:::i;:::-;9342:62:::0;-1:-1:-1;9571:23:164;9533:34:::2;9555:12:::0;9342:62;9533:34:::2;:::i;:::-;9532:62;;;;:::i;:::-;9520:74:::0;-1:-1:-1;9689:31:164::2;9708:12:::0;9689:16;:31:::2;:::i;:::-;9675:11;:45:::0;9761:79:::2;9779:31;9801:9:::0;9779:19;:31:::2;:::i;:::-;2840:3;9812:11;;:27;;;;:::i;9761:79::-;9851:45;9868:9;9879:5;9886:9;9851:16;:45::i;:::-;9907:16;;;8387:1543:::0;;;;;;:::o;12228:489::-;12329:7;12398:26;2840:3;12427:11;;:27;;;;:::i;:::-;12398:56;;12464:27;3183:3;12494:15;:13;:15::i;:::-;:32;;;;:::i;:::-;12464:62;-1:-1:-1;12464:62:164;12650:37;12669:18;12650:16;:37;:::i;12021:171::-;12123:7;12149:36;12172:12;12149:22;:36::i;4320:454:154:-;2558:20;:18;:20::i;:::-;4438:7:::1;::::0;4632:20;::::1;4609:16:::0;::::1;4583:43:::0;::::1;4582:71;4574:106;;;;-1:-1:-1::0;;;4574:106:154::1;;;;;;;;;;;;4690:7;:25:::0;;;4730:37:::1;::::0;1200:25:267;;;4739:10:154::1;::::0;4730:37:::1;::::0;1188:2:267;1173:18;4730:37:154::1;;;;;;;4398:376;4320:454:::0;:::o;3137:125::-;3213:14;-1:-1:-1;;;;;3213:23:154;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3199:39:154;:10;-1:-1:-1;;;;;3199:39:154;;3191:64;;;;-1:-1:-1;;;3191:64:154;;;;;;;;;;;2636:414:165;2759:13;;2738:53;;;4762:25:267;;;4818:2;4803:18;;4796:34;;;2738:53:165;;4735:18:267;2738:53:165;;;;;;;2830:16;;2806:62;;;4762:25:267;;;4818:2;4803:18;;4796:34;;;2806:62:165;;4735:18:267;2806:62:165;;;;;;;2906:19;2886:16;:39;;2878:75;;;;-1:-1:-1;;;2878:75:165;;;;;;;;;;;;2963:13;:32;;;;3005:16;:38;2636:414::o;3014:117:154:-;3074:35;;-1:-1:-1;;;3074:35:154;;3098:10;3074:35;;;758:51:267;3074:14:154;-1:-1:-1;;;;;3074:23:154;;;;731:18:267;;3074:35:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3066:58;;;;-1:-1:-1;;;3066:58:154;;;;;;;;;;;5200:157;5281:7;:22;;;5318:32;;1200:25:267;;;5325:10:154;;5318:32;;1188:2:267;1173:18;5318:32:154;;;;;;;5200:157;:::o;3380:133::-;3473:13;3480:5;5036:1;5065:7;;5036:10;;;;;5065:14;;;5064:24;;4933:163;3473:13;3472:14;3464:42;;;;-1:-1:-1;;;3464:42:154;;;;;;;;;;;;3380:133;:::o;4239:290:165:-;4347:13;;4337:6;:23;;4329:59;;;;-1:-1:-1;;;4329:59:165;;;;;;;;;;;;4425:16;;4406:15;:13;:15::i;:::-;:35;;4398:78;;;;-1:-1:-1;;;4398:78:165;;;;;;;;;;;;4487:35;4508:5;4515:6;4487:20;:35::i;13656:129:164:-;13738:15;;:40;;-1:-1:-1;;;13738:40:164;;13772:4;13738:40;;;758:51:267;13712:7:164;;-1:-1:-1;;;;;13738:15:164;;:25;;731:18:267;;13738:40:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;14019:226::-;14168:70;14219:18;14189:26;14196:19;14189:4;:26;:::i;:::-;14188:49;;;;:::i;:::-;14168:70;;1200:25:267;;;1188:2;1173:18;14168:70:164;1054:177:267;2081:405:37;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:37;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:37;;;-1:-1:-1;2438:4:37;2429:14;;2422:28;;;;-1:-1:-1;2393:16:37;2081:405::o;4633:291:164:-;5374:13:26;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:26;;7846:2:267;5366:69:26;;;7828:21:267;7885:2;7865:18;;;7858:30;7924:34;7904:18;;;7897:62;-1:-1:-1;;;7975:18:267;;;7968:41;8026:19;;5366:69:26;7644:407:267;5366:69:26;4741:15:164::1;:34:::0;;-1:-1:-1;;;;;;4741:34:164::1;-1:-1:-1::0;;;;;4741:34:164;::::1;;::::0;;4785:30:::1;-1:-1:-1::0;4785:16:164::1;:30::i;:::-;4830:87;4847:15;;;;;;;;;-1:-1:-1::0;;;;;4847:15:164::1;4887:16;-1:-1:-1::0;;;;;4864:50:164::1;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4830:87;::::0;;-1:-1:-1;;;;;8512:32:267;;;8494:51;;8593:4;8581:17;;;8576:2;8561:18;;8554:45;8467:18;4830:87:164::1;;;;;;;4633:291:::0;:::o;10527:208::-;10689:15;;-1:-1:-1;;;;;10680:24:164;;;10689:15;;10680:24;10672:56;;;;-1:-1:-1;;;10672:56:164;;;;;;;;;;;;10527:208;;;:::o;11084:158::-;11192:43;-1:-1:-1;;;;;11192:18:164;;11211:9;11222:12;11192:18;:43::i;10143:169::-;10266:15;;-1:-1:-1;;;;;10257:24:164;;;10266:15;;10257:24;10249:56;;;;-1:-1:-1;;;10249:56:164;;;;;;;;;;;2558:245:37;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:37;;;;;;;;;;;941:175:70;1050:58;;;-1:-1:-1;;;;;8802:32:267;;;1050:58:70;;;8784:51:267;8851:18;;;;8844:34;;;1050:58:70;;;;;;;;;;8757:18:267;;;;1050:58:70;;;;;;;;-1:-1:-1;;;;;1050:58:70;-1:-1:-1;;;1050:58:70;;;5618:69;;;;;;;;;;;;;;;;1023:86;;1043:5;;1050:58;-1:-1:-1;;5618:69:70;;:27;;;1050:58;;5618:27;:69::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:70;;9091:2:267;5697:111:70;;;9073:21:267;9130:2;9110:18;;;9103:30;9169:34;9149:18;;;9142:62;-1:-1:-1;;;9220:18:267;;;9213:40;9270:19;;5697:111:70;8889:406:267;4108:223:72;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:72;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:72:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:34;;;8113:60:72;;;;-1:-1:-1;;;8113:60:72;;10215:2:267;8113:60:72;;;10197:21:267;10254:2;10234:18;;;10227:30;10293:31;10273:18;;;10266:59;10342:18;;8113:60:72;10013:353:267;8113:60:72;-1:-1:-1;8208:10:72;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:72;;;;;;;;:::i;14:346:267:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;204:23:267;;;324:2;309:18;;;296:32;;-1:-1:-1;14:346:267:o;365:226::-;424:6;477:2;465:9;456:7;452:23;448:32;445:52;;;493:1;490;483:12;445:52;-1:-1:-1;538:23:267;;365:226;-1:-1:-1;365:226:267:o;1236:139::-;-1:-1:-1;;;;;1319:31:267;;1309:42;;1299:70;;1365:1;1362;1355:12;1380:391;1464:6;1472;1525:2;1513:9;1504:7;1500:23;1496:32;1493:52;;;1541:1;1538;1531:12;1493:52;1580:9;1567:23;1599:39;1632:5;1599:39;:::i;:::-;1657:5;1735:2;1720:18;;;;1707:32;;-1:-1:-1;;;1380:391:267:o;1776:418::-;1925:2;1914:9;1907:21;1888:4;1957:6;1951:13;2000:6;1995:2;1984:9;1980:18;1973:34;2059:6;2054:2;2046:6;2042:15;2037:2;2026:9;2022:18;2016:50;2115:1;2110:2;2101:6;2090:9;2086:22;2082:31;2075:42;2185:2;2178;2174:7;2169:2;2161:6;2157:15;2153:29;2142:9;2138:45;2134:54;2126:62;;;1776:418;;;;:::o;2199:255::-;2258:6;2311:2;2299:9;2290:7;2286:23;2282:32;2279:52;;;2327:1;2324;2317:12;2279:52;2366:9;2353:23;2385:39;2418:5;2385:39;:::i;:::-;2443:5;2199:255;-1:-1:-1;;;2199:255:267:o;2459:114::-;2543:4;2536:5;2532:16;2525:5;2522:27;2512:55;;2563:1;2560;2553:12;2578:243;2635:6;2688:2;2676:9;2667:7;2663:23;2659:32;2656:52;;;2704:1;2701;2694:12;2656:52;2743:9;2730:23;2762:29;2785:5;2762:29;:::i;3251:511::-;3344:6;3352;3360;3413:2;3401:9;3392:7;3388:23;3384:32;3381:52;;;3429:1;3426;3419:12;3381:52;3474:23;;;-1:-1:-1;3594:2:267;3579:18;;3566:32;;-1:-1:-1;3676:2:267;3661:18;;3648:32;3689:41;3648:32;3689:41;:::i;:::-;3749:7;3739:17;;;3251:511;;;;;:::o;4043:540::-;4136:6;4144;4152;4205:2;4193:9;4184:7;4180:23;4176:32;4173:52;;;4221:1;4218;4211:12;4173:52;4260:9;4247:23;4279:39;4312:5;4279:39;:::i;:::-;4337:5;-1:-1:-1;4394:2:267;4379:18;;4366:32;4407:41;4366:32;4407:41;:::i;:::-;4043:540;;4467:7;;-1:-1:-1;;;4547:2:267;4532:18;;;;4519:32;;4043:540::o;4841:127::-;4902:10;4897:3;4893:20;4890:1;4883:31;4933:4;4930:1;4923:15;4957:4;4954:1;4947:15;4973:125;5038:9;;;5059:10;;;5056:36;;;5072:18;;:::i;5103:128::-;5170:9;;;5191:11;;;5188:37;;;5205:18;;:::i;5236:168::-;5309:9;;;5340;;5357:15;;;5351:22;;5337:37;5327:71;;5378:18;;:::i;5409:217::-;5449:1;5475;5465:132;;5519:10;5514:3;5510:20;5507:1;5500:31;5554:4;5551:1;5544:15;5582:4;5579:1;5572:15;5465:132;-1:-1:-1;5611:9:267;;5409:217::o;5631:410::-;5833:2;5815:21;;;5872:2;5852:18;;;5845:30;5911:34;5906:2;5891:18;;5884:62;-1:-1:-1;;;5977:2:267;5962:18;;5955:44;6031:3;6016:19;;5631:410::o;6569:184::-;6639:6;6692:2;6680:9;6671:7;6667:23;6663:32;6660:52;;;6708:1;6705;6698:12;6660:52;-1:-1:-1;6731:16:267;;6569:184;-1:-1:-1;6569:184:267:o;6758:259::-;6828:6;6881:2;6869:9;6860:7;6856:23;6852:32;6849:52;;;6897:1;6894;6887:12;6849:52;6929:9;6923:16;6948:39;6981:5;6948:39;:::i;7230:277::-;7297:6;7350:2;7338:9;7329:7;7325:23;7321:32;7318:52;;;7366:1;7363;7356:12;7318:52;7398:9;7392:16;7451:5;7444:13;7437:21;7430:5;7427:32;7417:60;;7473:1;7470;7463:12;8056:247;8124:6;8177:2;8165:9;8156:7;8152:23;8148:32;8145:52;;;8193:1;8190;8183:12;8145:52;8225:9;8219:16;8244:29;8267:5;8244:29;:::i;9707:301::-;9836:3;9874:6;9868:13;9920:6;9913:4;9905:6;9901:17;9896:3;9890:37;9982:1;9946:16;;9971:13;;;-1:-1:-1;9946:16:267;9707:301;-1:-1:-1;9707:301:267:o",
    "linkReferences": {},
    "immutableReferences": {
      "86698": [
        {
          "start": 1335,
          "length": 32
        }
      ],
      "86885": [
        {
          "start": 709,
          "length": 32
        },
        {
          "start": 2540,
          "length": 32
        },
        {
          "start": 2900,
          "length": 32
        }
      ],
      "90816": [
        {
          "start": 488,
          "length": 32
        },
        {
          "start": 1047,
          "length": 32
        },
        {
          "start": 1999,
          "length": 32
        },
        {
          "start": 2129,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "deposit(address,uint256)": "47e7ef24",
    "explanation()": "ab5921e1",
    "getTVLLimits()": "df6fadc1",
    "initialize(address)": "c4d66de8",
    "initialize(uint256,uint256,address)": "a6ab36f2",
    "maxPerDeposit()": "43fe08b0",
    "maxTotalDeposits()": "61b01b5d",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "setTVLLimits(uint256,uint256)": "11c70c9d",
    "shares(address)": "ce7c2ac2",
    "sharesToUnderlying(uint256)": "f3e73875",
    "sharesToUnderlyingView(uint256)": "7a8b2637",
    "strategyManager()": "39b70e38",
    "totalShares()": "3a98ef39",
    "underlyingToShares(uint256)": "8c871019",
    "underlyingToSharesView(uint256)": "e3dae51c",
    "underlyingToken()": "2495a599",
    "unpause(uint256)": "fabc1cbc",
    "userUnderlying(address)": "8f6a6240",
    "userUnderlyingView(address)": "553ca5f8",
    "version()": "54fd4d50",
    "withdraw(address,address,uint256)": "d9caed12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BalanceExceedsMaxTotalDeposits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxPerDepositExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewSharesZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyStrategyManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnderlyingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSharesExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalAmountExceedsTotalDeposits\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"ExchangeRateEmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MaxPerDepositUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MaxTotalDepositsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"StrategyTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"explanation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTVLLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPerDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTotalDeposits\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPerDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxPerDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMaxTotalDeposits\",\"type\":\"uint256\"}],\"name\":\"setTVLLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToSharesView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"details\":\"Note that this implementation still converts between any amount of shares or underlying tokens in its view functions; these functions purposefully do not take the TVL limit into account.\",\"errors\":{\"BalanceExceedsMaxTotalDeposits()\":[{\"details\":\"Thrown when balance exceeds max total deposits.\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"MaxPerDepositExceedsMax()\":[{\"details\":\"Thrown when `maxPerDeposit` exceeds max.\"}],\"NewSharesZero()\":[{\"details\":\"Thrown when new shares value is zero.\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyStrategyManager()\":[{\"details\":\"Thrown when called by an account that is not strategy manager.\"}],\"OnlyUnderlyingToken()\":[{\"details\":\"Thrown when attempting an action with a token that is not accepted.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"TotalSharesExceedsMax()\":[{\"details\":\"Thrown when total shares exceeds max.\"}],\"WithdrawalAmountExceedsTotalDeposits()\":[{\"details\":\"Thrown when amount shares is greater than total shares.\"}]},\"events\":{\"ExchangeRateEmitted(uint256)\":{\"details\":\"Tokens that do not have 18 decimals must have offchain services scale the exchange rate by the proper magnitude\",\"params\":{\"rate\":\"is the exchange rate in wad 18 decimals\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"StrategyTokenSet(address,uint8)\":{\"params\":{\"decimals\":\"are the decimals of the ERC20 token in the strategy\",\"token\":\"is the ERC20 token of the strategy\"}}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"details\":\"This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.Note that the assumption is made that `amount` of `token` has already been transferred directly to this contract (as performed in the StrategyManager's deposit functions). In particular, setting the `underlyingToken` of this contract to be a fee-on-transfer token will break the assumption that the amount this contract *received* of the token is equal to the amount that was input when the transfer was performed (i.e. the amount transferred 'out' of the depositor's balance).Note that any validation of `token` is done inside `_beforeDeposit`. This can be overridden if needed.\",\"params\":{\"amount\":\"is the amount of token being deposited\",\"token\":\"is the ERC20 token being deposited\"},\"returns\":{\"newShares\":\"is the number of new shares issued at the current exchange ratio.\"}},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"setTVLLimits(uint256,uint256)\":{\"details\":\"Callable only by the unpauser of this contractWe note that there is a potential race condition between a call to this function that lowers either or both of these limits and call(s) to `deposit`, that may result in some calls to `deposit` reverting.\",\"params\":{\"newMaxTotalDeposits\":\"The new maximum deposits\"}},\"sharesToUnderlying(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"},\"returns\":{\"_0\":\"The amount of underlying tokens corresponding to the input `amountShares`\"}},\"sharesToUnderlyingView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"},\"returns\":{\"_0\":\"The amount of underlying tokens corresponding to the input `amountShares`\"}},\"underlyingToShares(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"},\"returns\":{\"_0\":\"The amount of shares corresponding to the input `amountUnderlying`.  This is used as deposit shares in the `StrategyManager` contract.\"}},\"underlyingToSharesView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"},\"returns\":{\"_0\":\"The amount of shares corresponding to the input `amountUnderlying`. This is used as deposit shares in the `StrategyManager` contract.\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}},\"withdraw(address,address,uint256)\":{\"details\":\"This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's other functions, and individual share balances are recorded in the strategyManager as well.Note that any validation of `token` is done inside `_beforeWithdrawal`. This can be overridden if needed.\",\"params\":{\"amountShares\":\"is the amount of shares being withdrawn\",\"recipient\":\"is the address to receive the withdrawn funds\",\"token\":\"is the ERC20 token being transferred out\"}}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"title\":\"A Strategy implementation inheriting from `StrategyBase` that limits the total amount of deposits it will accept.\",\"version\":1},\"userdoc\":{\"events\":{\"ExchangeRateEmitted(uint256)\":{\"notice\":\"Used to emit an event for the exchange rate between 1 share and underlying token in a strategy contract\"},\"MaxPerDepositUpdated(uint256,uint256)\":{\"notice\":\"Emitted when `maxPerDeposit` value is updated from `previousValue` to `newValue`\"},\"MaxTotalDepositsUpdated(uint256,uint256)\":{\"notice\":\"Emitted when `maxTotalDeposits` value is updated from `previousValue` to `newValue`\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"StrategyTokenSet(address,uint8)\":{\"notice\":\"Used to emit the underlying token and its decimals on strategy creationtoken\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"deposit(address,uint256)\":{\"notice\":\"Used to deposit tokens into this Strategy\"},\"explanation()\":{\"notice\":\"Returns either a brief string explaining the strategy's goal & purpose, or a link to metadata that explains in more detail.\"},\"getTVLLimits()\":{\"notice\":\"Simple getter function that returns the current values of `maxPerDeposit` and `maxTotalDeposits`.\"},\"maxPerDeposit()\":{\"notice\":\"The maximum deposit (in underlyingToken) that this strategy will accept per deposit\"},\"maxTotalDeposits()\":{\"notice\":\"The maximum deposits (in underlyingToken) that this strategy will hold\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"setTVLLimits(uint256,uint256)\":{\"notice\":\"Sets the maximum deposits (in underlyingToken) that this strategy will hold and accept per deposit\"},\"shares(address)\":{\"notice\":\"convenience function for fetching the current total shares of `user` in this strategy, by querying the `strategyManager` contract\"},\"sharesToUnderlying(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy. For a staker using this function and trying to calculate the amount of underlying tokens they have in total they should input into `amountShares` their withdrawable shares read from the `DelegationManager` contract.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\"},\"sharesToUnderlyingView(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy. For a staker using this function and trying to calculate the amount of underlying tokens they have in total they should input into `amountShares` their withdrawable shares read from the `DelegationManager` contract.In contrast to `sharesToUnderlying`, this function guarantees no state modifications\"},\"strategyManager()\":{\"notice\":\"EigenLayer's StrategyManager contract\"},\"totalShares()\":{\"notice\":\"The total number of extant shares in this Strategy\"},\"underlyingToShares(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications\"},\"underlyingToSharesView(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications\"},\"underlyingToken()\":{\"notice\":\"The underlying token for shares in this Strategy\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"userUnderlying(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications\"},\"userUnderlyingView(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to withdraw tokens from this Strategy, to the `recipient`'s address\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/strategies/StrategyBaseTVLLimits.sol\":\"StrategyBaseTVLLimits\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xb1ef3d6c53eb535f01fb07c8f0247f8b3f9d31a88e5f397c8074363c73251f0f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f3cab7243290d74aaf382ee5e8c820f4a2dab99841fa7d48ff13c01a5a2f7cc3\",\"dweb:/ipfs/QmXq16ZQwHijHSFbcA54vniRBkn7z7WMmAQ6nSDQzhSirF\"]},\"src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0x3d4118c7aa962ea8cfe15fd8b1b0ee160421506e036d96a8b09c9cc957fff31c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51e444895bea318e1c0f6d8d5b092330d0c42b52a95e1935d868e599abd1795e\",\"dweb:/ipfs/Qmd8ozg2SXqSM72ddFmSZm5yqKMcaxQ31ifAhqWrUazWwj\"]},\"src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xa2e18dbfd63c3211158f916b669bd74066388564a2f019e952953bc5390e1466\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c86e9d4426aa20892ffc660793e8ce6e881de02cc6a0b483efaa06f14a7df864\",\"dweb:/ipfs/QmQbvkto6g9EeRMfU4bPcuAh1Tz3ohGFpHyHS8GA8mZiFN\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/interfaces/IShareManager.sol\":{\"keccak256\":\"0x411d30d9408ec9302c66e4485069e9c822de2360929edfddc8b644b61b1b3346\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9e9b998ae71f0de2282a4b5969f99dfb26e9a7a00df9f21e836f6515071da482\",\"dweb:/ipfs/QmXCkEJ55TV42m8Wf8Wi7muepd1LJsqmj6ckkRMr47CNvq\"]},\"src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e\",\"dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe\"]},\"src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x11f098af7dd67c9b9b5ecdb737a1a2e6542f24c5635717dff4461d8bf1be50a0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3adfc1635cf03ea1f85136196486b031e5bf2d8444a30c74d8ad70b9160a0525\",\"dweb:/ipfs/QmXVtK5Cicu4U2fiSGL3iEFSnXiRX7EzA7zHp2hsnpNJiH\"]},\"src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0xff027b027df59b9d66f69951ff7a52f77ea3a30cda6c8f9b80f02680925484db\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0660cd206c833fdbd84837479e77e69bd29afa34707ed5819604c8d37d9aa828\",\"dweb:/ipfs/QmcUxK7pNDL4ZN2r913fG446hF8snEEVzWJZisedd2zxGc\"]},\"src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e\",\"dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6\",\"dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add\",\"dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99\",\"dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA\"]},\"src/contracts/strategies/StrategyBase.sol\":{\"keccak256\":\"0x9b40ad15aed650b3fcfdcf9b4a09ace7842638f69413bdb7c4f3e627b0a51ce2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7e1340d8cdbe6d871b20bfad36fe4e52f80eef8cda462f7d623941780902f3c\",\"dweb:/ipfs/QmZV8tVjGLSFvwwZfexsai3MQR2HStdJDpJfAYGpgpV5Ba\"]},\"src/contracts/strategies/StrategyBaseTVLLimits.sol\":{\"keccak256\":\"0xb0c2f602be2593446cab73ee2957b082cf90b7c2dce4b07f352c17964ea0658b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fa1e23649e6332359869c517d332eb2863b36155ed2f0777e5524dea92b9b16f\",\"dweb:/ipfs/QmNgvJpEc6TcztYdifka46rfsfK1YYM5gQaew2K2GcUFJk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "_strategyManager",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceExceedsMaxTotalDeposits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxPerDepositExceedsMax"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewSharesZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyStrategyManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnderlyingToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TotalSharesExceedsMax"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawalAmountExceedsTotalDeposits"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExchangeRateEmitted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxPerDepositUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalDepositsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyTokenSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newShares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "explanation",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTVLLimits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxPerDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxTotalDeposits",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "_underlyingToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_underlyingToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPerDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalDeposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newMaxPerDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "newMaxTotalDeposits",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTVLLimits"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToSharesView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "userUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(address,uint256)": {
            "details": "This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.Note that the assumption is made that `amount` of `token` has already been transferred directly to this contract (as performed in the StrategyManager's deposit functions). In particular, setting the `underlyingToken` of this contract to be a fee-on-transfer token will break the assumption that the amount this contract *received* of the token is equal to the amount that was input when the transfer was performed (i.e. the amount transferred 'out' of the depositor's balance).Note that any validation of `token` is done inside `_beforeDeposit`. This can be overridden if needed.",
            "params": {
              "amount": "is the amount of token being deposited",
              "token": "is the ERC20 token being deposited"
            },
            "returns": {
              "newShares": "is the number of new shares issued at the current exchange ratio."
            }
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "setTVLLimits(uint256,uint256)": {
            "details": "Callable only by the unpauser of this contractWe note that there is a potential race condition between a call to this function that lowers either or both of these limits and call(s) to `deposit`, that may result in some calls to `deposit` reverting.",
            "params": {
              "newMaxTotalDeposits": "The new maximum deposits"
            }
          },
          "sharesToUnderlying(uint256)": {
            "details": "Implementation for these functions in particular may vary significantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            },
            "returns": {
              "_0": "The amount of underlying tokens corresponding to the input `amountShares`"
            }
          },
          "sharesToUnderlyingView(uint256)": {
            "details": "Implementation for these functions in particular may vary significantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            },
            "returns": {
              "_0": "The amount of underlying tokens corresponding to the input `amountShares`"
            }
          },
          "underlyingToShares(uint256)": {
            "details": "Implementation for these functions in particular may vary significantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            },
            "returns": {
              "_0": "The amount of shares corresponding to the input `amountUnderlying`.  This is used as deposit shares in the `StrategyManager` contract."
            }
          },
          "underlyingToSharesView(uint256)": {
            "details": "Implementation for these functions in particular may vary significantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            },
            "returns": {
              "_0": "The amount of shares corresponding to the input `amountUnderlying`. This is used as deposit shares in the `StrategyManager` contract."
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          },
          "withdraw(address,address,uint256)": {
            "details": "This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's other functions, and individual share balances are recorded in the strategyManager as well.Note that any validation of `token` is done inside `_beforeWithdrawal`. This can be overridden if needed.",
            "params": {
              "amountShares": "is the amount of shares being withdrawn",
              "recipient": "is the address to receive the withdrawn funds",
              "token": "is the ERC20 token being transferred out"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deposit(address,uint256)": {
            "notice": "Used to deposit tokens into this Strategy"
          },
          "explanation()": {
            "notice": "Returns either a brief string explaining the strategy's goal & purpose, or a link to metadata that explains in more detail."
          },
          "getTVLLimits()": {
            "notice": "Simple getter function that returns the current values of `maxPerDeposit` and `maxTotalDeposits`."
          },
          "maxPerDeposit()": {
            "notice": "The maximum deposit (in underlyingToken) that this strategy will accept per deposit"
          },
          "maxTotalDeposits()": {
            "notice": "The maximum deposits (in underlyingToken) that this strategy will hold"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "setTVLLimits(uint256,uint256)": {
            "notice": "Sets the maximum deposits (in underlyingToken) that this strategy will hold and accept per deposit"
          },
          "shares(address)": {
            "notice": "convenience function for fetching the current total shares of `user` in this strategy, by querying the `strategyManager` contract"
          },
          "sharesToUnderlying(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy. For a staker using this function and trying to calculate the amount of underlying tokens they have in total they should input into `amountShares` their withdrawable shares read from the `DelegationManager` contract.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications"
          },
          "sharesToUnderlyingView(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy. For a staker using this function and trying to calculate the amount of underlying tokens they have in total they should input into `amountShares` their withdrawable shares read from the `DelegationManager` contract.In contrast to `sharesToUnderlying`, this function guarantees no state modifications"
          },
          "strategyManager()": {
            "notice": "EigenLayer's StrategyManager contract"
          },
          "totalShares()": {
            "notice": "The total number of extant shares in this Strategy"
          },
          "underlyingToShares(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications"
          },
          "underlyingToSharesView(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications"
          },
          "underlyingToken()": {
            "notice": "The underlying token for shares in this Strategy"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "userUnderlying(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
          },
          "userUnderlyingView(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          },
          "withdraw(address,address,uint256)": {
            "notice": "Used to withdraw tokens from this Strategy, to the `recipient`'s address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/strategies/StrategyBaseTVLLimits.sol": "StrategyBaseTVLLimits"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xb1ef3d6c53eb535f01fb07c8f0247f8b3f9d31a88e5f397c8074363c73251f0f",
        "urls": [
          "bzz-raw://f3cab7243290d74aaf382ee5e8c820f4a2dab99841fa7d48ff13c01a5a2f7cc3",
          "dweb:/ipfs/QmXq16ZQwHijHSFbcA54vniRBkn7z7WMmAQ6nSDQzhSirF"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0x3d4118c7aa962ea8cfe15fd8b1b0ee160421506e036d96a8b09c9cc957fff31c",
        "urls": [
          "bzz-raw://51e444895bea318e1c0f6d8d5b092330d0c42b52a95e1935d868e599abd1795e",
          "dweb:/ipfs/Qmd8ozg2SXqSM72ddFmSZm5yqKMcaxQ31ifAhqWrUazWwj"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0xa2e18dbfd63c3211158f916b669bd74066388564a2f019e952953bc5390e1466",
        "urls": [
          "bzz-raw://c86e9d4426aa20892ffc660793e8ce6e881de02cc6a0b483efaa06f14a7df864",
          "dweb:/ipfs/QmQbvkto6g9EeRMfU4bPcuAh1Tz3ohGFpHyHS8GA8mZiFN"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IShareManager.sol": {
        "keccak256": "0x411d30d9408ec9302c66e4485069e9c822de2360929edfddc8b644b61b1b3346",
        "urls": [
          "bzz-raw://9e9b998ae71f0de2282a4b5969f99dfb26e9a7a00df9f21e836f6515071da482",
          "dweb:/ipfs/QmXCkEJ55TV42m8Wf8Wi7muepd1LJsqmj6ckkRMr47CNvq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtilsMixin.sol": {
        "keccak256": "0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b",
        "urls": [
          "bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10",
          "dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5",
        "urls": [
          "bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e",
          "dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0x11f098af7dd67c9b9b5ecdb737a1a2e6542f24c5635717dff4461d8bf1be50a0",
        "urls": [
          "bzz-raw://3adfc1635cf03ea1f85136196486b031e5bf2d8444a30c74d8ad70b9160a0525",
          "dweb:/ipfs/QmXVtK5Cicu4U2fiSGL3iEFSnXiRX7EzA7zHp2hsnpNJiH"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0xff027b027df59b9d66f69951ff7a52f77ea3a30cda6c8f9b80f02680925484db",
        "urls": [
          "bzz-raw://0660cd206c833fdbd84837479e77e69bd29afa34707ed5819604c8d37d9aa828",
          "dweb:/ipfs/QmcUxK7pNDL4ZN2r913fG446hF8snEEVzWJZisedd2zxGc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Endian.sol": {
        "keccak256": "0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136",
        "urls": [
          "bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e",
          "dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436",
        "urls": [
          "bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6",
          "dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469",
        "urls": [
          "bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add",
          "dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446",
        "urls": [
          "bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99",
          "dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/strategies/StrategyBase.sol": {
        "keccak256": "0x9b40ad15aed650b3fcfdcf9b4a09ace7842638f69413bdb7c4f3e627b0a51ce2",
        "urls": [
          "bzz-raw://c7e1340d8cdbe6d871b20bfad36fe4e52f80eef8cda462f7d623941780902f3c",
          "dweb:/ipfs/QmZV8tVjGLSFvwwZfexsai3MQR2HStdJDpJfAYGpgpV5Ba"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/strategies/StrategyBaseTVLLimits.sol": {
        "keccak256": "0xb0c2f602be2593446cab73ee2957b082cf90b7c2dce4b07f352c17964ea0658b",
        "urls": [
          "bzz-raw://fa1e23649e6332359869c517d332eb2863b36155ed2f0777e5524dea92b9b16f",
          "dweb:/ipfs/QmNgvJpEc6TcztYdifka46rfsfK1YYM5gQaew2K2GcUFJk"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 165
}