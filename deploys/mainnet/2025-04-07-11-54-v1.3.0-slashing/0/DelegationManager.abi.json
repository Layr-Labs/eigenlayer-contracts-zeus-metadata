{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_strategyManager",
          "type": "address",
          "internalType": "contract IStrategyManager"
        },
        {
          "name": "_eigenPodManager",
          "type": "address",
          "internalType": "contract IEigenPodManager"
        },
        {
          "name": "_allocationManager",
          "type": "address",
          "internalType": "contract IAllocationManager"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_MIN_WITHDRAWAL_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DELEGATION_APPROVAL_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allocationManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAllocationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "beaconChainETHStrategy",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateDelegationApprovalDigestHash",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approverSalt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "expiry",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateWithdrawalRoot",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct IDelegationManagerTypes.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "completeQueuedWithdrawal",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct IDelegationManagerTypes.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "tokens",
          "type": "address[]",
          "internalType": "contract IERC20[]"
        },
        {
          "name": "receiveAsTokens",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "completeQueuedWithdrawals",
      "inputs": [
        {
          "name": "withdrawals",
          "type": "tuple[]",
          "internalType": "struct IDelegationManagerTypes.Withdrawal[]",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "tokens",
          "type": "address[][]",
          "internalType": "contract IERC20[][]"
        },
        {
          "name": "receiveAsTokens",
          "type": "bool[]",
          "internalType": "bool[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "convertToDepositShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "withdrawableShares",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cumulativeWithdrawalsQueued",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "totalQueued",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decreaseDelegatedShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "curDepositShares",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "beaconChainSlashingFactorDecrease",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegateTo",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approverSignatureAndExpiry",
          "type": "tuple",
          "internalType": "struct ISignatureUtilsMixinTypes.SignatureWithExpiry",
          "components": [
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "expiry",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "approverSalt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegatedTo",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegationApprover",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegationApproverSaltIsSpent",
      "inputs": [
        {
          "name": "delegationApprover",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "spent",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "depositScalingFactor",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "domainSeparator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "eigenPodManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IEigenPodManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDepositedShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorShares",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorsShares",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getQueuedWithdrawal",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct IDelegationManagerTypes.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "shares",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getQueuedWithdrawalRoots",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getQueuedWithdrawals",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "withdrawals",
          "type": "tuple[]",
          "internalType": "struct IDelegationManagerTypes.Withdrawal[]",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "shares",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSlashableSharesInQueue",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWithdrawableShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "withdrawableShares",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "depositShares",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "increaseDelegatedShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        },
        {
          "name": "prevDepositShares",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "addedShares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isDelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minWithdrawalDelayBlocks",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "modifyOperatorDetails",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "newDelegationApprover",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "operatorShares",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "shares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pendingWithdrawals",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "pending",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "queueWithdrawals",
      "inputs": [
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IDelegationManagerTypes.QueuedWithdrawalParams[]",
          "components": [
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "depositShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "__deprecated_withdrawer",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "queuedWithdrawals",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct IDelegationManagerTypes.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "redelegate",
      "inputs": [
        {
          "name": "newOperator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "newOperatorApproverSig",
          "type": "tuple",
          "internalType": "struct ISignatureUtilsMixinTypes.SignatureWithExpiry",
          "components": [
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "expiry",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "approverSalt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "withdrawalRoots",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "registerAsOperator",
      "inputs": [
        {
          "name": "initDelegationApprover",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "allocationDelay",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "slashOperatorShares",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        },
        {
          "name": "prevMaxMagnitude",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "newMaxMagnitude",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "strategyManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategyManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "undelegate",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "withdrawalRoots",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateOperatorMetadataURI",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "DelegationApproverUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newDelegationApprover",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DepositScalingFactorUpdated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "newDepositScalingFactor",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorMetadataURIUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorRegistered",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "delegationApprover",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSharesDecreased",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "staker",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSharesIncreased",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "staker",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSharesSlashed",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "totalSlashedShares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SlashingWithdrawalCompleted",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SlashingWithdrawalQueued",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "withdrawal",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IDelegationManagerTypes.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "scaledShares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "sharesToWithdraw",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakerDelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakerForceUndelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakerUndelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ActivelyDelegated",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CallerCannotUndelegate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "FullySlashed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSnapshotOrdering",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotActivelyDelegated",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyAllocationManager",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyEigenPodManager",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyStrategyManagerOrEigenPodManager",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorNotRegistered",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorsCannotUndelegate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SaltSpent",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SignatureExpired",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "WithdrawalDelayNotElapsed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WithdrawalNotQueued",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WithdrawerNotCaller",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1259:46110:123:-:0;;;2482:599;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3028:8;;2977:21;2830:16;2848;2866:18;2886:21;2926:15;-1:-1:-1;;;;;3224:38:157;;3216:67;;;;-1:-1:-1;;;3216:67:157;;;;;;;;;;;;-1:-1:-1;;;;;3293:32:157;;;;;6316:34:124;;;;;6360;;;;;6404:38;;;;6452:58;;;;501:44:154;;;1015:24:155;:8;:22;:24::i;:::-;1004:35;;-1:-1:-1;3052:22:123::4;::::0;-1:-1:-1;3052:20:123::4;:22::i;:::-;2482:599:::0;;;;;;;1259:46110;;1711:286:41;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:41;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:41:o;5939:280:30:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:30;;3311:2:271;5998:66:30;;;3293:21:271;3350:2;3330:18;;;3323:30;3389:34;3369:18;;;3362:62;-1:-1:-1;;;3440:18:271;;;3433:37;3487:19;;5998:66:30;3109:403:271;5998:66:30;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:30;6140:15;6125:30;;;;;;6174:28;;3659:36:271;;;6174:28:30;;3647:2:271;3632:18;6174:28:30;;;;;;;6074:139;5939:280::o;14:149:271:-;-1:-1:-1;;;;;107:31:271;;97:42;;87:70;;153:1;150;143:12;87:70;14:149;:::o;168:127::-;229:10;224:3;220:20;217:1;210:31;260:4;257:1;250:15;284:4;281:1;274:15;300:2079;569:6;577;585;593;601;609;617;670:3;658:9;649:7;645:23;641:33;638:53;;;687:1;684;677:12;638:53;719:9;713:16;738:49;781:5;738:49;:::i;:::-;856:2;841:18;;835:25;806:5;;-1:-1:-1;869:51:271;835:25;869:51;:::i;:::-;991:2;976:18;;970:25;939:7;;-1:-1:-1;1004:51:271;970:25;1004:51;:::i;:::-;1126:2;1111:18;;1105:25;1074:7;;-1:-1:-1;1139:51:271;1105:25;1139:51;:::i;:::-;1261:3;1246:19;;1240:26;1209:7;;-1:-1:-1;1275:51:271;1240:26;1275:51;:::i;:::-;1397:3;1382:19;;1376:26;1345:7;;-1:-1:-1;1446:10:271;1433:24;;1421:37;;1411:65;;1472:1;1469;1462:12;1411:65;1546:3;1531:19;;1525:26;1495:7;;-1:-1:-1;;;;;;1563:30:271;;1560:50;;;1606:1;1603;1596:12;1560:50;1635:22;;1679:1;1717:4;1703:19;;1699:33;-1:-1:-1;1689:61:271;;1746:1;1743;1736:12;1689:61;1773:15;;-1:-1:-1;;;;;1800:30:271;;1797:56;;;1833:18;;:::i;:::-;1882:2;1876:9;1974:2;1936:17;;-1:-1:-1;;1932:31:271;;;1965:2;1928:40;1924:54;1912:67;;-1:-1:-1;;;;;1994:34:271;;2030:22;;;1991:62;1988:88;;;2056:18;;:::i;:::-;2092:2;2085:22;2116;;;2157:21;;;2180:4;2153:32;2150:45;-1:-1:-1;2147:65:271;;;2208:1;2205;2198:12;2147:65;2267:6;2260:4;2250:8;2246:19;2239:4;2231:6;2227:17;2221:53;2322:1;2315:4;2306:6;2298;2294:19;2290:30;2283:41;2342:6;2333:15;;2367:6;2357:16;;;;;;300:2079;;;;;;;;;;:::o;2384:418::-;2533:2;2522:9;2515:21;2496:4;2565:6;2559:13;2608:6;2603:2;2592:9;2588:18;2581:34;2667:6;2662:2;2654:6;2650:15;2645:2;2634:9;2630:18;2624:50;2723:1;2718:2;2709:6;2698:9;2694:22;2690:31;2683:42;2793:2;2786;2782:7;2777:2;2769:6;2765:15;2761:29;2750:9;2746:45;2742:54;2734:62;;;2384:418;;;;:::o;2807:297::-;2925:12;;2972:4;2961:16;;;2955:23;;2925:12;2990:16;;2987:111;;;3084:1;3080:6;3070;3064:4;3060:17;3057:1;3053:25;3049:38;3042:5;3038:50;3029:59;;2987:111;;2807:297;;;:::o;3517:184::-;1259:46110:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1259:46110:123:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:188:124;;934:133;879:188;;;;;160:25:271;;;148:2;133:18;879:188:124;;;;;;;;46768:599:123;;;;;;:::i;:::-;;:::i;6615:1382::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3368:401:157:-;;;;;;:::i;:::-;;:::i;:::-;;45512:839:123;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3401:612::-;;;;;;:::i;:::-;;:::i;1729:49:124:-;;;;;;;;-1:-1:-1;;;;;8439:32:271;;;8421:51;;8409:2;8394:18;1729:49:124;8249:229:271;8837:1052:123;;;;;;:::i;:::-;;:::i;40028:159::-;;;;;;:::i;:::-;-1:-1:-1;;;;;40135:26:123;;;40109:7;40135:26;;;:16;:26;;;;;:45;;;;;40028:159;39639:137;;;;;;:::i;:::-;;:::i;:::-;;;9761:14:271;;9754:22;9736:41;;9724:2;9709:18;39639:137:123;9596:187:271;354:59:154;;;;;1845:49:124;;;;;4058:283:123;;;;;;:::i;:::-;;:::i;1085:106:155:-;;;:::i;:::-;;;;;;;:::i;3805:85:157:-;;;:::i;46396:164:123:-;;;;;;:::i;:::-;;:::i;4539:163:157:-;;;;;;:::i;:::-;4671:7;;4642:1;:10;;;;;;;;4671:14;;;4670:24;;4539:163;4416:87;4489:7;;4416:87;;44447:227:123;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;44719:531::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;11074:1680::-;;;;;;:::i;:::-;;:::i;9934:1095::-;;;;;;:::i;:::-;;:::i;3323:62:124:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3323:62:124;;;42925:1256:123;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;39821:162::-;;;;;;:::i;:::-;;:::i;41299:453::-;;;;;;:::i;:::-;;:::i;2064:101:24:-;;;:::i;2784:96:124:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4386:249:123;;;;;;:::i;:::-;;:::i;1964:47:157:-;;;;;1441:85:24;1513:6;;-1:-1:-1;;;;;1513:6:24;1441:85;;40454:368:123;;;;;;:::i;:::-;;:::i;1539:104:124:-;;1600:42;1539:104;;8380:412:123;;;;;;:::i;:::-;;:::i;44226:176::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4339:81:124:-;;;;;;:::i;:::-;;;;;;;;;;;;;;6198:372:123;;;;;;:::i;:::-;;:::i;4020:73:124:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3611:111;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;40232:177:123;;;;;;:::i;:::-;;:::i;46605:118::-;;;24143:10:271;46689:27:123;24131:23:271;24113:42;;24101:2;24086:18;46605:118:123;23969:192:271;41797:1083:123;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1963:53:124:-;;;;;3087:188:123;;;;;;:::i;:::-;;:::i;5391:762::-;;;;;;:::i;:::-;;:::i;8042:293::-;;;;;;:::i;:::-;;:::i;4680:666::-;;;;;;:::i;:::-;;:::i;40867:387::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2314:198:24:-;;;;;;:::i;:::-;;:::i;1827:433:156:-;;;:::i;3926:454:157:-;;;;;;:::i;:::-;;:::i;45295:172:123:-;;;;;;:::i;:::-;;:::i;46768:599::-;47103:233;;;934:133:124;47103:233:123;;;28144:25:271;-1:-1:-1;;;;;28205:32:271;;;28185:18;;;28178:60;;;;28274:32;;;28254:18;;;28247:60;28343:32;;;28323:18;;;28316:60;28392:19;;;28385:35;;;28436:19;;;28429:35;;;46972:7:123;;47038:322;;28116:19:271;;47103:233:123;;;;;;;;;;;;47076:274;;;;;;47038:24;:322::i;:::-;47031:329;46768:599;-1:-1:-1;;;;;;46768:599:123:o;6615:1382::-;4671:7:157;;6777:16:123;;1325:1:124;;4642:10:157;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:157;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;6805:32:123::2;6854:6:::0;-1:-1:-1;;;;;6840:28:123;::::2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;6840:28:123::2;-1:-1:-1::0;6909:10:123::2;6878:16;6897:23:::0;;;:11:::2;:23;::::0;;;;;6805:63;;-1:-1:-1;;;;;;6897:23:123;;::::2;::::0;6931:1027:::2;6951:17:::0;;::::2;6931:1027;;;7028:6;;7035:1;7028:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;:30;;6997:6;;7004:1;6997:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;;::::2;:::i;:::-;:27;;:61;6989:98;;;;-1:-1:-1::0;;;6989:98:123::2;;;;;;;;;;;;7102:32;7137:63;7157:10;7169:8;7179:6;;7186:1;7179:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;;::::2;:::i;:::-;7137:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;7137:19:123::2;::::0;-1:-1:-1;;;7137:63:123:i:2;:::-;7102:98;;7662:285;7720:10;7758:8;7796:6;;7803:1;7796:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;;::::2;:::i;:::-;7662:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;7859:6:123;;-1:-1:-1;7859:6:123;;-1:-1:-1;7866:1:123;;-1:-1:-1;7859:9:123;;::::2;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;7662:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;7917:15:123;;-1:-1:-1;7662:31:123::2;::::0;-1:-1:-1;;7662:285:123:i:2;:::-;7641:15;7657:1;7641:18;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;:306;-1:-1:-1;6970:3:123::2;;6931:1027;;;-1:-1:-1::0;;1787:1:31;3053:7;:22;7975:15:123;6615:1382;-1:-1:-1;;;;6615:1382:123:o;3368:401:157:-;2398:35;;-1:-1:-1;;;2398:35:157;;2422:10;2398:35;;;8421:51:271;2398:14:157;-1:-1:-1;;;;;2398:23:157;;;;8394:18:271;;2398:35:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:157;;;;;;;;;;;;3482:7:::1;::::0;3631:37;;::::1;3630:62:::0;::::1;3622:97;;;;-1:-1:-1::0;;;3622:97:157::1;;;;;;;;;;;;3729:33;3746:15;3729:16;:33::i;:::-;3442:327;3368:401:::0;:::o;45512:839:123:-;-1:-1:-1;;;;;45799:19:123;;;45780:16;45799:19;;;:11;:19;;;;;;45681:16;;45799:19;;45863:49;45811:6;45799:19;45901:10;45863:19;:49::i;:::-;45828:84;;45992:30;46039:10;:17;-1:-1:-1;;;;;46025:32:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;46025:32:123;-1:-1:-1;45992:65:123;-1:-1:-1;46072:9:123;46067:248;46091:10;:17;46087:1;:21;46067:248;;;-1:-1:-1;;;;;46163:29:123;;46129:31;46163:29;;;:21;:29;;;;;46193:13;;46129:31;;46193:10;;46204:1;;46193:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;46163:44:123;-1:-1:-1;;;;;46163:44:123;;;;;;;;;;;;46129:78;;;;;;;;;;;;;;;;;;;46240:64;46262:18;46281:1;46262:21;;;;;;;;:::i;:::-;;;;;;;46285:15;46301:1;46285:18;;;;;;;;:::i;:::-;;;;;;;46240:3;:21;;:64;;;;;:::i;:::-;46221:13;46235:1;46221:16;;;;;;;;:::i;:::-;;;;;;;;;;:83;-1:-1:-1;46110:3:123;;46067:248;;;-1:-1:-1;46331:13:123;-1:-1:-1;;;45512:839:123;;;;;;:::o;3401:612::-;2505:21:31;:19;:21::i;:::-;3585:23:123::1;3597:10;3585:11;:23::i;:::-;3584:24;3576:54;;;;-1:-1:-1::0;;;3576:54:123::1;;;;;;;;;;;;3641:65;::::0;-1:-1:-1;;;3641:65:123;;3678:10:::1;3641:65;::::0;::::1;30493:51:271::0;30592:10;30580:23;;30560:18;;;30553:51;3641:17:123::1;-1:-1:-1::0;;;;;3641:36:123::1;::::0;::::1;::::0;30466:18:271;;3641:65:123::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3716:58;3739:10;3751:22;3716;:58::i;:::-;3837:33;3847:10;3859;3837:9;:33::i;:::-;3886:54;::::0;-1:-1:-1;;;;;8439:32:271;;8421:51;;3905:10:123::1;::::0;3886:54:::1;::::0;8409:2:271;8394:18;3886:54:123::1;;;;;;;3982:10;-1:-1:-1::0;;;;;3955:51:123::1;;3994:11;;3955:51;;;;;;;:::i;:::-;;;;;;;;2547:20:31::0;1787:1;3053:7;:22;2873:209;2547:20;3401:612:123;;;;:::o;8837:1052::-;1823:10;-1:-1:-1;;;;;1845:15:123;1823:38;;;:80;;-1:-1:-1;1865:10:123;-1:-1:-1;;;;;1887:15:123;1865:38;;1823:80;1801:165;;;;-1:-1:-1;;;1801:165:123;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;9335:19:123;;::::2;9316:16;9335:19:::0;;;:11:::2;:19;::::0;;;;;;9386:53;;-1:-1:-1;;;9386:53:123;;9335:19;;::::2;9386:53;::::0;::::2;31203:51:271::0;;;31290:32;;;31270:18;;;31263:60;9335:19:123;9386:17:::2;:33;::::0;::::2;::::0;31176:18:271;;9386:53:123::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9364:75;;9449:22;9474:50;9493:6;9501:8;9511:12;9474:18;:50::i;:::-;9449:75;;9627:255;9671:8;9701:6;9731:8;9772:17;9816:11;9857:14;9627:19;:255::i;:::-;9051:838;;;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;39639:137:123;-1:-1:-1;;;;;39735:19:123;;;39711:4;39735:19;;;:11;:19;;;;;;;:33;;;39639:137::o;4058:283::-;4182:8;713:22:154;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:154;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;4223:20:123::2;4234:8;4223:10;:20::i;:::-;4215:54;;;;-1:-1:-1::0;;;4215:54:123::2;;;;;;;;;;;;4279:55;4302:8;4312:21;4279:22;:55::i;:::-;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;4058:283:123::0;;;:::o;1085:106:155:-;1133:13;1165:19;:8;:17;:19::i;:::-;1158:26;;1085:106;:::o;3805:85:157:-;2398:35;;-1:-1:-1;;;2398:35:157;;2422:10;2398:35;;;8421:51:271;2398:14:157;-1:-1:-1;;;;;2398:23:157;;;;8394:18:271;;2398:35:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:157;;;;;;;;;;;;3855:28:::1;-1:-1:-1::0;;3855:16:157::1;:28::i;:::-;3805:85::o:0;46396:164:123:-;46494:7;46541:10;46530:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;46520:33;;;;;;46513:40;;46396:164;;;:::o;44447:227::-;44537:28;;:::i;:::-;44567:23;44625:42;44652:14;44625:26;:42::i;:::-;44602:65;;;;-1:-1:-1;44447:227:123;-1:-1:-1;;44447:227:123:o;44719:531::-;44802:31;44835:25;44872:32;44907;44932:6;44907:24;:32::i;:::-;44972:22;;44872:67;;-1:-1:-1;44972:22:123;-1:-1:-1;;;;;45018:29:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;45004:43;;45082:11;-1:-1:-1;;;;;45066:28:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45057:37;;45110:9;45105:139;45125:11;45121:1;:15;45105:139;;;45187:46;45214:15;45230:1;45214:18;;;;;;;;:::i;:::-;;;;;;;45187:26;:46::i;:::-;45158:11;45170:1;45158:14;;;;;;;;:::i;:::-;;;;;;45174:6;45181:1;45174:9;;;;;;;;:::i;:::-;;;;;;;;;;45157:76;;;;;45138:3;;45105:139;;;;44862:388;;44719:531;;;:::o;11074:1680::-;2176:10;-1:-1:-1;;;;;2198:17:123;2176:40;;2168:74;;;;-1:-1:-1;;;2168:74:123;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;11414:24:123;;::::2;11322:29;11414:24:::0;;;:14:::2;:24;::::0;;;;;;;:34;;::::2;::::0;;;;;;;;;11354:199:::2;::::0;-1:-1:-1;;;;;11354:199:123;;::::2;::::0;;::::2;:29;:199::i;:::-;11322:231;;11564:36;11603:196;11654:8;11686;11726:16;11773:15;11603:26;:196::i;:::-;11564:235:::0;-1:-1:-1;11962:32:123::2;11997:52;11564:235:::0;11997:21;:52:::2;:::i;:::-;11962:87;;12099:251;12143:8;12181:1;12278:8;12318:21;12099:19;:251::i;:::-;12422:67;::::0;;-1:-1:-1;;;;;32061:32:271;;;32043:51;;32125:2;32110:18;;32103:34;;;12422:67:123;::::2;::::0;::::2;::::0;32016:18:271;12422:67:123::2;;;;;;;12500:26;12529;12546:8;12529:16;:26::i;:::-;12676:71;::::0;-1:-1:-1;;;12676:71:123;;-1:-1:-1;;;;;32061:32:271;;;12676:71:123::2;::::0;::::2;32043:51:271::0;32110:18;;;32103:34;;;12500:55:123;;-1:-1:-1;12676:35:123;;::::2;::::0;::::2;::::0;32016:18:271;;12676:71:123::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11272:1482;;;;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;9934:1095:123;2039:10;-1:-1:-1;;;;;2061:15:123;2039:38;;2031:70;;;;-1:-1:-1;;;2031:70:123;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;10138:19:123::2;10150:6;10138:11;:19::i;:::-;10133:57:::0;10173:7:::2;10133:57;-1:-1:-1::0;;;;;10218:19:123;;::::2;10199:16;10218:19:::0;;;:11:::2;:19;::::0;;;;;;10426:67;;-1:-1:-1;;;10426:67:123;;10218:19;;::::2;10426:67;::::0;::::2;31203:51:271::0;;;1600:42:124::2;31270:18:271::0;;;31263:60;10218:19:123;10426:17:::2;:33;::::0;::::2;::::0;31176:18:271;;10426:67:123::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10537:29:123;::::2;10503:31;10537:29:::0;;;:21:::2;:29;::::0;;;;;;;1600:42:124::2;10537:53:123::0;;;;;;;10503:87;;;;::::2;::::0;;;;;;10404:89;;-1:-1:-1;10625:161:123::2;10675:16:::0;10721:54:::2;-1:-1:-1::0;;;;;10721:19:123;;::::2;::::0;:54;::::2;:19;:54::i;:::-;10625:3:::0;;:161;:20:::2;:161::i;:::-;10600:186;;10839:183;10883:8;10913:6;1600:42:124;10997:14:123;10839:19;:183::i;:::-;10123:906;;;;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;42925:1256:123;43213:35;;-1:-1:-1;;;43213:35:123;;-1:-1:-1;;;;;8439:32:271;;;43213:35:123;;;8421:51:271;43004:18:123;;;;43143:34;;;;43213:15;:27;;;;8394:18:271;;43213:35:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;43213:35:123;;;;;;;;;;;;:::i;:::-;43385:67;;-1:-1:-1;;;43385:67:123;;-1:-1:-1;;;;;31221:32:271;;;43385:67:123;;;31203:51:271;1600:42:124;31270:18:271;;;31263:60;43142:106:123;;-1:-1:-1;43142:106:123;;-1:-1:-1;43360:22:123;;43385:15;:35;;;;31176:18:271;;43385:67:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43360:92;;43466:14;43484:1;43466:19;43462:89;;-1:-1:-1;43509:15:123;;43526:13;;-1:-1:-1;42925:1256:123;-1:-1:-1;;42925:1256:123:o;43462:89::-;43631:29;43679:15;:22;43704:1;43679:26;;;;:::i;:::-;-1:-1:-1;;;;;43663:43:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43663:43:123;;43631:75;;43716:23;43756:15;:22;43781:1;43756:26;;;;:::i;:::-;-1:-1:-1;;;;;43742:41:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43742:41:123;;43716:67;;1600:42:124;43794:10:123;43805:15;:22;43794:34;;;;;;;;:::i;:::-;;;;;;:59;-1:-1:-1;;;;;43794:59:123;;;-1:-1:-1;;;;;43794:59:123;;;;;43896:14;43863:6;43870:15;:22;43863:30;;;;;;;;:::i;:::-;;;;;;;;;;:47;43988:9;43983:154;44007:15;:22;44003:1;:26;43983:154;;;44066:15;44082:1;44066:18;;;;;;;;:::i;:::-;;;;;;;44050:10;44061:1;44050:13;;;;;;;;:::i;:::-;;;;;;:34;-1:-1:-1;;;;;44050:34:123;;;-1:-1:-1;;;;;44050:34:123;;;;;44110:13;44124:1;44110:16;;;;;;;;:::i;:::-;;;;;;;44098:6;44105:1;44098:9;;;;;;;;:::i;:::-;;;;;;;;;;:28;44031:3;;43983:154;;;-1:-1:-1;44155:10:123;;44167:6;;-1:-1:-1;42925:1256:123;-1:-1:-1;;;;;42925:1256:123:o;39821:162::-;39894:4;-1:-1:-1;;;;;39917:22:123;;;;;;:59;;-1:-1:-1;;;;;;39943:33:123;;;:21;;;;:11;:21;;;;;;;;;:33;39917:59;39910:66;39821:162;-1:-1:-1;;39821:162:123:o;41299:453::-;41434:53;;-1:-1:-1;;;41434:53:123;;-1:-1:-1;;;;;31221:32:271;;;41434:53:123;;;31203:51:271;31290:32;;;31270:18;;;31263:60;41393:7:123;;;;41434:17;:33;;;;31176:18:271;;41434:53:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;41412:75;;41567:178;41618:8;41650;41690:12;41733:1;41567:26;:178::i;:::-;41560:185;41299:453;-1:-1:-1;;;;41299:453:123:o;2064:101:24:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;4386:249:123:-:0;4490:8;713:22:154;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:154;;;;;;;;;;;;4518:20:123::1;4529:8;4518:10;:20::i;:::-;4510:54;;;;-1:-1:-1::0;;;4510:54:123::1;;;;;;;;;;;;4606:8;-1:-1:-1::0;;;;;4579:49:123::1;;4616:11;;4579:49;;;;;;;:::i;:::-;;;;;;;;4386:249:::0;;;;:::o;40454:368::-;40573:16;40601:23;40641:10;:17;-1:-1:-1;;;;;40627:32:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40627:32:123;-1:-1:-1;40601:58:123;-1:-1:-1;40674:9:123;40669:124;40693:10;:17;40689:1;:21;40669:124;;;-1:-1:-1;;;;;40743:24:123;;;;;;:14;:24;;;;;40768:13;;40743:24;;;40768:10;;40779:1;;40768:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;40743:39:123;-1:-1:-1;;;;;40743:39:123;;;;;;;;;;;;;40731:6;40738:1;40731:9;;;;;;;;:::i;:::-;;;;;;;;;;:51;40712:3;;40669:124;;;-1:-1:-1;40809:6:123;40454:368;-1:-1:-1;;;40454:368:123:o;8380:412::-;4671:7:157;;1470:1:124;;4642:10:157;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:157;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;8633:11:123::0;8621:9:::2;8661:125;8681:1;8677;:5;8661:125;;;8703:72;8729:11;;8741:1;8729:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;8703:72;;;:::i;:::-;8745:6;;8752:1;8745:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;8756:15;;8772:1;8756:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8703:25;:72::i;:::-;8684:3;;8661:125;;;;8611:181;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;8380:412:123::0;;;;;;;:::o;44226:176::-;44314:28;;:::i;:::-;44361:34;;;;:18;:34;;;;;;;;;44354:41;;;;;;;;;-1:-1:-1;;;;;44354:41:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44361:34;;44354:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;44354:41:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44226:176;;;:::o;6198:372::-;6360:32;6422:22;6433:10;6422;:22::i;:::-;6404:40;;6502:61;6513:11;6526:22;6550:12;6502:10;:61::i;40232:177::-;-1:-1:-1;;;;;40347:29:123;;;40321:7;40347:29;;;:21;:29;;;;;;;;:39;;;;;;;;;;;:53;;;;;;;;;;;;40321:7;40347:55;;:53;:55::i;41797:1083::-;41918:35;41955:30;42032:10;:17;-1:-1:-1;;;;;42018:32:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;42018:32:123;;41997:53;;42090:10;:17;-1:-1:-1;;;;;42076:32:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;42076:32:123;-1:-1:-1;;;;;;42209:19:123;;;42190:16;42209:19;;;:11;:19;;;;;;42060:48;;-1:-1:-1;42209:19:123;;;42273:49;42221:6;42209:19;42311:10;42273:19;:49::i;:::-;42238:84;-1:-1:-1;42338:9:123;42333:488;42357:10;:17;42353:1;:21;42333:488;;;42395:26;42424:31;42441:10;42452:1;42441:13;;;;;;;;:::i;:::-;;;;;;;42424:16;:31::i;:::-;42395:60;;42488:12;-1:-1:-1;;;;;42488:32:123;;42521:6;42529:10;42540:1;42529:13;;;;;;;;:::i;:::-;;;;;;;42488:55;;;;;;;;;;;;;;;-1:-1:-1;;;;;31221:32:271;;;31203:51;;31290:32;;31285:2;31270:18;;31263:60;31191:2;31176:18;;31010:319;42488:55:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42469:13;42483:1;42469:16;;;;;;;;:::i;:::-;;;;;;:74;;;;;42636:31;42670:21;:29;42692:6;-1:-1:-1;;;;;42670:29:123;-1:-1:-1;;;;;42670:29:123;;;;;;;;;;;;:44;42700:10;42711:1;42700:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;42670:44:123;-1:-1:-1;;;;;42670:44:123;;;;;;;;;;;;42636:78;;;;;;;;;;;;;;;;;;;42752:58;42773:13;42787:1;42773:16;;;;;;;;:::i;:::-;;;;;;;42791:15;42807:1;42791:18;;;;;;;;:::i;:::-;;;;;;;42752:3;:20;;:58;;;;;:::i;:::-;42728:18;42747:1;42728:21;;;;;;;;:::i;:::-;;;;;;;;;;:82;-1:-1:-1;;42376:3:123;;42333:488;;;;42831:42;;41797:1083;;;;;;:::o;3087:188::-;3279:19:30;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:30;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:30;1713:19:38;:23;;;3387:66:30;;-1:-1:-1;3436:12:30;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:30;;35920:2:271;3325:201:30;;;35902:21:271;35959:2;35939:18;;;35932:30;35998:34;35978:18;;;35971:62;-1:-1:-1;;;36049:18:271;;;36042:44;36103:19;;3325:201:30;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:30;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:30;;;;;3562:65;3189:37:123::1;3206:19;3189:16;:37::i;:::-;3236:32;3255:12;3236:18;:32::i;:::-;3651:14:30::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:30;;;3721:14;;-1:-1:-1;36285:36:271;;3721:14:30;;36273:2:271;36258:18;3721:14:30;;;;;;;3269:483;3087:188:123;;:::o;5391:762::-;5470:32;2505:21:31;:19;:21::i;:::-;5572:19:123::1;5584:6;5572:11;:19::i;:::-;5564:52;;;;-1:-1:-1::0;;;5564:52:123::1;;;;;;;;;;;;5635:18;5646:6;5635:10;:18::i;:::-;5634:19;5626:57;;;;-1:-1:-1::0;;;5626:57:123::1;;;;;;;;;;;;5847:10;-1:-1:-1::0;;;;;5847:20:123;::::1;;5843:267;;-1:-1:-1::0;;;;;5902:19:123;;::::1;5883:16;5902:19:::0;;;:11:::1;:19;::::0;;;;;::::1;5944:23;5902:19:::0;5944:13:::1;:23::i;:::-;:69;;;-1:-1:-1::0;;;;;;40135:26:123;;;40109:7;40135:26;;;:16;:26;;;;;:45;;;;5971:10:::1;:42;5944:69;5936:104;;;;-1:-1:-1::0;;;5936:104:123::1;;;;;;;;;;;;6090:8;-1:-1:-1::0;;;;;6059:40:123::1;6082:6;-1:-1:-1::0;;;;;6059:40:123::1;;;;;;;;;;;5869:241;5843:267;6127:19;6139:6;6127:11;:19::i;:::-;6120:26;;2547:20:31::0;1787:1;3053:7;:22;2873:209;2547:20;5391:762:123;;;:::o;8042:293::-;4671:7:157;;1470:1:124;;4642:10:157;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:157;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;8266:62:123::2;;8292:10:::0;8266:62:::2;:::i;:::-;8304:6;;8312:15;8266:25;:62::i;:::-;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;8042:293:123::0;;;;;:::o;4680:666::-;2505:21:31;:19;:21::i;:::-;4864:23:123::1;4876:10;4864:11;:23::i;:::-;4863:24;4855:54;;;;-1:-1:-1::0;;;4855:54:123::1;;;;;;;;;;;;4927:20;4938:8;4927:10;:20::i;:::-;4919:54;;;;-1:-1:-1::0;;;4919:54:123::1;;;;;;;;;;;;5068:182;5114:10;5148:8;5181:26;5227:12;5068:23;:182::i;:::-;5308:31;5318:10;5330:8;5308:9;:31::i;40867:387::-:0;40997:18;41027:25;41071:9;:16;-1:-1:-1;;;;;41055:33:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41027:61:123;-1:-1:-1;41103:9:123;41098:127;41122:9;:16;41118:1;:20;41098:127;;;41171:43;41189:9;41199:1;41189:12;;;;;;;;:::i;:::-;;;;;;;41203:10;41171:17;:43::i;:::-;41159:6;41166:1;41159:9;;;;;;;;:::i;:::-;;;;;;;;;;:55;41140:3;;41098:127;;2314:198:24;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:24;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:24;;36534:2:271;2394:73:24::1;::::0;::::1;36516:21:271::0;36573:2;36553:18;;;36546:30;36612:34;36592:18;;;36585:62;-1:-1:-1;;;36663:18:271;;;36656:36;36709:19;;2394:73:24::1;36332:402:271::0;2394:73:24::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;1827:433:156:-;2075:19;;;;;;;;;;;;-1:-1:-1;;;2075:19:156;;;;;1883:7;518:95;2065:30;2133:15;:13;:15::i;:::-;2117:33;;;;;;;1988:251;;;;;;36998:25:271;;;;37039:18;;;37032:34;;;;37082:18;;;37075:34;;;;2172:13:156;37125:18:271;;;37118:34;2216:4:156;37168:19:271;;;37161:61;36970:19;;1988:251:156;;;;;;;;;;;;1961:292;;;;;;1941:312;;1827:433;:::o;3926:454:157:-;2620:14;-1:-1:-1;;;;;2620:23:157;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2606:39:157;:10;-1:-1:-1;;;;;2606:39:157;;2598:64;;;;-1:-1:-1;;;2598:64:157;;;;;;;;;;;;4044:7:::1;::::0;4238:20;::::1;4215:16:::0;::::1;4189:43:::0;::::1;4188:71;4180:106;;;;-1:-1:-1::0;;;4180:106:157::1;;;;;;;;;;;;4296:7;:25:::0;;;4336:37:::1;::::0;160:25:271;;;4345:10:157::1;::::0;4336:37:::1;::::0;148:2:271;133:18;4336:37:157::1;;;;;;;;4004:376;3926:454:::0;:::o;45295:172:123:-;-1:-1:-1;;;;;45415:36:123;;;;;;:28;:36;;;;;45380:16;;45415:45;;:43;:45::i;2758:182:156:-;2843:7;2908:17;:15;:17::i;:::-;2879:53;;-1:-1:-1;;;2879:53:156;;;37747:27:271;37790:11;;;37783:27;;;;37826:12;;;37819:28;;;37863:12;;2879:53:156;37489:392:271;2580:287:31;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:31;;38088:2:271;2704:63:31;;;38070:21:271;38127:2;38107:18;;;38100:30;38166:33;38146:18;;;38139:61;38217:18;;2704:63:31;37886:355:271;2704:63:31;1830:1;2842:7;:18;2580:287::o;33882:543:123:-;34029:16;34057:32;34106:10;:17;-1:-1:-1;;;;;34092:32:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;34092:32:123;;34057:67;;34134:29;34166:17;-1:-1:-1;;;;;34166:34:123;;34201:8;34211:10;34166:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34166:56:123;;;;;;;;;;;;:::i;:::-;34134:88;-1:-1:-1;34238:9:123;34233:153;34257:10;:17;34253:1;:21;34233:153;;;34316:59;34335:6;34343:10;34354:1;34343:13;;;;;;;;:::i;:::-;;;;;;;34358;34372:1;34358:16;;;;;;;;:::i;:::-;;;;;;;34316:18;:59::i;:::-;34295:15;34311:1;34295:18;;;;;;;;:::i;:::-;;;;;;;;;;:80;34276:3;;34233:153;;;-1:-1:-1;34403:15:123;;33882:543;-1:-1:-1;;;;;33882:543:123:o;20959:3203::-;21205:7;-1:-1:-1;;;;;21232:20:123;;21224:49;;;;-1:-1:-1;;;21224:49:123;;;;;;;;;;;;21291:10;:17;21312:1;21291:22;21283:55;;;;-1:-1:-1;;;21283:55:123;;;;;;;;;;;;21349:29;21395:10;:17;-1:-1:-1;;;;;21381:32:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21381:32:123;;21349:64;;21423:35;21475:10;:17;-1:-1:-1;;;;;21461:32:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21461:32:123;-1:-1:-1;21423:70:123;-1:-1:-1;21647:9:123;21642:1672;21666:10;:17;21662:1;:21;21642:1672;;;21704:26;21733:31;21750:10;21761:1;21750:13;;;;;;;;:::i;21733:31::-;21704:60;;21778:32;21813:21;:29;21835:6;-1:-1:-1;;;;;21813:29:123;-1:-1:-1;;;;;21813:29:123;;;;;;;;;;;;:44;21843:10;21854:1;21843:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;21813:44:123;-1:-1:-1;;;;;21813:44:123;;;;;;;;;;;;21778:79;;21982:68;22003:23;22027:1;22003:26;;;;;;;;:::i;:::-;;;;;;;22031:15;22047:1;22031:18;;;;;;;;:::i;:::-;;;;;;;;;;;;21982:20;;;;;;;;;;;;;;:68;:20;:68::i;:::-;21958:18;21977:1;21958:21;;;;;;;;:::i;:::-;;;;;;:92;;;;;22132:55;22160:23;22184:1;22160:26;;;;;;;;:::i;:::-;;;;;;;;;;;;22132:27;;;;;;;;;;;;;:55::i;:::-;22114:12;22127:1;22114:15;;;;;;;;:::i;:::-;;;;;;;;;;:73;-1:-1:-1;;;;;22263:22:123;;;22259:677;;22567:67;22593:8;22603:10;22614:1;22603:13;;;;;;;;:::i;:::-;;;;;;;22618:12;22631:1;22618:15;;;;;;;;:::i;:::-;;;;;;;22567:25;:67::i;:::-;22700:221;22752:8;22790:6;22828:10;22839:1;22828:13;;;;;;;;:::i;:::-;;;;;;;22881:18;22900:1;22881:21;;;;;;;;:::i;:::-;;;;;;;22700:19;:221::i;:::-;23024:19;23046:12;-1:-1:-1;;;;;23046:32:123;;23079:6;23087:10;23098:1;23087:13;;;;;;;;:::i;:::-;;;;;;;23102:23;23126:1;23102:26;;;;;;;;:::i;:::-;;;;;;;23046:83;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23024:105;;23148:11;23163:1;23148:16;23144:160;;6174:1:152;6153:22;;23218:71:123;23246:6;23254:10;23265:1;23254:13;;;;;;;;:::i;:::-;;;;;;;23269:19;:3;:17;;;;;;;;;;;;;;;;;;:19::i;:::-;23218:71;;;;;;;;:::i;:::-;;;;;;;;23144:160;21690:1624;;;21685:3;;;;;21642:1672;;;-1:-1:-1;;;;;;23401:35:123;;23385:13;23401:35;;;:27;:35;;;;;;;;;;;23446:37;23401:35;23446:37;:::i;:::-;;;;;;23494:28;23525:265;;;;;;;;23558:6;-1:-1:-1;;;;;23525:265:123;;;;;23591:8;-1:-1:-1;;;;;23525:265:123;;;;;23625:6;-1:-1:-1;;;;;23525:265:123;;;;;23652:5;23525:265;;;;23690:12;23525:265;;;;;;23729:10;23525:265;;;;23767:12;23525:265;;;23494:296;;23801:22;23826:35;23850:10;23826:23;:35::i;:::-;23872:34;;;;:18;:34;;;;;;;;:41;;23909:4;-1:-1:-1;;23872:41:123;;;;;;;;23923:18;:34;;;;;;:47;;;;-1:-1:-1;;;;;;23923:47:123;;;-1:-1:-1;;;;;23923:47:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23923:47:123;;;;;;;;;;;;;;;;;23872:34;;-1:-1:-1;23923:47:123;;;;;;;;;;;:::i;:::-;-1:-1:-1;23923:47:123;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;23980:36:123;;;;;;:28;:36;;;;;:56;;24021:14;23980:40;:56::i;:::-;;24052:72;24077:14;24093:10;24105:18;24052:72;;;;;;;;:::i;:::-;;;;;;;;24141:14;20959:3203;-1:-1:-1;;;;;;;;;;20959:3203:123:o;4806:157:157:-;4887:7;:22;;;4924:32;;160:25:271;;;4931:10:157;;4924:32;;148:2:271;133:18;4924:32:157;;;;;;;4806:157;:::o;6535:333:152:-;6700:7;6766:95;6846:14;6766:59;6805:19;:3;:17;:19::i;:::-;6766:18;;:38;:59::i;:::-;:79;;:95::i;13096:249:123:-;-1:-1:-1;;;;;13196:26:123;;;;;;;:16;:26;;;;;;;;;:45;;:69;;-1:-1:-1;;;;;;13196:69:123;;;;;;;;;13280:58;;8421:51:271;;;13196:26:123;;13280:58;;8394:18:271;13280:58:123;8249:229:271;14103:1845:123;4671:7:157;;1187:1:124;;4642::157;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:157;;;;;;;;;;;;14412:29:123::1;14443:35;14482:26;14501:6;14482:18;:26::i;:::-;14411:97;;;;14739:40;14782:53;14810:1;14814:8;14824:10;14782:19;:53::i;:::-;-1:-1:-1::0;;;;;14882:19:123;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:30;;-1:-1:-1;;;;;;14882:30:123::1;::::0;;::::1;::::0;;::::1;::::0;;14927:33;14739:96;;-1:-1:-1;14882:30:123;;:19;;14927:33:::1;::::0;::::1;14976:9;14971:971;14995:10;:17;14991:1;:21;14971:971;;;1600:42:124;-1:-1:-1::0;;;;;15202:39:123::1;:10;15213:1;15202:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;15202:39:123::1;::::0;15198:371:::1;;15296:49;::::0;-1:-1:-1;;;15296:49:123;;-1:-1:-1;;;;;8439:32:271;;;15296:49:123::1;::::0;::::1;8421:51:271::0;15261:32:123::1;::::0;15296:15:::1;:41:::0;;::::1;::::0;::::1;::::0;8394:18:271;;15296:49:123::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15261:84;;15364:31;15398:21;:29;15420:6;-1:-1:-1::0;;;;;15398:29:123::1;-1:-1:-1::0;;;;;15398:29:123::1;;;;;;;;;;;;:44;15428:10;15439:1;15428:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;15398:44:123::1;-1:-1:-1::0;;;;;15398:44:123::1;;;;;;;;;;;;15364:78;;;;;;;;;;;;;;;::::0;::::1;;;15484:70;15505:18;15524:1;15505:21;;;;;;;;:::i;:::-;;;;;;;15528:25;-1:-1:-1::0;;;;;15484:70:123::1;:3;:20;;:70;;;;;:::i;:::-;15460:18;15479:1;15460:21;;;;;;;;:::i;:::-;;;;;;:94;;;::::0;::::1;15243:326;;15198:371;15626:305;15674:8;15709:6;15744:10;15755:1;15744:13;;;;;;;;:::i;:::-;;;;;;;15802:1;15835:18;15854:1;15835:21;;;;;;;;:::i;:::-;;;;;;;15890:23;15914:1;15890:26;;;;;;;;:::i;:::-;;;;;;;15626:19;:305::i;:::-;15014:3;;14971:971;;33338:433:::0;33484:7;-1:-1:-1;;;;;;;33507:34:123;;;33503:224;;33592:49;;-1:-1:-1;;;33592:49:123;;-1:-1:-1;;;;;8439:32:271;;;33592:49:123;;;8421:51:271;33557:32:123;;33592:15;:41;;;;;;8394:18:271;;33592:49:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33557:84;-1:-1:-1;33662:54:123;-1:-1:-1;;;;;33662:27:123;;;;:54;;:27;:54::i;:::-;33655:61;;;;;33503:224;-1:-1:-1;;;;;;33737:27:123;;33338:433;-1:-1:-1;;33338:433:123:o;29840:1297::-;30328:14;30346:1;30328:19;30320:44;;;;-1:-1:-1;;;30320:44:123;;;;;;;;;;;;30420:53;;30456:7;30420:53;-1:-1:-1;;;;;30667:29:123;;;30632:32;30667:29;;;:21;:29;;;;;;;;:39;;;;;;;;;30716:58;30667:39;30727:17;30746:11;30759:14;30716:10;:58::i;:::-;30835:17;;;;;;;;;;;;;30789:66;;30817:6;;30825:8;;30835:19;;:17;:19::i;:::-;30789:66;;;;;;;;:::i;:::-;;;;;;;;30953:19;30965:6;30953:11;:19::i;:::-;30949:182;;;-1:-1:-1;;;;;30988:24:123;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:49;;31026:11;;30988:24;:49;;31026:11;;30988:49;:::i;:::-;;;;;;;;31080:8;-1:-1:-1;;;;;31056:64:123;;31090:6;31098:8;31108:11;31056:64;;;;;;;;:::i;:::-;;;;;;;;30058:1079;29840:1297;;;;;;;:::o;1080:175:154:-;1175:73;;-1:-1:-1;;;1175:73:154;;-1:-1:-1;;;;;40935:32:271;;;1175:73:154;;;40917:51:271;1213:10:154;40984:18:271;;;40977:60;1233:4:154;41053:18:271;;;41046:60;1152:4:154;1240:7;;-1:-1:-1;;;;;;1240:7:154;41122:18:271;;;41115:61;1152:4:154;1175:20;:28;;;;;;40889:19:271;;1175:73:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2081:405:41:-;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:41;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:41;;;-1:-1:-1;2438:4:41;2429:14;;2422:28;;;;-1:-1:-1;2393:16:41;2081:405::o;37591:1547:123:-;37688:28;;:::i;:::-;37766:34;;;;:18;:34;;;;;;;;;37753:47;;;;;;;;;-1:-1:-1;;;;;37753:47:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;37718:23;37753:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37718:23;;37753:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;37753:47:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37833:10;:21;;;:28;-1:-1:-1;;;;;37819:43:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37819:43:123;;37810:52;;37873:21;37921:27;37897:10;:21;;;:51;;;;:::i;:::-;37873:75;;38353:32;38412:12;38388:37;;:14;:37;;;:477;;38686:179;38732:10;:17;;;38777:10;:22;;;38829:10;:21;;;38686:19;:179::i;:::-;38388:477;;;38440:231;38493:10;:17;;;38538:10;:22;;;38590:10;:21;;;38642:14;38440:26;:231::i;:::-;38353:512;;38881:9;38876:256;38896:10;:21;;;:28;38892:1;:32;38876:256;;;38957:164;39028:10;:23;;;39052:1;39028:26;;;;;;;;:::i;:::-;;;;;;;39088:15;39104:1;39088:18;;;;;;;;:::i;:::-;;;;;;;38957:38;:164::i;:::-;38945:6;38952:1;38945:9;;;;;;;;:::i;:::-;;;;;;;;;;:176;38926:3;;38876:256;;6874:328:152;7029:7;7121:74;:14;7143:15;7160:16;7178;7121:21;:74::i;:::-;7104:91;;:14;:91;:::i;35726:1307:123:-;-1:-1:-1;;;;;36284:40:123;;;35910:7;36284:40;;;:30;:40;;;;;;;;:50;;;;;;;;;;;35910:7;;36284:59;;:57;:59::i;:::-;36252:91;-1:-1:-1;36353:30:123;36386:147;36521:1;36468:50;36491:27;36475:12;36468:50;:::i;:::-;:54;;;;:::i;:::-;-1:-1:-1;;;;;36386:40:123;;;;;;;:30;:40;;;;;;;;:50;;;;;;;;;;:62;:147::i;:::-;36353:180;-1:-1:-1;36756:25:123;36784:46;36353:180;36784:21;:46;:::i;:::-;36756:74;;36848:178;36904:17;36953:16;37000:15;36848:27;:178::i;:::-;36841:185;35726:1307;-1:-1:-1;;;;;;;;35726:1307:123:o;31584:348::-;-1:-1:-1;;;;;31787:24:123;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:54;;31825:16;;31787:24;:54;;31825:16;;31787:54;:::i;:::-;;;;;;;;31880:8;-1:-1:-1;;;;;31856:69:123;;31890:6;31898:8;31908:16;31856:69;;;;;;;;:::i;39253:264::-;39336:13;-1:-1:-1;;;;;39368:34:123;;1600:42:124;39368:34:123;:142;;39493:15;39368:142;;;39439:15;39361:149;39253:264;-1:-1:-1;;39253:264:123:o;1564:110:152:-;1625:7;1651:16;:1;1660;552:4;1651:8;:16::i;6207:322::-;6366:7;6432:90;6507:14;6432:54;6466:19;:3;:17;:19::i;:::-;6432:13;;:33;:54::i;:::-;:74;;:90::i;1599:130:24:-;1513:6;;-1:-1:-1;;;;;1513:6:24;929:10:39;1662:23:24;1654:68;;;;-1:-1:-1;;;1654:68:24;;41869:2:271;1654:68:24;;;41851:21:271;;;41888:18;;;41881:30;41947:34;41927:18;;;41920:62;41999:18;;1654:68:24;41667:356:271;2666:187:24;2758:6;;;-1:-1:-1;;;;;2774:17:24;;;-1:-1:-1;;;;;;2774:17:24;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;24881:4186:123:-;25068:21;;;;:28;25051:45;;25043:82;;;;-1:-1:-1;;;25043:82:123;;;;;;;;;;;;25157:10;:21;;;-1:-1:-1;;;;;25143:35:123;:10;-1:-1:-1;;;;;25143:35:123;;25135:67;;;;-1:-1:-1;;;25135:67:123;;;;;;;;;;;;25212:22;25237:35;25261:10;25237:23;:35::i;:::-;25290:34;;;;:18;:34;;;;;;25212:60;;-1:-1:-1;25290:34:123;;25282:66;;;;-1:-1:-1;;;25282:66:123;;;;;;;;;;;;25359:36;25615:21;25663:27;25639:10;:21;;;:51;;;;:::i;:::-;25615:75;;25735:14;25712:37;;25719:12;25712:37;;;25704:75;;;;-1:-1:-1;;;25704:75:123;;;;;;;;;;;;25999:231;26052:10;:17;;;26097:10;:22;;;26149:10;:21;;;26201:14;25999:26;:231::i;:::-;26459:17;;-1:-1:-1;;;;;26430:47:123;;;;;:28;:47;;;;;25977:253;;-1:-1:-1;26430:70:123;;-1:-1:-1;26485:14:123;26430:54;:70::i;:::-;-1:-1:-1;26517:34:123;;;;:18;:34;;;;;26510:41;;-1:-1:-1;;;;;;26510:41:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26510:41:123;;;26517:34;26510:41;;;;26517:34;26510:41;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;26568:34:123;;;;:18;:34;;;;;;;26561:41;;-1:-1:-1;;26561:41:123;;;26617:43;;;;;26587:14;160:25:271;;148:2;133:18;;14:177;26617:43:123;;;;;;;;26896:17;;-1:-1:-1;;;;;26884:30:123;;;26862:19;26884:30;;;:11;:30;;;;;;26982:17;;27014:21;;;;26884:30;;;;;26962:74;;26884:30;;26962:19;:74::i;:::-;26924:112;-1:-1:-1;27052:9:123;27047:2014;27071:10;:21;;;:28;27067:1;:32;27047:2014;;;27120:26;27149:42;27166:10;:21;;;27188:1;27166:24;;;;;;;;:::i;27149:42::-;27120:71;;27289:24;27316:168;27387:10;:23;;;27411:1;27387:26;;;;;;;;:::i;:::-;;;;;;;27447:19;27467:1;27447:22;;;;;;;;:::i;27316:168::-;27289:195;;27552:16;27572:1;27552:21;27548:68;;27593:8;;;;27548:68;27634:15;27630:1421;;;27973:12;-1:-1:-1;;;;;27973:35:123;;28039:10;:17;;;28088:10;:21;;;28110:1;28088:24;;;;;;;;:::i;:::-;;;;;;;28141:6;;28148:1;28141:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;27973:242;;;;;;-1:-1:-1;;;;;;27973:242:123;;;-1:-1:-1;;;;;42580:32:271;;;27973:242:123;;;42562:51:271;42649:32;;;42629:18;;;42622:60;42718:32;;;42698:18;;;42691:60;42767:18;;;42760:34;;;42534:19;;27973:242:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27630:1421;;;28328:25;28355:19;28378:12;-1:-1:-1;;;;;28378:22:123;;28431:10;:17;;;28480:10;:21;;;28502:1;28480:24;;;;;;;;:::i;:::-;;;;;;;28534:16;28378:191;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28327:242;;;;28688:348;28740:11;28781:10;:17;;;28830:10;:21;;;28852:1;28830:24;;;;;;;;:::i;:::-;;;;;;;28895:17;28947:11;28996:18;29015:1;28996:21;;;;;;;;:::i;28688:348::-;28236:815;;27630:1421;27106:1955;;27047:2014;27101:3;;27047:2014;;;;25033:4034;;;;24881:4186;;;;:::o;2277:176:152:-;2396:18;;2370:7;;2396:23;:50;;2428:18;;2396:50;;;552:4;2389:57;2277:176;-1:-1:-1;;2277:176:152:o;16414:1989:123:-;4671:7:157;;16532:32:123;;1325:1:124;;4642:10:157;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:157;;;;;;;;;;;;-1:-1:-1;;;;;16628:19:123;;::::1;16609:16;16628:19:::0;;;:11:::1;:19;::::0;;;;;;;-1:-1:-1;;;;;;16657:32:123;::::1;::::0;;;16704:35;;16628:19;::::1;::::0;;;;16704:35:::1;::::0;::::1;16893:29;16924:32;16960:26;16979:6;16960:18;:26::i;:::-;16892:94;;;;17000:10;:17;17021:1;17000:22:::0;16996:75:::1;;17038:22;;;;;16996:75;17252:10;:17;-1:-1:-1::0;;;;;17238:32:123::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;17238:32:123::1;;17220:50;;17280:32;17315:49;17335:6;17343:8;17353:10;17315:19;:49::i;:::-;17280:84:::0;-1:-1:-1;17472:9:123::1;17467:897;17491:10;:17;17487:1;:21;17467:897;;;17565:18;::::0;;17581:1:::1;17565:18:::0;;;;;::::1;::::0;;;17529:33:::1;::::0;17565:18:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;17636:16:123::1;::::0;;17650:1:::1;17636:16:::0;;;;;::::1;::::0;;;17529:54;;-1:-1:-1;17597:36:123::1;::::0;17636:16;-1:-1:-1;17636:16:123::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;17706:16:123::1;::::0;;17720:1:::1;17706:16:::0;;;;;::::1;::::0;;;17597:55;;-1:-1:-1;17666:37:123::1;::::0;17706:16;-1:-1:-1;17706:16:123::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;17706:16:123::1;17666:56;;17756:10;17767:1;17756:13;;;;;;;;:::i;:::-;;;;;;;17736:14;17751:1;17736:17;;;;;;;;:::i;:::-;;;;;;:33;-1:-1:-1::0;;;;;17736:33:123::1;;;-1:-1:-1::0;;;;;17736:33:123::1;;;::::0;::::1;17808:15;17824:1;17808:18;;;;;;;;:::i;:::-;;;;;;;17783:19;17803:1;17783:22;;;;;;;;:::i;:::-;;;;;;:43;;;::::0;::::1;17866:15;17882:1;17866:18;;;;;;;;:::i;:::-;;;;;;;17840:20;17861:1;17840:23;;;;;;;;:::i;:::-;;;;;;:44;;;::::0;::::1;18077:276;18135:6;18169:8;18207:14;18264:19;18318:20;18077:31;:276::i;:::-;18056:15;18072:1;18056:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:297;-1:-1:-1;;;17510:3:123::1;;17467:897;;;;18374:22;;;;3111:1:157;16414:1989:123::0;;;;:::o;32106:857::-;-1:-1:-1;;;;;32301:26:123;;;32282:16;32301:26;;;:16;:26;;;;;:45;;;;;32356:59;;32398:7;;;32356:59;-1:-1:-1;;;;;32522:39:123;;;;;;:29;:39;;;;;;;;:45;;;;;;;;;;;32521:46;32513:68;;;;-1:-1:-1;;;32513:68:123;;;;;;;;;;;;-1:-1:-1;;;;;32591:39:123;;;;;;:29;:39;;;;;;;;:45;;;;;;;;:52;;-1:-1:-1;;32591:52:123;32639:4;32591:52;;;32846:16;;;32688:268;;32621:8;;32774:89;;32812:6;;32820:8;;32621;;32631:4;;32774:37;:89::i;:::-;32888:19;;32929:16;;;;32688:25;:268::i;1415:172:155:-;1463:13;1488:14;1511:19;:8;:17;:19::i;:::-;1488:43;;1568:1;1570;1568:4;;;;;;;;:::i;:::-;;;;;;;;;1574:1;1576;1574:4;;;;;;;;:::i;:::-;;;;;;;1555:24;;-1:-1:-1;;;;;;43318:26:271;;;1555:24:155;;;43306:39:271;;;;1574:4:155;;;;43361:11:271;;;43354:47;43417:11;;1555:24:155;;;;;;;;;;;;1541:39;;;1415:172;:::o;7765:300:89:-;7828:16;7856:22;7881:19;7889:3;7881:7;:19::i;2459:228:152:-;2603:7;2629:51;2660:19;:3;:17;:19::i;:::-;2629:23;;:30;:51::i;37136:395:123:-;-1:-1:-1;;;;;37287:40:123;;;37250:34;37287:40;;;:30;:40;;;;;;;;:50;;;;;;;;;;;:59;;:57;:59::i;:::-;37250:96;-1:-1:-1;37356:168:123;37438:12;37472:41;37501:12;37250:96;37472:41;:::i;:::-;-1:-1:-1;;;;;37356:40:123;;;;;;;:30;:40;;;;;;;;:50;;;;;;;;;;:168;:55;:168::i;5919:123:89:-;5989:4;6012:23;6017:3;6029:5;6012:4;:23::i;1680:110:152:-;1741:7;1767:16;:1;552:4;1781:1;1767:8;:16::i;3407:2232::-;3590:17;3611:1;3590:22;3586:402;;3915:17;;;;;;;;;;;;;:42;;3942:14;;3915:19;;:17;:19::i;:42::-;3894:63;;3971:7;;3586:402;5173:20;;;;;;;;;;;;;5149:21;;5173:55;;5194:17;5213:14;5173:20;:55::i;:::-;5149:79;-1:-1:-1;5294:17:152;5314:27;5330:11;5149:79;5314:27;:::i;:::-;5294:47;-1:-1:-1;5445:31:152;5479:98;5562:14;5479:62;5509:31;5529:11;5509:17;:31;:::i;:::-;5479:9;;:29;:62::i;:98::-;5588:44;;-1:-1:-1;;;3407:2232:152;;;;:::o;2558:245:41:-;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:41;;;;;;;;;;;34645:681:123;34827:16;34855:32;34904:10;:17;-1:-1:-1;;;;;34890:32:123;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;34890:32:123;;34855:67;;34932:29;34964:17;-1:-1:-1;;;;;34964:41:123;;35030:8;35064:10;35101:11;34964:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34964:159:123;;;;;;;;;;;;:::i;:::-;34932:191;-1:-1:-1;35139:9:123;35134:153;35158:10;:17;35154:1;:21;35134:153;;;35217:59;35236:6;35244:10;35255:1;35244:13;;;;;;;;:::i;35217:59::-;35196:15;35212:1;35196:18;;;;;;;;:::i;:::-;;;;;;;;;;:80;35177:3;;35134:153;;;-1:-1:-1;35304:15:123;;34645:681;-1:-1:-1;;;;;;34645:681:123:o;2693:173:152:-;2798:7;2824:35;:12;2844:14;2824:19;:35::i;6012:299:84:-;6113:7;6132:14;6149:25;6156:1;6159;6162:11;6149:6;:25::i;:::-;6132:42;-1:-1:-1;6200:11:84;6188:8;:23;;;;;;;;:::i;:::-;;:56;;;;;6243:1;6228:11;6215:25;;;;;:::i;:::-;6225:1;6222;6215:25;:29;6188:56;6184:98;;;6260:11;6270:1;6260:11;;:::i;:::-;;;6184:98;6298:6;6012:299;-1:-1:-1;;;;;6012:299:84:o;3312:155:153:-;3398:7;3432:27;3440:4;3398:7;3432;:27::i;:::-;-1:-1:-1;;;;;3424:36:153;;3312:155;-1:-1:-1;;3312:155:153:o;2771:159::-;2860:7;2886:37;2899:4;2916:3;2860:7;2886:12;:37::i;:::-;-1:-1:-1;;;;;2879:44:153;;2771:159;-1:-1:-1;;;2771:159:153:o;3164:237:152:-;3313:7;3339:55;3359:34;3378:15;3359:16;:34;:::i;:::-;3339:12;;-1:-1:-1;;;;;3339:55:152;:19;:55::i;1667:4213:84:-;1749:14;;;-1:-1:-1;;2286:1:84;2283;2276:20;2329:1;2326;2322:9;2313:18;;2384:5;2380:2;2377:13;2369:5;2365:2;2361:14;2357:34;2348:43;;;2486:5;2495:1;2486:10;2482:368;;2824:11;2816:5;:19;;;;;:::i;:::-;;2809:26;;;;;;2482:368;2974:5;2960:11;:19;2952:53;;;;-1:-1:-1;;;2952:53:84;;44583:2:271;2952:53:84;;;44565:21:271;44622:2;44602:18;;;44595:30;-1:-1:-1;;;44641:18:271;;;44634:51;44702:18;;2952:53:84;44381:345:271;2952:53:84;3261:17;3396:11;3393:1;3390;3383:25;4774:1;3944;3929:12;;:16;;3914:32;;4049:22;;;;4755:1;:15;;4754:21;;5007;;;5003:25;;4992:36;5076:21;;;5072:25;;5061:36;5146:21;;;5142:25;;5131:36;5216:21;;;5212:25;;5201:36;5286:21;;;5282:25;;5271:36;5357:21;;;5353:25;;;5342:36;;;3899:12;4294;;;4290:23;;;4286:31;;;3510:20;;;3499:32;;;4406:12;;;;3557:21;;4147:16;;;;4397:21;;;;5821:15;;;-1:-1:-1;;;;1667:4213:84:o;6210:129:89:-;6283:4;6306:26;6314:3;6326:5;6306:7;:26::i;3668:714:156:-;3998:15;3988:6;:25;;3980:54;;;;-1:-1:-1;;;3980:54:156;;;;;;;;;;;;4301:53;-1:-1:-1;;;;;4301:26:156;;4328:14;4344:9;4301:26;:53::i;:::-;4293:82;;;;-1:-1:-1;;;4293:82:156;;;;;;;;;;;5570:109:89;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;2077:145:153:-;2170:45;2178:4;2195:3;2208:5;2170:7;:45::i;2214:404:89:-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:89;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:89;2589:12;;5358:230:153;5482:16;;5449:7;;5515:8;;:66;;5541:33;5555:9;5566:7;5572:1;5566:3;:7;:::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;;6703:28;;6514:233;5541:33;:40;;;;-1:-1:-1;;;;;5541:40:153;5515:66;;;-1:-1:-1;5526:12:153;;5358:230;-1:-1:-1;;5358:230:153:o;4889:343::-;5060:16;;5027:7;;;5100:42;5060:9;5130:3;5027:7;5060:16;5100:18;:42::i;:::-;5086:56;-1:-1:-1;5159:8:153;;:66;;5185:33;5199:9;5210:7;5216:1;5210:3;:7;:::i;5185:33::-;:40;;;;-1:-1:-1;;;;;5185:40:153;5159:66;;;-1:-1:-1;5170:12:153;;5152:73;-1:-1:-1;;;;4889:343:153:o;2786:1388:89:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:89;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;1047:399:46;1153:4;1170:17;1189:35;1228:44;1256:4;1262:9;1228:27;:44::i;:::-;1169:103;;-1:-1:-1;1169:103:46;-1:-1:-1;1311:37:46;1302:5;:46;;;;;;;;:::i;:::-;;:69;;;;;1365:6;-1:-1:-1;;;;;1352:19:46;:9;-1:-1:-1;;;;;1352:19:46;;1302:69;1301:138;;;;1388:51;1415:6;1423:4;1429:9;1388:26;:51::i;4054:667:153:-;4155:11;;4181:7;;4177:422;;4278:20;4301:28;4315:4;4321:7;4327:1;4321:3;:7;:::i;4301:28::-;4278:51;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4278:51:153;;;;;;;-1:-1:-1;4351:16:153;;;-1:-1:-1;4351:16:153;4343:52;;;;-1:-1:-1;;;4343:52:153;;;;;;;;;;;;4471:9;;:16;;;;;;;4467:122;;4545:5;4507:28;4521:4;4527:7;4533:1;4527:3;:7;:::i;4507:28::-;:43;;-1:-1:-1;;;;;4507:43:153;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4054:667:153:o;4467:122::-;4190:409;4177:422;-1:-1:-1;4677:36:153;;;;;;;;;;;;;;;-1:-1:-1;;;;;4677:36:153;;;;;;;;;;4667:47;;;;;;;-1:-1:-1;4667:47:153;;;;;;;;;;;;;;;;;;;;;;4054:667::o;5932:439::-;6084:7;6103:241;6116:4;6110:3;:10;6103:241;;;6136:11;6150:34;6174:3;6179:4;6150:23;:34::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;6136:48;;-1:-1:-1;6202:35:153;;;;6703:28;;6202:29;;;:35;6198:136;;;6264:3;6257:10;;6198:136;;;6312:7;:3;6318:1;6312:7;:::i;:::-;6306:13;;6198:136;6122:222;6103:241;;2167:730:44;2248:7;2257:12;2285:9;:16;2305:2;2285:22;2281:610;;2621:4;2606:20;;2600:27;2670:4;2655:20;;2649:27;2727:4;2712:20;;2706:27;2323:9;2698:36;2768:25;2779:4;2698:36;2600:27;2649;2768:10;:25::i;:::-;2761:32;;;;;;;;;2281:610;-1:-1:-1;2840:1:44;;-1:-1:-1;2844:35:44;2824:56;;1852:495:46;1995:4;2012:12;2026:19;2049:6;-1:-1:-1;;;;;2049:17:46;2103:45;;;2150:4;2156:9;2080:86;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2080:86:46;;;;;;;;;;;;;;-1:-1:-1;;;;;2080:86:46;-1:-1:-1;;;;;;2080:86:46;;;;;;;;;;2049:127;;;;2080:86;2049:127;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:165;;;;2194:7;:42;;;;;2234:2;2217:6;:13;:19;;2194:42;:145;;;;-1:-1:-1;2252:29:46;;-1:-1:-1;;;2293:45:46;2252:29;;;;;;;;;;;;:::i;:::-;:87;;1852:495;-1:-1:-1;;;;;;1852:495:46:o;816:153:47:-;878:7;951:11;961:1;952:5;;;951:11;:::i;:::-;941:21;;942:5;;;941:21;:::i;5031:1456:44:-;5119:7;;6043:66;6030:79;;6026:161;;;-1:-1:-1;6141:1:44;;-1:-1:-1;6145:30:44;6125:51;;6026:161;6298:24;;;6281:14;6298:24;;;;;;;;;46101:25:271;;;46174:4;46162:17;;46142:18;;;46135:45;;;;46196:18;;;46189:34;;;46239:18;;;46232:34;;;6298:24:44;;46073:19:271;;6298:24:44;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6298:24:44;;-1:-1:-1;;6298:24:44;;;-1:-1:-1;;;;;;;6336:20:44;;6332:101;;6388:1;6392:29;6372:50;;;;;;;6332:101;6451:6;-1:-1:-1;6459:20:44;;-1:-1:-1;5031:1456:44;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:131:271;-1:-1:-1;;;;;271:31:271;;261:42;;251:70;;317:1;314;307:12;332:134;400:20;;429:31;400:20;429:31;:::i;471:771::-;566:6;574;582;590;598;651:3;639:9;630:7;626:23;622:33;619:53;;;668:1;665;658:12;619:53;707:9;694:23;726:31;751:5;726:31;:::i;:::-;776:5;-1:-1:-1;833:2:271;818:18;;805:32;846:33;805:32;846:33;:::i;:::-;898:7;-1:-1:-1;957:2:271;942:18;;929:32;970:33;929:32;970:33;:::i;:::-;471:771;;;;-1:-1:-1;1022:7:271;;1102:2;1087:18;;1074:32;;-1:-1:-1;1205:3:271;1190:19;1177:33;;471:771;-1:-1:-1;;471:771:271:o;1247:398::-;1341:8;1351:6;1405:3;1398:4;1390:6;1386:17;1382:27;1372:55;;1423:1;1420;1413:12;1372:55;-1:-1:-1;1446:20:271;;-1:-1:-1;;;;;1478:30:271;;1475:50;;;1521:1;1518;1511:12;1475:50;1558:4;1550:6;1546:17;1534:29;;1618:3;1611:4;1601:6;1598:1;1594:14;1586:6;1582:27;1578:38;1575:47;1572:67;;;1635:1;1632;1625:12;1650:511;1779:6;1787;1840:2;1828:9;1819:7;1815:23;1811:32;1808:52;;;1856:1;1853;1846:12;1808:52;1896:9;1883:23;-1:-1:-1;;;;;1921:6:271;1918:30;1915:50;;;1961:1;1958;1951:12;1915:50;2000:101;2093:7;2084:6;2073:9;2069:22;2000:101;:::i;:::-;2120:8;;1974:127;;-1:-1:-1;1650:511:271;-1:-1:-1;;;;1650:511:271:o;2166:611::-;2356:2;2368:21;;;2438:13;;2341:18;;;2460:22;;;2308:4;;2539:15;;;2513:2;2498:18;;;2308:4;2582:169;2596:6;2593:1;2590:13;2582:169;;;2657:13;;2645:26;;2700:2;2726:15;;;;2691:12;;;;2618:1;2611:9;2582:169;;2782:226;2841:6;2894:2;2882:9;2873:7;2869:23;2865:32;2862:52;;;2910:1;2907;2900:12;2862:52;-1:-1:-1;2955:23:271;;2782:226;-1:-1:-1;2782:226:271:o;3013:127::-;3074:10;3069:3;3065:20;3062:1;3055:31;3105:4;3102:1;3095:15;3129:4;3126:1;3119:15;3145:253;3217:2;3211:9;3259:4;3247:17;;-1:-1:-1;;;;;3279:34:271;;3315:22;;;3276:62;3273:88;;;3341:18;;:::i;:::-;3377:2;3370:22;3145:253;:::o;3403:257::-;3475:4;3469:11;;;3507:17;;-1:-1:-1;;;;;3539:34:271;;3575:22;;;3536:62;3533:88;;;3601:18;;:::i;3665:275::-;3736:2;3730:9;3801:2;3782:13;;-1:-1:-1;;3778:27:271;3766:40;;-1:-1:-1;;;;;3821:34:271;;3857:22;;;3818:62;3815:88;;;3883:18;;:::i;:::-;3919:2;3912:22;3665:275;;-1:-1:-1;3665:275:271:o;3945:194::-;4016:4;-1:-1:-1;;;;;4041:6:271;4038:30;4035:56;;;4071:18;;:::i;:::-;-1:-1:-1;4116:1:271;4112:14;4128:4;4108:25;;3945:194::o;4144:766::-;4209:5;4262:3;4255:4;4247:6;4243:17;4239:27;4229:55;;4280:1;4277;4270:12;4229:55;4320:6;4307:20;4347:75;4363:58;4414:6;4363:58;:::i;:::-;4347:75;:::i;:::-;4446:3;4470:6;4465:3;4458:19;4502:4;4497:3;4493:14;4486:21;;4563:4;4553:6;4550:1;4546:14;4538:6;4534:27;4530:38;4516:52;;4591:3;4583:6;4580:15;4577:35;;;4608:1;4605;4598:12;4577:35;4644:4;4636:6;4632:17;4658:221;4674:6;4669:3;4666:15;4658:221;;;4756:3;4743:17;4773:31;4798:5;4773:31;:::i;:::-;4817:18;;4864:4;4855:14;;;;4691;4658:221;;;-1:-1:-1;4897:7:271;4144:766;-1:-1:-1;;;;;4144:766:271:o;4915:734::-;4969:5;5022:3;5015:4;5007:6;5003:17;4999:27;4989:55;;5040:1;5037;5030:12;4989:55;5080:6;5067:20;5107:75;5123:58;5174:6;5123:58;:::i;5107:75::-;5206:3;5230:6;5225:3;5218:19;5262:4;5257:3;5253:14;5246:21;;5323:4;5313:6;5310:1;5306:14;5298:6;5294:27;5290:38;5276:52;;5351:3;5343:6;5340:15;5337:35;;;5368:1;5365;5358:12;5337:35;5404:4;5396:6;5392:17;5418:200;5434:6;5429:3;5426:15;5418:200;;;5526:17;;5556:18;;5603:4;5594:14;;;;5451;5418:200;;5654:755;5800:6;5808;5816;5869:2;5857:9;5848:7;5844:23;5840:32;5837:52;;;5885:1;5882;5875:12;5837:52;5924:9;5911:23;5943:31;5968:5;5943:31;:::i;:::-;5993:5;-1:-1:-1;6049:2:271;6034:18;;6021:32;-1:-1:-1;;;;;6065:30:271;;6062:50;;;6108:1;6105;6098:12;6062:50;6131:72;6195:7;6186:6;6175:9;6171:22;6131:72;:::i;:::-;6121:82;;;6256:2;6245:9;6241:18;6228:32;-1:-1:-1;;;;;6275:8:271;6272:32;6269:52;;;6317:1;6314;6307:12;6269:52;6340:63;6395:7;6384:8;6373:9;6369:24;6340:63;:::i;:::-;6330:73;;;5654:755;;;;;:::o;6414:420::-;6467:3;6505:5;6499:12;6532:6;6527:3;6520:19;6564:4;6559:3;6555:14;6548:21;;6603:4;6596:5;6592:16;6626:1;6636:173;6650:6;6647:1;6644:13;6636:173;;;6711:13;;6699:26;;6754:4;6745:14;;;;6782:17;;;;6672:1;6665:9;6636:173;;;-1:-1:-1;6825:3:271;;6414:420;-1:-1:-1;;;;6414:420:271:o;6839:261::-;7018:2;7007:9;7000:21;6981:4;7038:56;7090:2;7079:9;7075:18;7067:6;7038:56;:::i;7105:163::-;7172:20;;7232:10;7221:22;;7211:33;;7201:61;;7258:1;7255;7248:12;7273:348;7325:8;7335:6;7389:3;7382:4;7374:6;7370:17;7366:27;7356:55;;7407:1;7404;7397:12;7356:55;-1:-1:-1;7430:20:271;;-1:-1:-1;;;;;7462:30:271;;7459:50;;;7505:1;7502;7495:12;7459:50;7542:4;7534:6;7530:17;7518:29;;7594:3;7587:4;7578:6;7570;7566:19;7562:30;7559:39;7556:59;;;7611:1;7608;7601:12;7626:618;7714:6;7722;7730;7738;7791:2;7779:9;7770:7;7766:23;7762:32;7759:52;;;7807:1;7804;7797:12;7759:52;7846:9;7833:23;7865:31;7890:5;7865:31;:::i;:::-;7915:5;-1:-1:-1;7939:37:271;7972:2;7957:18;;7939:37;:::i;:::-;7929:47;;8027:2;8016:9;8012:18;7999:32;-1:-1:-1;;;;;8046:6:271;8043:30;8040:50;;;8086:1;8083;8076:12;8040:50;8125:59;8176:7;8167:6;8156:9;8152:22;8125:59;:::i;:::-;7626:618;;;;-1:-1:-1;8203:8:271;-1:-1:-1;;;;7626:618:271:o;8483:648::-;8588:6;8596;8604;8612;8665:3;8653:9;8644:7;8640:23;8636:33;8633:53;;;8682:1;8679;8672:12;8633:53;8721:9;8708:23;8740:31;8765:5;8740:31;:::i;:::-;8790:5;-1:-1:-1;8847:2:271;8832:18;;8819:32;8860:33;8819:32;8860:33;:::i;:::-;8483:648;;8912:7;;-1:-1:-1;;;;8992:2:271;8977:18;;8964:32;;9095:2;9080:18;9067:32;;8483:648::o;9136:247::-;9195:6;9248:2;9236:9;9227:7;9223:23;9219:32;9216:52;;;9264:1;9261;9254:12;9216:52;9303:9;9290:23;9322:31;9347:5;9322:31;:::i;10261:388::-;10329:6;10337;10390:2;10378:9;10369:7;10365:23;10361:32;10358:52;;;10406:1;10403;10396:12;10358:52;10445:9;10432:23;10464:31;10489:5;10464:31;:::i;:::-;10514:5;-1:-1:-1;10571:2:271;10556:18;;10543:32;10584:33;10543:32;10584:33;:::i;:::-;10636:7;10626:17;;;10261:388;;;;;:::o;10654:289::-;10696:3;10734:5;10728:12;10761:6;10756:3;10749:19;10817:6;10810:4;10803:5;10799:16;10792:4;10787:3;10783:14;10777:47;10869:1;10862:4;10853:6;10848:3;10844:16;10840:27;10833:38;10932:4;10925:2;10921:7;10916:2;10908:6;10904:15;10900:29;10895:3;10891:39;10887:50;10880:57;;;10654:289;;;;:::o;10948:220::-;11097:2;11086:9;11079:21;11060:4;11117:45;11158:2;11147:9;11143:18;11135:6;11117:45;:::i;11173:986::-;11230:5;11278:4;11266:9;11261:3;11257:19;11253:30;11250:50;;;11296:1;11293;11286:12;11250:50;11318:22;;:::i;:::-;11309:31;;11363:29;11382:9;11363:29;:::i;:::-;11356:5;11349:44;11425:38;11459:2;11448:9;11444:18;11425:38;:::i;:::-;11420:2;11413:5;11409:14;11402:62;11496:38;11530:2;11519:9;11515:18;11496:38;:::i;:::-;11491:2;11480:14;;11473:62;11608:2;11593:18;;;11580:32;11628:14;;;11621:31;11685:38;11718:3;11703:19;;11685:38;:::i;:::-;11679:3;11672:5;11668:15;11661:63;11775:3;11764:9;11760:19;11747:33;-1:-1:-1;;;;;11795:6:271;11792:30;11789:50;;;11835:1;11832;11825:12;11789:50;11872:68;11936:3;11927:6;11916:9;11912:22;11872:68;:::i;:::-;11866:3;11859:5;11855:15;11848:93;;11994:3;11983:9;11979:19;11966:33;-1:-1:-1;;;;;12014:8:271;12011:32;12008:52;;;12056:1;12053;12046:12;12008:52;12093:59;12148:3;12137:8;12126:9;12122:24;12093:59;:::i;:::-;12087:3;12080:5;12076:15;12069:84;;11173:986;;;;:::o;12164:352::-;12252:6;12305:2;12293:9;12284:7;12280:23;12276:32;12273:52;;;12321:1;12318;12311:12;12273:52;12361:9;12348:23;-1:-1:-1;;;;;12386:6:271;12383:30;12380:50;;;12426:1;12423;12416:12;12380:50;12449:61;12502:7;12493:6;12482:9;12478:22;12449:61;:::i;12521:269::-;12578:6;12631:2;12619:9;12610:7;12606:23;12602:32;12599:52;;;12647:1;12644;12637:12;12599:52;12686:9;12673:23;12736:4;12729:5;12725:16;12718:5;12715:27;12705:55;;12756:1;12753;12746:12;13307:551;13371:3;13409:5;13403:12;13436:6;13431:3;13424:19;13468:4;13463:3;13459:14;13452:21;;13507:4;13500:5;13496:16;13530:1;13540:293;13554:6;13551:1;13548:13;13540:293;;;13613:13;;-1:-1:-1;;;;;13683:28:271;13671:41;;13748:4;13739:14;;;;13806:17;;;;13708:1;13569:9;13540:293;;13863:806;13950:12;;-1:-1:-1;;;;;13946:38:271;;;13934:51;;14038:4;14027:16;;;14021:23;14017:49;;14001:14;;;13994:73;14120:4;14109:16;;;14103:23;14099:49;;;14083:14;;;14076:73;14198:4;14187:16;;;14181:23;14165:14;;;14158:47;14251:4;14240:16;;;14234:23;-1:-1:-1;;14266:47:271;;14298:14;;14234:23;13284:10;13273:22;13261:35;;13208:94;14266:47;;14361:4;14354:5;14350:16;14344:23;14399:4;14392;14387:3;14383:14;14376:28;14425:71;14490:4;14485:3;14481:14;14465;14425:71;:::i;:::-;14413:83;;14544:4;14537:5;14533:16;14527:23;14592:3;14586:4;14582:14;14575:4;14570:3;14566:14;14559:38;14613:50;14658:4;14642:14;14613:50;:::i;14674:473::-;14939:2;14928:9;14921:21;14902:4;14965:56;15017:2;15006:9;15002:18;14994:6;14965:56;:::i;:::-;15069:9;15061:6;15057:22;15052:2;15041:9;15037:18;15030:50;15097:44;15134:6;15126;15097:44;:::i;15152:601::-;15215:3;15246;15278:5;15272:12;15305:6;15300:3;15293:19;15337:4;15332:3;15328:14;15321:21;;15395:4;15385:6;15382:1;15378:14;15371:5;15367:26;15363:37;15434:4;15427:5;15423:16;15457:1;15467:260;15481:6;15478:1;15475:13;15467:260;;;15568:2;15564:7;15556:5;15550:4;15546:16;15542:30;15537:3;15530:43;15594:49;15638:4;15629:6;15623:13;15594:49;:::i;:::-;15678:4;15703:14;;;;15586:57;;-1:-1:-1;15666:17:271;;;;;15503:1;15496:9;15467:260;;15758:1074;16086:4;16134:2;16123:9;16119:18;16164:2;16153:9;16146:21;16187:6;16222;16216:13;16253:6;16245;16238:22;16291:2;16280:9;16276:18;16269:25;;16353:2;16343:6;16340:1;16336:14;16325:9;16321:30;16317:39;16303:53;;16391:4;16383:6;16379:17;16414:1;16424:270;16438:6;16435:1;16432:13;16424:270;;;16531:2;16527:7;16515:9;16507:6;16503:22;16499:36;16494:3;16487:49;16559:51;16603:6;16594;16588:13;16559:51;:::i;:::-;16549:61;-1:-1:-1;16645:4:271;16670:14;;;;16633:17;;;;;16460:1;16453:9;16424:270;;;16428:3;;;;16744:9;16736:6;16732:22;16725:4;16714:9;16710:20;16703:52;16772:54;16819:6;16811;16772:54;:::i;16837:129::-;-1:-1:-1;;;;;16915:5:271;16911:30;16904:5;16901:41;16891:69;;16956:1;16953;16946:12;16971:686;17074:6;17082;17090;17098;17151:3;17139:9;17130:7;17126:23;17122:33;17119:53;;;17168:1;17165;17158:12;17119:53;17207:9;17194:23;17226:31;17251:5;17226:31;:::i;:::-;17276:5;-1:-1:-1;17333:2:271;17318:18;;17305:32;17346:33;17305:32;17346:33;:::i;:::-;17398:7;-1:-1:-1;17457:2:271;17442:18;;17429:32;17470;17429;17470;:::i;:::-;17521:7;-1:-1:-1;17580:2:271;17565:18;;17552:32;17593;17552;17593;:::i;:::-;16971:686;;;;-1:-1:-1;16971:686:271;;-1:-1:-1;;16971:686:271:o;17662:506::-;17738:6;17746;17754;17807:2;17795:9;17786:7;17782:23;17778:32;17775:52;;;17823:1;17820;17813:12;17775:52;17862:9;17849:23;17881:31;17906:5;17881:31;:::i;:::-;17931:5;-1:-1:-1;18009:2:271;17994:18;;17981:32;;-1:-1:-1;18091:2:271;18076:18;;18063:32;18104;18063;18104;:::i;:::-;18155:7;18145:17;;;17662:506;;;;;:::o;18173:495::-;18449:2;18438:9;18431:21;18412:4;18475:67;18538:2;18527:9;18523:18;18515:6;18475:67;:::i;19085:546::-;19165:6;19173;19181;19234:2;19222:9;19213:7;19209:23;19205:32;19202:52;;;19250:1;19247;19240:12;19202:52;19289:9;19276:23;19308:31;19333:5;19308:31;:::i;:::-;19358:5;-1:-1:-1;19414:2:271;19399:18;;19386:32;-1:-1:-1;;;;;19430:30:271;;19427:50;;;19473:1;19470;19463:12;19427:50;19512:59;19563:7;19554:6;19543:9;19539:22;19512:59;:::i;:::-;19085:546;;19590:8;;-1:-1:-1;19486:85:271;;-1:-1:-1;;;;19085:546:271:o;19869:513::-;19981:6;19989;20042:2;20030:9;20021:7;20017:23;20013:32;20010:52;;;20058:1;20055;20048:12;20010:52;20097:9;20084:23;20116:31;20141:5;20116:31;:::i;:::-;20166:5;-1:-1:-1;20222:2:271;20207:18;;20194:32;-1:-1:-1;;;;;20238:30:271;;20235:50;;;20281:1;20278;20271:12;20235:50;20304:72;20368:7;20359:6;20348:9;20344:22;20304:72;:::i;:::-;20294:82;;;19869:513;;;;;:::o;20614:1263::-;20843:6;20851;20859;20867;20875;20883;20936:2;20924:9;20915:7;20911:23;20907:32;20904:52;;;20952:1;20949;20942:12;20904:52;20992:9;20979:23;-1:-1:-1;;;;;21017:6:271;21014:30;21011:50;;;21057:1;21054;21047:12;21011:50;21096:101;21189:7;21180:6;21169:9;21165:22;21096:101;:::i;:::-;21216:8;;-1:-1:-1;21070:127:271;-1:-1:-1;;21304:2:271;21289:18;;21276:32;-1:-1:-1;;;;;21320:32:271;;21317:52;;;21365:1;21362;21355:12;21317:52;21404:103;21499:7;21488:8;21477:9;21473:24;21404:103;:::i;:::-;21526:8;;-1:-1:-1;21378:129:271;-1:-1:-1;;21614:2:271;21599:18;;21586:32;-1:-1:-1;;;;;21630:32:271;;21627:52;;;21675:1;21672;21665:12;21627:52;21714:103;21809:7;21798:8;21787:9;21783:24;21714:103;:::i;:::-;20614:1263;;;;-1:-1:-1;20614:1263:271;;-1:-1:-1;20614:1263:271;;21836:8;;20614:1263;-1:-1:-1;;;20614:1263:271:o;21882:269::-;22069:2;22058:9;22051:21;22032:4;22089:56;22141:2;22130:9;22126:18;22118:6;22089:56;:::i;22156:1436::-;22271:6;22279;22287;22340:2;22328:9;22319:7;22315:23;22311:32;22308:52;;;22356:1;22353;22346:12;22308:52;22395:9;22382:23;22414:31;22439:5;22414:31;:::i;:::-;22464:5;-1:-1:-1;22520:2:271;22505:18;;22492:32;-1:-1:-1;;;;;22536:30:271;;22533:50;;;22579:1;22576;22569:12;22533:50;22602:22;;22658:4;22640:16;;;22636:27;22633:47;;;22676:1;22673;22666:12;22633:47;22704:22;;:::i;:::-;22764:2;22751:16;-1:-1:-1;;;;;22782:8:271;22779:32;22776:52;;;22824:1;22821;22814:12;22776:52;22847:17;;22895:4;22887:13;;22883:27;-1:-1:-1;22873:55:271;;22924:1;22921;22914:12;22873:55;22964:2;22951:16;-1:-1:-1;;;;;22982:6:271;22979:30;22976:56;;;23012:18;;:::i;:::-;23054:57;23101:2;23078:17;;-1:-1:-1;;23074:31:271;23107:2;23070:40;23054:57;:::i;:::-;23134:6;23127:5;23120:21;23182:7;23177:2;23168:6;23164:2;23160:15;23156:24;23153:37;23150:57;;;23203:1;23200;23193:12;23150:57;23258:6;23253:2;23249;23245:11;23240:2;23233:5;23229:14;23216:49;23310:1;23305:2;23285:18;;;23281:27;;23274:38;23321:22;;23401:11;;;23388:25;23429:16;;;23422:33;;;;22156:1436;;23321:22;;-1:-1:-1;;;;23554:4:271;23539:20;;;;23526:34;;22156:1436::o;23597:367::-;23665:6;23673;23726:2;23714:9;23705:7;23701:23;23697:32;23694:52;;;23742:1;23739;23732:12;23694:52;23781:9;23768:23;23800:31;23825:5;23800:31;:::i;:::-;23850:5;23928:2;23913:18;;;;23900:32;;-1:-1:-1;;;23597:367:271:o;24166:465::-;24423:2;24412:9;24405:21;24386:4;24449:56;24501:2;24490:9;24486:18;24478:6;24449:56;:::i;25244:118::-;25330:5;25323:13;25316:21;25309:5;25306:32;25296:60;;25352:1;25349;25342:12;25367:898;25515:6;25523;25531;25539;25592:2;25580:9;25571:7;25567:23;25563:32;25560:52;;;25608:1;25605;25598:12;25560:52;25648:9;25635:23;-1:-1:-1;;;;;25673:6:271;25670:30;25667:50;;;25713:1;25710;25703:12;25667:50;25736:22;;25792:3;25774:16;;;25770:26;25767:46;;;25809:1;25806;25799:12;25767:46;25832:2;-1:-1:-1;25887:2:271;25872:18;;25859:32;-1:-1:-1;;;;;25903:32:271;;25900:52;;;25948:1;25945;25938:12;25900:52;25987:103;26082:7;26071:8;26060:9;26056:24;25987:103;:::i;:::-;26109:8;;-1:-1:-1;25961:129:271;-1:-1:-1;;26194:2:271;26179:18;;26166:32;26207:28;26166:32;26207:28;:::i;26270:1256::-;26407:6;26415;26468:2;26456:9;26447:7;26443:23;26439:32;26436:52;;;26484:1;26481;26474:12;26436:52;26524:9;26511:23;-1:-1:-1;;;;;26549:6:271;26546:30;26543:50;;;26589:1;26586;26579:12;26543:50;26612:22;;26665:4;26657:13;;26653:27;-1:-1:-1;26643:55:271;;26694:1;26691;26684:12;26643:55;26734:2;26721:16;26757:75;26773:58;26824:6;26773:58;:::i;26757:75::-;26854:3;26878:6;26873:3;26866:19;26910:4;26905:3;26901:14;26894:21;;26967:4;26957:6;26954:1;26950:14;26946:2;26942:23;26938:34;26924:48;;26995:7;26987:6;26984:19;26981:39;;;27016:1;27013;27006:12;26981:39;27048:4;27044:2;27040:13;27029:24;;27062:221;27078:6;27073:3;27070:15;27062:221;;;27160:3;27147:17;27177:31;27202:5;27177:31;:::i;:::-;27221:18;;27268:4;27095:14;;;;27259;;;;27062:221;;;27302:5;-1:-1:-1;;;;27360:4:271;27345:20;;27332:34;-1:-1:-1;;;;;27378:32:271;;27375:52;;;27423:1;27420;27413:12;27531:321;27760:2;27749:9;27742:21;27723:4;27780:66;27842:2;27831:9;27827:18;27819:6;27780:66;:::i;28475:127::-;28536:10;28531:3;28527:20;28524:1;28517:31;28567:4;28564:1;28557:15;28591:4;28588:1;28581:15;28607:340;28716:4;28774:11;28761:25;28868:2;28864:7;28853:8;28837:14;28833:29;28829:43;28809:18;28805:68;28795:96;;28887:1;28884;28877:12;28795:96;28908:33;;;;;28607:340;-1:-1:-1;;28607:340:271:o;28952:545::-;29045:4;29051:6;29111:11;29098:25;29205:2;29201:7;29190:8;29174:14;29170:29;29166:43;29146:18;29142:68;29132:96;;29224:1;29221;29214:12;29132:96;29251:33;;29303:20;;;-1:-1:-1;;;;;;29335:30:271;;29332:50;;;29378:1;29375;29368:12;29332:50;29411:4;29399:17;;-1:-1:-1;29462:1:271;29458:14;;;29442;29438:35;29428:46;;29425:66;;;29487:1;29484;29477:12;30071:245;30138:6;30191:2;30179:9;30170:7;30166:23;30162:32;30159:52;;;30207:1;30204;30197:12;30159:52;30239:9;30233:16;30258:28;30280:5;30258:28;:::i;30615:390::-;30774:2;30763:9;30756:21;30813:6;30808:2;30797:9;30793:18;30786:34;30870:6;30862;30857:2;30846:9;30842:18;30829:48;30926:1;30897:22;;;30921:2;30893:31;;;30886:42;;;;30989:2;30968:15;;;-1:-1:-1;;30964:29:271;30949:45;30945:54;;30615:390;-1:-1:-1;30615:390:271:o;31334:249::-;31403:6;31456:2;31444:9;31435:7;31431:23;31427:32;31424:52;;;31472:1;31469;31462:12;31424:52;31504:9;31498:16;31523:30;31547:5;31523:30;:::i;31588:127::-;31649:10;31644:3;31640:20;31637:1;31630:31;31680:4;31677:1;31670:15;31704:4;31701:1;31694:15;31720:125;31785:9;;;31806:10;;;31803:36;;;31819:18;;:::i;32148:731::-;32213:5;32266:3;32259:4;32251:6;32247:17;32243:27;32233:55;;32284:1;32281;32274:12;32233:55;32317:6;32311:13;32344:75;32360:58;32411:6;32360:58;:::i;32344:75::-;32443:3;32467:6;32462:3;32455:19;32499:4;32494:3;32490:14;32483:21;;32560:4;32550:6;32547:1;32543:14;32535:6;32531:27;32527:38;32513:52;;32588:3;32580:6;32577:15;32574:35;;;32605:1;32602;32595:12;32574:35;32641:4;32633:6;32629:17;32655:193;32671:6;32666:3;32663:15;32655:193;;;32763:10;;32786:18;;32833:4;32824:14;;;;32688;32655:193;;32884:1239;33032:6;33040;33093:2;33081:9;33072:7;33068:23;33064:32;33061:52;;;33109:1;33106;33099:12;33061:52;33142:9;33136:16;-1:-1:-1;;;;;33167:6:271;33164:30;33161:50;;;33207:1;33204;33197:12;33161:50;33230:22;;33283:4;33275:13;;33271:27;-1:-1:-1;33261:55:271;;33312:1;33309;33302:12;33261:55;33345:2;33339:9;33368:75;33384:58;33435:6;33384:58;:::i;33368:75::-;33465:3;33489:6;33484:3;33477:19;33521:4;33516:3;33512:14;33505:21;;33578:4;33568:6;33565:1;33561:14;33557:2;33553:23;33549:34;33535:48;;33606:7;33598:6;33595:19;33592:39;;;33627:1;33624;33617:12;33592:39;33659:4;33655:2;33651:13;33640:24;;33673:214;33689:6;33684:3;33681:15;33673:214;;;33764:3;33758:10;33781:31;33806:5;33781:31;:::i;:::-;33825:18;;33872:4;33706:14;;;;33863;;;;33673:214;;;33906:5;33896:15;;;;;;33957:4;33946:9;33942:20;33936:27;-1:-1:-1;;;;;33978:8:271;33975:32;33972:52;;;34020:1;34017;34010:12;33972:52;34043:74;34109:7;34098:8;34087:9;34083:24;34043:74;:::i;34128:230::-;34198:6;34251:2;34239:9;34230:7;34226:23;34222:32;34219:52;;;34267:1;34264;34257:12;34219:52;-1:-1:-1;34312:16:271;;34128:230;-1:-1:-1;34128:230:271:o;34363:329::-;34460:4;34518:11;34505:25;34612:3;34608:8;34597;34581:14;34577:29;34573:44;34553:18;34549:69;34539:97;;34632:1;34629;34622:12;34697:204;34807:9;34844:51;34880:14;34873:5;34844:51;:::i;35472:241::-;35528:6;35581:2;35569:9;35560:7;35556:23;35552:32;35549:52;;;35597:1;35594;35587:12;35549:52;35636:9;35623:23;35655:28;35677:5;35655:28;:::i;37233:251::-;37303:6;37356:2;37344:9;37335:7;37331:23;37327:32;37324:52;;;37372:1;37369;37362:12;37324:52;37404:9;37398:16;37423:31;37448:5;37423:31;:::i;38246:388::-;-1:-1:-1;;;;;38472:32:271;;38454:51;;38541:2;38536;38521:18;;38514:30;;;-1:-1:-1;;38561:67:271;;38609:18;;38601:6;38561:67;:::i;38639:960::-;38733:6;38786:2;38774:9;38765:7;38761:23;38757:32;38754:52;;;38802:1;38799;38792:12;38754:52;38835:9;38829:16;-1:-1:-1;;;;;38860:6:271;38857:30;38854:50;;;38900:1;38897;38890:12;38854:50;38923:22;;38976:4;38968:13;;38964:27;-1:-1:-1;38954:55:271;;39005:1;39002;38995:12;38954:55;39038:2;39032:9;39061:75;39077:58;39128:6;39077:58;:::i;39061:75::-;39158:3;39182:6;39177:3;39170:19;39214:2;39209:3;39205:12;39198:19;;39269:2;39259:6;39256:1;39252:14;39248:2;39244:23;39240:32;39226:46;;39295:7;39287:6;39284:19;39281:39;;;39316:1;39313;39306:12;39281:39;39348:2;39344;39340:11;39329:22;;39360:209;39376:6;39371:3;39368:15;39360:209;;;39449:3;39443:10;39466:30;39490:5;39466:30;:::i;:::-;39509:18;;39556:2;39393:12;;;;39547;;;;39360:209;;39604:390;-1:-1:-1;;;;;39843:32:271;;;39825:51;;39912:32;;;;39907:2;39892:18;;39885:60;39976:2;39961:18;;39954:34;;;;39813:2;39798:18;;39604:390::o;39999:135::-;40038:3;40059:17;;;40056:43;;40079:18;;:::i;:::-;-1:-1:-1;40126:1:271;40115:13;;39999:135::o;40139:544::-;40432:6;40421:9;40414:25;40475:2;40470;40459:9;40455:18;40448:30;40395:4;40501:56;40553:2;40542:9;40538:18;40530:6;40501:56;:::i;:::-;40605:9;40597:6;40593:22;40588:2;40577:9;40573:18;40566:50;40633:44;40670:6;40662;40633:44;:::i;41187:167::-;41282:10;41255:18;;;41275;;;41251:43;;41306:19;;41303:45;;;41328:18;;:::i;41359:128::-;41426:9;;;41447:11;;;41444:37;;;41461:18;;:::i;41492:170::-;41589:10;41582:18;;;41562;;;41558:43;;41613:20;;41610:46;;;41636:18;;:::i;42805:343::-;42884:6;42892;42945:2;42933:9;42924:7;42920:23;42916:32;42913:52;;;42961:1;42958;42951:12;42913:52;-1:-1:-1;;43006:16:271;;43112:2;43097:18;;;43091:25;43006:16;;43091:25;;-1:-1:-1;42805:343:271:o;43439:474::-;-1:-1:-1;;;;;43691:32:271;;43673:51;;43760:2;43755;43740:18;;43733:30;;;-1:-1:-1;;43780:67:271;;43828:18;;43820:6;43780:67;:::i;:::-;43772:75;;43895:10;43887:6;43883:23;43878:2;43867:9;43863:18;43856:51;43439:474;;;;;;:::o;43918:127::-;43979:10;43974:3;43970:20;43967:1;43960:31;44010:4;44007:1;44000:15;44034:4;44031:1;44024:15;44050:127;44111:10;44106:3;44102:20;44099:1;44092:31;44142:4;44139:1;44132:15;44166:4;44163:1;44156:15;44182:194;-1:-1:-1;;;;;44280:26:271;;;44252;;;44248:59;;44319:28;;44316:54;;;44350:18;;:::i;44731:127::-;44792:10;44787:3;44783:20;44780:1;44773:31;44823:4;44820:1;44813:15;44847:4;44844:1;44837:15;44863:289;45038:6;45027:9;45020:25;45081:2;45076;45065:9;45061:18;45054:30;45001:4;45101:45;45142:2;45131:9;45127:18;45119:6;45101:45;:::i;45157:301::-;45286:3;45324:6;45318:13;45370:6;45363:4;45355:6;45351:17;45346:3;45340:37;45432:1;45396:16;;45421:13;;;-1:-1:-1;45396:16:271;45157:301;-1:-1:-1;45157:301:271:o;45652:217::-;45692:1;45718;45708:132;;45762:10;45757:3;45753:20;45750:1;45743:31;45797:4;45794:1;45787:15;45825:4;45822:1;45815:15;45708:132;-1:-1:-1;45854:9:271;;45652:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "78213": [
        {
          "start": 957,
          "length": 32
        },
        {
          "start": 3894,
          "length": 32
        },
        {
          "start": 5803,
          "length": 32
        },
        {
          "start": 14461,
          "length": 32
        }
      ],
      "78217": [
        {
          "start": 1159,
          "length": 32
        },
        {
          "start": 3944,
          "length": 32
        },
        {
          "start": 5347,
          "length": 32
        },
        {
          "start": 5975,
          "length": 32
        },
        {
          "start": 12300,
          "length": 32
        },
        {
          "start": 12781,
          "length": 32
        },
        {
          "start": 14499,
          "length": 32
        }
      ],
      "78221": [
        {
          "start": 1978,
          "length": 32
        },
        {
          "start": 3623,
          "length": 32
        },
        {
          "start": 4074,
          "length": 32
        },
        {
          "start": 4971,
          "length": 32
        },
        {
          "start": 5508,
          "length": 32
        },
        {
          "start": 6630,
          "length": 32
        },
        {
          "start": 10144,
          "length": 32
        },
        {
          "start": 17238,
          "length": 32
        }
      ],
      "78224": [
        {
          "start": 1898,
          "length": 32
        },
        {
          "start": 13851,
          "length": 32
        },
        {
          "start": 14173,
          "length": 32
        },
        {
          "start": 14912,
          "length": 32
        }
      ],
      "87433": [
        {
          "start": 1120,
          "length": 32
        },
        {
          "start": 13323,
          "length": 32
        }
      ],
      "87495": [
        {
          "start": 4370,
          "length": 32
        },
        {
          "start": 16684,
          "length": 32
        }
      ],
      "87686": [
        {
          "start": 1592,
          "length": 32
        },
        {
          "start": 2999,
          "length": 32
        },
        {
          "start": 4432,
          "length": 32
        },
        {
          "start": 9622,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DELEGATION_APPROVAL_TYPEHASH()": "04a4f979",
    "allocationManager()": "ca8aa7c7",
    "beaconChainETHStrategy()": "9104c319",
    "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": "0b9f487a",
    "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": "597b36da",
    "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)": "e4cc3f90",
    "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])": "9435bb43",
    "convertToDepositShares(address,address[],uint256[])": "25df922e",
    "cumulativeWithdrawalsQueued(address)": "a1788484",
    "decreaseDelegatedShares(address,uint256,uint64)": "60a0d1ce",
    "delegateTo(address,(bytes,uint256),bytes32)": "eea9064b",
    "delegatedTo(address)": "65da1264",
    "delegationApprover(address)": "3cdeb5e0",
    "delegationApproverSaltIsSpent(address,bytes32)": "bb45fef2",
    "depositScalingFactor(address,address)": "bfae3fd2",
    "domainSeparator()": "f698da25",
    "eigenPodManager()": "4665bcda",
    "getDepositedShares(address)": "66d5ba93",
    "getOperatorShares(address,address[])": "90041347",
    "getOperatorsShares(address[],address[])": "f0e0e676",
    "getQueuedWithdrawal(bytes32)": "5d975e88",
    "getQueuedWithdrawalRoots(address)": "fd8aa88d",
    "getQueuedWithdrawals(address)": "5dd68579",
    "getSlashableSharesInQueue(address,address)": "6e174448",
    "getWithdrawableShares(address,address[])": "c978f7ac",
    "increaseDelegatedShares(address,address,uint256,uint256)": "3c651cf2",
    "initialize(address,uint256)": "cd6dc687",
    "isDelegated(address)": "3e28391d",
    "isOperator(address)": "6d70f7ae",
    "minWithdrawalDelayBlocks()": "c448feb8",
    "modifyOperatorDetails(address,address)": "54b7c96c",
    "operatorShares(address,address)": "778e55f3",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "pendingWithdrawals(bytes32)": "b7f06ebe",
    "permissionController()": "4657e26a",
    "queueWithdrawals((address[],uint256[],address)[])": "0dd8dd02",
    "queuedWithdrawals(bytes32)": "99f5371b",
    "redelegate(address,(bytes,uint256),bytes32)": "a33a3433",
    "registerAsOperator(address,uint32,string)": "2aa6d888",
    "renounceOwnership()": "715018a6",
    "slashOperatorShares(address,address,uint64,uint64)": "601bb36f",
    "strategyManager()": "39b70e38",
    "transferOwnership(address)": "f2fde38b",
    "undelegate(address)": "da8be864",
    "unpause(uint256)": "fabc1cbc",
    "updateOperatorMetadataURI(address,string)": "78296ec5",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract IEigenPodManager\",\"name\":\"_eigenPodManager\",\"type\":\"address\"},{\"internalType\":\"contract IAllocationManager\",\"name\":\"_allocationManager\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_MIN_WITHDRAWAL_DELAY\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ActivelyDelegated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerCannotUndelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FullySlashed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSnapshotOrdering\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotActivelyDelegated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyAllocationManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyEigenPodManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyStrategyManagerOrEigenPodManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorsCannotUndelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaltSpent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalDelayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalNotQueued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawerNotCaller\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newDelegationApprover\",\"type\":\"address\"}],\"name\":\"DelegationApproverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDepositScalingFactor\",\"type\":\"uint256\"}],\"name\":\"DepositScalingFactorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"OperatorMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSlashedShares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"SlashingWithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManagerTypes.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"sharesToWithdraw\",\"type\":\"uint256[]\"}],\"name\":\"SlashingWithdrawalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerForceUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateDelegationApprovalDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawableShares\",\"type\":\"uint256[]\"}],\"name\":\"convertToDepositShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"cumulativeWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalQueued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"curDepositShares\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"beaconChainSlashingFactorDecrease\",\"type\":\"uint64\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtilsMixinTypes.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegationApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"delegationApproverSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"spent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"depositScalingFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDepositedShares\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorsShares\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"getQueuedWithdrawal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getQueuedWithdrawalRoots\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getQueuedWithdrawals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"shares\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getSlashableSharesInQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getWithdrawableShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"withdrawableShares\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"depositShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prevDepositShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedShares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newDelegationApprover\",\"type\":\"address\"}],\"name\":\"modifyOperatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"pending\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"depositShares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"__deprecated_withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationManagerTypes.QueuedWithdrawalParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"queueWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"queuedWithdrawals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManagerTypes.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtilsMixinTypes.SignatureWithExpiry\",\"name\":\"newOperatorApproverSig\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"redelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initDelegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"allocationDelay\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"prevMaxMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"newMaxMagnitude\",\"type\":\"uint64\"}],\"name\":\"slashOperatorShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateOperatorMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"errors\":{\"ActivelyDelegated()\":[{\"details\":\"Thrown when an account is actively delegated.\"}],\"CallerCannotUndelegate()\":[{\"details\":\"Thrown when caller cannot undelegate on behalf of a staker.\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"FullySlashed()\":[{\"details\":\"Thrown when an operator has been fully slashed(maxMagnitude is 0) for a strategy. or if the staker has had been natively slashed to the point of their beaconChainScalingFactor equalling 0.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InputArrayLengthZero()\":[{\"details\":\"Thrown when input arrays length is zero.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}],\"NotActivelyDelegated()\":[{\"details\":\"Thrown when an account is not actively delegated.\"}],\"OnlyAllocationManager()\":[{\"details\":\"Throw when msg.sender is not the AllocationManager\"}],\"OnlyEigenPodManager()\":[{\"details\":\"Thrown when msg.sender is not the EigenPodManager\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyStrategyManagerOrEigenPodManager()\":[{\"details\":\"Thrown when caller is neither the StrategyManager or EigenPodManager contract.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorNotRegistered()\":[{\"details\":\"Thrown when `operator` is not a registered operator.\"}],\"OperatorsCannotUndelegate()\":[{\"details\":\"Thrown when an operator attempts to undelegate.\"}],\"SaltSpent()\":[{\"details\":\"Thrown when attempting to spend a spent eip-712 salt.\"}],\"WithdrawalDelayNotElapsed()\":[{\"details\":\"Thrown when attempting to withdraw before delay has elapsed.\"}],\"WithdrawalNotQueued()\":[{\"details\":\"Thrown when attempting to execute an action that was not queued.\"}],\"WithdrawerNotCaller()\":[{\"details\":\"Thrown when withdrawer is not the current caller.\"}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OperatorMetadataURIUpdated(address,string)\":{\"details\":\"Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\"},\"SlashingWithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]),uint256[])\":{\"params\":{\"sharesToWithdraw\":\"Is an array of the expected shares that were queued for withdrawal corresponding to the strategies in the `withdrawal`.\",\"withdrawal\":\"Is the withdrawal itself.\",\"withdrawalRoot\":\"Is the hash of the `withdrawal`.\"}}},\"kind\":\"dev\",\"methods\":{\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"params\":{\"_delegationApprover\":\"the operator's `delegationApprover` who will be signing the delegationHash (in general)\",\"approverSalt\":\"A unique and single use value associated with the approver signature.\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account receiving delegated stake\",\"staker\":\"The account delegating their stake\"}},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)\":{\"params\":{\"receiveAsTokens\":\"If true, withdrawn shares will be converted to tokens and sent to the caller. If false, the caller receives shares that can be delegated to an operator. NOTE: if the caller receives shares and is currently delegated to an operator, the received shares are automatically delegated to the caller's current operator.\",\"tokens\":\"For each `withdrawal.strategies`, the underlying token of the strategy NOTE: if `receiveAsTokens` is false, the `tokens` array is unused and can be filled with default values. However, `tokens.length` MUST still be equal to `withdrawal.strategies.length`. NOTE: For the `beaconChainETHStrategy`, the corresponding `tokens` value is ignored (can be 0).\",\"withdrawal\":\"The withdrawal to complete\"}},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])\":{\"details\":\"See `completeQueuedWithdrawal` for relevant dev tags\",\"params\":{\"receiveAsTokens\":\"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\",\"tokens\":\"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\",\"withdrawals\":\"Array of Withdrawals to complete. See `completeQueuedWithdrawal` for the usage of a single Withdrawal.\"}},\"constructor\":{\"details\":\"Initializes the immutable addresses of the strategy manager, eigenpod manager, and allocation manager.\"},\"convertToDepositShares(address,address[],uint256[])\":{\"details\":\"will be a few wei off due to rounding errors\",\"params\":{\"staker\":\"the staker to convert shares for\",\"strategies\":\"the strategies to convert shares for\",\"withdrawableShares\":\"the shares to convert\"},\"returns\":{\"_0\":\"the deposit shares\"}},\"decreaseDelegatedShares(address,uint256,uint64)\":{\"details\":\"Note: `beaconChainSlashingFactorDecrease` are assumed to ALWAYS be < 1 WAD. These invariants are maintained in the EigenPodManager.\",\"params\":{\"beaconChainSlashingFactorDecrease\":\"the amount that the staker's beaconChainSlashingFactor has decreased by\",\"curDepositShares\":\"the current deposit shares held by the staker\",\"staker\":\"the staker whose operator's balance will be decreased\"}},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"details\":\"The signature/salt are used ONLY if the operator has configured a delegationApprover. If they have not, these params can be left empty.\",\"params\":{\"approverSalt\":\"(optional) A unique single use value tied to an individual signature.\",\"approverSignatureAndExpiry\":\"(optional) Verifies the operator approves of this delegation\",\"operator\":\"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\"}},\"domainSeparator()\":{\"details\":\"The domain separator is computed according to EIP-712 specification, using:      - The hardcoded name \\\"EigenLayer\\\"      - The contract's version string      - The current chain ID      - This contract's addressSee https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator.\",\"returns\":{\"_0\":\"The 32-byte domain separator hash used in EIP-712 structured data signing.\"}},\"getOperatorShares(address,address[])\":{\"params\":{\"operator\":\"the operator to get shares for\",\"strategies\":\"the strategies to get shares for\"}},\"getOperatorsShares(address[],address[])\":{\"params\":{\"operators\":\"the operators to get shares for\",\"strategies\":\"the strategies to get shares for\"}},\"getQueuedWithdrawal(bytes32)\":{\"details\":\"The shares are what a user would receive from completing a queued withdrawal, assuming all slashings are appliedWithdrawals queued before the slashing release cannot be queried with this method\",\"params\":{\"withdrawalRoot\":\"The hash identifying the queued withdrawal\"},\"returns\":{\"shares\":\"Array of shares corresponding to each strategy in the withdrawal\",\"withdrawal\":\"The withdrawal details\"}},\"getQueuedWithdrawals(address)\":{\"details\":\"The shares are what a user would receive from completing a queued withdrawal, assuming all slashings are applied.\",\"params\":{\"staker\":\"The address of the staker to query withdrawals for.\"},\"returns\":{\"shares\":\"2D array of shares, where each inner array corresponds to the strategies in the withdrawal.\",\"withdrawals\":\"Array of Withdrawal structs containing details about each queued withdrawal.\"}},\"getSlashableSharesInQueue(address,address)\":{\"params\":{\"operator\":\"the operator to get shares for\",\"strategy\":\"the strategy to get shares for\"},\"returns\":{\"_0\":\"the amount of shares that are slashable in the withdrawal queue for an operator and a strategy\"}},\"increaseDelegatedShares(address,address,uint256,uint256)\":{\"details\":\"Note that if the either the staker's current operator has been slashed 100% for `strategy`, OR the staker has been slashed 100% on the beacon chain such that the calculated slashing factor is 0, this method WILL REVERT.\",\"params\":{\"addedShares\":\"The number of deposit shares added by the staker\",\"prevDepositShares\":\"The number of deposit shares the staker had in the strategy prior to the increase\",\"staker\":\"The address whose deposit shares have increased\",\"strategy\":\"The strategy in which shares have been deposited\"}},\"initialize(address,uint256)\":{\"details\":\"Initializes the initial owner and paused status.\"},\"minWithdrawalDelayBlocks()\":{\"details\":\"Backwards-compatible interface to return the internal `MIN_WITHDRAWAL_DELAY_BLOCKS` valuePrevious value in storage was deprecated. See `__deprecated_minWithdrawalDelayBlocks`\"},\"modifyOperatorDetails(address,address)\":{\"details\":\"The caller must have previously registered as an operator in EigenLayer.\",\"params\":{\"newDelegationApprover\":\"is the new delegationApprover for the operator\",\"operator\":\"is the operator to update the delegationApprover for\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"queueWithdrawals((address[],uint256[],address)[])\":{\"details\":\"To view all the staker's strategies/deposit shares that can be queued for withdrawal, see `getDepositedShares`To view the current conversion between a staker's deposit shares and withdrawable shares, see `getWithdrawableShares`\"},\"queuedWithdrawals(bytes32)\":{\"params\":{\"withdrawalRoot\":\"The hash identifying the queued withdrawal.\"},\"returns\":{\"withdrawal\":\"The withdrawal details.\"}},\"redelegate(address,(bytes,uint256),bytes32)\":{\"details\":\"This method acts like a call to `undelegate`, then `delegateTo`NOTE: the following 2 params are ONLY checked if `newOperator` has a `delegationApprover`. If not, they can be left empty.\",\"params\":{\"approverSalt\":\"A unique single use value tied to the approver's signature\",\"newOperator\":\"the new operator that will be delegated all assets\",\"newOperatorApproverSig\":\"A signature from the operator's `delegationApprover`\"}},\"registerAsOperator(address,uint32,string)\":{\"details\":\"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \\\"delegated to themself\\\".This function will revert if the caller is already delegated to an operator.Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"allocationDelay\":\"The delay before allocations take effect.\",\"initDelegationApprover\":\"is an address that, if set, must provide a signature when stakers delegate to an operator.\",\"metadataURI\":\"is a URI for the operator's metadata, i.e. a link providing more details on the operator.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"slashOperatorShares(address,address,uint64,uint64)\":{\"details\":\"Callable only by the AllocationManagerNote: Assumes `prevMaxMagnitude <= newMaxMagnitude`. This invariant is maintained in the AllocationManager.\",\"params\":{\"newMaxMagnitude\":\"the new maxMagnitude of the operator\",\"operator\":\"The operator to decrease shares for\",\"prevMaxMagnitude\":\"the previous maxMagnitude of the operator\",\"strategy\":\"The strategy to decrease shares for\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"undelegate(address)\":{\"details\":\"Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \\\"delegationApprover\\\"Reverts if the `staker` is not delegated to an operator\",\"params\":{\"staker\":\"The account to be undelegated\"},\"returns\":{\"withdrawalRoots\":\"The roots of the newly queued withdrawals, if a withdrawal was queued. Returns an empty array if none was queued.\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateOperatorMetadataURI(address,string)\":{\"details\":\"Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an operator\",\"operator\":\"The operator to update metadata for\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"v1.1.1\\\")\"}}},\"title\":\"DelegationManager\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidSignature()\":[{\"notice\":\"Thrown when a signature is invalid.\"}],\"SignatureExpired()\":[{\"notice\":\"Thrown when a signature has expired.\"}]},\"events\":{\"DelegationApproverUpdated(address,address)\":{\"notice\":\"Emitted when an operator updates their delegation approver\"},\"DepositScalingFactorUpdated(address,address,uint256)\":{\"notice\":\"Emitted when a staker's depositScalingFactor is updated\"},\"OperatorMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param operator indicates that they are updating their MetadataURI string\"},\"OperatorSharesDecreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesIncreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesSlashed(address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are slashed for a given strategy\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"SlashingWithdrawalCompleted(bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"SlashingWithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]),uint256[])\":{\"notice\":\"Emitted when a new withdrawal is queued.\"},\"StakerDelegated(address,address)\":{\"notice\":\"Emitted when @param staker delegates to @param operator.\"},\"StakerForceUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker is undelegated via a call not originating from the staker themself\"},\"StakerUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker undelegates from @param operator.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `DelegationApproval` struct used by the contract\"},\"allocationManager()\":{\"notice\":\"The AllocationManager contract for EigenLayer\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` function.\"},\"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Returns the keccak256 hash of `withdrawal`.\"},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)\":{\"notice\":\"Used to complete a queued withdrawal\"},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])\":{\"notice\":\"Used to complete multiple queued withdrawals\"},\"convertToDepositShares(address,address[],uint256[])\":{\"notice\":\"Converts shares for a set of strategies to deposit shares, likely in order to input into `queueWithdrawals`. This function will revert from a division by 0 error if any of the staker's strategies have a slashing factor of 0.\"},\"cumulativeWithdrawalsQueued(address)\":{\"notice\":\"Returns the total number of withdrawals that have been queued for a given `staker`.\"},\"decreaseDelegatedShares(address,uint256,uint64)\":{\"notice\":\"If the staker is delegated, decreases its operator's shares in response to a decrease in balance in the beaconChainETHStrategy\"},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates their stake to an operator.\"},\"delegatedTo(address)\":{\"notice\":\"Returns the `operator` a `staker` is delegated to, or address(0) if not delegated. Note: operators are delegated to themselves\"},\"delegationApprover(address)\":{\"notice\":\"Returns the delegationApprover account for an operator\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"notice\":\"Returns whether `delegationApprover` has already used the given `salt`.\"},\"depositScalingFactor(address,address)\":{\"notice\":\"Returns the scaling factor applied to a staker's deposits for a given strategy\"},\"domainSeparator()\":{\"notice\":\"Computes the EIP-712 domain separator used for signature validation.\"},\"eigenPodManager()\":{\"notice\":\"The EigenPodManager contract for EigenLayer\"},\"getDepositedShares(address)\":{\"notice\":\"Returns the number of shares in storage for a staker and all their strategies\"},\"getOperatorShares(address,address[])\":{\"notice\":\"Returns the shares that an operator has delegated to them in a set of strategies\"},\"getOperatorsShares(address[],address[])\":{\"notice\":\"Returns the shares that a set of operators have delegated to them in a set of strategies\"},\"getQueuedWithdrawal(bytes32)\":{\"notice\":\"Returns the Withdrawal and corresponding shares associated with a `withdrawalRoot`\"},\"getQueuedWithdrawalRoots(address)\":{\"notice\":\"Returns a list of queued withdrawal roots for the `staker`. NOTE that this only returns withdrawals queued AFTER the slashing release.\"},\"getQueuedWithdrawals(address)\":{\"notice\":\"Returns all queued withdrawals and their corresponding shares for a staker.\"},\"getSlashableSharesInQueue(address,address)\":{\"notice\":\"Returns amount of withdrawable shares from an operator for a strategy that is still in the queue and therefore slashable. Note that the *actual* slashable amount could be less than this value as this doesn't account for amounts that have already been slashed. This assumes that none of the shares have been slashed.\"},\"getWithdrawableShares(address,address[])\":{\"notice\":\"Given a staker and a set of strategies, return the shares they can queue for withdrawal and the corresponding depositShares. This value depends on which operator the staker is delegated to. The shares amount returned is the actual amount of Strategy shares the staker would receive (subject to each strategy's underlying shares to token ratio).\"},\"increaseDelegatedShares(address,address,uint256,uint256)\":{\"notice\":\"Called by a share manager when a staker's deposit share balance in a strategy increases. This method delegates any new shares to an operator (if applicable), and updates the staker's deposit scaling factor regardless.\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns true is an operator has previously registered for delegation.\"},\"minWithdrawalDelayBlocks()\":{\"notice\":\"Returns the minimum withdrawal delay in blocks to pass for withdrawals queued to be completable. Also applies to legacy withdrawals so any withdrawals not completed prior to the slashing upgrade will be subject to this longer delay.\"},\"modifyOperatorDetails(address,address)\":{\"notice\":\"Updates an operator's stored `delegationApprover`.\"},\"operatorShares(address,address)\":{\"notice\":\"Tracks the current balance of shares an `operator` is delegated according to each `strategy`. Updated by both the `StrategyManager` and `EigenPodManager` when a staker's delegatable balance changes, and by the `AllocationManager` when the `operator` is slashed.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"queueWithdrawals((address[],uint256[],address)[])\":{\"notice\":\"Allows a staker to queue a withdrawal of their deposit shares. The withdrawal can be completed after the MIN_WITHDRAWAL_DELAY_BLOCKS via either of the completeQueuedWithdrawal methods. While in the queue, these shares are removed from the staker's balance, as well as from their operator's delegated share balance (if applicable). Note that while in the queue, deposit shares are still subject to slashing. If any slashing has occurred, the shares received may be less than the queued deposit shares.\"},\"queuedWithdrawals(bytes32)\":{\"notice\":\"Returns the Withdrawal associated with a `withdrawalRoot`.\"},\"redelegate(address,(bytes,uint256),bytes32)\":{\"notice\":\"Undelegates the staker from their current operator, and redelegates to `newOperator` Queues a withdrawal for all of the staker's withdrawable shares. These shares will only be delegated to `newOperator` AFTER the withdrawal is completed.\"},\"registerAsOperator(address,uint32,string)\":{\"notice\":\"Registers the caller as an operator in EigenLayer.\"},\"slashOperatorShares(address,address,uint64,uint64)\":{\"notice\":\"Decreases the operators shares in storage after a slash and increases the burnable shares by calling into either the StrategyManager or EigenPodManager (if the strategy is beaconChainETH).\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"undelegate(address)\":{\"notice\":\"Undelegates the staker from their operator and queues a withdrawal for all of their shares\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateOperatorMetadataURI(address,string)\":{\"notice\":\"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for delegation in EigenLayer. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayer - allowing operators to specify parameters related to stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time) - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/DelegationManager.sol\":\"DelegationManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol\":{\"keccak256\":\"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d\",\"dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol\":{\"keccak256\":\"0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b\",\"dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/contracts/core/DelegationManager.sol\":{\"keccak256\":\"0x48e12f3bfc11c4f5a391aac1b9eeab802af4c03abb9d3512eb914d3e5b02943b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://754a8d6d35a66c69608e7d4658353aa47795dc2bcc354fedc89547dda2291c5b\",\"dweb:/ipfs/QmTr1FbKsnfFsdikGbco4fYfXrsmRdTh7FCoHCbBbWYSQQ\"]},\"src/contracts/core/DelegationManagerStorage.sol\":{\"keccak256\":\"0x70c3dbbf282eec1756f2da9f780ca9fa7db60c1cf317e57f873bdb20e42be1f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://69618b02f1e499d3c59614fb2560d445cfa563069738d884e3086681e0c24505\",\"dweb:/ipfs/QmRcD8rDpSG7pR9VmToZtkXnFfJemrwnGaMiaTkW6YVgfY\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x9f95d00bc0a22ec850e5cc6bcda9db2485f87b627232f9360571dbe87a0ee035\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://96d1e4f044b7337f83f970202b5ce5154970bb8745646b5c0e51cab58713c811\",\"dweb:/ipfs/QmX7mkfacMVKKXJB5GixQqtfYJ3jCkQzTRu4eUy4RjBNeM\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xa38c562664300642a88b365f4a69fba58e7f3caa6bdb03ba07a03d09e4688f7f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cc7ad91a20edab3859cf06d12dd3bc69e9404a3550875e7ce7586792adfa9655\",\"dweb:/ipfs/QmW2mTG2eSLqSaexWkhYNNpjzXqHP1r8U8jUjG8LsAnEMP\"]},\"src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xc3e222ffc9e17483032d043f3b7dfac1a0781cf94430a329809a52e47fd59f34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7cc43843b58846c37036088cfd872ed6357524d35cf823037bbb3e03e9394348\",\"dweb:/ipfs/QmUDyrccjBdi2zfwrGgsW1x3jGunGaZ8PYxwX1FpaEgBXq\"]},\"src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xce7dc91d7522cd3e44a28bb98a66f2e73de55c56b4fc422a50fb1d8d28e8dd5e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0debec76a3d52251eab59d0aa264a698c9bcb20414b2b1ea6f98817c041f434d\",\"dweb:/ipfs/QmYGg8voRKXiuY7ZVwfoXST9rkHSDkdr8xZnzgSSsF3uoz\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f\",\"dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0\",\"dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B\"]},\"src/contracts/interfaces/IShareManager.sol\":{\"keccak256\":\"0xa331e73e99af7eb38befbd7e1d1024d7d9b2c6cc2534313672d1f937ee9fdaaa\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://77fada64905d51779609546ba527834aff7d4478ff26df6f33abfe4a57ba028c\",\"dweb:/ipfs/QmerLh58EpALrjvbgdVAbXJz9uCHukBKyS1MeVsEPo1ytS\"]},\"src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23\",\"dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo\"]},\"src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x9989483e1c623b3d62b3fe28ca6255577552d85f8ab916fd35559bbad6898a2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://97084919a9b4c2e30cd1c529c7c21b6274d3ebf2e52e29e612709f6ea8a8ee8f\",\"dweb:/ipfs/QmbdvS23Qe3RLuzPmFndHzmRdnRWtPYiwEBLKwWdUeYkiF\"]},\"src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f\",\"dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX\"]},\"src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e\",\"dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6\",\"dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071\",\"dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG\"]},\"src/contracts/libraries/Snapshots.sol\":{\"keccak256\":\"0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b\",\"dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0x292852b1db8a23f1e168f5f2eaadc7ac5e0f58a0762a1032f7bd9715d4b7ba6c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://507c8111cd58911cd9f416383e143dd1c64eff0b8cf17370ab979079f0c4dd8f\",\"dweb:/ipfs/QmZspYZ7YoSuYeTWu3vMMqcpHreZJY8N5jBeHrCZya1gZq\"]},\"src/contracts/mixins/SignatureUtilsMixin.sol\":{\"keccak256\":\"0xf461e0e8c840a4714f9d3d30558292a401429a96d8c66449fc1ff7b0f6779cc9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e8aefb4cfacaad286f49066f87ea135ff7fa5eae8c05284329a92edd83b790d0\",\"dweb:/ipfs/QmZTVSoabhQgbDaLqukyaG8VqFwKQtGxhyWBLM4rh5FtBy\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd\",\"dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "_strategyManager",
              "type": "address"
            },
            {
              "internalType": "contract IEigenPodManager",
              "name": "_eigenPodManager",
              "type": "address"
            },
            {
              "internalType": "contract IAllocationManager",
              "name": "_allocationManager",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_MIN_WITHDRAWAL_DELAY",
              "type": "uint32"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ActivelyDelegated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerCannotUndelegate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FullySlashed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSnapshotOrdering"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotActivelyDelegated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyAllocationManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyEigenPodManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyStrategyManagerOrEigenPodManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorNotRegistered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorsCannotUndelegate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SaltSpent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureExpired"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawalDelayNotElapsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawalNotQueued"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawerNotCaller"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newDelegationApprover",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegationApproverUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDepositScalingFactor",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositScalingFactorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesDecreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalSlashedShares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesSlashed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlashingWithdrawalCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "sharesToWithdraw",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlashingWithdrawalQueued",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerDelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerForceUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DELEGATION_APPROVAL_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allocationManager",
          "outputs": [
            {
              "internalType": "contract IAllocationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateDelegationApprovalDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateWithdrawalRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "receiveAsTokens",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal[]",
              "name": "withdrawals",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[][]",
              "name": "tokens",
              "type": "address[][]"
            },
            {
              "internalType": "bool[]",
              "name": "receiveAsTokens",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "withdrawableShares",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToDepositShares",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeWithdrawalsQueued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalQueued",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "curDepositShares",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "beaconChainSlashingFactorDecrease",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtilsMixinTypes.SignatureWithExpiry",
              "name": "approverSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatedTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApprover",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApproverSaltIsSpent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "spent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "depositScalingFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenPodManager",
          "outputs": [
            {
              "internalType": "contract IEigenPodManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDepositedShares",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorShares",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsShares",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQueuedWithdrawal",
          "outputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQueuedWithdrawalRoots",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQueuedWithdrawals",
          "outputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal[]",
              "name": "withdrawals",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "uint256[][]",
              "name": "shares",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSlashableSharesInQueue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawableShares",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "withdrawableShares",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "depositShares",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "prevDepositShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minWithdrawalDelayBlocks",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newDelegationApprover",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyOperatorDetails"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingWithdrawals",
          "outputs": [
            {
              "internalType": "bool",
              "name": "pending",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManagerTypes.QueuedWithdrawalParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "depositShares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "__deprecated_withdrawer",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queueWithdrawals",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "queuedWithdrawals",
          "outputs": [
            {
              "internalType": "struct IDelegationManagerTypes.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "scaledShares",
                  "type": "uint256[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOperator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtilsMixinTypes.SignatureWithExpiry",
              "name": "newOperatorApproverSig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redelegate",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "withdrawalRoots",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initDelegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "allocationDelay",
              "type": "uint32"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "prevMaxMagnitude",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "newMaxMagnitude",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "slashOperatorShares"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "withdrawalRoots",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorMetadataURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "params": {
              "_delegationApprover": "the operator's `delegationApprover` who will be signing the delegationHash (in general)",
              "approverSalt": "A unique and single use value associated with the approver signature.",
              "expiry": "Time after which the approver's signature becomes invalid",
              "operator": "The account receiving delegated stake",
              "staker": "The account delegating their stake"
            }
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)": {
            "params": {
              "receiveAsTokens": "If true, withdrawn shares will be converted to tokens and sent to the caller. If false, the caller receives shares that can be delegated to an operator. NOTE: if the caller receives shares and is currently delegated to an operator, the received shares are automatically delegated to the caller's current operator.",
              "tokens": "For each `withdrawal.strategies`, the underlying token of the strategy NOTE: if `receiveAsTokens` is false, the `tokens` array is unused and can be filled with default values. However, `tokens.length` MUST still be equal to `withdrawal.strategies.length`. NOTE: For the `beaconChainETHStrategy`, the corresponding `tokens` value is ignored (can be 0).",
              "withdrawal": "The withdrawal to complete"
            }
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])": {
            "details": "See `completeQueuedWithdrawal` for relevant dev tags",
            "params": {
              "receiveAsTokens": "Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.",
              "tokens": "Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.",
              "withdrawals": "Array of Withdrawals to complete. See `completeQueuedWithdrawal` for the usage of a single Withdrawal."
            }
          },
          "constructor": {
            "details": "Initializes the immutable addresses of the strategy manager, eigenpod manager, and allocation manager."
          },
          "convertToDepositShares(address,address[],uint256[])": {
            "details": "will be a few wei off due to rounding errors",
            "params": {
              "staker": "the staker to convert shares for",
              "strategies": "the strategies to convert shares for",
              "withdrawableShares": "the shares to convert"
            },
            "returns": {
              "_0": "the deposit shares"
            }
          },
          "decreaseDelegatedShares(address,uint256,uint64)": {
            "details": "Note: `beaconChainSlashingFactorDecrease` are assumed to ALWAYS be < 1 WAD. These invariants are maintained in the EigenPodManager.",
            "params": {
              "beaconChainSlashingFactorDecrease": "the amount that the staker's beaconChainSlashingFactor has decreased by",
              "curDepositShares": "the current deposit shares held by the staker",
              "staker": "the staker whose operator's balance will be decreased"
            }
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "details": "The signature/salt are used ONLY if the operator has configured a delegationApprover. If they have not, these params can be left empty.",
            "params": {
              "approverSalt": "(optional) A unique single use value tied to an individual signature.",
              "approverSignatureAndExpiry": "(optional) Verifies the operator approves of this delegation",
              "operator": "The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer."
            }
          },
          "domainSeparator()": {
            "details": "The domain separator is computed according to EIP-712 specification, using:      - The hardcoded name \"EigenLayer\"      - The contract's version string      - The current chain ID      - This contract's addressSee https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator.",
            "returns": {
              "_0": "The 32-byte domain separator hash used in EIP-712 structured data signing."
            }
          },
          "getOperatorShares(address,address[])": {
            "params": {
              "operator": "the operator to get shares for",
              "strategies": "the strategies to get shares for"
            }
          },
          "getOperatorsShares(address[],address[])": {
            "params": {
              "operators": "the operators to get shares for",
              "strategies": "the strategies to get shares for"
            }
          },
          "getQueuedWithdrawal(bytes32)": {
            "details": "The shares are what a user would receive from completing a queued withdrawal, assuming all slashings are appliedWithdrawals queued before the slashing release cannot be queried with this method",
            "params": {
              "withdrawalRoot": "The hash identifying the queued withdrawal"
            },
            "returns": {
              "shares": "Array of shares corresponding to each strategy in the withdrawal",
              "withdrawal": "The withdrawal details"
            }
          },
          "getQueuedWithdrawals(address)": {
            "details": "The shares are what a user would receive from completing a queued withdrawal, assuming all slashings are applied.",
            "params": {
              "staker": "The address of the staker to query withdrawals for."
            },
            "returns": {
              "shares": "2D array of shares, where each inner array corresponds to the strategies in the withdrawal.",
              "withdrawals": "Array of Withdrawal structs containing details about each queued withdrawal."
            }
          },
          "getSlashableSharesInQueue(address,address)": {
            "params": {
              "operator": "the operator to get shares for",
              "strategy": "the strategy to get shares for"
            },
            "returns": {
              "_0": "the amount of shares that are slashable in the withdrawal queue for an operator and a strategy"
            }
          },
          "increaseDelegatedShares(address,address,uint256,uint256)": {
            "details": "Note that if the either the staker's current operator has been slashed 100% for `strategy`, OR the staker has been slashed 100% on the beacon chain such that the calculated slashing factor is 0, this method WILL REVERT.",
            "params": {
              "addedShares": "The number of deposit shares added by the staker",
              "prevDepositShares": "The number of deposit shares the staker had in the strategy prior to the increase",
              "staker": "The address whose deposit shares have increased",
              "strategy": "The strategy in which shares have been deposited"
            }
          },
          "initialize(address,uint256)": {
            "details": "Initializes the initial owner and paused status."
          },
          "minWithdrawalDelayBlocks()": {
            "details": "Backwards-compatible interface to return the internal `MIN_WITHDRAWAL_DELAY_BLOCKS` valuePrevious value in storage was deprecated. See `__deprecated_minWithdrawalDelayBlocks`"
          },
          "modifyOperatorDetails(address,address)": {
            "details": "The caller must have previously registered as an operator in EigenLayer.",
            "params": {
              "newDelegationApprover": "is the new delegationApprover for the operator",
              "operator": "is the operator to update the delegationApprover for"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "queueWithdrawals((address[],uint256[],address)[])": {
            "details": "To view all the staker's strategies/deposit shares that can be queued for withdrawal, see `getDepositedShares`To view the current conversion between a staker's deposit shares and withdrawable shares, see `getWithdrawableShares`"
          },
          "queuedWithdrawals(bytes32)": {
            "params": {
              "withdrawalRoot": "The hash identifying the queued withdrawal."
            },
            "returns": {
              "withdrawal": "The withdrawal details."
            }
          },
          "redelegate(address,(bytes,uint256),bytes32)": {
            "details": "This method acts like a call to `undelegate`, then `delegateTo`NOTE: the following 2 params are ONLY checked if `newOperator` has a `delegationApprover`. If not, they can be left empty.",
            "params": {
              "approverSalt": "A unique single use value tied to the approver's signature",
              "newOperator": "the new operator that will be delegated all assets",
              "newOperatorApproverSig": "A signature from the operator's `delegationApprover`"
            }
          },
          "registerAsOperator(address,uint32,string)": {
            "details": "Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".This function will revert if the caller is already delegated to an operator.Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event",
            "params": {
              "allocationDelay": "The delay before allocations take effect.",
              "initDelegationApprover": "is an address that, if set, must provide a signature when stakers delegate to an operator.",
              "metadataURI": "is a URI for the operator's metadata, i.e. a link providing more details on the operator."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "slashOperatorShares(address,address,uint64,uint64)": {
            "details": "Callable only by the AllocationManagerNote: Assumes `prevMaxMagnitude <= newMaxMagnitude`. This invariant is maintained in the AllocationManager.",
            "params": {
              "newMaxMagnitude": "the new maxMagnitude of the operator",
              "operator": "The operator to decrease shares for",
              "prevMaxMagnitude": "the previous maxMagnitude of the operator",
              "strategy": "The strategy to decrease shares for"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "undelegate(address)": {
            "details": "Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \"delegationApprover\"Reverts if the `staker` is not delegated to an operator",
            "params": {
              "staker": "The account to be undelegated"
            },
            "returns": {
              "withdrawalRoots": "The roots of the newly queued withdrawals, if a withdrawal was queued. Returns an empty array if none was queued."
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateOperatorMetadataURI(address,string)": {
            "details": "Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event",
            "params": {
              "metadataURI": "The URI for metadata associated with an operator",
              "operator": "The operator to update metadata for"
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"v1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DELEGATION_APPROVAL_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `DelegationApproval` struct used by the contract"
          },
          "allocationManager()": {
            "notice": "The AllocationManager contract for EigenLayer"
          },
          "beaconChainETHStrategy()": {
            "notice": "Canonical, virtual beacon chain ETH strategy"
          },
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "notice": "Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` function."
          },
          "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": {
            "notice": "Returns the keccak256 hash of `withdrawal`."
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],bool)": {
            "notice": "Used to complete a queued withdrawal"
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],bool[])": {
            "notice": "Used to complete multiple queued withdrawals"
          },
          "convertToDepositShares(address,address[],uint256[])": {
            "notice": "Converts shares for a set of strategies to deposit shares, likely in order to input into `queueWithdrawals`. This function will revert from a division by 0 error if any of the staker's strategies have a slashing factor of 0."
          },
          "cumulativeWithdrawalsQueued(address)": {
            "notice": "Returns the total number of withdrawals that have been queued for a given `staker`."
          },
          "decreaseDelegatedShares(address,uint256,uint64)": {
            "notice": "If the staker is delegated, decreases its operator's shares in response to a decrease in balance in the beaconChainETHStrategy"
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "notice": "Caller delegates their stake to an operator."
          },
          "delegatedTo(address)": {
            "notice": "Returns the `operator` a `staker` is delegated to, or address(0) if not delegated. Note: operators are delegated to themselves"
          },
          "delegationApprover(address)": {
            "notice": "Returns the delegationApprover account for an operator"
          },
          "delegationApproverSaltIsSpent(address,bytes32)": {
            "notice": "Returns whether `delegationApprover` has already used the given `salt`."
          },
          "depositScalingFactor(address,address)": {
            "notice": "Returns the scaling factor applied to a staker's deposits for a given strategy"
          },
          "domainSeparator()": {
            "notice": "Computes the EIP-712 domain separator used for signature validation."
          },
          "eigenPodManager()": {
            "notice": "The EigenPodManager contract for EigenLayer"
          },
          "getDepositedShares(address)": {
            "notice": "Returns the number of shares in storage for a staker and all their strategies"
          },
          "getOperatorShares(address,address[])": {
            "notice": "Returns the shares that an operator has delegated to them in a set of strategies"
          },
          "getOperatorsShares(address[],address[])": {
            "notice": "Returns the shares that a set of operators have delegated to them in a set of strategies"
          },
          "getQueuedWithdrawal(bytes32)": {
            "notice": "Returns the Withdrawal and corresponding shares associated with a `withdrawalRoot`"
          },
          "getQueuedWithdrawalRoots(address)": {
            "notice": "Returns a list of queued withdrawal roots for the `staker`. NOTE that this only returns withdrawals queued AFTER the slashing release."
          },
          "getQueuedWithdrawals(address)": {
            "notice": "Returns all queued withdrawals and their corresponding shares for a staker."
          },
          "getSlashableSharesInQueue(address,address)": {
            "notice": "Returns amount of withdrawable shares from an operator for a strategy that is still in the queue and therefore slashable. Note that the *actual* slashable amount could be less than this value as this doesn't account for amounts that have already been slashed. This assumes that none of the shares have been slashed."
          },
          "getWithdrawableShares(address,address[])": {
            "notice": "Given a staker and a set of strategies, return the shares they can queue for withdrawal and the corresponding depositShares. This value depends on which operator the staker is delegated to. The shares amount returned is the actual amount of Strategy shares the staker would receive (subject to each strategy's underlying shares to token ratio)."
          },
          "increaseDelegatedShares(address,address,uint256,uint256)": {
            "notice": "Called by a share manager when a staker's deposit share balance in a strategy increases. This method delegates any new shares to an operator (if applicable), and updates the staker's deposit scaling factor regardless."
          },
          "isDelegated(address)": {
            "notice": "Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
          },
          "isOperator(address)": {
            "notice": "Returns true is an operator has previously registered for delegation."
          },
          "minWithdrawalDelayBlocks()": {
            "notice": "Returns the minimum withdrawal delay in blocks to pass for withdrawals queued to be completable. Also applies to legacy withdrawals so any withdrawals not completed prior to the slashing upgrade will be subject to this longer delay."
          },
          "modifyOperatorDetails(address,address)": {
            "notice": "Updates an operator's stored `delegationApprover`."
          },
          "operatorShares(address,address)": {
            "notice": "Tracks the current balance of shares an `operator` is delegated according to each `strategy`. Updated by both the `StrategyManager` and `EigenPodManager` when a staker's delegatable balance changes, and by the `AllocationManager` when the `operator` is slashed."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "queueWithdrawals((address[],uint256[],address)[])": {
            "notice": "Allows a staker to queue a withdrawal of their deposit shares. The withdrawal can be completed after the MIN_WITHDRAWAL_DELAY_BLOCKS via either of the completeQueuedWithdrawal methods. While in the queue, these shares are removed from the staker's balance, as well as from their operator's delegated share balance (if applicable). Note that while in the queue, deposit shares are still subject to slashing. If any slashing has occurred, the shares received may be less than the queued deposit shares."
          },
          "queuedWithdrawals(bytes32)": {
            "notice": "Returns the Withdrawal associated with a `withdrawalRoot`."
          },
          "redelegate(address,(bytes,uint256),bytes32)": {
            "notice": "Undelegates the staker from their current operator, and redelegates to `newOperator` Queues a withdrawal for all of the staker's withdrawable shares. These shares will only be delegated to `newOperator` AFTER the withdrawal is completed."
          },
          "registerAsOperator(address,uint32,string)": {
            "notice": "Registers the caller as an operator in EigenLayer."
          },
          "slashOperatorShares(address,address,uint64,uint64)": {
            "notice": "Decreases the operators shares in storage after a slash and increases the burnable shares by calling into either the StrategyManager or EigenPodManager (if the strategy is beaconChainETH)."
          },
          "strategyManager()": {
            "notice": "The StrategyManager contract for EigenLayer"
          },
          "undelegate(address)": {
            "notice": "Undelegates the staker from their operator and queues a withdrawal for all of their shares"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateOperatorMetadataURI(address,string)": {
            "notice": "Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated."
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/DelegationManager.sol": "DelegationManager"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol": {
        "keccak256": "0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0",
        "urls": [
          "bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d",
          "dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol": {
        "keccak256": "0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df",
        "urls": [
          "bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b",
          "dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/contracts/core/DelegationManager.sol": {
        "keccak256": "0x48e12f3bfc11c4f5a391aac1b9eeab802af4c03abb9d3512eb914d3e5b02943b",
        "urls": [
          "bzz-raw://754a8d6d35a66c69608e7d4658353aa47795dc2bcc354fedc89547dda2291c5b",
          "dweb:/ipfs/QmTr1FbKsnfFsdikGbco4fYfXrsmRdTh7FCoHCbBbWYSQQ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/DelegationManagerStorage.sol": {
        "keccak256": "0x70c3dbbf282eec1756f2da9f780ca9fa7db60c1cf317e57f873bdb20e42be1f9",
        "urls": [
          "bzz-raw://69618b02f1e499d3c59614fb2560d445cfa563069738d884e3086681e0c24505",
          "dweb:/ipfs/QmRcD8rDpSG7pR9VmToZtkXnFfJemrwnGaMiaTkW6YVgfY"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d",
        "urls": [
          "bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc",
          "dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0x9f95d00bc0a22ec850e5cc6bcda9db2485f87b627232f9360571dbe87a0ee035",
        "urls": [
          "bzz-raw://96d1e4f044b7337f83f970202b5ce5154970bb8745646b5c0e51cab58713c811",
          "dweb:/ipfs/QmX7mkfacMVKKXJB5GixQqtfYJ3jCkQzTRu4eUy4RjBNeM"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xa38c562664300642a88b365f4a69fba58e7f3caa6bdb03ba07a03d09e4688f7f",
        "urls": [
          "bzz-raw://cc7ad91a20edab3859cf06d12dd3bc69e9404a3550875e7ce7586792adfa9655",
          "dweb:/ipfs/QmW2mTG2eSLqSaexWkhYNNpjzXqHP1r8U8jUjG8LsAnEMP"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xc3e222ffc9e17483032d043f3b7dfac1a0781cf94430a329809a52e47fd59f34",
        "urls": [
          "bzz-raw://7cc43843b58846c37036088cfd872ed6357524d35cf823037bbb3e03e9394348",
          "dweb:/ipfs/QmUDyrccjBdi2zfwrGgsW1x3jGunGaZ8PYxwX1FpaEgBXq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0xce7dc91d7522cd3e44a28bb98a66f2e73de55c56b4fc422a50fb1d8d28e8dd5e",
        "urls": [
          "bzz-raw://0debec76a3d52251eab59d0aa264a698c9bcb20414b2b1ea6f98817c041f434d",
          "dweb:/ipfs/QmYGg8voRKXiuY7ZVwfoXST9rkHSDkdr8xZnzgSSsF3uoz"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f",
        "urls": [
          "bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f",
          "dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009",
        "urls": [
          "bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0",
          "dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IShareManager.sol": {
        "keccak256": "0xa331e73e99af7eb38befbd7e1d1024d7d9b2c6cc2534313672d1f937ee9fdaaa",
        "urls": [
          "bzz-raw://77fada64905d51779609546ba527834aff7d4478ff26df6f33abfe4a57ba028c",
          "dweb:/ipfs/QmerLh58EpALrjvbgdVAbXJz9uCHukBKyS1MeVsEPo1ytS"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtilsMixin.sol": {
        "keccak256": "0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b",
        "urls": [
          "bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10",
          "dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75",
        "urls": [
          "bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23",
          "dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0x9989483e1c623b3d62b3fe28ca6255577552d85f8ab916fd35559bbad6898a2f",
        "urls": [
          "bzz-raw://97084919a9b4c2e30cd1c529c7c21b6274d3ebf2e52e29e612709f6ea8a8ee8f",
          "dweb:/ipfs/QmbdvS23Qe3RLuzPmFndHzmRdnRWtPYiwEBLKwWdUeYkiF"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b",
        "urls": [
          "bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f",
          "dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Endian.sol": {
        "keccak256": "0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136",
        "urls": [
          "bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e",
          "dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436",
        "urls": [
          "bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6",
          "dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04",
        "urls": [
          "bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071",
          "dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Snapshots.sol": {
        "keccak256": "0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6",
        "urls": [
          "bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b",
          "dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY"
        ],
        "license": "MIT"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0x292852b1db8a23f1e168f5f2eaadc7ac5e0f58a0762a1032f7bd9715d4b7ba6c",
        "urls": [
          "bzz-raw://507c8111cd58911cd9f416383e143dd1c64eff0b8cf17370ab979079f0c4dd8f",
          "dweb:/ipfs/QmZspYZ7YoSuYeTWu3vMMqcpHreZJY8N5jBeHrCZya1gZq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SignatureUtilsMixin.sol": {
        "keccak256": "0xf461e0e8c840a4714f9d3d30558292a401429a96d8c66449fc1ff7b0f6779cc9",
        "urls": [
          "bzz-raw://e8aefb4cfacaad286f49066f87ea135ff7fa5eae8c05284329a92edd83b790d0",
          "dweb:/ipfs/QmZTVSoabhQgbDaLqukyaG8VqFwKQtGxhyWBLM4rh5FtBy"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666",
        "urls": [
          "bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd",
          "dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 123
}