{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_delegationManager",
          "type": "address",
          "internalType": "contract IDelegationManager"
        },
        {
          "name": "_strategyManager",
          "type": "address",
          "internalType": "contract IStrategyManager"
        },
        {
          "name": "_allocationManager",
          "type": "address",
          "internalType": "contract IAllocationManager"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_CALCULATION_INTERVAL_SECONDS",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_MAX_REWARDS_DURATION",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_MAX_RETROACTIVE_LENGTH",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_MAX_FUTURE_LENGTH",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_GENESIS_REWARDS_TIMESTAMP",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "CALCULATION_INTERVAL_SECONDS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GENESIS_REWARDS_TIMESTAMP",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_FUTURE_LENGTH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_RETROACTIVE_LENGTH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_REWARDS_DURATION",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "activationDelay",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allocationManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAllocationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "beaconChainETHStrategy",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateEarnerLeafHash",
      "inputs": [
        {
          "name": "leaf",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
          "components": [
            {
              "name": "earner",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "earnerTokenRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "calculateTokenLeafHash",
      "inputs": [
        {
          "name": "leaf",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf",
          "components": [
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "cumulativeEarnings",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "checkClaim",
      "inputs": [
        {
          "name": "claim",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
          "components": [
            {
              "name": "rootIndex",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "earnerIndex",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "earnerTreeProof",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "earnerLeaf",
              "type": "tuple",
              "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
              "components": [
                {
                  "name": "earner",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "earnerTokenRoot",
                  "type": "bytes32",
                  "internalType": "bytes32"
                }
              ]
            },
            {
              "name": "tokenIndices",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "tokenTreeProofs",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "tokenLeaves",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "contract IERC20"
                },
                {
                  "name": "cumulativeEarnings",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimerFor",
      "inputs": [
        {
          "name": "earner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "claimer",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "createAVSRewardsSubmission",
      "inputs": [
        {
          "name": "rewardsSubmissions",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "duration",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createOperatorDirectedAVSRewardsSubmission",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorDirectedRewardsSubmissions",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "operatorRewards",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
              "components": [
                {
                  "name": "operator",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "duration",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createRewardsForAllEarners",
      "inputs": [
        {
          "name": "rewardsSubmissions",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "duration",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createRewardsForAllSubmission",
      "inputs": [
        {
          "name": "rewardsSubmissions",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "duration",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cumulativeClaimed",
      "inputs": [
        {
          "name": "earner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "outputs": [
        {
          "name": "totalClaimed",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "currRewardsCalculationEndTimestamp",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultOperatorSplitBips",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegationManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IDelegationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "disableRoot",
      "inputs": [
        {
          "name": "rootIndex",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getCurrentClaimableDistributionRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
          "components": [
            {
              "name": "root",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "activatedAt",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "disabled",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentDistributionRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
          "components": [
            {
              "name": "root",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "activatedAt",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "disabled",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDistributionRootAtIndex",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
          "components": [
            {
              "name": "root",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "activatedAt",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "disabled",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDistributionRootsLength",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorAVSSplit",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorPISplit",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRootIndexFromHash",
      "inputs": [
        {
          "name": "rootHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_rewardsUpdater",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_activationDelay",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_defaultSplitBips",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isAVSRewardsSubmissionHash",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "hash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "valid",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorDirectedAVSRewardsSubmissionHash",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRewardsForAllSubmitter",
      "inputs": [
        {
          "name": "submitter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "valid",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRewardsSubmissionForAllEarnersHash",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "hash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "valid",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRewardsSubmissionForAllHash",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "hash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "valid",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "processClaim",
      "inputs": [
        {
          "name": "claim",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
          "components": [
            {
              "name": "rootIndex",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "earnerIndex",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "earnerTreeProof",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "earnerLeaf",
              "type": "tuple",
              "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
              "components": [
                {
                  "name": "earner",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "earnerTokenRoot",
                  "type": "bytes32",
                  "internalType": "bytes32"
                }
              ]
            },
            {
              "name": "tokenIndices",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "tokenTreeProofs",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "tokenLeaves",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "contract IERC20"
                },
                {
                  "name": "cumulativeEarnings",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "processClaims",
      "inputs": [
        {
          "name": "claims",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim[]",
          "components": [
            {
              "name": "rootIndex",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "earnerIndex",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "earnerTreeProof",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "earnerLeaf",
              "type": "tuple",
              "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
              "components": [
                {
                  "name": "earner",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "earnerTokenRoot",
                  "type": "bytes32",
                  "internalType": "bytes32"
                }
              ]
            },
            {
              "name": "tokenIndices",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "tokenTreeProofs",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "tokenLeaves",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "contract IERC20"
                },
                {
                  "name": "cumulativeEarnings",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rewardsUpdater",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setActivationDelay",
      "inputs": [
        {
          "name": "_activationDelay",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setClaimerFor",
      "inputs": [
        {
          "name": "claimer",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setClaimerFor",
      "inputs": [
        {
          "name": "earner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "claimer",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDefaultOperatorSplit",
      "inputs": [
        {
          "name": "split",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOperatorAVSSplit",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "split",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOperatorPISplit",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "split",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRewardsForAllSubmitter",
      "inputs": [
        {
          "name": "_submitter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_newValue",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRewardsUpdater",
      "inputs": [
        {
          "name": "_rewardsUpdater",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "strategyManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategyManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "submissionNonce",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "nonce",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "submitRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "rewardsCalculationEndTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "AVSRewardsSubmissionCreated",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "submissionNonce",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "rewardsSubmissionHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "rewardsSubmission",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "duration",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ActivationDelaySet",
      "inputs": [
        {
          "name": "oldActivationDelay",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "newActivationDelay",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimerForSet",
      "inputs": [
        {
          "name": "earner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldClaimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "claimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DefaultOperatorSplitBipsSet",
      "inputs": [
        {
          "name": "oldDefaultOperatorSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "newDefaultOperatorSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DistributionRootDisabled",
      "inputs": [
        {
          "name": "rootIndex",
          "type": "uint32",
          "indexed": true,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DistributionRootSubmitted",
      "inputs": [
        {
          "name": "rootIndex",
          "type": "uint32",
          "indexed": true,
          "internalType": "uint32"
        },
        {
          "name": "root",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "rewardsCalculationEndTimestamp",
          "type": "uint32",
          "indexed": true,
          "internalType": "uint32"
        },
        {
          "name": "activatedAt",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorAVSSplitBipsSet",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "activatedAt",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "oldOperatorAVSSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "newOperatorAVSSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorDirectedAVSRewardsSubmissionCreated",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorDirectedRewardsSubmissionHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "submissionNonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "operatorDirectedRewardsSubmission",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "operatorRewards",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
              "components": [
                {
                  "name": "operator",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "duration",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorPISplitBipsSet",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "activatedAt",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "oldOperatorPISplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "newOperatorPISplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsClaimed",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "earner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "claimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": false,
          "internalType": "contract IERC20"
        },
        {
          "name": "claimedAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsForAllSubmitterSet",
      "inputs": [
        {
          "name": "rewardsForAllSubmitter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldValue",
          "type": "bool",
          "indexed": true,
          "internalType": "bool"
        },
        {
          "name": "newValue",
          "type": "bool",
          "indexed": true,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsSubmissionForAllCreated",
      "inputs": [
        {
          "name": "submitter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "submissionNonce",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "rewardsSubmissionHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "rewardsSubmission",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "duration",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsSubmissionForAllEarnersCreated",
      "inputs": [
        {
          "name": "tokenHopper",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "submissionNonce",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "rewardsSubmissionHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "rewardsSubmission",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "duration",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsUpdaterSet",
      "inputs": [
        {
          "name": "oldRewardsUpdater",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newRewardsUpdater",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AmountExceedsMax",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AmountIsZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "DurationExceedsMax",
      "inputs": []
    },
    {
      "type": "error",
      "name": "EarningsNotGreaterThanClaimed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCalculationIntervalSecondsRemainder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidClaimProof",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidDurationRemainder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidEarner",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidEarnerLeafIndex",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidGenesisRewardsTimestampRemainder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidProofLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidRootIndex",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidStartTimestampRemainder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidTokenLeafIndex",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NewRootMustBeForNewCalculatedPeriod",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorsNotInAscendingOrder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PreviousSplitPending",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RewardsEndTimestampNotElapsed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RootAlreadyActivated",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RootDisabled",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RootNotActivated",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SplitExceedsMax",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StartTimestampTooFarInFuture",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StartTimestampTooFarInPast",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategiesNotInAscendingOrder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyNotWhitelisted",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SubmissionNotRetroactive",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UnauthorizedCaller",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x6101c0604052348015610010575f5ffd5b506040516142e63803806142e683398101604081905261002f91610211565b858a8a8a88888888888f6001600160a01b038116610060576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b031660805261007685826102d3565b63ffffffff161561009a57604051630e06bd3160e01b815260040160405180910390fd5b6100a762015180866102d3565b63ffffffff16156100cb5760405163223c7b3960e11b815260040160405180910390fd5b6001600160a01b0397881660a05295871660c05293861660e05263ffffffff9283166101005290821661012052811661014052908116610160521661018052166101a052610117610126565b50505050505050505050610306565b5f54610100900460ff16156101915760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff908116146101e0575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146101f6575f5ffd5b50565b805163ffffffff8116811461020c575f5ffd5b919050565b5f5f5f5f5f5f5f5f5f5f6101408b8d03121561022b575f5ffd5b8a51610236816101e2565b60208c0151909a50610247816101e2565b60408c0151909950610258816101e2565b60608c0151909850610269816101e2565b60808c015190975061027a816101e2565b955061028860a08c016101f9565b945061029660c08c016101f9565b93506102a460e08c016101f9565b92506102b36101008c016101f9565b91506102c26101208c016101f9565b90509295989b9194979a5092959850565b5f63ffffffff8316806102f457634e487b7160e01b5f52601260045260245ffd5b8063ffffffff84160691505092915050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a051613f166103d05f395f81816105a60152612a1701525f818161045a0152612f3f01525f81816103bc015261238001525f81816105080152612efd01525f818161080c0152612e0d01525f818161076001528181612e5d0152612eab01525f81816108600152611a7401525f818161052f0152612fda01525f81816108d301526119e401525f81816106f201528181610b62015281816111750152611e190152613f165ff3fe608060405234801561000f575f5ffd5b506004361061037c575f3560e01c8063886f1195116101d4578063dcbb03b311610109578063f2fde38b116100a9578063fabc1cbc11610079578063fabc1cbc14610981578063fbf1e2c114610994578063fce36c7d146109a7578063ff9f6cce146109ba575f5ffd5b8063f2fde38b14610935578063f6efbb5914610948578063f8cd84481461095b578063f96abf2e1461096e575f5ffd5b8063e810ce21116100e4578063e810ce21146108bb578063ea4d3c9b146108ce578063ed71e6a2146108f5578063f22cef8514610922575f5ffd5b8063dcbb03b314610882578063de02e50314610895578063e063f81f146108a8575f5ffd5b8063a50a1d9c11610174578063bb7e451f1161014f578063bb7e451f146107e8578063bf21a8aa14610807578063c46db6061461082e578063ca8aa7c71461085b575f5ffd5b8063a50a1d9c14610795578063aebd8bae146107a8578063b3dbb0e0146107d5575f5ffd5b80639be3d4e4116101af5780639be3d4e4146107405780639cb9a5fa146107485780639d45c2811461075b578063a0169ddd14610782575f5ffd5b8063886f1195146106ed5780638da5cb5b146107145780639104c31914610725575f5ffd5b80634596021c116102b55780635c975abb11610255578063715018a611610225578063715018a6146106a05780637b8f8b05146106a8578063863cb9a9146106b0578063865c6953146106c3575f5ffd5b80635c975abb146106435780635e9d83481461064b57806363f6a7981461065e5780636d21117e14610673575f5ffd5b80634d18cc35116102905780634d18cc35146105ee57806358baaa3e14610605578063595c6a67146106185780635ac86ab714610620575f5ffd5b80634596021c1461058e5780634657e26a146105a15780634b943960146105c8575f5ffd5b80632b9f64a41161032057806339b70e38116102fb57806339b70e381461052a5780633a8c0786146105515780633ccc861d146105685780633efe1db61461057b575f5ffd5b80632b9f64a4146104b057806336af41fa146104f057806337838ed014610503575f5ffd5b80630eb383451161035b5780630eb3834514610440578063131433b414610455578063136439dd1461047c578063149bc8721461048f575f5ffd5b806218572c1461038057806304a0c502146103b75780630e9a53cf146103f3575b5f5ffd5b6103a261038e3660046134f6565b60d16020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016103ae565b6103fb6109cd565b6040516103ae91905f6080820190508251825263ffffffff602084015116602083015263ffffffff604084015116604083015260608301511515606083015292915050565b61045361044e36600461351e565b610acd565b005b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b61045361048a366004613555565b610b4d565b6104a261049d366004613582565b610c22565b6040519081526020016103ae565b6104d86104be3660046134f6565b60cc6020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016103ae565b6104536104fe3660046135e4565b610c97565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b60cb546103de90600160a01b900463ffffffff1681565b610453610576366004613634565b610e37565b61045361058936600461368b565b610e7c565b61045361059c3660046136b5565b611070565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b6105db6105d63660046134f6565b6110f1565b60405161ffff90911681526020016103ae565b60cb546103de90600160c01b900463ffffffff1681565b610453610613366004613708565b61114c565b610453611160565b6103a261062e366004613721565b606654600160ff9092169190911b9081161490565b6066546104a2565b6103a2610659366004613741565b61120f565b60cb546105db90600160e01b900461ffff1681565b6103a2610681366004613773565b60cf60209081525f928352604080842090915290825290205460ff1681565b61045361129a565b60ca546104a2565b6104536106be3660046134f6565b6112ab565b6104a26106d136600461379d565b60cd60209081525f928352604080842090915290825290205481565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b03166104d8565b6104d873beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6103fb6112bc565b6104536107563660046137c9565b611358565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b6104536107903660046134f6565b611503565b6104536107a336600461382b565b61150e565b6103a26107b6366004613773565b60d260209081525f928352604080842090915290825290205460ff1681565b6104536107e3366004613844565b61151f565b6104a26107f63660046134f6565b60ce6020525f908152604090205481565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b6103a261083c366004613773565b60d060209081525f928352604080842090915290825290205460ff1681565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b61045361089036600461386e565b61168f565b6103fb6108a3366004613555565b611821565b6105db6108b636600461379d565b6118b1565b6103de6108c9366004613555565b61191d565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b6103a2610903366004613773565b60d360209081525f928352604080842090915290825290205460ff1681565b61045361093036600461379d565b61199e565b6104536109433660046134f6565b611b08565b6104536109563660046138b2565b611b83565b6104a2610969366004613582565b611cb8565b61045361097c366004613708565b611cc8565b61045361098f366004613555565b611e17565b60cb546104d8906001600160a01b031681565b6104536109b53660046135e4565b611f2d565b6104536109c83660046135e4565b61207c565b604080516080810182525f80825260208201819052918101829052606081019190915260ca545b8015610aa5575f60ca610a08600184613924565b81548110610a1857610a18613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161580156060830181905291925090610a875750806040015163ffffffff164210155b15610a925792915050565b5080610a9d8161394b565b9150506109f4565b5050604080516080810182525f80825260208201819052918101829052606081019190915290565b610ad56121fb565b6001600160a01b0382165f81815260d1602052604080822054905160ff9091169284151592841515927f4de6293e668df1398422e1def12118052c1539a03cbfedc145895d48d7685f1c9190a4506001600160a01b03919091165f90815260d160205260409020805460ff1916911515919091179055565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015610baf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bd39190613960565b610bf057604051631d77d47760e21b815260040160405180910390fd5b6066548181168114610c155760405163c61dca5d60e01b815260040160405180910390fd5b610c1e82612255565b5050565b5f80610c3160208401846134f6565b8360200135604051602001610c7a9392919060f89390931b6001600160f81b031916835260609190911b6bffffffffffffffffffffffff19166001830152601582015260350190565b604051602081830303815290604052805190602001209050919050565b606654600190600290811603610cc05760405163840a48d560e01b815260040160405180910390fd5b335f90815260d1602052604090205460ff16610cef57604051635c427cd960e01b815260040160405180910390fd5b610cf7612292565b5f5b82811015610e275736848483818110610d1457610d14613937565b9050602002810190610d26919061397b565b335f81815260ce60209081526040808320549051949550939192610d509290918591879101613ac9565b604051602081830303815290604052805190602001209050610d71836122eb565b335f90815260d0602090815260408083208484529091529020805460ff19166001908117909155610da3908390613af8565b335f81815260ce602052604090819020929092559051829184917f51088b8c89628df3a8174002c2a034d0152fce6af8415d651b2a4734bf27048290610dea908890613b0b565b60405180910390a4610e1c333060408601803590610e0b90602089016134f6565b6001600160a01b03169291906123db565b505050600101610cf9565b50610e326001609755565b505050565b606654600290600490811603610e605760405163840a48d560e01b815260040160405180910390fd5b610e68612292565b610e728383612446565b610e326001609755565b606654600390600890811603610ea55760405163840a48d560e01b815260040160405180910390fd5b60cb546001600160a01b03163314610ed057604051635c427cd960e01b815260040160405180910390fd5b60cb5463ffffffff600160c01b909104811690831611610f0357604051631ca7e50b60e21b815260040160405180910390fd5b428263ffffffff1610610f29576040516306957c9160e11b815260040160405180910390fd5b60ca5460cb545f90610f4890600160a01b900463ffffffff1642613b1d565b6040805160808101825287815263ffffffff87811660208084018281528684168587018181525f6060880181815260ca8054600181018255925297517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee160029092029182015592517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee290930180549151975193871667ffffffffffffffff1990921691909117600160201b978716979097029690961760ff60401b1916600160401b921515929092029190911790945560cb805463ffffffff60c01b1916600160c01b840217905593519283529394508892908616917fecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd08910160405180910390a45050505050565b6066546002906004908116036110995760405163840a48d560e01b815260040160405180910390fd5b6110a1612292565b5f5b838110156110e0576110d88585838181106110c0576110c0613937565b90506020028101906110d29190613b39565b84612446565b6001016110a3565b506110eb6001609755565b50505050565b6001600160a01b0381165f90815260d5602090815260408083208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff1690820152611146906126ce565b92915050565b6111546121fb565b61115d81612719565b50565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156111c2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111e69190613960565b61120357604051631d77d47760e21b815260040160405180910390fd5b61120d5f19612255565b565b5f6112928260ca6112236020830183613708565b63ffffffff168154811061123957611239613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161515606082015261278a565b506001919050565b6112a26121fb565b61120d5f61292d565b6112b36121fb565b61115d8161297e565b604080516080810182525f80825260208201819052918101829052606081019190915260ca80546112ef90600190613924565b815481106112ff576112ff613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff1615156060820152919050565b6066546005906020908116036113815760405163840a48d560e01b815260040160405180910390fd5b8361138b816129d9565b6113a85760405163932d94f760e01b815260040160405180910390fd5b6113b0612292565b5f5b838110156114f157368585838181106113cd576113cd613937565b90506020028101906113df9190613b4d565b6001600160a01b0388165f90815260ce6020908152604080832054905193945092611410918b918591879101613cbb565b6040516020818303038152906040528051906020012090505f61143284612a83565b6001600160a01b038b165f90815260d3602090815260408083208684529091529020805460ff19166001908117909155909150611470908490613af8565b6001600160a01b038b165f81815260ce60205260409081902092909255905183919033907ffc8888bffd711da60bc5092b33f677d81896fe80ecc677b84cfab8184462b6e0906114c39088908a90613ce1565b60405180910390a46114e1333083610e0b6040890160208a016134f6565b5050600190920191506113b29050565b506114fc6001609755565b5050505050565b33610c1e8183612c69565b6115166121fb565b61115d81612ccc565b6066546007906080908116036115485760405163840a48d560e01b815260040160405180910390fd5b82611552816129d9565b61156f5760405163932d94f760e01b815260040160405180910390fd5b61271061ffff841611156115965760405163891c63df60e01b815260040160405180910390fd5b60cb545f906115b290600160a01b900463ffffffff1642613b1d565b6001600160a01b0386165f90815260d5602090815260408083208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff16908201529192509061160b906126ce565b6001600160a01b0387165f90815260d560205260409020909150611630908684612d37565b6040805163ffffffff8416815261ffff838116602083015287168183015290516001600160a01b0388169133917fd1e028bd664486a46ad26040e999cd2d22e1e9a094ee6afe19fcf64678f16f749181900360600190a3505050505050565b6066546006906040908116036116b85760405163840a48d560e01b815260040160405180910390fd5b836116c2816129d9565b6116df5760405163932d94f760e01b815260040160405180910390fd5b61271061ffff841611156117065760405163891c63df60e01b815260040160405180910390fd5b60cb545f9061172290600160a01b900463ffffffff1642613b1d565b6001600160a01b038781165f90815260d460209081526040808320938a1683529281528282208351606081018552905461ffff80821683526201000082041692820192909252600160201b90910463ffffffff1692810192909252919250611789906126ce565b6001600160a01b038089165f90815260d460209081526040808320938b168352929052209091506117bb908684612d37565b6040805163ffffffff8416815261ffff838116602083015287168183015290516001600160a01b0388811692908a169133917f48e198b6ae357e529204ee53a8e514c470ff77d9cc8e4f7207f8b5d490ae6934919081900360600190a450505050505050565b604080516080810182525f80825260208201819052918101829052606081019190915260ca828154811061185757611857613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161515606082015292915050565b6001600160a01b038281165f90815260d46020908152604080832093851683529281528282208351606081018552905461ffff80821683526201000082041692820192909252600160201b90910463ffffffff169281019290925290611916906126ce565b9392505050565b60ca545f905b63ffffffff811615611984578260ca61193d600184613cf9565b63ffffffff168154811061195357611953613937565b905f5260205f2090600202015f01540361197257611916600182613cf9565b8061197c81613d15565b915050611923565b5060405163504570e360e01b815260040160405180910390fd5b816119a8816129d9565b6119c55760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0384811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611a29573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a4d9190613960565b80611ae1575060405163ba1a84e560e01b81526001600160a01b0384811660048301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063ba1a84e590602401602060405180830381865afa158015611abb573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611adf9190613d33565b115b611afe5760405163fb494ea160e01b815260040160405180910390fd5b610e328383612c69565b611b106121fb565b6001600160a01b038116611b7a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61115d8161292d565b5f54610100900460ff1615808015611ba157505f54600160ff909116105b80611bba5750303b158015611bba57505f5460ff166001145b611c1d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401611b71565b5f805460ff191660011790558015611c3e575f805461ff0019166101001790555b611c4785612255565b611c508661292d565b611c598461297e565b611c6283612719565b611c6b82612ccc565b8015611cb0575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b5f6001610c3160208401846134f6565b606654600390600890811603611cf15760405163840a48d560e01b815260040160405180910390fd5b60cb546001600160a01b03163314611d1c57604051635c427cd960e01b815260040160405180910390fd5b60ca5463ffffffff831610611d44576040516394a8d38960e01b815260040160405180910390fd5b5f60ca8363ffffffff1681548110611d5e57611d5e613937565b905f5260205f20906002020190508060010160089054906101000a900460ff1615611d9c57604051631b14174b60e01b815260040160405180910390fd5b6001810154600160201b900463ffffffff164210611dcd57604051630c36f66560e21b815260040160405180910390fd5b60018101805460ff60401b1916600160401b17905560405163ffffffff8416907fd850e6e5dfa497b72661fa73df2923464eaed9dc2ff1d3cb82bccbfeabe5c41e905f90a2505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e73573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e979190613d4a565b6001600160a01b0316336001600160a01b031614611ec85760405163794821ff60e01b815260040160405180910390fd5b60665480198219811614611eef5760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b6066545f90600190811603611f555760405163840a48d560e01b815260040160405180910390fd5b611f5d612292565b5f5b82811015610e275736848483818110611f7a57611f7a613937565b9050602002810190611f8c919061397b565b335f81815260ce60209081526040808320549051949550939192611fb69290918591879101613ac9565b604051602081830303815290604052805190602001209050611fd7836122eb565b335f90815260cf602090815260408083208484529091529020805460ff19166001908117909155612009908390613af8565b335f81815260ce602052604090819020929092559051829184917f450a367a380c4e339e5ae7340c8464ef27af7781ad9945cfe8abd828f89e628190612050908890613b0b565b60405180910390a4612071333060408601803590610e0b90602089016134f6565b505050600101611f5f565b6066546004906010908116036120a55760405163840a48d560e01b815260040160405180910390fd5b335f90815260d1602052604090205460ff166120d457604051635c427cd960e01b815260040160405180910390fd5b6120dc612292565b5f5b82811015610e2757368484838181106120f9576120f9613937565b905060200281019061210b919061397b565b335f81815260ce602090815260408083205490519495509391926121359290918591879101613ac9565b604051602081830303815290604052805190602001209050612156836122eb565b335f90815260d2602090815260408083208484529091529020805460ff19166001908117909155612188908390613af8565b335f81815260ce602052604090819020929092559051829184917f5251b6fdefcb5d81144e735f69ea4c695fd43b0289ca53dc075033f5fc80068b906121cf908890613b0b565b60405180910390a46121f0333060408601803590610e0b90602089016134f6565b5050506001016120de565b6033546001600160a01b0316331461120d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611b71565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b6002609754036122e45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611b71565b6002609755565b61231d6122f88280613d65565b6123086080850160608601613708565b61231860a0860160808701613708565b612ded565b5f816040013511612341576040516310eb483f60e21b815260040160405180910390fd5b6f4b3b4ca85a86c47a098a223fffffffff816040013511156123765760405163070b5a6f60e21b815260040160405180910390fd5b6123a663ffffffff7f00000000000000000000000000000000000000000000000000000000000000001642613af8565b6123b66080830160608401613708565b63ffffffff16111561115d57604051637ee2b44360e01b815260040160405180910390fd5b6040516001600160a01b03808516602483015283166044820152606481018290526110eb9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526130c5565b5f60ca6124566020850185613708565b63ffffffff168154811061246c5761246c613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161515606082015290506124cc838261278a565b5f6124dd60808501606086016134f6565b6001600160a01b038082165f90815260cc602052604090205491925016806125025750805b336001600160a01b0382161461252b57604051635c427cd960e01b815260040160405180910390fd5b5f5b61253a60a0870187613dab565b9050811015611cb0573661255160e0880188613d65565b8381811061256157612561613937565b6001600160a01b0387165f90815260cd602090815260408083209302949094019450929091508290612595908501856134f6565b6001600160a01b03166001600160a01b031681526020019081526020015f20549050808260200135116125db5760405163aa385e8160e01b815260040160405180910390fd5b5f6125ea826020850135613924565b6001600160a01b0387165f90815260cd6020908152604082209293508501803592919061261790876134f6565b6001600160a01b031681526020808201929092526040015f20919091556126589089908390612648908701876134f6565b6001600160a01b03169190613198565b86516001600160a01b03808a1691878216918916907f9543dbd55580842586a951f0386e24d68a5df99ae29e3b216588b45fd684ce319061269c60208901896134f6565b604080519283526001600160a01b039091166020830152810186905260600160405180910390a450505060010161252d565b5f816040015163ffffffff165f036126f357505060cb54600160e01b900461ffff1690565b816040015163ffffffff1642101561270c578151611146565b506020015190565b919050565b60cb546040805163ffffffff600160a01b9093048316815291831660208301527faf557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b3910160405180910390a160cb805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b8060600151156127ad57604051631b14174b60e01b815260040160405180910390fd5b806040015163ffffffff164210156127d857604051631437a2bb60e31b815260040160405180910390fd5b6127e560c0830183613dab565b90506127f460a0840184613dab565b905014612814576040516343714afd60e01b815260040160405180910390fd5b61282160e0830183613d65565b905061283060c0840184613dab565b905014612850576040516343714afd60e01b815260040160405180910390fd5b805161287c906128666040850160208601613708565b6128736040860186613df1565b866060016131c8565b5f5b61288b60a0840184613dab565b9050811015610e325761292560808401356128a960a0860186613dab565b848181106128b9576128b9613937565b90506020020160208101906128ce9190613708565b6128db60c0870187613dab565b858181106128eb576128eb613937565b90506020028101906128fd9190613df1565b61290a60e0890189613d65565b8781811061291a5761291a613937565b90506040020161326c565b60010161287e565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b60cb546040516001600160a01b038084169216907f237b82f438d75fc568ebab484b75b01d9287b9e98b490b7c23221623b6705dbb905f90a360cb80546001600160a01b0319166001600160a01b0392909216919091179055565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af1158015612a5f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111469190613960565b5f612ab1612a918380613d65565b612aa16080860160608701613708565b61231860a0870160808801613708565b5f612abf6040840184613d65565b905011612adf5760405163796cc52560e01b815260040160405180910390fd5b42612af060a0840160808501613708565b612b006080850160608601613708565b612b0a9190613b1d565b63ffffffff1610612b2e5760405163150358a160e21b815260040160405180910390fd5b5f80805b612b3f6040860186613d65565b9050811015612c305736612b566040870187613d65565b83818110612b6657612b66613937565b6040029190910191505f9050612b7f60208301836134f6565b6001600160a01b031603612ba657604051630863a45360e11b815260040160405180910390fd5b612bb360208201826134f6565b6001600160a01b0316836001600160a01b031610612be4576040516310fb47f160e31b815260040160405180910390fd5b5f816020013511612c08576040516310eb483f60e21b815260040160405180910390fd5b612c1560208201826134f6565b9250612c25602082013585613af8565b935050600101612b32565b506f4b3b4ca85a86c47a098a223fffffffff821115612c625760405163070b5a6f60e21b815260040160405180910390fd5b5092915050565b6001600160a01b038083165f81815260cc602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917fbab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca3129190a4505050565b60cb546040805161ffff600160e01b9093048316815291831660208301527fe6cd4edfdcc1f6d130ab35f73d72378f3a642944fb4ee5bd84b7807a81ea1c4e910160405180910390a160cb805461ffff909216600160e01b0261ffff60e01b19909216919091179055565b8254600160201b900463ffffffff164211612d6557604051637b1e25c560e01b815260040160405180910390fd5b8254600160201b900463ffffffff165f03612d9a5760cb548354600160e01b90910461ffff1661ffff19909116178355612db1565b825462010000810461ffff1661ffff199091161783555b825463ffffffff909116600160201b0267ffffffff000000001961ffff90931662010000029290921667ffffffffffff00001990911617179055565b82612e0b5760405163796cc52560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161115612e5857604051630dd0b9f560e21b815260040160405180910390fd5b612e827f000000000000000000000000000000000000000000000000000000000000000082613e48565b63ffffffff1615612ea65760405163ee66470560e01b815260040160405180910390fd5b612ed07f000000000000000000000000000000000000000000000000000000000000000083613e48565b63ffffffff1615612ef457604051633c1a94f160e21b815260040160405180910390fd5b8163ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff1642612f2d9190613924565b11158015612f6757508163ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff1611155b612f845760405163041aa75760e11b815260040160405180910390fd5b5f805b84811015611cb0575f868683818110612fa257612fa2613937565b612fb892602060409092020190810191506134f6565b60405163198f077960e21b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063663c1de490602401602060405180830381865afa158015613021573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130459190613960565b8061306c57506001600160a01b03811673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0145b61308957604051632efd965160e11b815260040160405180910390fd5b806001600160a01b0316836001600160a01b0316106130bb5760405163dfad9ca160e01b815260040160405180910390fd5b9150600101612f87565b5f613119826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132aa9092919063ffffffff16565b905080515f14806131395750808060200190518101906131399190613960565b610e325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611b71565b6040516001600160a01b038316602482015260448101829052610e3290849063a9059cbb60e01b9060640161240f565b6131d3602083613e6f565b6001901b8463ffffffff16106131fb5760405162c6c39d60e71b815260040160405180910390fd5b5f61320582610c22565b905061324f84848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508a92508591505063ffffffff89166132c0565b611cb0576040516369ca16c960e01b815260040160405180910390fd5b613277602083613e6f565b6001901b8463ffffffff16106132a05760405163054ff4df60e51b815260040160405180910390fd5b5f61320582611cb8565b60606132b884845f856132d7565b949350505050565b5f836132cd8685856133ae565b1495945050505050565b6060824710156133385760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401611b71565b5f5f866001600160a01b031685876040516133539190613e82565b5f6040518083038185875af1925050503d805f811461338d576040519150601f19603f3d011682016040523d82523d5f602084013e613392565b606091505b50915091506133a387838387613445565b979650505050505050565b5f602084516133bd9190613e98565b156133db576040516313717da960e21b815260040160405180910390fd5b8260205b8551811161343c576133f2600285613e98565b5f0361341357815f528086015160205260405f20915060028404935061342a565b808601515f528160205260405f2091506002840493505b613435602082613af8565b90506133df565b50949350505050565b606083156134b35782515f036134ac576001600160a01b0385163b6134ac5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611b71565b50816132b8565b6132b883838151156134c85781518083602001fd5b8060405162461bcd60e51b8152600401611b719190613eab565b6001600160a01b038116811461115d575f5ffd5b5f60208284031215613506575f5ffd5b8135611916816134e2565b801515811461115d575f5ffd5b5f5f6040838503121561352f575f5ffd5b823561353a816134e2565b9150602083013561354a81613511565b809150509250929050565b5f60208284031215613565575f5ffd5b5035919050565b5f6040828403121561357c575f5ffd5b50919050565b5f60408284031215613592575f5ffd5b611916838361356c565b5f5f83601f8401126135ac575f5ffd5b50813567ffffffffffffffff8111156135c3575f5ffd5b6020830191508360208260051b85010111156135dd575f5ffd5b9250929050565b5f5f602083850312156135f5575f5ffd5b823567ffffffffffffffff81111561360b575f5ffd5b6136178582860161359c565b90969095509350505050565b5f610100828403121561357c575f5ffd5b5f5f60408385031215613645575f5ffd5b823567ffffffffffffffff81111561365b575f5ffd5b61366785828601613623565b925050602083013561354a816134e2565b803563ffffffff81168114612714575f5ffd5b5f5f6040838503121561369c575f5ffd5b823591506136ac60208401613678565b90509250929050565b5f5f5f604084860312156136c7575f5ffd5b833567ffffffffffffffff8111156136dd575f5ffd5b6136e98682870161359c565b90945092505060208401356136fd816134e2565b809150509250925092565b5f60208284031215613718575f5ffd5b61191682613678565b5f60208284031215613731575f5ffd5b813560ff81168114611916575f5ffd5b5f60208284031215613751575f5ffd5b813567ffffffffffffffff811115613767575f5ffd5b6132b884828501613623565b5f5f60408385031215613784575f5ffd5b823561378f816134e2565b946020939093013593505050565b5f5f604083850312156137ae575f5ffd5b82356137b9816134e2565b9150602083013561354a816134e2565b5f5f5f604084860312156137db575f5ffd5b83356137e6816134e2565b9250602084013567ffffffffffffffff811115613801575f5ffd5b61380d8682870161359c565b9497909650939450505050565b803561ffff81168114612714575f5ffd5b5f6020828403121561383b575f5ffd5b6119168261381a565b5f5f60408385031215613855575f5ffd5b8235613860816134e2565b91506136ac6020840161381a565b5f5f5f60608486031215613880575f5ffd5b833561388b816134e2565b9250602084013561389b816134e2565b91506138a96040850161381a565b90509250925092565b5f5f5f5f5f60a086880312156138c6575f5ffd5b85356138d1816134e2565b94506020860135935060408601356138e8816134e2565b92506138f660608701613678565b91506139046080870161381a565b90509295509295909350565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561114657611146613910565b634e487b7160e01b5f52603260045260245ffd5b5f8161395957613959613910565b505f190190565b5f60208284031215613970575f5ffd5b815161191681613511565b5f8235609e1983360301811261398f575f5ffd5b9190910192915050565b5f5f8335601e198436030181126139ae575f5ffd5b830160208101925035905067ffffffffffffffff8111156139cd575f5ffd5b8060061b36038213156135dd575f5ffd5b8183526020830192505f815f5b84811015613a415781356139fe816134e2565b6001600160a01b0316865260208201356bffffffffffffffffffffffff8116808214613a28575f5ffd5b60208801525060409586019591909101906001016139eb565b5093949350505050565b5f613a568283613999565b60a08552613a6860a0860182846139de565b9150506020830135613a79816134e2565b6001600160a01b031660208501526040838101359085015263ffffffff613aa260608501613678565b16606085015263ffffffff613ab960808501613678565b1660808501528091505092915050565b60018060a01b0384168152826020820152606060408201525f613aef6060830184613a4b565b95945050505050565b8082018082111561114657611146613910565b602081525f6119166020830184613a4b565b63ffffffff818116838216019081111561114657611146613910565b5f823560fe1983360301811261398f575f5ffd5b5f823560be1983360301811261398f575f5ffd5b5f5f8335601e19843603018112613b76575f5ffd5b830160208101925035905067ffffffffffffffff811115613b95575f5ffd5b8036038213156135dd575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f613bd68283613999565b60c08552613be860c0860182846139de565b9150506020830135613bf9816134e2565b6001600160a01b03166020850152613c146040840184613999565b858303604087015280835290915f91906020015b81831015613c63578335613c3b816134e2565b6001600160a01b03168152602084810135908201526040938401936001939093019201613c28565b613c6f60608701613678565b63ffffffff811660608901529350613c8960808701613678565b63ffffffff811660808901529350613ca460a0870187613b61565b9450925086810360a08801526133a3818585613ba3565b60018060a01b0384168152826020820152606060408201525f613aef6060830184613bcb565b828152604060208201525f6132b86040830184613bcb565b63ffffffff828116828216039081111561114657611146613910565b5f63ffffffff821680613d2a57613d2a613910565b5f190192915050565b5f60208284031215613d43575f5ffd5b5051919050565b5f60208284031215613d5a575f5ffd5b8151611916816134e2565b5f5f8335601e19843603018112613d7a575f5ffd5b83018035915067ffffffffffffffff821115613d94575f5ffd5b6020019150600681901b36038213156135dd575f5ffd5b5f5f8335601e19843603018112613dc0575f5ffd5b83018035915067ffffffffffffffff821115613dda575f5ffd5b6020019150600581901b36038213156135dd575f5ffd5b5f5f8335601e19843603018112613e06575f5ffd5b83018035915067ffffffffffffffff821115613e20575f5ffd5b6020019150368190038213156135dd575f5ffd5b634e487b7160e01b5f52601260045260245ffd5b5f63ffffffff831680613e5d57613e5d613e34565b8063ffffffff84160691505092915050565b5f82613e7d57613e7d613e34565b500490565b5f82518060208501845e5f920191825250919050565b5f82613ea657613ea6613e34565b500690565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f8301168401019150509291505056fea26469706673582212204ae31a4469c20cd0a75fbdf2da021a52fee24139fe24c20c7c2e5b1186e123ea64736f6c634300081b0033",
    "sourceMap": "1060:26105:107:-:0;;;1601:910;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2445:21;2099:18;2131:16;2161:18;2193:29;2236:21;2271:23;2308:18;2340:26;2394:15;-1:-1:-1;;;;;3224:38:138;;3216:67;;;;-1:-1:-1;;;3216:67:138;;;;;;;;;;;;-1:-1:-1;;;;;3293:32:138;;;7125:58:108;7154:29;7125:26;:58;:::i;:::-;:63;;;7104:137;;;;-1:-1:-1;;;7104:137:108;;;;;;;;;;;;7259:48;3888:6;7259:29;:48;:::i;:::-;:53;;;7251:108;;;;-1:-1:-1;;;7251:108:108;;;;;;;;;;;;-1:-1:-1;;;;;7369:38:108;;;;;7417:34;;;;;7461:38;;;;;7509:60;;;;;;7579:44;;;;;7633:48;;;;7691:38;;;;;7739:54;;;501:44:136;;;2482:22:107::3;:20;:22::i;:::-;1601:910:::0;;;;;;;;;;1060:26105;;5939:280:30;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:30;;2268:2:228;5998:66:30;;;2250:21:228;2307:2;2287:18;;;2280:30;2346:34;2326:18;;;2319:62;-1:-1:-1;;;2397:18:228;;;2390:37;2444:19;;5998:66:30;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:30;6140:15;6125:30;;;;;;6174:28;;2616:36:228;;;6174:28:30;;2604:2:228;2589:18;6174:28:30;;;;;;;6074:139;5939:280::o;14:151:228:-;-1:-1:-1;;;;;109:31:228;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:167::-;248:13;;301:10;290:22;;280:33;;270:61;;327:1;324;317:12;270:61;170:167;;;:::o;342:1447::-;626:6;634;642;650;658;666;674;682;690;698;751:3;739:9;730:7;726:23;722:33;719:53;;;768:1;765;758:12;719:53;800:9;794:16;819:51;864:5;819:51;:::i;:::-;939:2;924:18;;918:25;889:5;;-1:-1:-1;952:53:228;918:25;952:53;:::i;:::-;1076:2;1061:18;;1055:25;1024:7;;-1:-1:-1;1089:53:228;1055:25;1089:53;:::i;:::-;1213:2;1198:18;;1192:25;1161:7;;-1:-1:-1;1226:53:228;1192:25;1226:53;:::i;:::-;1350:3;1335:19;;1329:26;1298:7;;-1:-1:-1;1364:53:228;1329:26;1364:53;:::i;:::-;1436:7;-1:-1:-1;1462:49:228;1506:3;1491:19;;1462:49;:::i;:::-;1452:59;;1530:49;1574:3;1563:9;1559:19;1530:49;:::i;:::-;1520:59;;1598:49;1642:3;1631:9;1627:19;1598:49;:::i;:::-;1588:59;;1666:49;1710:3;1699:9;1695:19;1666:49;:::i;:::-;1656:59;;1734:49;1778:3;1767:9;1763:19;1734:49;:::i;:::-;1724:59;;342:1447;;;;;;;;;;;;;:::o;1794:267::-;1825:1;1859:10;1856:1;1852:18;1889:3;1879:134;;1935:10;1930:3;1926:20;1923:1;1916:31;1970:4;1967:1;1960:15;1998:4;1995:1;1988:15;1879:134;2051:3;2038:10;2035:1;2031:18;2027:28;2022:33;;;1794:267;;;;:::o;2474:184::-;1060:26105:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b506004361061037c575f3560e01c8063886f1195116101d4578063dcbb03b311610109578063f2fde38b116100a9578063fabc1cbc11610079578063fabc1cbc14610981578063fbf1e2c114610994578063fce36c7d146109a7578063ff9f6cce146109ba575f5ffd5b8063f2fde38b14610935578063f6efbb5914610948578063f8cd84481461095b578063f96abf2e1461096e575f5ffd5b8063e810ce21116100e4578063e810ce21146108bb578063ea4d3c9b146108ce578063ed71e6a2146108f5578063f22cef8514610922575f5ffd5b8063dcbb03b314610882578063de02e50314610895578063e063f81f146108a8575f5ffd5b8063a50a1d9c11610174578063bb7e451f1161014f578063bb7e451f146107e8578063bf21a8aa14610807578063c46db6061461082e578063ca8aa7c71461085b575f5ffd5b8063a50a1d9c14610795578063aebd8bae146107a8578063b3dbb0e0146107d5575f5ffd5b80639be3d4e4116101af5780639be3d4e4146107405780639cb9a5fa146107485780639d45c2811461075b578063a0169ddd14610782575f5ffd5b8063886f1195146106ed5780638da5cb5b146107145780639104c31914610725575f5ffd5b80634596021c116102b55780635c975abb11610255578063715018a611610225578063715018a6146106a05780637b8f8b05146106a8578063863cb9a9146106b0578063865c6953146106c3575f5ffd5b80635c975abb146106435780635e9d83481461064b57806363f6a7981461065e5780636d21117e14610673575f5ffd5b80634d18cc35116102905780634d18cc35146105ee57806358baaa3e14610605578063595c6a67146106185780635ac86ab714610620575f5ffd5b80634596021c1461058e5780634657e26a146105a15780634b943960146105c8575f5ffd5b80632b9f64a41161032057806339b70e38116102fb57806339b70e381461052a5780633a8c0786146105515780633ccc861d146105685780633efe1db61461057b575f5ffd5b80632b9f64a4146104b057806336af41fa146104f057806337838ed014610503575f5ffd5b80630eb383451161035b5780630eb3834514610440578063131433b414610455578063136439dd1461047c578063149bc8721461048f575f5ffd5b806218572c1461038057806304a0c502146103b75780630e9a53cf146103f3575b5f5ffd5b6103a261038e3660046134f6565b60d16020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016103ae565b6103fb6109cd565b6040516103ae91905f6080820190508251825263ffffffff602084015116602083015263ffffffff604084015116604083015260608301511515606083015292915050565b61045361044e36600461351e565b610acd565b005b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b61045361048a366004613555565b610b4d565b6104a261049d366004613582565b610c22565b6040519081526020016103ae565b6104d86104be3660046134f6565b60cc6020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016103ae565b6104536104fe3660046135e4565b610c97565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b60cb546103de90600160a01b900463ffffffff1681565b610453610576366004613634565b610e37565b61045361058936600461368b565b610e7c565b61045361059c3660046136b5565b611070565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b6105db6105d63660046134f6565b6110f1565b60405161ffff90911681526020016103ae565b60cb546103de90600160c01b900463ffffffff1681565b610453610613366004613708565b61114c565b610453611160565b6103a261062e366004613721565b606654600160ff9092169190911b9081161490565b6066546104a2565b6103a2610659366004613741565b61120f565b60cb546105db90600160e01b900461ffff1681565b6103a2610681366004613773565b60cf60209081525f928352604080842090915290825290205460ff1681565b61045361129a565b60ca546104a2565b6104536106be3660046134f6565b6112ab565b6104a26106d136600461379d565b60cd60209081525f928352604080842090915290825290205481565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b03166104d8565b6104d873beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6103fb6112bc565b6104536107563660046137c9565b611358565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b6104536107903660046134f6565b611503565b6104536107a336600461382b565b61150e565b6103a26107b6366004613773565b60d260209081525f928352604080842090915290825290205460ff1681565b6104536107e3366004613844565b61151f565b6104a26107f63660046134f6565b60ce6020525f908152604090205481565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b6103a261083c366004613773565b60d060209081525f928352604080842090915290825290205460ff1681565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b61045361089036600461386e565b61168f565b6103fb6108a3366004613555565b611821565b6105db6108b636600461379d565b6118b1565b6103de6108c9366004613555565b61191d565b6104d87f000000000000000000000000000000000000000000000000000000000000000081565b6103a2610903366004613773565b60d360209081525f928352604080842090915290825290205460ff1681565b61045361093036600461379d565b61199e565b6104536109433660046134f6565b611b08565b6104536109563660046138b2565b611b83565b6104a2610969366004613582565b611cb8565b61045361097c366004613708565b611cc8565b61045361098f366004613555565b611e17565b60cb546104d8906001600160a01b031681565b6104536109b53660046135e4565b611f2d565b6104536109c83660046135e4565b61207c565b604080516080810182525f80825260208201819052918101829052606081019190915260ca545b8015610aa5575f60ca610a08600184613924565b81548110610a1857610a18613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161580156060830181905291925090610a875750806040015163ffffffff164210155b15610a925792915050565b5080610a9d8161394b565b9150506109f4565b5050604080516080810182525f80825260208201819052918101829052606081019190915290565b610ad56121fb565b6001600160a01b0382165f81815260d1602052604080822054905160ff9091169284151592841515927f4de6293e668df1398422e1def12118052c1539a03cbfedc145895d48d7685f1c9190a4506001600160a01b03919091165f90815260d160205260409020805460ff1916911515919091179055565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015610baf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bd39190613960565b610bf057604051631d77d47760e21b815260040160405180910390fd5b6066548181168114610c155760405163c61dca5d60e01b815260040160405180910390fd5b610c1e82612255565b5050565b5f80610c3160208401846134f6565b8360200135604051602001610c7a9392919060f89390931b6001600160f81b031916835260609190911b6bffffffffffffffffffffffff19166001830152601582015260350190565b604051602081830303815290604052805190602001209050919050565b606654600190600290811603610cc05760405163840a48d560e01b815260040160405180910390fd5b335f90815260d1602052604090205460ff16610cef57604051635c427cd960e01b815260040160405180910390fd5b610cf7612292565b5f5b82811015610e275736848483818110610d1457610d14613937565b9050602002810190610d26919061397b565b335f81815260ce60209081526040808320549051949550939192610d509290918591879101613ac9565b604051602081830303815290604052805190602001209050610d71836122eb565b335f90815260d0602090815260408083208484529091529020805460ff19166001908117909155610da3908390613af8565b335f81815260ce602052604090819020929092559051829184917f51088b8c89628df3a8174002c2a034d0152fce6af8415d651b2a4734bf27048290610dea908890613b0b565b60405180910390a4610e1c333060408601803590610e0b90602089016134f6565b6001600160a01b03169291906123db565b505050600101610cf9565b50610e326001609755565b505050565b606654600290600490811603610e605760405163840a48d560e01b815260040160405180910390fd5b610e68612292565b610e728383612446565b610e326001609755565b606654600390600890811603610ea55760405163840a48d560e01b815260040160405180910390fd5b60cb546001600160a01b03163314610ed057604051635c427cd960e01b815260040160405180910390fd5b60cb5463ffffffff600160c01b909104811690831611610f0357604051631ca7e50b60e21b815260040160405180910390fd5b428263ffffffff1610610f29576040516306957c9160e11b815260040160405180910390fd5b60ca5460cb545f90610f4890600160a01b900463ffffffff1642613b1d565b6040805160808101825287815263ffffffff87811660208084018281528684168587018181525f6060880181815260ca8054600181018255925297517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee160029092029182015592517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee290930180549151975193871667ffffffffffffffff1990921691909117600160201b978716979097029690961760ff60401b1916600160401b921515929092029190911790945560cb805463ffffffff60c01b1916600160c01b840217905593519283529394508892908616917fecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd08910160405180910390a45050505050565b6066546002906004908116036110995760405163840a48d560e01b815260040160405180910390fd5b6110a1612292565b5f5b838110156110e0576110d88585838181106110c0576110c0613937565b90506020028101906110d29190613b39565b84612446565b6001016110a3565b506110eb6001609755565b50505050565b6001600160a01b0381165f90815260d5602090815260408083208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff1690820152611146906126ce565b92915050565b6111546121fb565b61115d81612719565b50565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156111c2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111e69190613960565b61120357604051631d77d47760e21b815260040160405180910390fd5b61120d5f19612255565b565b5f6112928260ca6112236020830183613708565b63ffffffff168154811061123957611239613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161515606082015261278a565b506001919050565b6112a26121fb565b61120d5f61292d565b6112b36121fb565b61115d8161297e565b604080516080810182525f80825260208201819052918101829052606081019190915260ca80546112ef90600190613924565b815481106112ff576112ff613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff1615156060820152919050565b6066546005906020908116036113815760405163840a48d560e01b815260040160405180910390fd5b8361138b816129d9565b6113a85760405163932d94f760e01b815260040160405180910390fd5b6113b0612292565b5f5b838110156114f157368585838181106113cd576113cd613937565b90506020028101906113df9190613b4d565b6001600160a01b0388165f90815260ce6020908152604080832054905193945092611410918b918591879101613cbb565b6040516020818303038152906040528051906020012090505f61143284612a83565b6001600160a01b038b165f90815260d3602090815260408083208684529091529020805460ff19166001908117909155909150611470908490613af8565b6001600160a01b038b165f81815260ce60205260409081902092909255905183919033907ffc8888bffd711da60bc5092b33f677d81896fe80ecc677b84cfab8184462b6e0906114c39088908a90613ce1565b60405180910390a46114e1333083610e0b6040890160208a016134f6565b5050600190920191506113b29050565b506114fc6001609755565b5050505050565b33610c1e8183612c69565b6115166121fb565b61115d81612ccc565b6066546007906080908116036115485760405163840a48d560e01b815260040160405180910390fd5b82611552816129d9565b61156f5760405163932d94f760e01b815260040160405180910390fd5b61271061ffff841611156115965760405163891c63df60e01b815260040160405180910390fd5b60cb545f906115b290600160a01b900463ffffffff1642613b1d565b6001600160a01b0386165f90815260d5602090815260408083208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff16908201529192509061160b906126ce565b6001600160a01b0387165f90815260d560205260409020909150611630908684612d37565b6040805163ffffffff8416815261ffff838116602083015287168183015290516001600160a01b0388169133917fd1e028bd664486a46ad26040e999cd2d22e1e9a094ee6afe19fcf64678f16f749181900360600190a3505050505050565b6066546006906040908116036116b85760405163840a48d560e01b815260040160405180910390fd5b836116c2816129d9565b6116df5760405163932d94f760e01b815260040160405180910390fd5b61271061ffff841611156117065760405163891c63df60e01b815260040160405180910390fd5b60cb545f9061172290600160a01b900463ffffffff1642613b1d565b6001600160a01b038781165f90815260d460209081526040808320938a1683529281528282208351606081018552905461ffff80821683526201000082041692820192909252600160201b90910463ffffffff1692810192909252919250611789906126ce565b6001600160a01b038089165f90815260d460209081526040808320938b168352929052209091506117bb908684612d37565b6040805163ffffffff8416815261ffff838116602083015287168183015290516001600160a01b0388811692908a169133917f48e198b6ae357e529204ee53a8e514c470ff77d9cc8e4f7207f8b5d490ae6934919081900360600190a450505050505050565b604080516080810182525f80825260208201819052918101829052606081019190915260ca828154811061185757611857613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161515606082015292915050565b6001600160a01b038281165f90815260d46020908152604080832093851683529281528282208351606081018552905461ffff80821683526201000082041692820192909252600160201b90910463ffffffff169281019290925290611916906126ce565b9392505050565b60ca545f905b63ffffffff811615611984578260ca61193d600184613cf9565b63ffffffff168154811061195357611953613937565b905f5260205f2090600202015f01540361197257611916600182613cf9565b8061197c81613d15565b915050611923565b5060405163504570e360e01b815260040160405180910390fd5b816119a8816129d9565b6119c55760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0384811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611a29573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a4d9190613960565b80611ae1575060405163ba1a84e560e01b81526001600160a01b0384811660048301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063ba1a84e590602401602060405180830381865afa158015611abb573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611adf9190613d33565b115b611afe5760405163fb494ea160e01b815260040160405180910390fd5b610e328383612c69565b611b106121fb565b6001600160a01b038116611b7a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61115d8161292d565b5f54610100900460ff1615808015611ba157505f54600160ff909116105b80611bba5750303b158015611bba57505f5460ff166001145b611c1d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401611b71565b5f805460ff191660011790558015611c3e575f805461ff0019166101001790555b611c4785612255565b611c508661292d565b611c598461297e565b611c6283612719565b611c6b82612ccc565b8015611cb0575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b5f6001610c3160208401846134f6565b606654600390600890811603611cf15760405163840a48d560e01b815260040160405180910390fd5b60cb546001600160a01b03163314611d1c57604051635c427cd960e01b815260040160405180910390fd5b60ca5463ffffffff831610611d44576040516394a8d38960e01b815260040160405180910390fd5b5f60ca8363ffffffff1681548110611d5e57611d5e613937565b905f5260205f20906002020190508060010160089054906101000a900460ff1615611d9c57604051631b14174b60e01b815260040160405180910390fd5b6001810154600160201b900463ffffffff164210611dcd57604051630c36f66560e21b815260040160405180910390fd5b60018101805460ff60401b1916600160401b17905560405163ffffffff8416907fd850e6e5dfa497b72661fa73df2923464eaed9dc2ff1d3cb82bccbfeabe5c41e905f90a2505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e73573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e979190613d4a565b6001600160a01b0316336001600160a01b031614611ec85760405163794821ff60e01b815260040160405180910390fd5b60665480198219811614611eef5760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b6066545f90600190811603611f555760405163840a48d560e01b815260040160405180910390fd5b611f5d612292565b5f5b82811015610e275736848483818110611f7a57611f7a613937565b9050602002810190611f8c919061397b565b335f81815260ce60209081526040808320549051949550939192611fb69290918591879101613ac9565b604051602081830303815290604052805190602001209050611fd7836122eb565b335f90815260cf602090815260408083208484529091529020805460ff19166001908117909155612009908390613af8565b335f81815260ce602052604090819020929092559051829184917f450a367a380c4e339e5ae7340c8464ef27af7781ad9945cfe8abd828f89e628190612050908890613b0b565b60405180910390a4612071333060408601803590610e0b90602089016134f6565b505050600101611f5f565b6066546004906010908116036120a55760405163840a48d560e01b815260040160405180910390fd5b335f90815260d1602052604090205460ff166120d457604051635c427cd960e01b815260040160405180910390fd5b6120dc612292565b5f5b82811015610e2757368484838181106120f9576120f9613937565b905060200281019061210b919061397b565b335f81815260ce602090815260408083205490519495509391926121359290918591879101613ac9565b604051602081830303815290604052805190602001209050612156836122eb565b335f90815260d2602090815260408083208484529091529020805460ff19166001908117909155612188908390613af8565b335f81815260ce602052604090819020929092559051829184917f5251b6fdefcb5d81144e735f69ea4c695fd43b0289ca53dc075033f5fc80068b906121cf908890613b0b565b60405180910390a46121f0333060408601803590610e0b90602089016134f6565b5050506001016120de565b6033546001600160a01b0316331461120d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611b71565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b6002609754036122e45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611b71565b6002609755565b61231d6122f88280613d65565b6123086080850160608601613708565b61231860a0860160808701613708565b612ded565b5f816040013511612341576040516310eb483f60e21b815260040160405180910390fd5b6f4b3b4ca85a86c47a098a223fffffffff816040013511156123765760405163070b5a6f60e21b815260040160405180910390fd5b6123a663ffffffff7f00000000000000000000000000000000000000000000000000000000000000001642613af8565b6123b66080830160608401613708565b63ffffffff16111561115d57604051637ee2b44360e01b815260040160405180910390fd5b6040516001600160a01b03808516602483015283166044820152606481018290526110eb9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526130c5565b5f60ca6124566020850185613708565b63ffffffff168154811061246c5761246c613937565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161515606082015290506124cc838261278a565b5f6124dd60808501606086016134f6565b6001600160a01b038082165f90815260cc602052604090205491925016806125025750805b336001600160a01b0382161461252b57604051635c427cd960e01b815260040160405180910390fd5b5f5b61253a60a0870187613dab565b9050811015611cb0573661255160e0880188613d65565b8381811061256157612561613937565b6001600160a01b0387165f90815260cd602090815260408083209302949094019450929091508290612595908501856134f6565b6001600160a01b03166001600160a01b031681526020019081526020015f20549050808260200135116125db5760405163aa385e8160e01b815260040160405180910390fd5b5f6125ea826020850135613924565b6001600160a01b0387165f90815260cd6020908152604082209293508501803592919061261790876134f6565b6001600160a01b031681526020808201929092526040015f20919091556126589089908390612648908701876134f6565b6001600160a01b03169190613198565b86516001600160a01b03808a1691878216918916907f9543dbd55580842586a951f0386e24d68a5df99ae29e3b216588b45fd684ce319061269c60208901896134f6565b604080519283526001600160a01b039091166020830152810186905260600160405180910390a450505060010161252d565b5f816040015163ffffffff165f036126f357505060cb54600160e01b900461ffff1690565b816040015163ffffffff1642101561270c578151611146565b506020015190565b919050565b60cb546040805163ffffffff600160a01b9093048316815291831660208301527faf557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b3910160405180910390a160cb805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b8060600151156127ad57604051631b14174b60e01b815260040160405180910390fd5b806040015163ffffffff164210156127d857604051631437a2bb60e31b815260040160405180910390fd5b6127e560c0830183613dab565b90506127f460a0840184613dab565b905014612814576040516343714afd60e01b815260040160405180910390fd5b61282160e0830183613d65565b905061283060c0840184613dab565b905014612850576040516343714afd60e01b815260040160405180910390fd5b805161287c906128666040850160208601613708565b6128736040860186613df1565b866060016131c8565b5f5b61288b60a0840184613dab565b9050811015610e325761292560808401356128a960a0860186613dab565b848181106128b9576128b9613937565b90506020020160208101906128ce9190613708565b6128db60c0870187613dab565b858181106128eb576128eb613937565b90506020028101906128fd9190613df1565b61290a60e0890189613d65565b8781811061291a5761291a613937565b90506040020161326c565b60010161287e565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b60cb546040516001600160a01b038084169216907f237b82f438d75fc568ebab484b75b01d9287b9e98b490b7c23221623b6705dbb905f90a360cb80546001600160a01b0319166001600160a01b0392909216919091179055565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af1158015612a5f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111469190613960565b5f612ab1612a918380613d65565b612aa16080860160608701613708565b61231860a0870160808801613708565b5f612abf6040840184613d65565b905011612adf5760405163796cc52560e01b815260040160405180910390fd5b42612af060a0840160808501613708565b612b006080850160608601613708565b612b0a9190613b1d565b63ffffffff1610612b2e5760405163150358a160e21b815260040160405180910390fd5b5f80805b612b3f6040860186613d65565b9050811015612c305736612b566040870187613d65565b83818110612b6657612b66613937565b6040029190910191505f9050612b7f60208301836134f6565b6001600160a01b031603612ba657604051630863a45360e11b815260040160405180910390fd5b612bb360208201826134f6565b6001600160a01b0316836001600160a01b031610612be4576040516310fb47f160e31b815260040160405180910390fd5b5f816020013511612c08576040516310eb483f60e21b815260040160405180910390fd5b612c1560208201826134f6565b9250612c25602082013585613af8565b935050600101612b32565b506f4b3b4ca85a86c47a098a223fffffffff821115612c625760405163070b5a6f60e21b815260040160405180910390fd5b5092915050565b6001600160a01b038083165f81815260cc602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917fbab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca3129190a4505050565b60cb546040805161ffff600160e01b9093048316815291831660208301527fe6cd4edfdcc1f6d130ab35f73d72378f3a642944fb4ee5bd84b7807a81ea1c4e910160405180910390a160cb805461ffff909216600160e01b0261ffff60e01b19909216919091179055565b8254600160201b900463ffffffff164211612d6557604051637b1e25c560e01b815260040160405180910390fd5b8254600160201b900463ffffffff165f03612d9a5760cb548354600160e01b90910461ffff1661ffff19909116178355612db1565b825462010000810461ffff1661ffff199091161783555b825463ffffffff909116600160201b0267ffffffff000000001961ffff90931662010000029290921667ffffffffffff00001990911617179055565b82612e0b5760405163796cc52560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161115612e5857604051630dd0b9f560e21b815260040160405180910390fd5b612e827f000000000000000000000000000000000000000000000000000000000000000082613e48565b63ffffffff1615612ea65760405163ee66470560e01b815260040160405180910390fd5b612ed07f000000000000000000000000000000000000000000000000000000000000000083613e48565b63ffffffff1615612ef457604051633c1a94f160e21b815260040160405180910390fd5b8163ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff1642612f2d9190613924565b11158015612f6757508163ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff1611155b612f845760405163041aa75760e11b815260040160405180910390fd5b5f805b84811015611cb0575f868683818110612fa257612fa2613937565b612fb892602060409092020190810191506134f6565b60405163198f077960e21b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063663c1de490602401602060405180830381865afa158015613021573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130459190613960565b8061306c57506001600160a01b03811673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0145b61308957604051632efd965160e11b815260040160405180910390fd5b806001600160a01b0316836001600160a01b0316106130bb5760405163dfad9ca160e01b815260040160405180910390fd5b9150600101612f87565b5f613119826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132aa9092919063ffffffff16565b905080515f14806131395750808060200190518101906131399190613960565b610e325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611b71565b6040516001600160a01b038316602482015260448101829052610e3290849063a9059cbb60e01b9060640161240f565b6131d3602083613e6f565b6001901b8463ffffffff16106131fb5760405162c6c39d60e71b815260040160405180910390fd5b5f61320582610c22565b905061324f84848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508a92508591505063ffffffff89166132c0565b611cb0576040516369ca16c960e01b815260040160405180910390fd5b613277602083613e6f565b6001901b8463ffffffff16106132a05760405163054ff4df60e51b815260040160405180910390fd5b5f61320582611cb8565b60606132b884845f856132d7565b949350505050565b5f836132cd8685856133ae565b1495945050505050565b6060824710156133385760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401611b71565b5f5f866001600160a01b031685876040516133539190613e82565b5f6040518083038185875af1925050503d805f811461338d576040519150601f19603f3d011682016040523d82523d5f602084013e613392565b606091505b50915091506133a387838387613445565b979650505050505050565b5f602084516133bd9190613e98565b156133db576040516313717da960e21b815260040160405180910390fd5b8260205b8551811161343c576133f2600285613e98565b5f0361341357815f528086015160205260405f20915060028404935061342a565b808601515f528160205260405f2091506002840493505b613435602082613af8565b90506133df565b50949350505050565b606083156134b35782515f036134ac576001600160a01b0385163b6134ac5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611b71565b50816132b8565b6132b883838151156134c85781518083602001fd5b8060405162461bcd60e51b8152600401611b719190613eab565b6001600160a01b038116811461115d575f5ffd5b5f60208284031215613506575f5ffd5b8135611916816134e2565b801515811461115d575f5ffd5b5f5f6040838503121561352f575f5ffd5b823561353a816134e2565b9150602083013561354a81613511565b809150509250929050565b5f60208284031215613565575f5ffd5b5035919050565b5f6040828403121561357c575f5ffd5b50919050565b5f60408284031215613592575f5ffd5b611916838361356c565b5f5f83601f8401126135ac575f5ffd5b50813567ffffffffffffffff8111156135c3575f5ffd5b6020830191508360208260051b85010111156135dd575f5ffd5b9250929050565b5f5f602083850312156135f5575f5ffd5b823567ffffffffffffffff81111561360b575f5ffd5b6136178582860161359c565b90969095509350505050565b5f610100828403121561357c575f5ffd5b5f5f60408385031215613645575f5ffd5b823567ffffffffffffffff81111561365b575f5ffd5b61366785828601613623565b925050602083013561354a816134e2565b803563ffffffff81168114612714575f5ffd5b5f5f6040838503121561369c575f5ffd5b823591506136ac60208401613678565b90509250929050565b5f5f5f604084860312156136c7575f5ffd5b833567ffffffffffffffff8111156136dd575f5ffd5b6136e98682870161359c565b90945092505060208401356136fd816134e2565b809150509250925092565b5f60208284031215613718575f5ffd5b61191682613678565b5f60208284031215613731575f5ffd5b813560ff81168114611916575f5ffd5b5f60208284031215613751575f5ffd5b813567ffffffffffffffff811115613767575f5ffd5b6132b884828501613623565b5f5f60408385031215613784575f5ffd5b823561378f816134e2565b946020939093013593505050565b5f5f604083850312156137ae575f5ffd5b82356137b9816134e2565b9150602083013561354a816134e2565b5f5f5f604084860312156137db575f5ffd5b83356137e6816134e2565b9250602084013567ffffffffffffffff811115613801575f5ffd5b61380d8682870161359c565b9497909650939450505050565b803561ffff81168114612714575f5ffd5b5f6020828403121561383b575f5ffd5b6119168261381a565b5f5f60408385031215613855575f5ffd5b8235613860816134e2565b91506136ac6020840161381a565b5f5f5f60608486031215613880575f5ffd5b833561388b816134e2565b9250602084013561389b816134e2565b91506138a96040850161381a565b90509250925092565b5f5f5f5f5f60a086880312156138c6575f5ffd5b85356138d1816134e2565b94506020860135935060408601356138e8816134e2565b92506138f660608701613678565b91506139046080870161381a565b90509295509295909350565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561114657611146613910565b634e487b7160e01b5f52603260045260245ffd5b5f8161395957613959613910565b505f190190565b5f60208284031215613970575f5ffd5b815161191681613511565b5f8235609e1983360301811261398f575f5ffd5b9190910192915050565b5f5f8335601e198436030181126139ae575f5ffd5b830160208101925035905067ffffffffffffffff8111156139cd575f5ffd5b8060061b36038213156135dd575f5ffd5b8183526020830192505f815f5b84811015613a415781356139fe816134e2565b6001600160a01b0316865260208201356bffffffffffffffffffffffff8116808214613a28575f5ffd5b60208801525060409586019591909101906001016139eb565b5093949350505050565b5f613a568283613999565b60a08552613a6860a0860182846139de565b9150506020830135613a79816134e2565b6001600160a01b031660208501526040838101359085015263ffffffff613aa260608501613678565b16606085015263ffffffff613ab960808501613678565b1660808501528091505092915050565b60018060a01b0384168152826020820152606060408201525f613aef6060830184613a4b565b95945050505050565b8082018082111561114657611146613910565b602081525f6119166020830184613a4b565b63ffffffff818116838216019081111561114657611146613910565b5f823560fe1983360301811261398f575f5ffd5b5f823560be1983360301811261398f575f5ffd5b5f5f8335601e19843603018112613b76575f5ffd5b830160208101925035905067ffffffffffffffff811115613b95575f5ffd5b8036038213156135dd575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f613bd68283613999565b60c08552613be860c0860182846139de565b9150506020830135613bf9816134e2565b6001600160a01b03166020850152613c146040840184613999565b858303604087015280835290915f91906020015b81831015613c63578335613c3b816134e2565b6001600160a01b03168152602084810135908201526040938401936001939093019201613c28565b613c6f60608701613678565b63ffffffff811660608901529350613c8960808701613678565b63ffffffff811660808901529350613ca460a0870187613b61565b9450925086810360a08801526133a3818585613ba3565b60018060a01b0384168152826020820152606060408201525f613aef6060830184613bcb565b828152604060208201525f6132b86040830184613bcb565b63ffffffff828116828216039081111561114657611146613910565b5f63ffffffff821680613d2a57613d2a613910565b5f190192915050565b5f60208284031215613d43575f5ffd5b5051919050565b5f60208284031215613d5a575f5ffd5b8151611916816134e2565b5f5f8335601e19843603018112613d7a575f5ffd5b83018035915067ffffffffffffffff821115613d94575f5ffd5b6020019150600681901b36038213156135dd575f5ffd5b5f5f8335601e19843603018112613dc0575f5ffd5b83018035915067ffffffffffffffff821115613dda575f5ffd5b6020019150600581901b36038213156135dd575f5ffd5b5f5f8335601e19843603018112613e06575f5ffd5b83018035915067ffffffffffffffff821115613e20575f5ffd5b6020019150368190038213156135dd575f5ffd5b634e487b7160e01b5f52601260045260245ffd5b5f63ffffffff831680613e5d57613e5d613e34565b8063ffffffff84160691505092915050565b5f82613e7d57613e7d613e34565b500490565b5f82518060208501845e5f920191825250919050565b5f82613ea657613ea6613e34565b500690565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f8301168401019150509291505056fea26469706673582212204ae31a4469c20cd0a75fbdf2da021a52fee24139fe24c20c7c2e5b1186e123ea64736f6c634300081b0033",
    "sourceMap": "1060:26105:107:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5782:72:108;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;567:14:228;;560:22;542:41;;530:2;515:18;5782:72:108;;;;;;;;3550:41;;;;;;;;867:10:228;855:23;;;837:42;;825:2;810:18;3550:41:108;693:192:228;26341:459:107;;;:::i;:::-;;;;;;1052:4:228;1094:3;1083:9;1079:19;1071:27;;1131:6;1125:13;1114:9;1107:32;1207:10;1199:4;1191:6;1187:17;1181:24;1177:41;1170:4;1159:9;1155:20;1148:71;1287:10;1279:4;1271:6;1267:17;1261:24;1257:41;1250:4;1239:9;1235:20;1228:71;1369:4;1361:6;1357:17;1351:24;1344:32;1337:40;1330:4;1319:9;1315:20;1308:70;890:494;;;;;12237:292:107;;;;;;:::i;:::-;;:::i;:::-;;3685:49:108;;;;;3368:401:138;;;;;;:::i;:::-;;:::i;24581:217:107:-;;;;;;:::i;:::-;;:::i;:::-;;;2719:25:228;;;2707:2;2692:18;24581:217:107;2573:177:228;4906:60:108;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4906:60:108;;;;;;-1:-1:-1;;;;;2919:32:228;;;2901:51;;2889:2;2874:18;4906:60:108;2755:203:228;4297:966:107;;;;;;:::i;:::-;;:::i;3403:46:108:-;;;;;2714:49;;;;;4490:29;;;;;-1:-1:-1;;;4490:29:108;;;;;;7720:208:107;;;;;;:::i;:::-;;:::i;8304:1009::-;;;;;;:::i;:::-;;:::i;7974:284::-;;;;;;:::i;:::-;;:::i;354:59:136:-;;;;;25556:163:107;;;;;;:::i;:::-;;:::i;:::-;;;6318:6:228;6306:19;;;6288:38;;6276:2;6261:18;25556:163:107;6144:188:228;4587:48:108;;;;;-1:-1:-1;;;4587:48:108;;;;;;10465:140:107;;;;;;:::i;:::-;;:::i;3805:85:138:-;;;:::i;4539:163::-;;;;;;:::i;:::-;4671:7;;4642:1;:10;;;;;;;;4671:14;;;4670:24;;4539:163;4416:87;4489:7;;4416:87;;25106:189:107;;;;;;:::i;:::-;;:::i;4718:38:108:-;;;;;-1:-1:-1;;;4718:38:108;;;;;;5388:93;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2064:101:24;;;:::i;25765:117:107:-;25850:18;:25;25765:117;;12054:137;;;;;;:::i;:::-;;:::i;5059:97:108:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1964:47:138;;;;;1441:85:24;1513:6;;-1:-1:-1;;;;;1513:6:24;1441:85;;2402:104:108;;2463:42;2402:104;;26136:159:107;;;:::i;6389:1285::-;;;;;;:::i;:::-;;:::i;3109:52:108:-;;;;;9893:145:107;;;;;;:::i;:::-;;:::i;10651:128::-;;;;;;:::i;:::-;;:::i;5974:103:108:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;11460:548:107;;;;;;:::i;:::-;;:::i;5224:60:108:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3260:44;;;;;5593:96;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2832:53;;;;;10825:589:107;;;;;;:::i;:::-;;:::i;25928:162::-;;;;;;:::i;:::-;;:::i;25341:169::-;;;;;;:::i;:::-;;:::i;26846:317::-;;;;;;:::i;:::-;;:::i;2594:53:108:-;;;;;6259:94;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;10084:335:107;;;;;;:::i;:::-;;:::i;2314:198:24:-;;;;;;:::i;:::-;;:::i;2761:455:107:-;;;;;;:::i;:::-;;:::i;24844:216::-;;;;;;:::i;:::-;;:::i;9359:488::-;;;;;;:::i;:::-;;:::i;3926:454:138:-;;;;;;:::i;:::-;;:::i;4366:29:108:-;;;;;-1:-1:-1;;;;;4366:29:108;;;3343:908:107;;;;;;:::i;:::-;;:::i;5309:1034::-;;;;;;:::i;:::-;;:::i;26341:459::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26463:18:107;:25;26446:253;26490:5;;26446:253;;26516:28;26547:18;26566:5;26570:1;26566;:5;:::i;:::-;26547:25;;;;;;;;:::i;:::-;;;;;;;;;;26516:56;;;;;;;;26547:25;;;;;;;;26516:56;;;;;;;;;;;;;;;;;;-1:-1:-1;;;26516:56:107;;;;;;;;;-1:-1:-1;;;26516:56:107;;;;;;;;;;;;;;;;-1:-1:-1;26516:56:107;26590:53;;;26627:4;:16;;;26608:35;;:15;:35;;26590:53;26586:103;;;26670:4;26341:459;-1:-1:-1;;26341:459:107:o;26586:103::-;-1:-1:-1;26497:3:107;;;;:::i;:::-;;;;26446:253;;;-1:-1:-1;;26752:41:107;;;;;;;;-1:-1:-1;26752:41:107;;;;;;;;;;;;;;;;;;;;;;;26341:459::o;12237:292::-;1334:13:24;:11;:13::i;:::-;-1:-1:-1;;;;;12354:36:107;::::1;12337:14;12354:36:::0;;;:24:::1;:36;::::0;;;;;;12405:59;;12354:36:::1;::::0;;::::1;::::0;12405:59;::::1;;::::0;;::::1;;::::0;::::1;::::0;12337:14;12405:59:::1;-1:-1:-1::0;;;;;;12474:36:107;;;::::1;;::::0;;;:24:::1;:36;::::0;;;;:48;;-1:-1:-1;;12474:48:107::1;::::0;::::1;;::::0;;;::::1;::::0;;12237:292::o;3368:401:138:-;2398:35;;-1:-1:-1;;;2398:35:138;;2422:10;2398:35;;;2901:51:228;2398:14:138;-1:-1:-1;;;;;2398:23:138;;;;2874:18:228;;2398:35:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:138;;;;;;;;;;;;3482:7:::1;::::0;3631:37;;::::1;3630:62:::0;::::1;3622:97;;;;-1:-1:-1::0;;;3622:97:138::1;;;;;;;;;;;;3729:33;3746:15;3729:16;:33::i;:::-;3442:327;3368:401:::0;:::o;24581:217:107:-;24685:7;;24756:11;;;;:4;:11;:::i;:::-;24769:4;:20;;;24721:69;;;;;;;;;13437:3:228;13415:16;;;;-1:-1:-1;;;;;;13411:36:228;13399:49;;13485:2;13481:15;;;;-1:-1:-1;;13477:53:228;13473:1;13464:11;;13457:74;13556:2;13547:12;;13540:28;13593:2;13584:12;;13218:384;24721:69:107;;;;;;;;;;;;;24711:80;;;;;;24704:87;;24581:217;;;:::o;4297:966::-;4671:7:138;;896:1:108;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;1484:10:107::1;1459:36;::::0;;;:24:::1;:36;::::0;;;;;::::1;;1451:67;;;;-1:-1:-1::0;;;1451:67:107::1;;;;;;;;;;;;2505:21:31::2;:19;:21::i;:::-;4516:9:107::3;4511:746;4531:29:::0;;::::3;4511:746;;;4581:44;4628:18;;4647:1;4628:21;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;4695:10;4663:13;4679:27:::0;;;:15:::3;:27;::::0;;;;;;;;4768:48;;4581:68;;-1:-1:-1;4679:27:107;4663:13;;4768:48:::3;::::0;4695:10;;4679:27;;4581:68;;4768:48:::3;;:::i;:::-;;;;;;;;;;;;;4758:59;;;;;;4720:97;;4832:45;4859:17;4832:26;:45::i;:::-;4922:10;4892:41;::::0;;;:29:::3;:41;::::0;;;;;;;:70;;;;;;;;:77;;-1:-1:-1;;4892:77:107::3;4965:4;4892:77:::0;;::::3;::::0;;;5013:9:::3;::::0;:5;;:9:::3;:::i;:::-;4999:10;4983:27;::::0;;;:15:::3;:27;::::0;;;;;;:39;;;;5042:97;;5092:27;;5085:5;;5042:97:::3;::::0;::::3;::::0;5121:17;;5042:97:::3;:::i;:::-;;;;;;;;5153:93;5194:10;5214:4;5221:24;::::0;::::3;::::0;::::3;::::0;5153:23:::3;::::0;::::3;::::0;::::3;;:::i;:::-;-1:-1:-1::0;;;;;5153:40:107::3;::::0;:93;;:40:::3;:93::i;:::-;-1:-1:-1::0;;;4562:3:107::3;;4511:746;;;;2547:20:31::2;1787:1:::0;3053:7;:22;2873:209;2547:20:::2;4297:966:107::0;;;:::o;7720:208::-;4671:7:138;;1011:1:108;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;7890:31:107::2;7904:5;7911:9;7890:13;:31::i;:::-;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;8304:1009:107;4671:7:138;;1140:1:108;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;1342:14:107::1;::::0;-1:-1:-1;;;;;1342:14:107::1;1328:10;:28;1320:59;;;;-1:-1:-1::0;;;1320:59:107::1;;;;;;;;;;;;8538:34:::2;::::0;::::2;-1:-1:-1::0;;;8538:34:107;;::::2;::::0;::::2;8505:67:::0;;::::2;;8484:137;;;;-1:-1:-1::0;;;8484:137:107::2;;;;;;;;;;;;8672:15;8639:30;:48;;;8631:90;;;;-1:-1:-1::0;;;8631:90:107::2;;;;;;;;;;;;8757:18;:25:::0;8840:15:::2;::::0;8731:16:::2;::::0;8814:41:::2;::::0;-1:-1:-1;;;8840:15:107;::::2;;;8821;8814:41;:::i;:::-;8902:215;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;;::::0;;::::2;::::0;;;;;::::2;::::0;;;;;;-1:-1:-1;8902:215:107;;;;;;8865:18:::2;:262:::0;;8902:215;8865:262;::::2;::::0;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;::::2;-1:-1:-1::0;;8865:262:107;;;;;;;-1:-1:-1;;;8865:262:107;;::::2;::::0;;;::::2;::::0;;;::::2;-1:-1:-1::0;;;;8865:262:107::2;-1:-1:-1::0;;;8865:262:107;::::2;;::::0;;;::::2;::::0;;;::::2;::::0;;;9137:34:::2;:67:::0;;-1:-1:-1;;;;9137:67:107::2;-1:-1:-1::0;;;9137:67:107;::::2;;::::0;;9219:87;;837:42:228;;;8902:215:107;;-1:-1:-1;8902:215:107;;9219:87;;::::2;::::0;::::2;::::0;810:18:228;9219:87:107::2;;;;;;;8474:839;;8304:1009:::0;;;:::o;7974:284::-;4671:7:138;;1011:1:108;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;8153:9:107::2;8148:104;8168:17:::0;;::::2;8148:104;;;8206:35;8220:6;;8227:1;8220:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;8231;8206:13;:35::i;:::-;8187:3;;8148:104;;;;2547:20:31::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;7974:284:107::0;;;;:::o;25556:163::-;-1:-1:-1;;;;;25682:29:107;;25639:6;25682:29;;;:19;:29;;;;;;;;25664:48;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25664:48:107;;;;;;;;;;;:17;:48::i;:::-;25657:55;25556:163;-1:-1:-1;;25556:163:107:o;10465:140::-;1334:13:24;:11;:13::i;:::-;10561:37:107::1;10581:16;10561:19;:37::i;:::-;10465:140:::0;:::o;3805:85:138:-;2398:35;;-1:-1:-1;;;2398:35:138;;2422:10;2398:35;;;2901:51:228;2398:14:138;-1:-1:-1;;;;;2398:23:138;;;;2874:18:228;;2398:35:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:138;;;;;;;;;;;;3855:28:::1;-1:-1:-1::0;;3855:16:138::1;:28::i;:::-;3805:85::o:0;25106:189:107:-;25196:4;25212:55;25224:5;25231:18;25250:15;;;;25224:5;25250:15;:::i;:::-;25231:35;;;;;;;;;;:::i;:::-;;;;;;;;;;25212:55;;;;;;;;25231:35;;;;;;;;25212:55;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25212:55:107;;;;;;;;;-1:-1:-1;;;25212:55:107;;;;;;;;;;;:11;:55::i;:::-;-1:-1:-1;25284:4:107;;25106:189;-1:-1:-1;25106:189:107:o;2064:101:24:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;12054:137:107:-:0;1334:13:24;:11;:13::i;:::-;12149:35:107::1;12168:15;12149:18;:35::i;26136:159::-:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26239:18:107;26258:25;;:29;;26286:1;;26258:29;:::i;:::-;26239:49;;;;;;;;:::i;:::-;;;;;;;;;;26232:56;;;;;;;;26239:49;;;;;;;;26232:56;;;;;;;;;;;;;;;;;;-1:-1:-1;;;26232:56:107;;;;;;;;;-1:-1:-1;;;26232:56:107;;;;;;;;;;;;;-1:-1:-1;26136:159:107:o;6389:1285::-;4671:7:138;;1462:1:108;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;6646:3:107::1;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:136::1;;;;;;;;;;;;2505:21:31::2;:19;:21::i;:::-;6679:9:107::3;6674:994;6694:45:::0;;::::3;6674:994;;;6760:76;6855:34;;6890:1;6855:37;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6922:20:107;::::3;6906:13;6922:20:::0;;;:15:::3;:20;::::0;;;;;;;;7030:57;;6760:132;;-1:-1:-1;6922:20:107;7030:57:::3;::::0;6938:3;;6922:20;;6760:132;;7030:57:::3;;:::i;:::-;;;;;;;;;;;;;7020:68;;;;;;6956:132;;7103:19;7125:77;7168:33;7125:42;:77::i;:::-;-1:-1:-1::0;;;;;7217:47:107;::::3;;::::0;;;:42:::3;:47;::::0;;;;;;;:86;;;;;;;;:93;;-1:-1:-1;;7217:93:107::3;7306:4;7217:93:::0;;::::3;::::0;;;7103:99;;-1:-1:-1;7347:9:107::3;::::0;:5;;:9:::3;:::i;:::-;-1:-1:-1::0;;;;;7324:20:107;::::3;;::::0;;;:15:::3;:20;::::0;;;;;;:32;;;;7376:171;;7454:37;;7324:20;7437:10:::3;::::0;7376:171:::3;::::0;::::3;::::0;7493:5;;7500:33;;7376:171:::3;:::i;:::-;;;;;;;;7561:96;7618:10;7638:4;7645:11:::0;7561:39:::3;::::0;;;::::3;::::0;::::3;;:::i;:96::-;-1:-1:-1::0;;6741:3:107::3;::::0;;::::3;::::0;-1:-1:-1;6674:994:107::3;::::0;-1:-1:-1;6674:994:107::3;;;2547:20:31::2;1787:1:::0;3053:7;:22;2873:209;2547:20:::2;3111:1:138::1;6389:1285:107::0;;;;:::o;9893:145::-;9983:10;10003:28;9983:10;10023:7;10003:11;:28::i;10651:128::-;1334:13:24;:11;:13::i;:::-;10741:31:107::1;10766:5;10741:24;:31::i;11460:548::-:0;4671:7:138;;1714:1:108;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;11608:8:107::1;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:136::1;;;;;;;;;;;;2328:6:108::2;11636:28:107;::::0;::::2;;;11628:56;;;;-1:-1:-1::0;;;11628:56:107::2;;;;;;;;;;;;11742:15;::::0;11695:18:::2;::::0;11716:41:::2;::::0;-1:-1:-1;;;11742:15:107;::::2;;;11723;11716:41;:::i;:::-;-1:-1:-1::0;;;;;11803:29:107;::::2;11767:15;11803:29:::0;;;:19:::2;:29;::::0;;;;;;;11785:48;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;::::2;;::::0;;::::2;::::0;;;;-1:-1:-1;;;11785:48:107;;::::2;;;::::0;;;;11695:62;;-1:-1:-1;11767:15:107;11785:48:::2;::::0;:17:::2;:48::i;:::-;-1:-1:-1::0;;;;;11861:29:107;::::2;;::::0;;;:19:::2;:29;::::0;;;;11767:66;;-1:-1:-1;11843:68:107::2;::::0;11892:5;11899:11;11843:17:::2;:68::i;:::-;11927:74;::::0;;21920:10:228;21908:23;;21890:42;;21980:6;21968:19;;;21963:2;21948:18;;21941:47;22024:19;;22004:18;;;21997:47;11927:74:107;;-1:-1:-1;;;;;11927:74:107;::::2;::::0;11950:10:::2;::::0;11927:74:::2;::::0;;;;21878:2:228;11927:74:107;;::::2;11618:390;;3111:1:138::1;11460:548:107::0;;;:::o;10825:589::-;4671:7:138;;1589:1:108;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;10996:8:107::1;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:136::1;;;;;;;;;;;;2328:6:108::2;11024:28:107;::::0;::::2;;;11016:56;;;;-1:-1:-1::0;;;11016:56:107::2;;;;;;;;;;;;11130:15;::::0;11083:18:::2;::::0;11104:41:::2;::::0;-1:-1:-1;;;11130:15:107;::::2;;;11111;11104:41;:::i;:::-;-1:-1:-1::0;;;;;11191:30:107;;::::2;11155:15;11191:30:::0;;;:20:::2;:30;::::0;;;;;;;:35;;::::2;::::0;;;;;;;;11173:54;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;::::2;;::::0;;::::2;::::0;;;;-1:-1:-1;;;11173:54:107;;::::2;;;::::0;;;;;;;11083:62;;-1:-1:-1;11173:54:107::2;::::0;:17:::2;:54::i;:::-;-1:-1:-1::0;;;;;11255:30:107;;::::2;;::::0;;;:20:::2;:30;::::0;;;;;;;:35;;::::2;::::0;;;;;;11155:72;;-1:-1:-1;11237:74:107::2;::::0;11292:5;11299:11;11237:17:::2;:74::i;:::-;11327:80;::::0;;21920:10:228;21908:23;;21890:42;;21980:6;21968:19;;;21963:2;21948:18;;21941:47;22024:19;;22004:18;;;21997:47;11327:80:107;;-1:-1:-1;;;;;11327:80:107;;::::2;::::0;;;::::2;::::0;11351:10:::2;::::0;11327:80:::2;::::0;;;;;21878:2:228;11327:80:107;;::::2;11006:408;;3111:1:138::1;10825:589:107::0;;;;:::o;25928:162::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26058:18:107;26077:5;26058:25;;;;;;;;:::i;:::-;;;;;;;;;;26051:32;;;;;;;;26058:25;;;;;;;;26051:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;26051:32:107;;;;;;;;;-1:-1:-1;;;26051:32:107;;;;;;;;;;;;;-1:-1:-1;;25928:162:107:o;25341:169::-;-1:-1:-1;;;;;25467:30:107;;;25424:6;25467:30;;;:20;:30;;;;;;;;:35;;;;;;;;;;;25449:54;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25449:54:107;;;;;;;;;;;;25424:6;25449:54;;:17;:54::i;:::-;25442:61;25341:169;-1:-1:-1;;;25341:169:107:o;26846:317::-;26970:18;:25;26929:6;;26947:180;26998:5;;;;26947:180;;27062:8;27028:18;27047:5;27051:1;27047;:5;:::i;:::-;27028:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;:42;27024:93;;27097:5;27101:1;27097;:5;:::i;27024:93::-;27005:3;;;;:::i;:::-;;;;26947:180;;;;27143:13;;-1:-1:-1;;;27143:13:107;;;;;;;;;;;10084:335;10162:6;713:22:136;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:136;;;;;;;;;;;;10258:36:107::1;::::0;-1:-1:-1;;;10258:36:107;;-1:-1:-1;;;;;2919:32:228;;;10258:36:107::1;::::0;::::1;2901:51:228::0;10258:17:107::1;:28;::::0;::::1;::::0;2874:18:228;;10258:36:107::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;;-1:-1:-1::0;10298:45:107::1;::::0;-1:-1:-1;;;10298:45:107;;-1:-1:-1;;;;;2919:32:228;;;10298:45:107::1;::::0;::::1;2901:51:228::0;10346:1:107::1;::::0;10298:17:::1;:37:::0;;::::1;::::0;::::1;::::0;2874:18:228;;10298:45:107::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;10258:89;10237:137;;;;-1:-1:-1::0;;;10237:137:107::1;;;;;;;;;;;;10384:28;10396:6;10404:7;10384:11;:28::i;2314:198:24:-:0;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:24;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:24;;22811:2:228;2394:73:24::1;::::0;::::1;22793:21:228::0;22850:2;22830:18;;;22823:30;22889:34;22869:18;;;22862:62;-1:-1:-1;;;22940:18:228;;;22933:36;22986:19;;2394:73:24::1;;;;;;;;;2477:28;2496:8;2477:18;:28::i;2761:455:107:-:0;3279:19:30;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:30;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:30;1713:19:38;:23;;;3387:66:30;;-1:-1:-1;3436:12:30;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:30;;23218:2:228;3325:201:30;;;23200:21:228;23257:2;23237:18;;;23230:30;23296:34;23276:18;;;23269:62;-1:-1:-1;;;23347:18:228;;;23340:44;23401:19;;3325:201:30;23016:410:228;3325:201:30;3536:12;:16;;-1:-1:-1;;3536:16:30;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:30;;;;;3562:65;2985:37:107::1;3002:19;2985:16;:37::i;:::-;3032:32;3051:12;3032:18;:32::i;:::-;3074:35;3093:15;3074:18;:35::i;:::-;3119:37;3139:16;3119:19;:37::i;:::-;3166:43;3191:17;3166:24;:43::i;:::-;3651:14:30::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:30;;;3721:14;;-1:-1:-1;23583:36:228;;3721:14:30;;23571:2:228;23556:18;3721:14:30;;;;;;;3647:99;3269:483;2761:455:107;;;;;:::o;24844:216::-;24946:7;2036:1:108;25016:10:107;;;;:4;:10;:::i;9359:488::-;4671:7:138;;1140:1:108;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;1342:14:107::1;::::0;-1:-1:-1;;;;;1342:14:107::1;1328:10;:28;1320:59;;;;-1:-1:-1::0;;;1320:59:107::1;;;;;;;;;;;;9517:18:::2;:25:::0;9505:37:::2;::::0;::::2;;9497:66;;;;-1:-1:-1::0;;;9497:66:107::2;;;;;;;;;;;;9573:29;9605:18;9624:9;9605:29;;;;;;;;;;:::i;:::-;;;;;;;;;;;9573:61;;9653:4;:13;;;;;;;;;;;;9652:14;9644:39;;;;-1:-1:-1::0;;;9644:39:107::2;;;;;;;;;;;;9719:16;::::0;::::2;::::0;-1:-1:-1;;;9719:16:107;::::2;;;9701:15;:34;9693:67;;;;-1:-1:-1::0;;;9693:67:107::2;;;;;;;;;;;;9786:4;9770:13:::0;::::2;:20:::0;;-1:-1:-1;;;;9770:20:107::2;-1:-1:-1::0;;;9770:20:107::2;::::0;;9805:35:::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;9770:20;;9805:35:::2;9487:360;9359:488:::0;;:::o;3926:454:138:-;2620:14;-1:-1:-1;;;;;2620:23:138;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2606:39:138;:10;-1:-1:-1;;;;;2606:39:138;;2598:64;;;;-1:-1:-1;;;2598:64:138;;;;;;;;;;;;4044:7:::1;::::0;4238:20;::::1;4215:16:::0;::::1;4189:43:::0;::::1;4188:71;4180:106;;;;-1:-1:-1::0;;;4180:106:138::1;;;;;;;;;;;;4296:7;:25:::0;;;4336:37:::1;::::0;2719:25:228;;;4345:10:138::1;::::0;4336:37:::1;::::0;2707:2:228;2692:18;4336:37:138::1;;;;;;;4004:376;3926:454:::0;:::o;3343:908:107:-;4671:7:138;;751:1:108;;4642::138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;2505:21:31::1;:19;:21::i;:::-;3528:9:107::2;3523:722;3543:29:::0;;::::2;3523:722;;;3593:44;3640:18;;3659:1;3640:21;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3707:10;3675:13;3691:27:::0;;;:15:::2;:27;::::0;;;;;;;;3774:48;;3593:68;;-1:-1:-1;3691:27:107;3675:13;;3774:48:::2;::::0;3707:10;;3691:27;;3593:68;;3774:48:::2;;:::i;:::-;;;;;;;;;;;;;3764:59;;;;;;3732:91;;3838:45;3865:17;3838:26;:45::i;:::-;3925:10;3898:38;::::0;;;:26:::2;:38;::::0;;;;;;;:61;;;;;;;;:68;;-1:-1:-1;;3898:68:107::2;3962:4;3898:68:::0;;::::2;::::0;;;4010:9:::2;::::0;:5;;:9:::2;:::i;:::-;3996:10;3980:27;::::0;;;:15:::2;:27;::::0;;;;;;:39;;;;4039:88;;4086:21;;4079:5;;4039:88:::2;::::0;::::2;::::0;4109:17;;4039:88:::2;:::i;:::-;;;;;;;;4141:93;4182:10;4202:4;4209:24;::::0;::::2;::::0;::::2;::::0;4141:23:::2;::::0;::::2;::::0;::::2;;:::i;:93::-;-1:-1:-1::0;;;3574:3:107::2;;3523:722;;5309:1034:::0;4671:7:138;;1290:1:108;;4642:10:138;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:138;;;;;;;;;;;;1484:10:107::1;1459:36;::::0;;;:24:::1;:36;::::0;;;;;::::1;;1451:67;;;;-1:-1:-1::0;;;1451:67:107::1;;;;;;;;;;;;2505:21:31::2;:19;:21::i;:::-;5531:9:107::3;5526:811;5546:29:::0;;::::3;5526:811;;;5596:44;5643:18;;5662:1;5643:21;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;5710:10;5678:13;5694:27:::0;;;:15:::3;:27;::::0;;;;;;;;5790:48;;5596:68;;-1:-1:-1;5694:27:107;5678:13;;5790:48:::3;::::0;5710:10;;5694:27;;5596:68;;5790:48:::3;;:::i;:::-;;;;;;;;;;;;;5780:59;;;;;;5735:104;;5854:45;5881:17;5854:26;:45::i;:::-;5951:10;5914:48;::::0;;;:36:::3;:48;::::0;;;;;;;:84;;;;;;;;:91;;-1:-1:-1;;5914:91:107::3;6001:4;5914:91:::0;;::::3;::::0;;;6049:9:::3;::::0;:5;;:9:::3;:::i;:::-;6035:10;6019:27;::::0;;;:15:::3;:27;::::0;;;;;;:39;;;;6078:141;;6152:34;;6145:5;;6078:141:::3;::::0;::::3;::::0;6188:17;;6078:141:::3;:::i;:::-;;;;;;;;6233:93;6274:10;6294:4;6301:24;::::0;::::3;::::0;::::3;::::0;6233:23:::3;::::0;::::3;::::0;::::3;;:::i;:93::-;-1:-1:-1::0;;;5577:3:107::3;;5526:811;;1599:130:24::0;1513:6;;-1:-1:-1;;;;;1513:6:24;929:10:39;1662:23:24;1654:68;;;;-1:-1:-1;;;1654:68:24;;24493:2:228;1654:68:24;;;24475:21:228;;;24512:18;;;24505:30;24571:34;24551:18;;;24544:62;24623:18;;1654:68:24;24291:356:228;4806:157:138;4887:7;:22;;;4924:32;;2719:25:228;;;4931:10:138;;4924:32;;2707:2:228;2692:18;4924:32:138;;;;;;;4806:157;:::o;2580:287:31:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:31;;24854:2:228;2704:63:31;;;24836:21:228;24893:2;24873:18;;;24866:30;24932:33;24912:18;;;24905:61;24983:18;;2704:63:31;24652:355:228;2704:63:31;1830:1;2842:7;:18;2580:287::o;18249:557:107:-;18369:160;18415:42;:17;;:42;:::i;:::-;18459:32;;;;;;;;:::i;:::-;18493:26;;;;;;;;:::i;:::-;18369:32;:160::i;:::-;18574:1;18547:17;:24;;;:28;18539:53;;;;-1:-1:-1;;;18539:53:107;;;;;;;;;;;;2210:8:108;18610:17:107;:24;;;:46;;18602:75;;;;-1:-1:-1;;;18602:75:107;;;;;;;;;;;;18731:35;;18749:17;18731:35;:15;:35;:::i;:::-;18695:32;;;;;;;;:::i;:::-;:71;;;;18687:112;;;;-1:-1:-1;;;18687:112:107;;;;;;;;;;;1355:203:72;1482:68;;-1:-1:-1;;;;;25824:32:228;;;1482:68:72;;;25806:51:228;25893:32;;25873:18;;;25866:60;25942:18;;;25935:34;;;1455:96:72;;1475:5;;-1:-1:-1;;;1505:27:72;25779:18:228;;1482:68:72;;;;-1:-1:-1;;1482:68:72;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:72;-1:-1:-1;;;;;;1482:68:72;;;;;;;;;;1455:19;:96::i;12828:1302:107:-;12924:28;12955:18;12974:15;;;;:5;:15;:::i;:::-;12955:35;;;;;;;;;;:::i;:::-;;;;;;;;;;12924:66;;;;;;;;12955:35;;;;;;;;12924:66;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12924:66:107;;;;;;;;;-1:-1:-1;;;12924:66:107;;;;;;;;;;;;-1:-1:-1;13000:24:107;13012:5;12924:66;13000:11;:24::i;:::-;13135:14;13152:23;;;;:16;;;:23;:::i;:::-;-1:-1:-1;;;;;13203:18:107;;;13185:15;13203:18;;;:10;:18;;;;;;13135:40;;-1:-1:-1;13203:18:107;;13231:68;;-1:-1:-1;13282:6:107;13231:68;13316:10;-1:-1:-1;;;;;13316:21:107;;;13308:52;;;;-1:-1:-1;;;13308:52:107;;;;;;;;;;;;13375:9;13370:754;13394:18;;;;:5;:18;:::i;:::-;:25;;13390:1;:29;13370:754;;;13440:38;13481:17;;;;:5;:17;:::i;:::-;13499:1;13481:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;13548:25:107;;13516:29;13548:25;;;:17;:25;;;;13481:20;13548:25;;;13481:20;;;;;;;-1:-1:-1;13516:29:107;13548:25;;-1:-1:-1;13516:29:107;;13574:15;;;;13481:20;13574:15;:::i;:::-;-1:-1:-1;;;;;13548:42:107;-1:-1:-1;;;;;13548:42:107;;;;;;;;;;;;;13516:74;;13643:21;13612:9;:28;;;:52;13604:94;;;;-1:-1:-1;;;13604:94:107;;;;;;;;;;;;13783:19;13805:52;13836:21;13805:28;;;;:52;:::i;:::-;-1:-1:-1;;;;;13871:25:107;;;;;;:17;13916:28;13871:25;;;;;;13783:74;;-1:-1:-1;13916:28:107;;;;;13871:25;;13897:15;;13916:9;13897:15;:::i;:::-;-1:-1:-1;;;;;13871:42:107;;;;;;;;;;;;;-1:-1:-1;13871:42:107;:73;;;;13959:52;;13988:9;;13999:11;;13959:15;;;;:9;:15;:::i;:::-;-1:-1:-1;;;;;13959:28:107;;:52;:28;:52::i;:::-;14045:9;;-1:-1:-1;;;;;14030:83:107;;;;;;;;;;;;;14084:15;;;;:9;:15;:::i;:::-;14030:83;;;27337:25:228;;;-1:-1:-1;;;;;27398:32:228;;;27393:2;27378:18;;27371:60;27447:18;;27440:34;;;27325:2;27310:18;14030:83:107;;;;;;;-1:-1:-1;;;13421:3:107;;13370:754;;16116:571;16216:6;16238:13;:25;;;:30;;16267:1;16238:30;16234:447;;-1:-1:-1;;16388:24:107;;-1:-1:-1;;;16388:24:107;;;;;16116:571::o;16234:447::-;16586:13;:25;;;16567:44;;:15;:44;;16566:104;;16644:26;;16566:104;;;-1:-1:-1;16615:26:107;;;;16116:571::o;16234:447::-;16116:571;;;:::o;14136:196::-;14247:15;;14228:53;;;14247:15;-1:-1:-1;;;14247:15:107;;;;;27655:42:228;;27733:23;;;27728:2;27713:18;;27706:51;14228:53:107;;27628:18:228;14228:53:107;;;;;;;14291:15;:34;;;;;;-1:-1:-1;;;14291:34:107;-1:-1:-1;;;;14291:34:107;;;;;;;;;14136:196::o;20433:1205::-;20552:4;:13;;;20551:14;20543:39;;;;-1:-1:-1;;;20543:39:107;;;;;;;;;;;;20619:4;:16;;;20600:35;;:15;:35;;20592:64;;;;-1:-1:-1;;;20592:64:107;;;;;;;;;;;;20703:21;;;;:5;:21;:::i;:::-;:28;-1:-1:-1;20674:18:107;;;;:5;:18;:::i;:::-;:25;;:57;20666:94;;;;-1:-1:-1;;;20666:94:107;;;;;;;;;;;;20810:17;;;;:5;:17;:::i;:::-;:24;-1:-1:-1;20778:21:107;;;;:5;:21;:::i;:::-;:28;;:56;20770:93;;;;-1:-1:-1;;;20770:93:107;;;;;;;;;;;;21013:9;;20969:202;;21053:17;;;;;;;;:::i;:::-;21097:21;;;;:5;:21;:::i;:::-;21144:5;:16;;20969:23;:202::i;:::-;21293:9;21288:344;21312:18;;;;:5;:18;:::i;:::-;:25;;21308:1;:29;21288:344;;;21358:263;21416:32;;;;21482:18;;;;21416:5;21482:18;:::i;:::-;21501:1;21482:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;21533;;;;:5;:21;:::i;:::-;21555:1;21533:24;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;21586:17;;;;:5;:17;:::i;:::-;21604:1;21586:20;;;;;;;:::i;:::-;;;;;;21358:22;:263::i;:::-;21339:3;;21288:344;;2666:187:24;2758:6;;;-1:-1:-1;;;;;2774:17:24;;;-1:-1:-1;;;;;;2774:17:24;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;14539:190:107:-;14648:14;;14630:50;;-1:-1:-1;;;;;14630:50:107;;;;14648:14;;14630:50;;14648:14;;14630:50;14690:14;:32;;-1:-1:-1;;;;;;14690:32:107;-1:-1:-1;;;;;14690:32:107;;;;;;;;;;14539:190::o;1080:175:136:-;1175:73;;-1:-1:-1;;;1175:73:136;;-1:-1:-1;;;;;29102:32:228;;;1175:73:136;;;29084:51:228;1213:10:136;29151:18:228;;;29144:60;1233:4:136;29220:18:228;;;29213:60;1152:4:136;1240:7;;-1:-1:-1;;;;;;1240:7:136;29289:18:228;;;29282:61;1152:4:136;1175:20;:28;;;;;;29056:19:228;;1175:73:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19215:1212:107:-;19359:7;19378:139;19424:35;:10;;:35;:::i;:::-;19461:25;;;;;;;;:::i;:::-;19488:19;;;;;;;;:::i;19378:139::-;19572:1;19536:26;;;;:10;:26;:::i;:::-;:33;;:37;19528:70;;;;-1:-1:-1;;;19528:70:107;;;;;;;;;;;;19666:15;19644:19;;;;;;;;:::i;:::-;19616:25;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;:65;;;19608:102;;;;-1:-1:-1;;;19608:102:107;;;;;;;;;;;;19721:19;;;19804:515;19828:26;;;;:10;:26;:::i;:::-;:33;;19824:1;:37;19804:515;;;19882:38;19923:26;;;;:10;:26;:::i;:::-;19950:1;19923:29;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;20009:1:107;;-1:-1:-1;19974:23:107;;;;19923:29;19974:23;:::i;:::-;-1:-1:-1;;;;;19974:37:107;;19966:68;;;;-1:-1:-1;;;19966:68:107;;;;;;;;;;;;20078:23;;;;:14;:23;:::i;:::-;-1:-1:-1;;;;;20056:45:107;:19;-1:-1:-1;;;;;20056:45:107;;20048:86;;;;-1:-1:-1;;;20048:86:107;;;;;;;;;;;;20180:1;20156:14;:21;;;:25;20148:50;;;;-1:-1:-1;;;20148:50:107;;;;;;;;;;;;20235:23;;;;:14;:23;:::i;:::-;20213:45;-1:-1:-1;20272:36:107;20287:21;;;;20272:36;;:::i;:::-;;-1:-1:-1;;19863:3:107;;19804:515;;;;2210:8:108;20337:11:107;:33;;20329:62;;;;-1:-1:-1;;;20329:62:107;;;;;;;;;;;;-1:-1:-1;20409:11:107;19215:1212;-1:-1:-1;;19215:1212:107:o;14735:216::-;-1:-1:-1;;;;;14830:18:107;;;14808:19;14830:18;;;:10;:18;;;;;;;;14858:28;;;-1:-1:-1;;;;;;14858:28:107;;;;;;;14901:43;;14830:18;;;;;14858:28;14830:18;;;;14901:43;;14808:19;14901:43;14798:153;14735:216;;:::o;14338:195::-;14452:24;;14424:60;;;14452:24;-1:-1:-1;;;14452:24:107;;;;;30109:38:228;;30183:19;;;30178:2;30163:18;;30156:47;14424:60:107;;30082:18:228;14424:60:107;;;;;;;14494:24;:32;;;;;;-1:-1:-1;;;14494:32:107;-1:-1:-1;;;;14494:32:107;;;;;;;;;14338:195::o;15208:611::-;15351:25;;-1:-1:-1;;;15351:25:107;;;;15333:15;:43;15325:76;;;;-1:-1:-1;;;15325:76:107;;;;;;;;;;;;15416:25;;-1:-1:-1;;;15416:25:107;;;;;:30;15412:307;;15598:24;;15569:53;;-1:-1:-1;;;15598:24:107;;;;;-1:-1:-1;;15569:53:107;;;;;;15412:307;;;15682:26;;;;;;;-1:-1:-1;;15653:55:107;;;;;;15412:307;15729:34;;15773:39;;;;-1:-1:-1;;;15773:39:107;-1:-1:-1;;15729:34:107;;;;;;15773:39;;;;-1:-1:-1;;15773:39:107;;;;;;;15208:611::o;16766:1334::-;16969:35;16961:68;;;;-1:-1:-1;;;16961:68:107;;;;;;;;;;;;17059:20;17047:32;;:8;:32;;;;17039:63;;;;-1:-1:-1;;;17039:63:107;;;;;;;;;;;;17120:39;17131:28;17120:8;:39;:::i;:::-;:44;;;17112:81;;;;-1:-1:-1;;;17112:81:107;;;;;;;;;;;;17211:45;17228:28;17211:14;:45;:::i;:::-;:50;;;17203:93;;;;-1:-1:-1;;;17203:93:107;;;;;;;;;;;;17371:14;17327:58;;17345:22;17327:40;;:15;:40;;;;:::i;:::-;:58;;:105;;;;;17418:14;17389:43;;:25;:43;;;;17327:105;17306:178;;;;-1:-1:-1;;;17306:178:107;;;;;;;;;;;;17586:19;;17628:466;17648:35;;;17628:466;;;17704:18;17725:24;;17750:1;17725:27;;;;;;;:::i;:::-;:36;;;:27;;;;;:36;;;;-1:-1:-1;17725:36:107;:::i;:::-;17800:57;;-1:-1:-1;;;17800:57:107;;-1:-1:-1;;;;;2919:32:228;;;17800:57:107;;;2901:51:228;17704:57:107;;-1:-1:-1;17800:15:107;:47;;;;;;2874:18:228;;17800:57:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:95;;;-1:-1:-1;;;;;;17861:34:107;;2463:42:108;17861:34:107;17800:95;17775:176;;;;-1:-1:-1;;;17775:176:107;;;;;;;;;;;;17995:8;-1:-1:-1;;;;;17973:31:107;:11;-1:-1:-1;;;;;17973:31:107;;17965:73;;;;-1:-1:-1;;;17965:73:107;;;;;;;;;;;;18074:8;-1:-1:-1;17685:3:107;;17628:466;;5173:642:72;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:72;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:72;;30994:2:228;5697:111:72;;;30976:21:228;31033:2;31013:18;;;31006:30;31072:34;31052:18;;;31045:62;-1:-1:-1;;;31123:18:228;;;31116:40;31173:19;;5697:111:72;30792:406:228;941:175:72;1050:58;;-1:-1:-1;;;;;31395:32:228;;1050:58:72;;;31377:51:228;31444:18;;;31437:34;;;1023:86:72;;1043:5;;-1:-1:-1;;;1073:23:72;31350:18:228;;1050:58:72;31203:274:228;23597:861:107;23987:23;24008:2;23987:11;:23;:::i;:::-;23981:1;:30;;23962:15;:50;;;23954:85;;;;-1:-1:-1;;;23954:85:107;;;;;;;;;;;;24092:22;24117:35;24141:10;24117:23;:35::i;:::-;24092:60;;24222:186;24344:11;;24222:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24275:4:107;;-1:-1:-1;24379:14:107;;-1:-1:-1;;24222:186:107;;;:28;:186::i;:::-;24201:250;;;;-1:-1:-1;;;24201:250:107;;;;;;;;;;;22100:829;22494:22;22514:2;22494:10;:22;:::i;:::-;22488:1;:29;;22470:14;:48;;;22462:82;;;;-1:-1:-1;;;22462:82:107;;;;;;;;;;;;22597:21;22621:33;22644:9;22621:22;:33::i;4108:223:74:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:74:o;1273:240:132:-;1428:4;1502;1451:47;1479:5;1486:4;1492:5;1451:27;:47::i;:::-;:55;;1273:240;-1:-1:-1;;;;;1273:240:132:o;5165:446:74:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:74;;31809:2:228;5354:81:74;;;31791:21:228;31848:2;31828:18;;;31821:30;31887:34;31867:18;;;31860:62;-1:-1:-1;;;31938:18:228;;;31931:36;31984:19;;5354:81:74;31607:402:228;5354:81:74;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:74;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:74:o;2030:1081:132:-;2169:7;2211:2;2196:5;:12;:17;;;;:::i;:::-;:22;2188:53;;;;-1:-1:-1;;;2188:53:132;;;;;;;;;;;;2274:4;2305:2;2288:788;2314:5;:12;2309:1;:17;2288:788;;2355:9;2363:1;2355:5;:9;:::i;:::-;2368:1;2355:14;2351:715;;2514:12;2508:4;2501:26;2578:1;2571:5;2567:13;2561:20;2555:4;2548:34;2635:4;2629;2619:21;2603:37;;2681:1;2674:5;2670:13;2661:22;;2351:715;;;2882:1;2875:5;2871:13;2865:20;2859:4;2852:34;2920:12;2914:4;2907:26;2986:4;2980;2970:21;2954:37;;3032:1;3025:5;3021:13;3012:22;;2351:715;2328:7;2333:2;2328:7;;:::i;:::-;;;2288:788;;;-1:-1:-1;3092:12:132;2030:1081;-1:-1:-1;;;;2030:1081:132:o;7671:628:74:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:38;;;8113:60:74;;;;-1:-1:-1;;;8113:60:74;;32639:2:228;8113:60:74;;;32621:21:228;32678:2;32658:18;;;32651:30;32717:31;32697:18;;;32690:59;32766:18;;8113:60:74;32437:353:228;8113:60:74;-1:-1:-1;8208:10:74;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:74;;;;;;;;:::i;14:131:228:-;-1:-1:-1;;;;;89:31:228;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;1389:118::-;1475:5;1468:13;1461:21;1454:5;1451:32;1441:60;;1497:1;1494;1487:12;1512:382;1577:6;1585;1638:2;1626:9;1617:7;1613:23;1609:32;1606:52;;;1654:1;1651;1644:12;1606:52;1693:9;1680:23;1712:31;1737:5;1712:31;:::i;:::-;1762:5;-1:-1:-1;1819:2:228;1804:18;;1791:32;1832:30;1791:32;1832:30;:::i;:::-;1881:7;1871:17;;;1512:382;;;;;:::o;1899:226::-;1958:6;2011:2;1999:9;1990:7;1986:23;1982:32;1979:52;;;2027:1;2024;2017:12;1979:52;-1:-1:-1;2072:23:228;;1899:226;-1:-1:-1;1899:226:228:o;2130:168::-;2203:5;2248:2;2239:6;2234:3;2230:16;2226:25;2223:45;;;2264:1;2261;2254:12;2223:45;-1:-1:-1;2286:6:228;2130:168;-1:-1:-1;2130:168:228:o;2303:265::-;2403:6;2456:2;2444:9;2435:7;2431:23;2427:32;2424:52;;;2472:1;2469;2462:12;2424:52;2495:67;2554:7;2543:9;2495:67;:::i;2963:393::-;3052:8;3062:6;3116:3;3109:4;3101:6;3097:17;3093:27;3083:55;;3134:1;3131;3124:12;3083:55;-1:-1:-1;3157:20:228;;3200:18;3189:30;;3186:50;;;3232:1;3229;3222:12;3186:50;3269:4;3261:6;3257:17;3245:29;;3329:3;3322:4;3312:6;3309:1;3305:14;3297:6;3293:27;3289:38;3286:47;3283:67;;;3346:1;3343;3336:12;3283:67;2963:393;;;;;:::o;3361:501::-;3485:6;3493;3546:2;3534:9;3525:7;3521:23;3517:32;3514:52;;;3562:1;3559;3552:12;3514:52;3602:9;3589:23;3635:18;3627:6;3624:30;3621:50;;;3667:1;3664;3657:12;3621:50;3706:96;3794:7;3785:6;3774:9;3770:22;3706:96;:::i;:::-;3821:8;;3680:122;;-1:-1:-1;3361:501:228;-1:-1:-1;;;;3361:501:228:o;4101:167::-;4172:5;4217:3;4208:6;4203:3;4199:16;4195:26;4192:46;;;4234:1;4231;4224:12;4273:514;4380:6;4388;4441:2;4429:9;4420:7;4416:23;4412:32;4409:52;;;4457:1;4454;4447:12;4409:52;4497:9;4484:23;4530:18;4522:6;4519:30;4516:50;;;4562:1;4559;4552:12;4516:50;4585:78;4655:7;4646:6;4635:9;4631:22;4585:78;:::i;:::-;4575:88;;;4713:2;4702:9;4698:18;4685:32;4726:31;4751:5;4726:31;:::i;4792:163::-;4859:20;;4919:10;4908:22;;4898:33;;4888:61;;4945:1;4942;4935:12;4960:298;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5149:23;;;-1:-1:-1;5215:37:228;5248:2;5233:18;;5215:37;:::i;:::-;5205:47;;4960:298;;;;;:::o;5263:637::-;5397:6;5405;5413;5466:2;5454:9;5445:7;5441:23;5437:32;5434:52;;;5482:1;5479;5472:12;5434:52;5522:9;5509:23;5555:18;5547:6;5544:30;5541:50;;;5587:1;5584;5577:12;5541:50;5626:96;5714:7;5705:6;5694:9;5690:22;5626:96;:::i;:::-;5741:8;;-1:-1:-1;5600:122:228;-1:-1:-1;;5826:2:228;5811:18;;5798:32;5839:31;5798:32;5839:31;:::i;:::-;5889:5;5879:15;;;5263:637;;;;;:::o;6337:184::-;6395:6;6448:2;6436:9;6427:7;6423:23;6419:32;6416:52;;;6464:1;6461;6454:12;6416:52;6487:28;6505:9;6487:28;:::i;6526:269::-;6583:6;6636:2;6624:9;6615:7;6611:23;6607:32;6604:52;;;6652:1;6649;6642:12;6604:52;6691:9;6678:23;6741:4;6734:5;6730:16;6723:5;6720:27;6710:55;;6761:1;6758;6751:12;6982:379;7080:6;7133:2;7121:9;7112:7;7108:23;7104:32;7101:52;;;7149:1;7146;7139:12;7101:52;7189:9;7176:23;7222:18;7214:6;7211:30;7208:50;;;7254:1;7251;7244:12;7208:50;7277:78;7347:7;7338:6;7327:9;7323:22;7277:78;:::i;7366:367::-;7434:6;7442;7495:2;7483:9;7474:7;7470:23;7466:32;7463:52;;;7511:1;7508;7501:12;7463:52;7550:9;7537:23;7569:31;7594:5;7569:31;:::i;:::-;7619:5;7697:2;7682:18;;;;7669:32;;-1:-1:-1;;;7366:367:228:o;7738:404::-;7822:6;7830;7883:2;7871:9;7862:7;7858:23;7854:32;7851:52;;;7899:1;7896;7889:12;7851:52;7938:9;7925:23;7957:31;7982:5;7957:31;:::i;:::-;8007:5;-1:-1:-1;8064:2:228;8049:18;;8036:32;8077:33;8036:32;8077:33;:::i;8607:652::-;8756:6;8764;8772;8825:2;8813:9;8804:7;8800:23;8796:32;8793:52;;;8841:1;8838;8831:12;8793:52;8880:9;8867:23;8899:31;8924:5;8899:31;:::i;:::-;8949:5;-1:-1:-1;9005:2:228;8990:18;;8977:32;9032:18;9021:30;;9018:50;;;9064:1;9061;9054:12;9018:50;9103:96;9191:7;9182:6;9171:9;9167:22;9103:96;:::i;:::-;8607:652;;9218:8;;-1:-1:-1;9077:122:228;;-1:-1:-1;;;;8607:652:228:o;9264:159::-;9331:20;;9391:6;9380:18;;9370:29;;9360:57;;9413:1;9410;9403:12;9428:184;9486:6;9539:2;9527:9;9518:7;9514:23;9510:32;9507:52;;;9555:1;9552;9545:12;9507:52;9578:28;9596:9;9578:28;:::i;9617:319::-;9684:6;9692;9745:2;9733:9;9724:7;9720:23;9716:32;9713:52;;;9761:1;9758;9751:12;9713:52;9800:9;9787:23;9819:31;9844:5;9819:31;:::i;:::-;9869:5;-1:-1:-1;9893:37:228;9926:2;9911:18;;9893:37;:::i;10177:460::-;10253:6;10261;10269;10322:2;10310:9;10301:7;10297:23;10293:32;10290:52;;;10338:1;10335;10328:12;10290:52;10377:9;10364:23;10396:31;10421:5;10396:31;:::i;:::-;10446:5;-1:-1:-1;10503:2:228;10488:18;;10475:32;10516:33;10475:32;10516:33;:::i;:::-;10568:7;-1:-1:-1;10594:37:228;10627:2;10612:18;;10594:37;:::i;:::-;10584:47;;10177:460;;;;;:::o;11502:654::-;11595:6;11603;11611;11619;11627;11680:3;11668:9;11659:7;11655:23;11651:33;11648:53;;;11697:1;11694;11687:12;11648:53;11736:9;11723:23;11755:31;11780:5;11755:31;:::i;:::-;11805:5;-1:-1:-1;11883:2:228;11868:18;;11855:32;;-1:-1:-1;11965:2:228;11950:18;;11937:32;11978:33;11937:32;11978:33;:::i;:::-;12030:7;-1:-1:-1;12056:37:228;12089:2;12074:18;;12056:37;:::i;:::-;12046:47;;12112:38;12145:3;12134:9;12130:19;12112:38;:::i;:::-;12102:48;;11502:654;;;;;;;;:::o;12430:127::-;12491:10;12486:3;12482:20;12479:1;12472:31;12522:4;12519:1;12512:15;12546:4;12543:1;12536:15;12562:128;12629:9;;;12650:11;;;12647:37;;;12664:18;;:::i;12695:127::-;12756:10;12751:3;12747:20;12744:1;12737:31;12787:4;12784:1;12777:15;12811:4;12808:1;12801:15;12827:136;12866:3;12894:5;12884:39;;12903:18;;:::i;:::-;-1:-1:-1;;;12939:18:228;;12827:136::o;12968:245::-;13035:6;13088:2;13076:9;13067:7;13063:23;13059:32;13056:52;;;13104:1;13101;13094:12;13056:52;13136:9;13130:16;13155:28;13177:5;13155:28;:::i;13607:336::-;13711:4;13769:11;13756:25;13863:3;13859:8;13848;13832:14;13828:29;13824:44;13804:18;13800:69;13790:97;;13883:1;13880;13873:12;13790:97;13904:33;;;;;13607:336;-1:-1:-1;;13607:336:228:o;13948:550::-;14048:5;14055:6;14115:3;14102:17;14201:2;14197:7;14186:8;14170:14;14166:29;14162:43;14142:18;14138:68;14128:96;;14220:1;14217;14210:12;14128:96;14248:33;;14352:4;14339:18;;;-1:-1:-1;14300:21:228;;-1:-1:-1;14380:18:228;14369:30;;14366:50;;;14412:1;14409;14402:12;14366:50;14466:6;14463:1;14459:14;14443;14439:35;14432:5;14428:47;14425:67;;;14488:1;14485;14478:12;14503:752;14633:6;14628:3;14621:19;14665:4;14660:3;14656:14;14649:21;;14603:3;14693:5;14716:1;14726:504;14740:6;14737:1;14734:13;14726:504;;;14817:6;14804:20;14837:33;14862:7;14837:33;:::i;:::-;-1:-1:-1;;;;;14895:33:228;14883:46;;14982:4;14970:17;;14957:31;15024:26;15011:40;;15074:15;;;15064:43;;15103:1;15100;15093:12;15064:43;15136:4;15127:14;;15120:26;-1:-1:-1;15175:4:228;15166:14;;;;15203:17;;;;;14762:1;14755:9;14726:504;;;-1:-1:-1;15246:3:228;;14503:752;-1:-1:-1;;;;14503:752:228:o;15260:838::-;15329:3;15381:86;15461:5;15454;15381:86;:::i;:::-;15488:4;15483:3;15476:17;15514:111;15619:4;15614:3;15610:14;15596:12;15582;15514:111;:::i;:::-;15502:123;;;15673:4;15666:5;15662:16;15649:30;15688:33;15713:7;15688:33;:::i;:::-;-1:-1:-1;;;;;15753:33:228;15746:4;15737:14;;15730:57;15856:4;15845:16;;;15832:30;15878:14;;;15871:31;15975:10;15938:35;15967:4;15956:16;;15938:35;:::i;:::-;15934:52;15927:4;15922:3;15918:14;15911:76;16060:10;16023:35;16052:4;16045:5;16041:16;16023:35;:::i;:::-;16019:52;16012:4;16007:3;16003:14;15996:76;16088:4;16081:11;;;15260:838;;;;:::o;16103:469::-;16391:1;16387;16382:3;16378:11;16374:19;16366:6;16362:32;16351:9;16344:51;16431:6;16426:2;16415:9;16411:18;16404:34;16474:2;16469;16458:9;16454:18;16447:30;16325:4;16494:72;16562:2;16551:9;16547:18;16539:6;16494:72;:::i;:::-;16486:80;16103:469;-1:-1:-1;;;;;16103:469:228:o;16577:125::-;16642:9;;;16663:10;;;16660:36;;;16676:18;;:::i;16707:301::-;16910:2;16899:9;16892:21;16873:4;16930:72;16998:2;16987:9;16983:18;16975:6;16930:72;:::i;17281:167::-;17376:10;17349:18;;;17369;;;17345:43;;17400:19;;17397:45;;;17422:18;;:::i;17453:337::-;17558:4;17616:11;17603:25;17710:3;17706:8;17695;17679:14;17675:29;17671:44;17651:18;17647:69;17637:97;;17730:1;17727;17720:12;17795:352;17915:4;17973:11;17960:25;18067:3;18063:8;18052;18036:14;18032:29;18028:44;18008:18;18004:69;17994:97;;18087:1;18084;18077:12;18152:501;18211:5;18218:6;18278:3;18265:17;18364:2;18360:7;18349:8;18333:14;18329:29;18325:43;18305:18;18301:68;18291:96;;18383:1;18380;18373:12;18291:96;18411:33;;18515:4;18502:18;;;-1:-1:-1;18463:21:228;;-1:-1:-1;18543:18:228;18532:30;;18529:50;;;18575:1;18572;18565:12;18529:50;18622:6;18606:14;18602:27;18595:5;18591:39;18588:59;;;18643:1;18640;18633:12;18658:267;18747:6;18742:3;18735:19;18799:6;18792:5;18785:4;18780:3;18776:14;18763:43;-1:-1:-1;18851:1:228;18826:16;;;18844:4;18822:27;;;18815:38;;;;18907:2;18886:15;;;-1:-1:-1;;18882:29:228;18873:39;;;18869:50;;18658:267::o;18930:1812::-;19015:3;19067:86;19147:5;19140;19067:86;:::i;:::-;19174:4;19169:3;19162:17;19200:111;19305:4;19300:3;19296:14;19282:12;19268;19200:111;:::i;:::-;19188:123;;;19359:4;19352:5;19348:16;19335:30;19374:33;19399:7;19374:33;:::i;:::-;-1:-1:-1;;;;;19439:33:228;19432:4;19423:14;;19416:57;19520:97;19611:4;19600:16;;19604:5;19520:97;:::i;:::-;19649:14;;;19642:4;19633:14;;19626:38;19699:28;;;19783:14;;19815:1;;19712:14;19755:4;19745:15;19825:431;19839:14;19836:1;19833:21;19825:431;;;19924:6;19911:20;19944:33;19969:7;19944:33;:::i;:::-;-1:-1:-1;;;;;20004:33:228;19990:48;;20116:4;20104:17;;;20091:31;20142:16;;;20135:33;20201:4;20229:17;;;;20034:1;19862:9;;;;;20190:16;19825:431;;;20287:35;20316:4;20309:5;20305:16;20287:35;:::i;:::-;670:10;659:22;;20374:4;20365:14;;647:35;20265:57;-1:-1:-1;20411:35:228;20440:4;20433:5;20429:16;20411:35;:::i;:::-;670:10;659:22;;20498:4;20489:14;;647:35;20389:57;-1:-1:-1;20551:56:228;20601:4;20594:5;20590:16;20583:5;20551:56;:::i;:::-;20513:94;;;;20650:3;20643:5;20639:15;20632:4;20627:3;20623:14;20616:39;20671:65;20730:5;20714:14;20698;20671:65;:::i;20747:517::-;21067:1;21063;21058:3;21054:11;21050:19;21042:6;21038:32;21027:9;21020:51;21107:6;21102:2;21091:9;21087:18;21080:34;21150:2;21145;21134:9;21130:18;21123:30;21001:4;21170:88;21254:2;21243:9;21239:18;21231:6;21170:88;:::i;21269:420::-;21532:6;21521:9;21514:25;21575:2;21570;21559:9;21555:18;21548:30;21495:4;21595:88;21679:2;21668:9;21664:18;21656:6;21595:88;:::i;22055:170::-;22152:10;22145:18;;;22125;;;22121:43;;22176:20;;22173:46;;;22199:18;;:::i;22230:185::-;22268:3;22312:10;22305:5;22301:22;22342:7;22332:41;;22353:18;;:::i;:::-;-1:-1:-1;;22389:20:228;;22230:185;-1:-1:-1;;22230:185:228:o;22420:184::-;22490:6;22543:2;22531:9;22522:7;22518:23;22514:32;22511:52;;;22559:1;22556;22549:12;22511:52;-1:-1:-1;22582:16:228;;22420:184;-1:-1:-1;22420:184:228:o;24035:251::-;24105:6;24158:2;24146:9;24137:7;24133:23;24129:32;24126:52;;;24174:1;24171;24164:12;24126:52;24206:9;24200:16;24225:31;24250:5;24225:31;:::i;25012:587::-;25147:4;25153:6;25213:11;25200:25;25307:2;25303:7;25292:8;25276:14;25272:29;25268:43;25248:18;25244:68;25234:96;;25326:1;25323;25316:12;25234:96;25353:33;;25405:20;;;-1:-1:-1;25448:18:228;25437:30;;25434:50;;;25480:1;25477;25470:12;25434:50;25513:4;25501:17;;-1:-1:-1;25564:1:228;25560:14;;;25544;25540:35;25530:46;;25527:66;;;25589:1;25586;25579:12;25980:544;26072:4;26078:6;26138:11;26125:25;26232:2;26228:7;26217:8;26201:14;26197:29;26193:43;26173:18;26169:68;26159:96;;26251:1;26248;26241:12;26159:96;26278:33;;26330:20;;;-1:-1:-1;26373:18:228;26362:30;;26359:50;;;26405:1;26402;26395:12;26359:50;26438:4;26426:17;;-1:-1:-1;26489:1:228;26485:14;;;26469;26465:35;26455:46;;26452:66;;;26514:1;26511;26504:12;28329:521;28406:4;28412:6;28472:11;28459:25;28566:2;28562:7;28551:8;28535:14;28531:29;28527:43;28507:18;28503:68;28493:96;;28585:1;28582;28575:12;28493:96;28612:33;;28664:20;;;-1:-1:-1;28707:18:228;28696:30;;28693:50;;;28739:1;28736;28729:12;28693:50;28772:4;28760:17;;-1:-1:-1;28803:14:228;28799:27;;;28789:38;;28786:58;;;28840:1;28837;28830:12;30214:127;30275:10;30270:3;30266:20;30263:1;30256:31;30306:4;30303:1;30296:15;30330:4;30327:1;30320:15;30346:170;30377:1;30411:10;30408:1;30404:18;30441:3;30431:37;;30448:18;;:::i;:::-;30506:3;30493:10;30490:1;30486:18;30482:28;30477:33;;;30346:170;;;;:::o;31482:120::-;31522:1;31548;31538:35;;31553:18;;:::i;:::-;-1:-1:-1;31587:9:228;;31482:120::o;32014:301::-;32143:3;32181:6;32175:13;32227:6;32220:4;32212:6;32208:17;32203:3;32197:37;32289:1;32253:16;;32278:13;;;-1:-1:-1;32253:16:228;32014:301;-1:-1:-1;32014:301:228:o;32320:112::-;32352:1;32378;32368:35;;32383:18;;:::i;:::-;-1:-1:-1;32417:9:228;;32320:112::o;32795:418::-;32944:2;32933:9;32926:21;32907:4;32976:6;32970:13;33019:6;33014:2;33003:9;32999:18;32992:34;33078:6;33073:2;33065:6;33061:15;33056:2;33045:9;33041:18;33035:50;33134:1;33129:2;33120:6;33109:9;33105:22;33101:31;33094:42;33204:2;33197;33193:7;33188:2;33180:6;33176:15;33172:29;33161:9;33157:45;33153:54;33145:62;;;32795:418;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "69283": [
        {
          "start": 2259,
          "length": 32
        },
        {
          "start": 6628,
          "length": 32
        }
      ],
      "69287": [
        {
          "start": 1327,
          "length": 32
        },
        {
          "start": 12250,
          "length": 32
        }
      ],
      "69291": [
        {
          "start": 2144,
          "length": 32
        },
        {
          "start": 6772,
          "length": 32
        }
      ],
      "69294": [
        {
          "start": 1888,
          "length": 32
        },
        {
          "start": 11869,
          "length": 32
        },
        {
          "start": 11947,
          "length": 32
        }
      ],
      "69297": [
        {
          "start": 2060,
          "length": 32
        },
        {
          "start": 11789,
          "length": 32
        }
      ],
      "69300": [
        {
          "start": 1288,
          "length": 32
        },
        {
          "start": 12029,
          "length": 32
        }
      ],
      "69303": [
        {
          "start": 956,
          "length": 32
        },
        {
          "start": 9088,
          "length": 32
        }
      ],
      "69306": [
        {
          "start": 1114,
          "length": 32
        },
        {
          "start": 12095,
          "length": 32
        }
      ],
      "75968": [
        {
          "start": 1446,
          "length": 32
        },
        {
          "start": 10775,
          "length": 32
        }
      ],
      "76169": [
        {
          "start": 1778,
          "length": 32
        },
        {
          "start": 2914,
          "length": 32
        },
        {
          "start": 4469,
          "length": 32
        },
        {
          "start": 7705,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CALCULATION_INTERVAL_SECONDS()": "9d45c281",
    "GENESIS_REWARDS_TIMESTAMP()": "131433b4",
    "MAX_FUTURE_LENGTH()": "04a0c502",
    "MAX_RETROACTIVE_LENGTH()": "37838ed0",
    "MAX_REWARDS_DURATION()": "bf21a8aa",
    "activationDelay()": "3a8c0786",
    "allocationManager()": "ca8aa7c7",
    "beaconChainETHStrategy()": "9104c319",
    "calculateEarnerLeafHash((address,bytes32))": "149bc872",
    "calculateTokenLeafHash((address,uint256))": "f8cd8448",
    "checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))": "5e9d8348",
    "claimerFor(address)": "2b9f64a4",
    "createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": "fce36c7d",
    "createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])": "9cb9a5fa",
    "createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])": "ff9f6cce",
    "createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": "36af41fa",
    "cumulativeClaimed(address,address)": "865c6953",
    "currRewardsCalculationEndTimestamp()": "4d18cc35",
    "defaultOperatorSplitBips()": "63f6a798",
    "delegationManager()": "ea4d3c9b",
    "disableRoot(uint32)": "f96abf2e",
    "getCurrentClaimableDistributionRoot()": "0e9a53cf",
    "getCurrentDistributionRoot()": "9be3d4e4",
    "getDistributionRootAtIndex(uint256)": "de02e503",
    "getDistributionRootsLength()": "7b8f8b05",
    "getOperatorAVSSplit(address,address)": "e063f81f",
    "getOperatorPISplit(address)": "4b943960",
    "getRootIndexFromHash(bytes32)": "e810ce21",
    "initialize(address,uint256,address,uint32,uint16)": "f6efbb59",
    "isAVSRewardsSubmissionHash(address,bytes32)": "6d21117e",
    "isOperatorDirectedAVSRewardsSubmissionHash(address,bytes32)": "ed71e6a2",
    "isRewardsForAllSubmitter(address)": "0018572c",
    "isRewardsSubmissionForAllEarnersHash(address,bytes32)": "aebd8bae",
    "isRewardsSubmissionForAllHash(address,bytes32)": "c46db606",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionController()": "4657e26a",
    "processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)": "3ccc861d",
    "processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)": "4596021c",
    "renounceOwnership()": "715018a6",
    "rewardsUpdater()": "fbf1e2c1",
    "setActivationDelay(uint32)": "58baaa3e",
    "setClaimerFor(address)": "a0169ddd",
    "setClaimerFor(address,address)": "f22cef85",
    "setDefaultOperatorSplit(uint16)": "a50a1d9c",
    "setOperatorAVSSplit(address,address,uint16)": "dcbb03b3",
    "setOperatorPISplit(address,uint16)": "b3dbb0e0",
    "setRewardsForAllSubmitter(address,bool)": "0eb38345",
    "setRewardsUpdater(address)": "863cb9a9",
    "strategyManager()": "39b70e38",
    "submissionNonce(address)": "bb7e451f",
    "submitRoot(bytes32,uint32)": "3efe1db6",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"},{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract IAllocationManager\",\"name\":\"_allocationManager\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_CALCULATION_INTERVAL_SECONDS\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_MAX_REWARDS_DURATION\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_MAX_RETROACTIVE_LENGTH\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_MAX_FUTURE_LENGTH\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_GENESIS_REWARDS_TIMESTAMP\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AmountExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DurationExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EarningsNotGreaterThanClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalculationIntervalSecondsRemainder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaimProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDurationRemainder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEarner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEarnerLeafIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGenesisRewardsTimestampRemainder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProofLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRootIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStartTimestampRemainder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenLeafIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewRootMustBeForNewCalculatedPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorsNotInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PreviousSplitPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardsEndTimestampNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootAlreadyActivated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootNotActivated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SplitExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StartTimestampTooFarInFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StartTimestampTooFarInPast\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategiesNotInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SubmissionNotRetroactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCaller\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission\",\"name\":\"rewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"AVSRewardsSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldActivationDelay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newActivationDelay\",\"type\":\"uint32\"}],\"name\":\"ActivationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldClaimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerForSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldDefaultOperatorSplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDefaultOperatorSplitBips\",\"type\":\"uint16\"}],\"name\":\"DefaultOperatorSplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"}],\"name\":\"DistributionRootDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"}],\"name\":\"DistributionRootSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldOperatorAVSSplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newOperatorAVSSplitBips\",\"type\":\"uint16\"}],\"name\":\"OperatorAVSSplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorDirectedRewardsSubmissionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission\",\"name\":\"operatorDirectedRewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"OperatorDirectedAVSRewardsSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldOperatorPISplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newOperatorPISplitBips\",\"type\":\"uint16\"}],\"name\":\"OperatorPISplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardsForAllSubmitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"oldValue\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"RewardsForAllSubmitterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission\",\"name\":\"rewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"RewardsSubmissionForAllCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHopper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission\",\"name\":\"rewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"RewardsSubmissionForAllEarnersCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRewardsUpdater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRewardsUpdater\",\"type\":\"address\"}],\"name\":\"RewardsUpdaterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALCULATION_INTERVAL_SECONDS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENESIS_REWARDS_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUTURE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_RETROACTIVE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REWARDS_DURATION\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activationDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateEarnerLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateTokenLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"}],\"name\":\"checkClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"}],\"name\":\"claimerFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission[]\",\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createAVSRewardsSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]\",\"name\":\"operatorDirectedRewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorDirectedAVSRewardsSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission[]\",\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createRewardsForAllEarners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission[]\",\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createRewardsForAllSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"cumulativeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currRewardsCalculationEndTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperatorSplitBips\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegationManager\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"}],\"name\":\"disableRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentClaimableDistributionRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.DistributionRoot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDistributionRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.DistributionRoot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDistributionRootAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.DistributionRoot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionRootsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getOperatorAVSSplit\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorPISplit\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"}],\"name\":\"getRootIndexFromHash\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_rewardsUpdater\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_activationDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_defaultSplitBips\",\"type\":\"uint16\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isAVSRewardsSubmissionHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"isOperatorDirectedAVSRewardsSubmissionHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"name\":\"isRewardsForAllSubmitter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isRewardsSubmissionForAllEarnersHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isRewardsSubmissionForAllHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"processClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsMerkleClaim[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"processClaims\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsUpdater\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_activationDelay\",\"type\":\"uint32\"}],\"name\":\"setActivationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setDefaultOperatorSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setOperatorAVSSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setOperatorPISplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_submitter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setRewardsForAllSubmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsUpdater\",\"type\":\"address\"}],\"name\":\"setRewardsUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"submissionNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"}],\"name\":\"submitRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Eigen Labs Inc.\",\"errors\":{\"AmountExceedsMax()\":[{\"details\":\"Thrown when input `amount` exceeds maximum.\"}],\"AmountIsZero()\":[{\"details\":\"Thrown when input `amount` is zero.\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"DurationExceedsMax()\":[{\"details\":\"Thrown when input `duration` exceeds maximum.\"}],\"EarningsNotGreaterThanClaimed()\":[{\"details\":\"Thrown when cummulative earnings are not greater than cummulative claimed.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InputArrayLengthZero()\":[{\"details\":\"Thrown when input arrays length is zero.\"}],\"InvalidAddressZero()\":[{\"details\":\"Thrown when an input address is zero\"}],\"InvalidCalculationIntervalSecondsRemainder()\":[{\"details\":\"Thrown when CALCULATION_INTERVAL_SECONDS is not evenly divisble by SNAPSHOT_CADENCE.\"}],\"InvalidClaimProof()\":[{\"details\":\"Thrown when an invalid earner claim proof is provided.\"}],\"InvalidDurationRemainder()\":[{\"details\":\"Thrown when input `duration` is not evenly divisble by CALCULATION_INTERVAL_SECONDS.\"}],\"InvalidEarner()\":[{\"details\":\"Thrown when a earner not an AVS or Operator\"}],\"InvalidEarnerLeafIndex()\":[{\"details\":\"Thrown when an invalid earner leaf index is provided.\"}],\"InvalidGenesisRewardsTimestampRemainder()\":[{\"details\":\"Thrown when GENESIS_REWARDS_TIMESTAMP is not evenly divisble by CALCULATION_INTERVAL_SECONDS.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}],\"InvalidRoot()\":[{\"details\":\"Thrown when an invalid root is provided.\"}],\"InvalidRootIndex()\":[{\"details\":\"Thrown when an invalid root index is provided.\"}],\"InvalidStartTimestampRemainder()\":[{\"details\":\"Thrown when `startTimestamp` is not evenly divisble by CALCULATION_INTERVAL_SECONDS.\"}],\"InvalidTokenLeafIndex()\":[{\"details\":\"Thrown when an invalid token leaf index is provided.\"}],\"NewRootMustBeForNewCalculatedPeriod()\":[{\"details\":\"Thrown when provided root is not for new calculated period.\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorsNotInAscendingOrder()\":[{\"details\":\"Thrown when `operators` are not sorted in ascending order\"}],\"PreviousSplitPending()\":[{\"details\":\"Thrown when an operator attempts to set a split before the previous one becomes active\"}],\"RewardsEndTimestampNotElapsed()\":[{\"details\":\"Thrown when rewards end timestamp has not elapsed.\"}],\"RootAlreadyActivated()\":[{\"details\":\"Thrown if a root has already been activated.\"}],\"RootDisabled()\":[{\"details\":\"Thrown if a root has already been disabled.\"}],\"RootNotActivated()\":[{\"details\":\"Thrown if a root has not been activated yet.\"}],\"SplitExceedsMax()\":[{\"details\":\"Thrown when input `split` exceeds `ONE_HUNDRED_IN_BIPS`\"}],\"StartTimestampTooFarInFuture()\":[{\"details\":\"Thrown when `startTimestamp` is too far in the future.\"}],\"StartTimestampTooFarInPast()\":[{\"details\":\"Thrown when `startTimestamp` is too far in the past.\"}],\"StrategiesNotInAscendingOrder()\":[{\"details\":\"Thrown when `strategies` is not sorted in ascending order.\"}],\"StrategyNotWhitelisted()\":[{\"details\":\"Thrown when an attempt to use a non-whitelisted strategy is made.\"}],\"SubmissionNotRetroactive()\":[{\"details\":\"Thrown when an operator-directed rewards submission is not retroactive\"}],\"UnauthorizedCaller()\":[{\"details\":\"Thrown when msg.sender is not allowed to call a function\"}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OperatorAVSSplitBipsSet(address,address,address,uint32,uint16,uint16)\":{\"params\":{\"activatedAt\":\"The timestamp at which the split will be activated.\",\"avs\":\"The avs for which the split is being set by the operator.\",\"caller\":\"The address calling `setOperatorAVSSplit`.\",\"newOperatorAVSSplitBips\":\"The new split for the operator for the AVS.\",\"oldOperatorAVSSplitBips\":\"The old split for the operator for the AVS.\",\"operator\":\"The operator on behalf of which the split is being set.\"}},\"OperatorDirectedAVSRewardsSubmissionCreated(address,address,bytes32,uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string))\":{\"params\":{\"avs\":\"The avs on behalf of which the operator-directed rewards are being submitted.\",\"caller\":\"The address calling `createOperatorDirectedAVSRewardsSubmission`.\",\"operatorDirectedRewardsSubmission\":\"The Operator-Directed Rewards Submission. Contains the token, start timestamp, duration, operator rewards, description and, strategy and multipliers.\",\"operatorDirectedRewardsSubmissionHash\":\"Keccak256 hash of (`avs`, `submissionNonce` and `operatorDirectedRewardsSubmission`).\",\"submissionNonce\":\"Current nonce of the avs. Used to generate a unique submission hash.\"}},\"OperatorPISplitBipsSet(address,address,uint32,uint16,uint16)\":{\"params\":{\"activatedAt\":\"The timestamp at which the split will be activated.\",\"caller\":\"The address calling `setOperatorPISplit`.\",\"newOperatorPISplitBips\":\"The new split for the operator for Programmatic Incentives.\",\"oldOperatorPISplitBips\":\"The old split for the operator for Programmatic Incentives.\",\"operator\":\"The operator on behalf of which the split is being set.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the immutable variables for the contract\"},\"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"details\":\"Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rewardsSubmission` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengths\",\"params\":{\"rewardsSubmissions\":\"The rewards submissions being created\"}},\"createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"details\":\"Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractThe `RewardsCoordinator` contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this function.Strategies must be in ascending order of addresses to check for duplicatesOperators must be in ascending order of addresses to check for duplicates.This function will revert if the `operatorDirectedRewardsSubmissions` is malformed.\",\"params\":{\"avs\":\"The AVS on behalf of which the reward is being submitted\",\"operatorDirectedRewardsSubmissions\":\"The operator-directed rewards submissions being created\"}},\"createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"params\":{\"rewardsSubmissions\":\"The rewards submissions being created\"}},\"createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"params\":{\"rewardsSubmissions\":\"The rewards submissions being created\"}},\"disableRoot(uint32)\":{\"params\":{\"rootIndex\":\"The index of the root to be disabled\"}},\"initialize(address,uint256,address,uint32,uint16)\":{\"details\":\"Initializes the addresses of the initial owner, pauser registry, rewardsUpdater and configures the initial paused status, activationDelay, and defaultOperatorSplitBips.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)\":{\"details\":\"only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.\",\"params\":{\"claim\":\"The RewardsMerkleClaim to be processed. Contains the root index, earner, token leaves, and required proofs\",\"recipient\":\"The address recipient that receives the ERC20 rewards\"}},\"processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)\":{\"details\":\"only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.This function may fail to execute with a large number of claims due to gas limits. Use a smaller array of claims if necessary.\",\"params\":{\"claims\":\"The RewardsMerkleClaims to be processed. Contains the root index, earner, token leaves, and required proofs\",\"recipient\":\"The address recipient that receives the ERC20 rewards\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setActivationDelay(uint32)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_activationDelay\":\"The new value for activationDelay\"}},\"setClaimerFor(address)\":{\"details\":\"Assumes msg.sender is the earner\",\"params\":{\"claimer\":\"The address of the entity that can call `processClaim` on behalf of the earner\"}},\"setClaimerFor(address,address)\":{\"details\":\"Only callable by operators or AVSs. We define an AVS that has created at least one      operatorSet in the `AllocationManager`\",\"params\":{\"claimer\":\"The address of the entity that can call `processClaim` on behalf of the earner\",\"earner\":\"The address to set the claimer for\"}},\"setDefaultOperatorSplit(uint16)\":{\"details\":\"Only callable by the contract owner.\",\"params\":{\"split\":\"The default split for all operators across all avss in bips.\"}},\"setOperatorAVSSplit(address,address,uint16)\":{\"details\":\"Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay\",\"params\":{\"avs\":\"The avs for which the split is being set by the operator\",\"operator\":\"The operator who is setting the split\",\"split\":\"The split for the operator for the specific avs in bips.\"}},\"setOperatorPISplit(address,uint16)\":{\"details\":\"Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay\",\"params\":{\"operator\":\"The operator on behalf of which the split is being set.\",\"split\":\"The split for the operator for Programmatic Incentives in bips.\"}},\"setRewardsForAllSubmitter(address,bool)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_newValue\":\"The new value for isRewardsForAllSubmitter\",\"_submitter\":\"The address of the rewardsForAllSubmitter\"}},\"setRewardsUpdater(address)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_rewardsUpdater\":\"The address of the new rewardsUpdater\"}},\"submitRoot(bytes32,uint32)\":{\"details\":\"Only callable by the rewardsUpdater\",\"params\":{\"rewardsCalculationEndTimestamp\":\"The timestamp until which rewards have been calculated\",\"root\":\"The merkle root of the distribution\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"title\":\"RewardsCoordinator\",\"version\":1},\"userdoc\":{\"events\":{\"AVSRewardsSubmissionCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when an AVS creates a valid RewardsSubmission\"},\"DistributionRootSubmitted(uint32,bytes32,uint32,uint32)\":{\"notice\":\"rootIndex is the specific array index of the newly created root in the storage array\"},\"OperatorAVSSplitBipsSet(address,address,address,uint32,uint16,uint16)\":{\"notice\":\"Emitted when the operator split for an AVS is set.\"},\"OperatorDirectedAVSRewardsSubmissionCreated(address,address,bytes32,uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string))\":{\"notice\":\"Emitted when an AVS creates a valid `OperatorDirectedRewardsSubmission`\"},\"OperatorPISplitBipsSet(address,address,uint32,uint16,uint16)\":{\"notice\":\"Emitted when the operator split for Programmatic Incentives is set.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"RewardsClaimed(bytes32,address,address,address,address,uint256)\":{\"notice\":\"root is one of the submitted distribution roots that was claimed against\"},\"RewardsSubmissionForAllCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when a valid RewardsSubmission is created for all stakers by a valid submitter\"},\"RewardsSubmissionForAllEarnersCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when a valid RewardsSubmission is created when rewardAllStakersAndOperators is called\"},\"RewardsUpdaterSet(address,address)\":{\"notice\":\"rewardsUpdater is responsible for submiting DistributionRoots, only owner can set rewardsUpdater\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"CALCULATION_INTERVAL_SECONDS()\":{\"notice\":\"The interval in seconds at which the calculation for rewards distribution is done.\"},\"GENESIS_REWARDS_TIMESTAMP()\":{\"notice\":\"absolute min timestamp (seconds) that a rewards submission can start at\"},\"MAX_FUTURE_LENGTH()\":{\"notice\":\"max amount of time (seconds) that a rewards submission can start in the future\"},\"MAX_RETROACTIVE_LENGTH()\":{\"notice\":\"max amount of time (seconds) that a rewards submission can start in the past\"},\"MAX_REWARDS_DURATION()\":{\"notice\":\"The maximum amount of time (seconds) that a rewards submission can span over\"},\"activationDelay()\":{\"notice\":\"Delay in timestamp (seconds) before a posted root can be claimed against\"},\"allocationManager()\":{\"notice\":\"The AllocationManager contract for EigenLayer\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"calculateEarnerLeafHash((address,bytes32))\":{\"notice\":\"return the hash of the earner's leaf\"},\"calculateTokenLeafHash((address,uint256))\":{\"notice\":\"returns the hash of the earner's token leaf\"},\"checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))\":{\"notice\":\"returns 'true' if the claim would currently pass the check in `processClaims` but will revert if not valid\"},\"claimerFor(address)\":{\"notice\":\"Returns the `claimer` for a given `earner`.\"},\"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"Creates a new rewards submission on behalf of an AVS, to be split amongst the set of stakers delegated to operators who are registered to the `avs`\"},\"createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"notice\":\"Creates a new operator-directed rewards submission on behalf of an AVS, to be split amongst the operators and set of stakers delegated to operators who are registered to the `avs`.\"},\"createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"Creates a new rewards submission for all earners across all AVSs. Earners in this case indicating all operators and their delegated stakers. Undelegated stake is not rewarded from this RewardsSubmission. This interface is only callable by the token hopper contract from the Eigen Foundation\"},\"createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"similar to `createAVSRewardsSubmission` except the rewards are split amongst *all* stakers rather than just those delegated to operators who are registered to a single avs and is a permissioned call based on isRewardsForAllSubmitter mapping.\"},\"cumulativeClaimed(address,address)\":{\"notice\":\"Returns the total claimed amount for an `earner` for a given `token`.\"},\"currRewardsCalculationEndTimestamp()\":{\"notice\":\"Timestamp for last submitted DistributionRoot\"},\"defaultOperatorSplitBips()\":{\"notice\":\"the default split for all operators across all avss in bips.\"},\"delegationManager()\":{\"notice\":\"The DelegationManager contract for EigenLayer\"},\"disableRoot(uint32)\":{\"notice\":\"allow the rewardsUpdater to disable/cancel a pending root submission in case of an error\"},\"getCurrentClaimableDistributionRoot()\":{\"notice\":\"loop through the distribution roots from reverse and get latest root that is not disabled and activated i.e. a root that can be claimed against\"},\"getCurrentDistributionRoot()\":{\"notice\":\"returns the current distributionRoot\"},\"getDistributionRootAtIndex(uint256)\":{\"notice\":\"returns the distributionRoot at the specified index\"},\"getDistributionRootsLength()\":{\"notice\":\"returns the number of distribution roots posted\"},\"getOperatorAVSSplit(address,address)\":{\"notice\":\"the split for a specific `operator` for a specific `avs`\"},\"getOperatorPISplit(address)\":{\"notice\":\"the split for a specific `operator` for Programmatic Incentives\"},\"getRootIndexFromHash(bytes32)\":{\"notice\":\"loop through distribution roots from reverse and return index from hash\"},\"isAVSRewardsSubmissionHash(address,bytes32)\":{\"notice\":\"Returns whether a `hash` is a `valid` rewards submission hash for a given `avs`.\"},\"isOperatorDirectedAVSRewardsSubmissionHash(address,bytes32)\":{\"notice\":\"Mapping: avs => operatorDirectedAVSRewardsSubmissionHash => bool to check if operator-directed rewards submission hash has been submitted\"},\"isRewardsForAllSubmitter(address)\":{\"notice\":\"Returns whether a `submitter` is a `valid` rewards for all submitter.\"},\"isRewardsSubmissionForAllEarnersHash(address,bytes32)\":{\"notice\":\"Returns whether a `hash` is a `valid` rewards submission for all earners hash for a given `avs`.\"},\"isRewardsSubmissionForAllHash(address,bytes32)\":{\"notice\":\"Returns whether a `hash` is a `valid` rewards submission for all hash for a given `avs`.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)\":{\"notice\":\"Claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\"},\"processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)\":{\"notice\":\"Batch claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\"},\"rewardsUpdater()\":{\"notice\":\"Slot 2The address of the entity that can update the contract with new merkle roots\"},\"setActivationDelay(uint32)\":{\"notice\":\"Sets the delay in timestamp before a posted root can be claimed against\"},\"setClaimerFor(address)\":{\"notice\":\"Sets the address of the entity that can call `processClaim` on ehalf of an earner\"},\"setClaimerFor(address,address)\":{\"notice\":\"Sets the address of the entity that can call `processClaim` on behalf of an earner\"},\"setDefaultOperatorSplit(uint16)\":{\"notice\":\"Sets the default split for all operators across all avss.\"},\"setOperatorAVSSplit(address,address,uint16)\":{\"notice\":\"Sets the split for a specific operator for a specific avs\"},\"setOperatorPISplit(address,uint16)\":{\"notice\":\"Sets the split for a specific operator for Programmatic Incentives.\"},\"setRewardsForAllSubmitter(address,bool)\":{\"notice\":\"Sets the permissioned `rewardsForAllSubmitter` address which can submit createRewardsForAllSubmission\"},\"setRewardsUpdater(address)\":{\"notice\":\"Sets the permissioned `rewardsUpdater` address which can post new roots\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"submissionNonce(address)\":{\"notice\":\"Returns the submission `nonce` for an `avs`.\"},\"submitRoot(bytes32,uint32)\":{\"notice\":\"Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for rewards in EigenLayer. The main functionalities of this contract are - enabling any ERC20 rewards from AVSs to their operators and stakers for a given time range - allowing stakers and operators to claim their earnings including a split bips for operators - allowing the protocol to provide ERC20 tokens to stakers over a specified time range\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/RewardsCoordinator.sol\":\"RewardsCoordinator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"src/contracts/core/RewardsCoordinator.sol\":{\"keccak256\":\"0x5798640399c4ea2c409e3be9694b38e6c5a7c018cab3bfbbd9b4facbdfaed5fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ea0860e4c1cfda0bf208424114a637ee48c5dc5d5d4f5b54504eb446bf40b1c0\",\"dweb:/ipfs/QmeZHFRQQceZkJZruGuw7Pc88QuYEq8eCadZaYTWCdGESv\"]},\"src/contracts/core/RewardsCoordinatorStorage.sol\":{\"keccak256\":\"0x3e2649ac1803a18c50c32bd39bdaba47ced0b663c4b767fe5769843a3336ab3c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ed7826832ee7b61227d58f74838c97167e4d29511ec60db3f682bc9503677f35\",\"dweb:/ipfs/QmSQPNLD4bGQrwLMQpwnkncXrT9SdXa3cogthkuuudGhEd\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0x6d5f209cc63b57e1db891e014a098bd277bb3cd54d815ee9455ade2cdf44020a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://50546cefb737b88803bc6a63cfa962b228fd0d1e2697d6be9166718577e7656e\",\"dweb:/ipfs/QmUP7uYvJV3Eq9vbKdqTJ61jaNZ4QZD6H4fJDBwLw5qyrv\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x3ef98720d9ec2a58926cf13a6aaa5581a1273d81e09582ee45c4fc58f7ae331e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b40d5e6449ae27d93d383818310c6e00f18e19bf99cd9f379b55e4cea663752\",\"dweb:/ipfs/QmRr4MkpoC1tSRsqTtM4K8ZRZT2yNrqf58ZTjjKaEnxRc2\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xcca5f89005bdbca12fe9f62490a34aeb9cf7a9aa78346ba2c5acc6c6727ddabd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1dd5b145f729db03f449b4c003032b25677494b916e29c266df71fe991bf566b\",\"dweb:/ipfs/QmVn4ZxdFfNqJ2Xbp6N1qpJ4qseKeQ34c54Jtsgm6RHAyh\"]},\"src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0x34641f2a5250d80fca927168a4d071d374b2fc66094c5c1ed6d3b9f0e041251c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://80ab9987fe8f7ad5c3ae57aed8191bc9d7aa56548266fae5738aade190298150\",\"dweb:/ipfs/QmaPFGoLTBqXgXCRP1JKt8RNpQtbBmSKyFHfd5deBRyGWE\"]},\"src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xacf744ab9a97e62b80a664063decad5ef1746fa100e650060c5f5b06f42c5a6a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8ae714e8fd53143d3880ca2597b8e949c2963af5a268062ef0eb5093355ecd8a\",\"dweb:/ipfs/QmdiuQUCw55gs8KdinU5HvCBS4A9k9ffQuUQr8YUfoZUMN\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8\",\"dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8\"]},\"src/contracts/interfaces/IRewardsCoordinator.sol\":{\"keccak256\":\"0x9dcc18a9ba572fda3f7853e5fbd196fb55f85a52f65fdcd8e7bdf9fecc4a1a96\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://739d01256e55c8a76e2b26d96d69717cb960dc6f0519c74c0f93ebdcee2c95e9\",\"dweb:/ipfs/QmPDGX276L1RFZ2n81zwMNLTHsdvx13KAgycdoMQ39Rj3F\"]},\"src/contracts/interfaces/IShareManager.sol\":{\"keccak256\":\"0xd03653bc25fe5a64ec6071a0d3fb375280d1e32ece3a19c5d10fb14374de3537\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://65d3275df462c8db23b74ed96caa8cb7dbc7219e26bee2794c168b842517a1a5\",\"dweb:/ipfs/Qmen14WFvNLPE21WVdfcW33FQtEcLxMHEXZnwCkTbWNTQ1\"]},\"src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b\",\"dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4\",\"dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8\"]},\"src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xf5aa4a3486f10ba84a87ba4e9d90f0035c5ee7f8163e353edb113c45944fee99\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e9a7899486cf82b0c73bc3cbcdfb9924fcd1b1b0353248be1554de28cdb849bc\",\"dweb:/ipfs/QmNSvzDqizi6oQiuRZhsbx2W2e33JCdzYRv6ujUGtyPsag\"]},\"src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f\",\"dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX\"]},\"src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e\",\"dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6\",\"dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x63d44478f91bfb05bfc6d406587f7c2b49af6bd4616d01dd5c3b9ef65d605eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee1d930124139021384a9197deb5c9b7bfc74bf9d641c9bb449593bc23b2a1fe\",\"dweb:/ipfs/QmWRpQ9eL5oajiTF5CA9APF9zz6QyY1Lcg8tBTrpPTTkzx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0x90178e5e1b3397a8e6d8f1d086d145946c8a7fa99298f259ef226d9800d27b72\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://15a0d7b4dae1a950cd55c8990530679673bc8bf96f8a754f89ef8e3cf4e848fc\",\"dweb:/ipfs/QmNd1JhMSLQM7qtkzTF5LcEJhBuozL7MQomPVE1vqnS7sz\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd\",\"dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegationManager",
              "type": "address"
            },
            {
              "internalType": "contract IStrategyManager",
              "name": "_strategyManager",
              "type": "address"
            },
            {
              "internalType": "contract IAllocationManager",
              "name": "_allocationManager",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_CALCULATION_INTERVAL_SECONDS",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_MAX_REWARDS_DURATION",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_MAX_RETROACTIVE_LENGTH",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_MAX_FUTURE_LENGTH",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_GENESIS_REWARDS_TIMESTAMP",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmountExceedsMax"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmountIsZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DurationExceedsMax"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EarningsNotGreaterThanClaimed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCalculationIntervalSecondsRemainder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidClaimProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidDurationRemainder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEarner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEarnerLeafIndex"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidGenesisRewardsTimestampRemainder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidProofLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRootIndex"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidStartTimestampRemainder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTokenLeafIndex"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewRootMustBeForNewCalculatedPeriod"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorsNotInAscendingOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PreviousSplitPending"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RewardsEndTimestampNotElapsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RootAlreadyActivated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RootDisabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RootNotActivated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SplitExceedsMax"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StartTimestampTooFarInFuture"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StartTimestampTooFarInPast"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategiesNotInAscendingOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotWhitelisted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SubmissionNotRetroactive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnauthorizedCaller"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "submissionNonce",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "rewardsSubmissionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
              "name": "rewardsSubmission",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSRewardsSubmissionCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "oldActivationDelay",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "newActivationDelay",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ActivationDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "earner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldClaimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimerForSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "oldDefaultOperatorSplitBips",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "newDefaultOperatorSplitBips",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultOperatorSplitBipsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "rootIndex",
              "type": "uint32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DistributionRootDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "rootIndex",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "activatedAt",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DistributionRootSubmitted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "activatedAt",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "oldOperatorAVSSplitBips",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "newOperatorAVSSplitBips",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAVSSplitBipsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "operatorDirectedRewardsSubmissionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "submissionNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission",
              "name": "operatorDirectedRewardsSubmission",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
                  "name": "operatorRewards",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorDirectedAVSRewardsSubmissionCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "activatedAt",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "oldOperatorPISplitBips",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "newOperatorPISplitBips",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorPISplitBipsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "earner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rewardsForAllSubmitter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "oldValue",
              "type": "bool",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "newValue",
              "type": "bool",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardsForAllSubmitterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "submissionNonce",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "rewardsSubmissionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
              "name": "rewardsSubmission",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsSubmissionForAllCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenHopper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "submissionNonce",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "rewardsSubmissionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
              "name": "rewardsSubmission",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsSubmissionForAllEarnersCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldRewardsUpdater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newRewardsUpdater",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardsUpdaterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALCULATION_INTERVAL_SECONDS",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GENESIS_REWARDS_TIMESTAMP",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_FUTURE_LENGTH",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_RETROACTIVE_LENGTH",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_REWARDS_DURATION",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "activationDelay",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allocationManager",
          "outputs": [
            {
              "internalType": "contract IAllocationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
              "name": "leaf",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earner",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "earnerTokenRoot",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateEarnerLeafHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf",
              "name": "leaf",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "cumulativeEarnings",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateTokenLeafHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
              "name": "claim",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "rootIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "earnerIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "earnerTreeProof",
                  "type": "bytes"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
                  "name": "earnerLeaf",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "earner",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "earnerTokenRoot",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "tokenIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "tokenTreeProofs",
                  "type": "bytes[]"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
                  "name": "tokenLeaves",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "cumulativeEarnings",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "earner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimerFor",
          "outputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
              "name": "rewardsSubmissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAVSRewardsSubmission"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
              "name": "operatorDirectedRewardsSubmissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
                  "name": "operatorRewards",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createOperatorDirectedAVSRewardsSubmission"
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
              "name": "rewardsSubmissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRewardsForAllEarners"
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
              "name": "rewardsSubmissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRewardsForAllSubmission"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "earner",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeClaimed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalClaimed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currRewardsCalculationEndTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperatorSplitBips",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationManager",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "rootIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableRoot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentClaimableDistributionRoot",
          "outputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "rewardsCalculationEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "activatedAt",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "disabled",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentDistributionRoot",
          "outputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "rewardsCalculationEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "activatedAt",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "disabled",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDistributionRootAtIndex",
          "outputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "rewardsCalculationEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "activatedAt",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "disabled",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDistributionRootsLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorAVSSplit",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorPISplit",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "rootHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootIndexFromHash",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_rewardsUpdater",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_activationDelay",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_defaultSplitBips",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAVSRewardsSubmissionHash",
          "outputs": [
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorDirectedAVSRewardsSubmissionHash",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRewardsForAllSubmitter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRewardsSubmissionForAllEarnersHash",
          "outputs": [
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRewardsSubmissionForAllHash",
          "outputs": [
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
              "name": "claim",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "rootIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "earnerIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "earnerTreeProof",
                  "type": "bytes"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
                  "name": "earnerLeaf",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "earner",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "earnerTokenRoot",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "tokenIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "tokenTreeProofs",
                  "type": "bytes[]"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
                  "name": "tokenLeaves",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "cumulativeEarnings",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "processClaim"
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim[]",
              "name": "claims",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "rootIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "earnerIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "earnerTreeProof",
                  "type": "bytes"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
                  "name": "earnerLeaf",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "earner",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "earnerTokenRoot",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "tokenIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "tokenTreeProofs",
                  "type": "bytes[]"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
                  "name": "tokenLeaves",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "cumulativeEarnings",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "processClaims"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardsUpdater",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_activationDelay",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setActivationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimerFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "earner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimerFor"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "split",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultOperatorSplit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "split",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorAVSSplit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "split",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorPISplit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_submitter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_newValue",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsForAllSubmitter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rewardsUpdater",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsUpdater"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitRoot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Sets the immutable variables for the contract"
          },
          "createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "details": "Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rewardsSubmission` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengths",
            "params": {
              "rewardsSubmissions": "The rewards submissions being created"
            }
          },
          "createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])": {
            "details": "Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractThe `RewardsCoordinator` contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this function.Strategies must be in ascending order of addresses to check for duplicatesOperators must be in ascending order of addresses to check for duplicates.This function will revert if the `operatorDirectedRewardsSubmissions` is malformed.",
            "params": {
              "avs": "The AVS on behalf of which the reward is being submitted",
              "operatorDirectedRewardsSubmissions": "The operator-directed rewards submissions being created"
            }
          },
          "createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "params": {
              "rewardsSubmissions": "The rewards submissions being created"
            }
          },
          "createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "params": {
              "rewardsSubmissions": "The rewards submissions being created"
            }
          },
          "disableRoot(uint32)": {
            "params": {
              "rootIndex": "The index of the root to be disabled"
            }
          },
          "initialize(address,uint256,address,uint32,uint16)": {
            "details": "Initializes the addresses of the initial owner, pauser registry, rewardsUpdater and configures the initial paused status, activationDelay, and defaultOperatorSplitBips."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)": {
            "details": "only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.",
            "params": {
              "claim": "The RewardsMerkleClaim to be processed. Contains the root index, earner, token leaves, and required proofs",
              "recipient": "The address recipient that receives the ERC20 rewards"
            }
          },
          "processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)": {
            "details": "only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.This function may fail to execute with a large number of claims due to gas limits. Use a smaller array of claims if necessary.",
            "params": {
              "claims": "The RewardsMerkleClaims to be processed. Contains the root index, earner, token leaves, and required proofs",
              "recipient": "The address recipient that receives the ERC20 rewards"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setActivationDelay(uint32)": {
            "details": "Only callable by the contract owner",
            "params": {
              "_activationDelay": "The new value for activationDelay"
            }
          },
          "setClaimerFor(address)": {
            "details": "Assumes msg.sender is the earner",
            "params": {
              "claimer": "The address of the entity that can call `processClaim` on behalf of the earner"
            }
          },
          "setClaimerFor(address,address)": {
            "details": "Only callable by operators or AVSs. We define an AVS that has created at least one      operatorSet in the `AllocationManager`",
            "params": {
              "claimer": "The address of the entity that can call `processClaim` on behalf of the earner",
              "earner": "The address to set the claimer for"
            }
          },
          "setDefaultOperatorSplit(uint16)": {
            "details": "Only callable by the contract owner.",
            "params": {
              "split": "The default split for all operators across all avss in bips."
            }
          },
          "setOperatorAVSSplit(address,address,uint16)": {
            "details": "Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay",
            "params": {
              "avs": "The avs for which the split is being set by the operator",
              "operator": "The operator who is setting the split",
              "split": "The split for the operator for the specific avs in bips."
            }
          },
          "setOperatorPISplit(address,uint16)": {
            "details": "Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay",
            "params": {
              "operator": "The operator on behalf of which the split is being set.",
              "split": "The split for the operator for Programmatic Incentives in bips."
            }
          },
          "setRewardsForAllSubmitter(address,bool)": {
            "details": "Only callable by the contract owner",
            "params": {
              "_newValue": "The new value for isRewardsForAllSubmitter",
              "_submitter": "The address of the rewardsForAllSubmitter"
            }
          },
          "setRewardsUpdater(address)": {
            "details": "Only callable by the contract owner",
            "params": {
              "_rewardsUpdater": "The address of the new rewardsUpdater"
            }
          },
          "submitRoot(bytes32,uint32)": {
            "details": "Only callable by the rewardsUpdater",
            "params": {
              "rewardsCalculationEndTimestamp": "The timestamp until which rewards have been calculated",
              "root": "The merkle root of the distribution"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CALCULATION_INTERVAL_SECONDS()": {
            "notice": "The interval in seconds at which the calculation for rewards distribution is done."
          },
          "GENESIS_REWARDS_TIMESTAMP()": {
            "notice": "absolute min timestamp (seconds) that a rewards submission can start at"
          },
          "MAX_FUTURE_LENGTH()": {
            "notice": "max amount of time (seconds) that a rewards submission can start in the future"
          },
          "MAX_RETROACTIVE_LENGTH()": {
            "notice": "max amount of time (seconds) that a rewards submission can start in the past"
          },
          "MAX_REWARDS_DURATION()": {
            "notice": "The maximum amount of time (seconds) that a rewards submission can span over"
          },
          "activationDelay()": {
            "notice": "Delay in timestamp (seconds) before a posted root can be claimed against"
          },
          "allocationManager()": {
            "notice": "The AllocationManager contract for EigenLayer"
          },
          "beaconChainETHStrategy()": {
            "notice": "Canonical, virtual beacon chain ETH strategy"
          },
          "calculateEarnerLeafHash((address,bytes32))": {
            "notice": "return the hash of the earner's leaf"
          },
          "calculateTokenLeafHash((address,uint256))": {
            "notice": "returns the hash of the earner's token leaf"
          },
          "checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))": {
            "notice": "returns 'true' if the claim would currently pass the check in `processClaims` but will revert if not valid"
          },
          "claimerFor(address)": {
            "notice": "Returns the `claimer` for a given `earner`."
          },
          "createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "notice": "Creates a new rewards submission on behalf of an AVS, to be split amongst the set of stakers delegated to operators who are registered to the `avs`"
          },
          "createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])": {
            "notice": "Creates a new operator-directed rewards submission on behalf of an AVS, to be split amongst the operators and set of stakers delegated to operators who are registered to the `avs`."
          },
          "createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "notice": "Creates a new rewards submission for all earners across all AVSs. Earners in this case indicating all operators and their delegated stakers. Undelegated stake is not rewarded from this RewardsSubmission. This interface is only callable by the token hopper contract from the Eigen Foundation"
          },
          "createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "notice": "similar to `createAVSRewardsSubmission` except the rewards are split amongst *all* stakers rather than just those delegated to operators who are registered to a single avs and is a permissioned call based on isRewardsForAllSubmitter mapping."
          },
          "cumulativeClaimed(address,address)": {
            "notice": "Returns the total claimed amount for an `earner` for a given `token`."
          },
          "currRewardsCalculationEndTimestamp()": {
            "notice": "Timestamp for last submitted DistributionRoot"
          },
          "defaultOperatorSplitBips()": {
            "notice": "the default split for all operators across all avss in bips."
          },
          "delegationManager()": {
            "notice": "The DelegationManager contract for EigenLayer"
          },
          "disableRoot(uint32)": {
            "notice": "allow the rewardsUpdater to disable/cancel a pending root submission in case of an error"
          },
          "getCurrentClaimableDistributionRoot()": {
            "notice": "loop through the distribution roots from reverse and get latest root that is not disabled and activated i.e. a root that can be claimed against"
          },
          "getCurrentDistributionRoot()": {
            "notice": "returns the current distributionRoot"
          },
          "getDistributionRootAtIndex(uint256)": {
            "notice": "returns the distributionRoot at the specified index"
          },
          "getDistributionRootsLength()": {
            "notice": "returns the number of distribution roots posted"
          },
          "getOperatorAVSSplit(address,address)": {
            "notice": "the split for a specific `operator` for a specific `avs`"
          },
          "getOperatorPISplit(address)": {
            "notice": "the split for a specific `operator` for Programmatic Incentives"
          },
          "getRootIndexFromHash(bytes32)": {
            "notice": "loop through distribution roots from reverse and return index from hash"
          },
          "isAVSRewardsSubmissionHash(address,bytes32)": {
            "notice": "Returns whether a `hash` is a `valid` rewards submission hash for a given `avs`."
          },
          "isOperatorDirectedAVSRewardsSubmissionHash(address,bytes32)": {
            "notice": "Mapping: avs => operatorDirectedAVSRewardsSubmissionHash => bool to check if operator-directed rewards submission hash has been submitted"
          },
          "isRewardsForAllSubmitter(address)": {
            "notice": "Returns whether a `submitter` is a `valid` rewards for all submitter."
          },
          "isRewardsSubmissionForAllEarnersHash(address,bytes32)": {
            "notice": "Returns whether a `hash` is a `valid` rewards submission for all earners hash for a given `avs`."
          },
          "isRewardsSubmissionForAllHash(address,bytes32)": {
            "notice": "Returns whether a `hash` is a `valid` rewards submission for all hash for a given `avs`."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)": {
            "notice": "Claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address."
          },
          "processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)": {
            "notice": "Batch claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address."
          },
          "rewardsUpdater()": {
            "notice": "Slot 2The address of the entity that can update the contract with new merkle roots"
          },
          "setActivationDelay(uint32)": {
            "notice": "Sets the delay in timestamp before a posted root can be claimed against"
          },
          "setClaimerFor(address)": {
            "notice": "Sets the address of the entity that can call `processClaim` on ehalf of an earner"
          },
          "setClaimerFor(address,address)": {
            "notice": "Sets the address of the entity that can call `processClaim` on behalf of an earner"
          },
          "setDefaultOperatorSplit(uint16)": {
            "notice": "Sets the default split for all operators across all avss."
          },
          "setOperatorAVSSplit(address,address,uint16)": {
            "notice": "Sets the split for a specific operator for a specific avs"
          },
          "setOperatorPISplit(address,uint16)": {
            "notice": "Sets the split for a specific operator for Programmatic Incentives."
          },
          "setRewardsForAllSubmitter(address,bool)": {
            "notice": "Sets the permissioned `rewardsForAllSubmitter` address which can submit createRewardsForAllSubmission"
          },
          "setRewardsUpdater(address)": {
            "notice": "Sets the permissioned `rewardsUpdater` address which can post new roots"
          },
          "strategyManager()": {
            "notice": "The StrategyManager contract for EigenLayer"
          },
          "submissionNonce(address)": {
            "notice": "Returns the submission `nonce` for an `avs`."
          },
          "submitRoot(bytes32,uint32)": {
            "notice": "Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/RewardsCoordinator.sol": "RewardsCoordinator"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "src/contracts/core/RewardsCoordinator.sol": {
        "keccak256": "0x5798640399c4ea2c409e3be9694b38e6c5a7c018cab3bfbbd9b4facbdfaed5fc",
        "urls": [
          "bzz-raw://ea0860e4c1cfda0bf208424114a637ee48c5dc5d5d4f5b54504eb446bf40b1c0",
          "dweb:/ipfs/QmeZHFRQQceZkJZruGuw7Pc88QuYEq8eCadZaYTWCdGESv"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/RewardsCoordinatorStorage.sol": {
        "keccak256": "0x3e2649ac1803a18c50c32bd39bdaba47ced0b663c4b767fe5769843a3336ab3c",
        "urls": [
          "bzz-raw://ed7826832ee7b61227d58f74838c97167e4d29511ec60db3f682bc9503677f35",
          "dweb:/ipfs/QmSQPNLD4bGQrwLMQpwnkncXrT9SdXa3cogthkuuudGhEd"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0x6d5f209cc63b57e1db891e014a098bd277bb3cd54d815ee9455ade2cdf44020a",
        "urls": [
          "bzz-raw://50546cefb737b88803bc6a63cfa962b228fd0d1e2697d6be9166718577e7656e",
          "dweb:/ipfs/QmUP7uYvJV3Eq9vbKdqTJ61jaNZ4QZD6H4fJDBwLw5qyrv"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0x3ef98720d9ec2a58926cf13a6aaa5581a1273d81e09582ee45c4fc58f7ae331e",
        "urls": [
          "bzz-raw://2b40d5e6449ae27d93d383818310c6e00f18e19bf99cd9f379b55e4cea663752",
          "dweb:/ipfs/QmRr4MkpoC1tSRsqTtM4K8ZRZT2yNrqf58ZTjjKaEnxRc2"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xcca5f89005bdbca12fe9f62490a34aeb9cf7a9aa78346ba2c5acc6c6727ddabd",
        "urls": [
          "bzz-raw://1dd5b145f729db03f449b4c003032b25677494b916e29c266df71fe991bf566b",
          "dweb:/ipfs/QmVn4ZxdFfNqJ2Xbp6N1qpJ4qseKeQ34c54Jtsgm6RHAyh"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0x34641f2a5250d80fca927168a4d071d374b2fc66094c5c1ed6d3b9f0e041251c",
        "urls": [
          "bzz-raw://80ab9987fe8f7ad5c3ae57aed8191bc9d7aa56548266fae5738aade190298150",
          "dweb:/ipfs/QmaPFGoLTBqXgXCRP1JKt8RNpQtbBmSKyFHfd5deBRyGWE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0xacf744ab9a97e62b80a664063decad5ef1746fa100e650060c5f5b06f42c5a6a",
        "urls": [
          "bzz-raw://8ae714e8fd53143d3880ca2597b8e949c2963af5a268062ef0eb5093355ecd8a",
          "dweb:/ipfs/QmdiuQUCw55gs8KdinU5HvCBS4A9k9ffQuUQr8YUfoZUMN"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b",
        "urls": [
          "bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8",
          "dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IRewardsCoordinator.sol": {
        "keccak256": "0x9dcc18a9ba572fda3f7853e5fbd196fb55f85a52f65fdcd8e7bdf9fecc4a1a96",
        "urls": [
          "bzz-raw://739d01256e55c8a76e2b26d96d69717cb960dc6f0519c74c0f93ebdcee2c95e9",
          "dweb:/ipfs/QmPDGX276L1RFZ2n81zwMNLTHsdvx13KAgycdoMQ39Rj3F"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IShareManager.sol": {
        "keccak256": "0xd03653bc25fe5a64ec6071a0d3fb375280d1e32ece3a19c5d10fb14374de3537",
        "urls": [
          "bzz-raw://65d3275df462c8db23b74ed96caa8cb7dbc7219e26bee2794c168b842517a1a5",
          "dweb:/ipfs/Qmen14WFvNLPE21WVdfcW33FQtEcLxMHEXZnwCkTbWNTQ1"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de",
        "urls": [
          "bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b",
          "dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3",
        "urls": [
          "bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4",
          "dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xf5aa4a3486f10ba84a87ba4e9d90f0035c5ee7f8163e353edb113c45944fee99",
        "urls": [
          "bzz-raw://e9a7899486cf82b0c73bc3cbcdfb9924fcd1b1b0353248be1554de28cdb849bc",
          "dweb:/ipfs/QmNSvzDqizi6oQiuRZhsbx2W2e33JCdzYRv6ujUGtyPsag"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b",
        "urls": [
          "bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f",
          "dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Endian.sol": {
        "keccak256": "0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136",
        "urls": [
          "bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e",
          "dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436",
        "urls": [
          "bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6",
          "dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x63d44478f91bfb05bfc6d406587f7c2b49af6bd4616d01dd5c3b9ef65d605eba",
        "urls": [
          "bzz-raw://ee1d930124139021384a9197deb5c9b7bfc74bf9d641c9bb449593bc23b2a1fe",
          "dweb:/ipfs/QmWRpQ9eL5oajiTF5CA9APF9zz6QyY1Lcg8tBTrpPTTkzx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0x90178e5e1b3397a8e6d8f1d086d145946c8a7fa99298f259ef226d9800d27b72",
        "urls": [
          "bzz-raw://15a0d7b4dae1a950cd55c8990530679673bc8bf96f8a754f89ef8e3cf4e848fc",
          "dweb:/ipfs/QmNd1JhMSLQM7qtkzTF5LcEJhBuozL7MQomPVE1vqnS7sz"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666",
        "urls": [
          "bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd",
          "dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 107
}