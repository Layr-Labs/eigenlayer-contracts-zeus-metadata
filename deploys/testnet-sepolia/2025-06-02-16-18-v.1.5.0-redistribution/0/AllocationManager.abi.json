{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_delegation",
          "type": "address",
          "internalType": "contract IDelegationManager"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_DEALLOCATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_ALLOCATION_CONFIGURATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ALLOCATION_CONFIGURATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DEALLOCATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addStrategiesToOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "clearDeallocationQueue",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "numToClear",
          "type": "uint16[]",
          "internalType": "uint16[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createOperatorSets",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
          "components": [
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createRedistributingOperatorSets",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
          "components": [
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            }
          ]
        },
        {
          "name": "redistributionRecipients",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IDelegationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deregisterFromOperatorSets",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.DeregisterParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatableMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedStake",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedStrategies",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocation",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.Allocation",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocations",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEncumberedMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudesAtBlock",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "blockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMemberCount",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMembers",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMinimumSlashableStake",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "futureBlock",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "slashableStake",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetCount",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRedistributionRecipient",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRegisteredSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSlashCount",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategiesInOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isMemberOfOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorRedistributable",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorSlashable",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRedistributingOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "modifyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
          "components": [
            {
              "name": "operatorSet",
              "type": "tuple",
              "internalType": "struct OperatorSet",
              "components": [
                {
                  "name": "avs",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "id",
                  "type": "uint32",
                  "internalType": "uint32"
                }
              ]
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "newMagnitudes",
              "type": "uint64[]",
              "internalType": "uint64[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerForOperatorSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.RegisterParams",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeStrategiesFromOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "slashOperator",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.SlashingParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "wadsToSlash",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateAVSMetadataURI",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AVSMetadataURIUpdated",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AVSRegistrarSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "indexed": false,
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationDelaySet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "magnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EncumberedMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "encumberedMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "maxMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorAddedToOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetCreated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSlashed",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategies",
          "type": "address[]",
          "indexed": false,
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "wadSlashed",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "description",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RedistributionAddressSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "redistributionRecipient",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyAddedToOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Empty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAVSRegistrar",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCaller",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSnapshotOrdering",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidStrategy",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidWadToSlash",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ModificationAlreadyPending",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NonexistentAVSMetadata",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorNotSlashable",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OutOfBounds",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SameMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategiesMustBeInAscendingOrder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyAlreadyInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyNotInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "UninitializedAllocationDelay",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610140604052348015610010575f5ffd5b5060405161611f38038061611f83398101604081905261002f916101e6565b8084878585896001600160a01b03811661005c576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b0390811660805292831660a05263ffffffff91821660c0521660e052166101005261008d816100a5565b610120525061009a6100eb565b50505050505061034a565b5f5f829050601f815111156100d8578260405163305a27a960e01b81526004016100cf91906102ef565b60405180910390fd5b80516100e382610324565b179392505050565b5f54610100900460ff16156101525760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b60648201526084016100cf565b5f5460ff908116146101a1575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146101b7575f5ffd5b50565b805163ffffffff811681146101cd575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f5f5f60c087890312156101fb575f5ffd5b8651610206816101a3565b6020880151909650610217816101a3565b6040880151909550610228816101a3565b9350610236606088016101ba565b9250610244608088016101ba565b60a08801519092506001600160401b0381111561025f575f5ffd5b8701601f8101891361026f575f5ffd5b80516001600160401b03811115610288576102886101d2565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102b6576102b66101d2565b6040528181528282016020018b10156102cd575f5ffd5b8160208401602083015e5f602083830101528093505050509295509295509295565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80516020808301519190811015610344575f198160200360031b1b821691505b50919050565b60805160a05160c05160e0516101005161012051615d416103de5f395f61132201525f81816104b30152612c4601525f81816106260152613b5701525f81816103bc0152818161171b0152611dee01525f818161079401528181611356015281816113c0015281816120ce01528181612eba015261375701525f818161064d01528181612b12015261416f0152615d415ff3fe608060405234801561000f575f5ffd5b50600436106102e5575f3560e01c80635c975abb11610195578063adc2e3d9116100e4578063d3d96ff41161009e578063f231bd0811610079578063f231bd08146107b6578063f605ce08146107c9578063fabc1cbc146107dc578063fe4b84df146107ef575f5ffd5b8063d3d96ff414610769578063dc2af6921461077c578063df5cf7231461078f575f5ffd5b8063adc2e3d9146106db578063b2447af7146106ee578063b66bd98914610701578063b9fbaed114610714578063ba1a84e514610743578063c221d8ae14610756575f5ffd5b80637bc1ef611161014f57806394d7d00c1161012a57806394d7d00c1461068f578063952899ee146106a2578063a9333ec8146106b5578063a9821821146106c8575f5ffd5b80637bc1ef6114610621578063886f1195146106485780638ce648541461066f575f5ffd5b80635c975abb146105a2578063670d3ba2146105aa5780636cfb4481146105bd5780636e3492b5146105e85780636e875dba146105fb57806379ae50cd1461060e575f5ffd5b806336352057116102515780634cfd29391161020b57806354fd4d50116101e657806354fd4d501461054f57806356c483e614610564578063595c6a67146105775780635ac86ab71461057f575f5ffd5b80634cfd29391461050857806350feea2014610529578063547afb871461053c575f5ffd5b8063363520571461044c57806340120dab1461046d5780634177a87c1461048e5780634657e26a146104ae5780634a10ffe5146104d55780634b5046ef146104f5575f5ffd5b8063261f84e0116102a2578063261f84e0146103a45780632981eb77146103b75780632b453a9a146103f35780632bab2c4a14610413578063304c10cd1461042657806332a879e414610439575f5ffd5b80630f3df50e146102e957806310e1b9b8146103195780631352c3e614610339578063136439dd1461035c57806315fe502814610371578063260dc75814610391575b5f5ffd5b6102fc6102f7366004614b67565b610802565b6040516001600160a01b0390911681526020015b60405180910390f35b61032c610327366004614b81565b610843565b6040516103109190614bc8565b61034c610347366004614bfb565b61087c565b6040519015158152602001610310565b61036f61036a366004614c2f565b6108f7565b005b61038461037f366004614c46565b610931565b6040516103109190614cc4565b61034c61039f366004614b67565b610a48565b61036f6103b2366004614d16565b610a79565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610310565b610406610401366004614dfb565b610b22565b6040516103109190614e9e565b610406610421366004614f01565b610b38565b6102fc610434366004614c46565b610bd7565b61036f610447366004614f85565b610c06565b61045f61045a366004615005565b610d43565b604051610310929190615057565b61048061047b36600461506f565b610e86565b6040516103109291906150fc565b6104a161049c366004614b67565b611001565b6040516103109190615159565b6102fc7f000000000000000000000000000000000000000000000000000000000000000081565b6104e86104e336600461516b565b611025565b60405161031091906151ae565b61036f610503366004614f85565b6110cd565b61051b610516366004614b67565b611160565b604051908152602001610310565b61036f6105373660046151f9565b611182565b6104e861054a366004615257565b611273565b61055761131b565b6040516103109190615299565b61036f6105723660046152ce565b61134b565b61036f611450565b61034c61058d3660046152f8565b606654600160ff9092169190911b9081161490565b60665461051b565b61034c6105b8366004614bfb565b611464565b6105d06105cb36600461506f565b611490565b6040516001600160401b039091168152602001610310565b61036f6105f636600461532e565b6114a5565b6104a1610609366004614b67565b611868565b61038461061c366004614c46565b611879565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b6102fc7f000000000000000000000000000000000000000000000000000000000000000081565b61068261067d36600461535f565b611953565b60405161031091906153a2565b6104e861069d3660046153b4565b611a0f565b61036f6106b036600461540f565b611afb565b6105d06106c336600461506f565b611f9c565b61036f6106d63660046155b8565b611fcb565b61036f6106e9366004615636565b61207d565b61051b6106fc366004614b67565b6123c6565b61036f61070f3660046151f9565b6123e8565b610727610722366004614c46565b612542565b60408051921515835263ffffffff909116602083015201610310565b61051b610751366004614c46565b6125dc565b6104a1610764366004614bfb565b6125fc565b61036f61077736600461506f565b612625565b61034c61078a366004614c46565b612752565b6102fc7f000000000000000000000000000000000000000000000000000000000000000081565b61034c6107c4366004614b67565b612785565b6105d06107d736600461506f565b6127a4565b61036f6107ea366004614c2f565b6127b0565b61036f6107fd366004614c2f565b61281d565b5f5f60a65f6108108561292e565b815260208101919091526040015f20546001600160a01b031690508015610837578061083c565b620e16e45b9392505050565b604080516060810182525f80825260208201819052918101829052906108728561086c8661292e565b85612991565b9695505050505050565b6001600160a01b0382165f908152609e6020526040812081908161089f8561292e565b815260208082019290925260409081015f2081518083019092525460ff8116151580835261010090910463ffffffff16928201929092529150806108ed5750806020015163ffffffff164311155b9150505b92915050565b6108ff612afd565b60665481811681146109245760405163c61dca5d60e01b815260040160405180910390fd5b61092d82612ba0565b5050565b6001600160a01b0381165f908152609d602052604081206060919061095590612bdd565b90505f816001600160401b0381111561097057610970614a77565b6040519080825280602002602001820160405280156109b457816020015b604080518082019091525f808252602082015281526020019060019003908161098e5790505b5090505f5b82811015610a40576001600160a01b0385165f908152609d60205260409020610a1b906109e69083612be6565b604080518082019091525f80825260208201525060408051808201909152606082901c815263ffffffff909116602082015290565b828281518110610a2d57610a2d615678565b60209081029190910101526001016109b9565b509392505050565b60208082015182516001600160a01b03165f9081526098909252604082206108f19163ffffffff90811690612bf116565b82610a8381612c08565b610aa05760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b0384165f90815260a4602052604090205460ff16610ad8576040516348f7dbb960e01b815260040160405180910390fd5b5f5b82811015610b1b57610b1385858584818110610af857610af8615678565b9050602002810190610b0a919061568c565b620e16e4612cb2565b600101610ada565b5050505050565b6060610b3084848443612e66565b949350505050565b6060610b4685858585612e66565b90505f5b8451811015610bce57610b76858281518110610b6857610b68615678565b60200260200101518761087c565b610bc6575f5b8451811015610bc4575f838381518110610b9857610b98615678565b60200260200101518281518110610bb157610bb1615678565b6020908102919091010152600101610b7c565b505b600101610b4a565b50949350505050565b6001600160a01b038082165f908152609760205260408120549091168015610bff578061083c565b5090919050565b84610c1081612c08565b610c2d5760405163932d94f760e01b815260040160405180910390fd5b838214610c4d576040516343714afd60e01b815260040160405180910390fd5b6001600160a01b0386165f90815260a4602052604090205460ff16610c85576040516348f7dbb960e01b815260040160405180910390fd5b5f5b84811015610d3a575f848483818110610ca257610ca2615678565b9050602002016020810190610cb79190614c46565b6001600160a01b031603610cde576040516339b190bb60e11b815260040160405180910390fd5b610d3287878784818110610cf457610cf4615678565b9050602002810190610d06919061568c565b868685818110610d1857610d18615678565b9050602002016020810190610d2d9190614c46565b612cb2565b600101610c87565b50505050505050565b5f60606001610d5181613153565b84610d5b81612c08565b610d785760405163932d94f760e01b815260040160405180910390fd5b5f6040518060400160405280886001600160a01b03168152602001876020016020810190610da691906156aa565b63ffffffff1690529050610dbd60608701876156c3565b9050610dcc60408801886156c3565b905014610dec576040516343714afd60e01b815260040160405180910390fd5b60208082015182516001600160a01b03165f90815260989092526040909120610e1e9163ffffffff90811690612bf116565b610e3b57604051631fb1705560e21b815260040160405180910390fd5b610e51610e4b6020880188614c46565b8261087c565b610e6e5760405163ebbff49760e01b815260040160405180910390fd5b610e788682613181565b945094505050509250929050565b6001600160a01b0382165f908152609d602052604081206060918291610eab90612bdd565b90505f816001600160401b03811115610ec657610ec6614a77565b604051908082528060200260200182016040528015610f0a57816020015b604080518082019091525f8082526020820152815260200190600190039081610ee45790505b5090505f826001600160401b03811115610f2657610f26614a77565b604051908082528060200260200182016040528015610f6f57816020015b604080516060810182525f80825260208083018290529282015282525f19909201910181610f445790505b5090505f5b83811015610ff2576001600160a01b0388165f908152609d60205260408120610fa1906109e69084612be6565b905080848381518110610fb657610fb6615678565b6020026020010181905250610fcc89828a610843565b838381518110610fde57610fde615678565b602090810291909101015250600101610f74565b509093509150505b9250929050565b60605f61083c60995f6110138661292e565b81526020019081526020015f206138c1565b60605f83516001600160401b0381111561104157611041614a77565b60405190808252806020026020018201604052801561106a578160200160208202803683370190505b5090505f5b8451811015610a405761109b85828151811061108d5761108d615678565b602002602001015185611f9c565b8282815181106110ad576110ad615678565b6001600160401b039092166020928302919091019091015260010161106f565b5f6110d781613153565b8382146110f7576040516343714afd60e01b815260040160405180910390fd5b5f5b84811015610d3a576111588787878481811061111757611117615678565b905060200201602081019061112c9190614c46565b86868581811061113e5761113e615678565b90506020020160208101906111539190615708565b6138cd565b6001016110f9565b5f60a55f61116d8461292e565b81526020019081526020015f20549050919050565b8361118c81612c08565b6111a95760405163932d94f760e01b815260040160405180910390fd5b6040805180820182526001600160a01b03871680825263ffffffff80881660208085018290525f938452609890529390912091926111e89291612bf116565b61120557604051631fb1705560e21b815260040160405180910390fd5b5f5b83811015610d3a5761126b8286868481811061122557611225615678565b905060200201602081019061123a9190614c46565b61126660405180604001604052808c6001600160a01b031681526020018b63ffffffff16815250612785565b6139d1565b600101611207565b60605f82516001600160401b0381111561128f5761128f614a77565b6040519080825280602002602001820160405280156112b8578160200160208202803683370190505b5090505f5b8351811015610a40576112e9858583815181106112dc576112dc615678565b6020026020010151611f9c565b8282815181106112fb576112fb615678565b6001600160401b03909216602092830291909101909101526001016112bd565b60606113467f0000000000000000000000000000000000000000000000000000000000000000613a73565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114465761138482612c08565b6113a1576040516348f5c3ed60e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0383811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611405573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114299190615729565b6114465760405163ccea9e6f60e01b815260040160405180910390fd5b61092d8282613ab0565b611458612afd565b6114625f19612ba0565b565b5f61083c83609a5f6114758661292e565b81526020019081526020015f20613c5c90919063ffffffff16565b5f5f61149c8484613c7d565b95945050505050565b60026114b081613153565b6114c56114c06020840184614c46565b612c08565b806114de57506114de6114c06040840160208501614c46565b6114fb576040516348f5c3ed60e01b815260040160405180910390fd5b5f5b61150a60408401846156c3565b90508110156117cc575f60405180604001604052808560200160208101906115329190614c46565b6001600160a01b0316815260200161154d60408701876156c3565b8581811061155d5761155d615678565b905060200201602081019061157291906156aa565b63ffffffff1681525090506115bf816020015163ffffffff1660985f8760200160208101906115a19190614c46565b6001600160a01b0316815260208101919091526040015f2090612bf1565b6115dc57604051631fb1705560e21b815260040160405180910390fd5b609e5f6115ec6020870187614c46565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6116158361292e565b815260208101919091526040015f205460ff16611645576040516325131d4f60e01b815260040160405180910390fd5b61167f6116518261292e565b609c5f6116616020890189614c46565b6001600160a01b0316815260208101919091526040015f2090613dec565b506116b76116906020860186614c46565b609a5f61169c8561292e565b81526020019081526020015f20613df790919063ffffffff16565b506116c56020850185614c46565b6001600160a01b03167fad34c3070be1dffbcaa499d000ba2b8d9848aefcac3059df245dd95c4ece14fe826040516116fd9190615748565b60405180910390a2604080518082019091525f8152602081016117407f00000000000000000000000000000000000000000000000000000000000000004361576a565b63ffffffff169052609e5f6117586020880188614c46565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6117818461292e565b81526020808201929092526040015f2082518154939092015163ffffffff166101000264ffffffff00199215159290921664ffffffffff1990931692909217179055506001016114fd565b506117e06104346040840160208501614c46565b6001600160a01b031663303ca9566117fb6020850185614c46565b61180b6040860160208701614c46565b61181860408701876156c3565b6040518563ffffffff1660e01b815260040161183794939291906157bf565b5f604051808303815f87803b15801561184e575f5ffd5b505af1158015611860573d5f5f3e3d5ffd5b505050505050565b60606108f1609a5f6110138561292e565b6001600160a01b0381165f908152609c602052604081206060919061189d90612bdd565b90505f816001600160401b038111156118b8576118b8614a77565b6040519080825280602002602001820160405280156118fc57816020015b604080518082019091525f80825260208201528152602001906001900390816118d65790505b5090505f5b82811015610a40576001600160a01b0385165f908152609c6020526040902061192e906109e69083612be6565b82828151811061194057611940615678565b6020908102919091010152600101611901565b60605f84516001600160401b0381111561196f5761196f614a77565b6040519080825280602002602001820160405280156119b857816020015b604080516060810182525f80825260208083018290529282015282525f1990920191018161198d5790505b5090505f5b8551811015610bce576119ea8682815181106119db576119db615678565b60200260200101518686610843565b8282815181106119fc576119fc615678565b60209081029190910101526001016119bd565b60605f83516001600160401b03811115611a2b57611a2b614a77565b604051908082528060200260200182016040528015611a54578160200160208202803683370190505b5090505f5b8451811015610bce576001600160a01b0386165f90815260a1602052604081208651611ac992879291899086908110611a9457611a94615678565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20613e0b90919063ffffffff16565b828281518110611adb57611adb615678565b6001600160401b0390921660209283029190910190910152600101611a59565b5f611b0581613153565b611b0e83612c08565b611b2b576040516348f5c3ed60e01b815260040160405180910390fd5b5f5f5f611b3786612542565b9150915081611b595760405163fa55fc8160e01b815260040160405180910390fd5b91505f90505b8351811015610b1b57838181518110611b7a57611b7a615678565b60200260200101516040015151848281518110611b9957611b99615678565b6020026020010151602001515114611bc4576040516343714afd60e01b815260040160405180910390fd5b5f848281518110611bd757611bd7615678565b602090810291909101810151518082015181516001600160a01b03165f90815260989093526040909220909250611c179163ffffffff90811690612bf116565b611c3457604051631fb1705560e21b815260040160405180910390fd5b5f611c3f878361087c565b90505f5b868481518110611c5557611c55615678565b60200260200101516020015151811015611f91575f878581518110611c7c57611c7c615678565b6020026020010151602001518281518110611c9957611c99615678565b60200260200101519050611cb0898261ffff6138cd565b5f5f611cbf8b61086c8861292e565b91509150806040015163ffffffff165f14611ced57604051630d8fcbe360e41b815260040160405180910390fd5b5f611cfa87858489613e1f565b9050611d3f825f01518c8a81518110611d1557611d15615678565b6020026020010151604001518781518110611d3257611d32615678565b6020026020010151613e55565b600f0b602083018190525f03611d6857604051634606179360e11b815260040160405180910390fd5b5f8260200151600f0b1215611eac578015611e2e57611de9611d898861292e565b6001600160a01b03808f165f90815260a360209081526040808320938a16835292905220908154600160801b90819004600f0b5f818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b611e137f00000000000000000000000000000000000000000000000000000000000000004361576a565b611e1e90600161576a565b63ffffffff166040830152611f19565b611e4083602001518360200151613e6c565b6001600160401b031660208401528a518b9089908110611e6257611e62615678565b6020026020010151604001518581518110611e7f57611e7f615678565b6020908102919091018101516001600160401b031683525f9083015263ffffffff43166040830152611f19565b5f8260200151600f0b1315611f1957611ecd83602001518360200151613e6c565b6001600160401b039081166020850181905284519091161015611f0357604051636c9be0bf60e01b815260040160405180910390fd5b611f0d894361576a565b63ffffffff1660408301525b611f2e8c611f268961292e565b868686613e8b565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd8c8886611f63865f01518760200151613e6c565b8660400151604051611f799594939291906157eb565b60405180910390a1505060019092019150611c439050565b505050600101611b5f565b6001600160a01b038083165f90815260a160209081526040808320938516835292905290812061083c906140c3565b82611fd581612c08565b611ff25760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b0384165f90815260a4602052604090205460ff16612034576001600160a01b0384165f90815260a460205260409020805460ff191660011790555b836001600160a01b03167fa89c1dc243d8908a96dd84944bcc97d6bc6ac00dd78e20621576be6a3c943713848460405161206f929190615864565b60405180910390a250505050565b600261208881613153565b8261209281612c08565b6120af5760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015612113573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121379190615729565b6121545760405163ccea9e6f60e01b815260040160405180910390fd5b5f5b61216360208501856156c3565b905081101561232b57604080518082019091525f90806121866020880188614c46565b6001600160a01b031681526020018680602001906121a491906156c3565b858181106121b4576121b4615678565b90506020020160208101906121c991906156aa565b63ffffffff90811690915260208083015183516001600160a01b03165f90815260989092526040909120929350612205929190811690612bf116565b61222257604051631fb1705560e21b815260040160405180910390fd5b61222c868261087c565b1561224a57604051636c6c6e2760e11b815260040160405180910390fd5b6122736122568261292e565b6001600160a01b0388165f908152609c60205260409020906140d6565b5061229f86609a5f6122848561292e565b81526020019081526020015f206140e190919063ffffffff16565b50856001600160a01b03167f43232edf9071753d2321e5fa7e018363ee248e5f2142e6c08edd3265bfb4895e826040516122d99190615748565b60405180910390a26001600160a01b0386165f908152609e602052604081206001916123048461292e565b815260208101919091526040015f20805460ff191691151591909117905550600101612156565b5061233c6104346020850185614c46565b6001600160a01b031663c63fd502856123586020870187614c46565b61236560208801886156c3565b61237260408a018a615877565b6040518763ffffffff1660e01b8152600401612393969594939291906158b9565b5f604051808303815f87803b1580156123aa575f5ffd5b505af11580156123bc573d5f5f3e3d5ffd5b5050505050505050565b5f6108f1609a5f6123d68561292e565b81526020019081526020015f20612bdd565b836123f281612c08565b61240f5760405163932d94f760e01b815260040160405180910390fd5b6040805180820182526001600160a01b03871680825263ffffffff80881660208085018290525f9384526098905293909120919261244e9291612bf116565b61246b57604051631fb1705560e21b815260040160405180910390fd5b5f6124758261292e565b90505f5b848110156123bc576124be86868381811061249657612496615678565b90506020020160208101906124ab9190614c46565b5f84815260996020526040902090613df7565b6124db576040516331bc342760e11b815260040160405180910390fd5b7f7b4b073d80dcac55a11177d8459ad9f664ceeb91f71f27167bb14f8152a7eeee8387878481811061250f5761250f615678565b90506020020160208101906125249190614c46565b604051612532929190615905565b60405180910390a1600101612479565b6001600160a01b0381165f908152609b602090815260408083208151608081018352905463ffffffff80821680845260ff600160201b8404161515958401869052650100000000008304821694840194909452600160481b9091041660608201819052849391929190158015906125c35750826060015163ffffffff164310155b156125d2575050604081015160015b9590945092505050565b6001600160a01b0381165f9081526098602052604081206108f190612bdd565b6001600160a01b0382165f908152609f60205260408120606091906108ed90826110138661292e565b8161262f81612c08565b61264c5760405163932d94f760e01b815260040160405180910390fd5b60405163b526578760e01b81526001600160a01b03848116600483015283169063b526578790602401602060405180830381865afa158015612690573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126b49190615729565b6126d157604051631d0b13c160e31b815260040160405180910390fd5b6001600160a01b038381165f90815260976020526040902080546001600160a01b0319169184169190911790557f2ae945c40c44dc0ec263f95609c3fdc6952e0aefa22d6374e44f2c997acedf858361272981610bd7565b604080516001600160a01b039384168152929091166020830152015b60405180910390a1505050565b5f5f61275d83611879565b90505f61276984610931565b905061277584836140f5565b80610b305750610b3084826140f5565b5f620e16e461279383610802565b6001600160a01b0316141592915050565b5f5f610bce8484613c7d565b6127b861416d565b606654801982198116146127df5760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b5f54610100900460ff161580801561283b57505f54600160ff909116105b806128545750303b15801561285457505f5460ff166001145b6128bc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff1916600117905580156128dd575f805461ff0019166101001790555b6128e682612ba0565b801561092d575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b5f815f0151826020015163ffffffff1660405160200161297992919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b6040516020818303038152906040526108f19061592b565b6040805180820182525f80825260208083018290528351606081018552828152808201839052808501839052845180860186526001600160a01b03898116855260a18452868520908816855290925293822092939281906129f1906140c3565b6001600160401b0390811682526001600160a01b038981165f81815260a260209081526040808320948c168084529482528083205486169682019690965291815260a082528481208b8252825284812092815291815290839020835160608101855290549283168152600160401b8304600f0b91810191909152600160c01b90910463ffffffff16918101829052919250431015612a93579092509050612af5565b612aa4815f01518260200151613e6c565b6001600160401b0316815260208101515f600f9190910b1215612ae257612ad382602001518260200151613e6c565b6001600160401b031660208301525b5f60408201819052602082015290925090505b935093915050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015612b5f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b839190615729565b61146257604051631d77d47760e21b815260040160405180910390fd5b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b5f6108f1825490565b5f61083c838361421e565b5f818152600183016020526040812054151561083c565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af1158015612c8e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f19190615729565b5f6040518060400160405280856001600160a01b03168152602001845f016020810190612cdf91906156aa565b63ffffffff168152509050612d29816020015163ffffffff1660985f876001600160a01b03166001600160a01b031681526020019081526020015f206140d690919063ffffffff16565b612d4657604051631fb1705560e21b815260040160405180910390fd5b7f31629285ead2335ae0933f86ed2ae63321f7af77b4e6eaabc42c057880977e6c81604051612d759190615748565b60405180910390a16001600160a01b038216620e16e414801590612e0a578260a65f612da08561292e565b81526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b031602179055507f90a6fa2a9b79b910872ebca540cf3bd8be827f586e6420c30d8836e30012907e8284604051612e01929190615905565b60405180910390a15b5f5b612e1960208601866156c3565b905081101561186057612e5e83612e3360208801886156c3565b84818110612e4357612e43615678565b9050602002016020810190612e589190614c46565b846139d1565b600101612e0c565b606083516001600160401b03811115612e8157612e81614a77565b604051908082528060200260200182016040528015612eb457816020015b6060815260200190600190039081612e9f5790505b5090505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f0e0e67686866040518363ffffffff1660e01b8152600401612f0692919061594e565b5f60405180830381865afa158015612f20573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052612f479190810190615972565b90505f5b8551811015613149575f868281518110612f6757612f67615678565b6020026020010151905085516001600160401b03811115612f8a57612f8a614a77565b604051908082528060200260200182016040528015612fb3578160200160208202803683370190505b50848381518110612fc657612fc6615678565b60209081029190910101525f5b865181101561313f575f878281518110612fef57612fef615678565b6020908102919091018101516001600160a01b038086165f90815260a184526040808220928416825291909352822090925061302a906140c3565b9050806001600160401b03165f03613043575050613137565b5f61304f858d85610843565b90508863ffffffff16816040015163ffffffff161115801561307757505f8160200151600f0b125b156130995761308d815f01518260200151613e6c565b6001600160401b031681525b80515f906130b4906001600160401b03908116908516614244565b90506130fb818989815181106130cc576130cc615678565b602002602001015187815181106130e5576130e5615678565b602002602001015161425890919063ffffffff16565b89888151811061310d5761310d615678565b6020026020010151868151811061312657613126615678565b602002602001018181525050505050505b600101612fd3565b5050600101612f4b565b5050949350505050565b606654600160ff83161b9081160361317e5760405163840a48d560e01b815260040160405180910390fd5b50565b5f60608161319260408601866156c3565b90506001600160401b038111156131ab576131ab614a77565b6040519080825280602002602001820160405280156131d4578160200160208202803683370190505b5090506131e460408601866156c3565b90506001600160401b038111156131fd576131fd614a77565b604051908082528060200260200182016040528015613226578160200160208202803683370190505b50915060a55f6132358661292e565b81526020019081526020015f205f815461324e90615a7e565b918290555092505f5b61326460408701876156c3565b9050811015613853578015806132f7575061328260408701876156c3565b61328d600184615a96565b81811061329c5761329c615678565b90506020020160208101906132b19190614c46565b6001600160a01b03166132c760408801886156c3565b838181106132d7576132d7615678565b90506020020160208101906132ec9190614c46565b6001600160a01b0316115b61331457604051639f1c805360e01b815260040160405180910390fd5b61332160608701876156c3565b8281811061333157613331615678565b905060200201355f1080156133715750670de0b6b3a764000061335760608801886156c3565b8381811061336757613367615678565b9050602002013511155b61338e57604051631353603160e01b815260040160405180910390fd5b6133cf61339e60408801886156c3565b838181106133ae576133ae615678565b90506020020160208101906133c39190614c46565b60995f6114758961292e565b6133ec576040516331bc342760e11b815260040160405180910390fd5b5f8061343e6133fe60208a018a614c46565b6134078961292e565b61341460408c018c6156c3565b8781811061342457613424615678565b90506020020160208101906134399190614c46565b612991565b805191935091506001600160401b03165f0361345b57505061384b565b5f61349661346c60608b018b6156c3565b8681811061347c5761347c615678565b85516001600160401b03169260209091020135905061426c565b83519091506134b16001600160401b03808416908316614244565b8686815181106134c3576134c3615678565b60200260200101818152505081835f018181516134e09190615aa9565b6001600160401b03169052508351829085906134fd908390615aa9565b6001600160401b031690525060208401805183919061351d908390615aa9565b6001600160401b031690525060208301515f600f9190910b1215613635575f61358061354c60608d018d6156c3565b8881811061355c5761355c615678565b90506020020135856020015161357190615ac8565b6001600160801b03169061426c565b9050806001600160401b03168460200181815161359d9190615aec565b600f0b9052507f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd6135d160208d018d614c46565b8b6135df60408f018f6156c3565b8a8181106135ef576135ef615678565b90506020020160208101906136049190614c46565b613615885f01518960200151613e6c565b886040015160405161362b9594939291906157eb565b60405180910390a1505b61368761364560208c018c614c46565b61364e8b61292e565b61365b60408e018e6156c3565b8981811061366b5761366b615678565b90506020020160208101906136809190614c46565b8787613e8b565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd6136b560208c018c614c46565b8a6136c360408e018e6156c3565b898181106136d3576136d3615678565b90506020020160208101906136e89190614c46565b86516040516136fc949392919043906157eb565b60405180910390a161374d61371460208c018c614c46565b61372160408d018d6156c3565b8881811061373157613731615678565b90506020020160208101906137469190614c46565b8651614282565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016635ae679a761378960208d018d614c46565b8b8b8e806040019061379b91906156c3565b8b8181106137ab576137ab615678565b90506020020160208101906137c09190614c46565b89516040516001600160e01b031960e088901b1681526137e895949392918991600401615b19565b6020604051808303815f875af1158015613804573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138289190615b6c565b87868151811061383a5761383a615678565b602002602001018181525050505050505b600101613257565b507f80969ad29428d6797ee7aad084f9e4a42a82fc506dcd2ca3b6fb431f85ccebe56138826020870187614c46565b8561389060408901896156c3565b8561389e60808c018c615877565b6040516138b19796959493929190615b83565b60405180910390a1509250929050565b60605f61083c83614304565b6001600160a01b038381165f90815260a360209081526040808320938616835292905290812054600f81810b600160801b909204900b035b5f8111801561391757508261ffff1682105b15610b1b576001600160a01b038086165f90815260a360209081526040808320938816835292905290812061394b9061435d565b90505f5f61395a888489612991565b91509150806040015163ffffffff1643101561397857505050610b1b565b6139858884898585613e8b565b6001600160a01b038089165f90815260a360209081526040808320938b168352929052206139b2906143af565b506139bc85615a7e565b94506139c784615c19565b9350505050613905565b8015613a155773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeabf196001600160a01b03831601613a1557604051632711b74d60e11b815260040160405180910390fd5b613a258260995f6122848761292e565b613a425760405163585cfb2f60e01b815260040160405180910390fd5b7f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b8383604051612745929190615905565b60605f613a7f8361442c565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b6001600160a01b0382165f908152609b60209081526040918290208251608081018452905463ffffffff808216835260ff600160201b830416151593830193909352650100000000008104831693820193909352600160481b909204166060820181905215801590613b2c5750806060015163ffffffff164310155b15613b4657604081015163ffffffff168152600160208201525b63ffffffff82166040820152613b7c7f00000000000000000000000000000000000000000000000000000000000000004361576a565b613b8790600161576a565b63ffffffff90811660608381019182526001600160a01b0386165f818152609b602090815260409182902087518154838a0151858b01519851928a1664ffffffffff1990921691909117600160201b91151591909102176cffffffffffffffff0000000000191665010000000000978916979097026cffffffff000000000000000000191696909617600160481b968816968702179055815192835294871694820194909452928301919091527f4e85751d6331506c6c62335f207eb31f12a61e570f34f5c17640308785c6d4db9101612745565b6001600160a01b0381165f908152600183016020526040812054151561083c565b6001600160a01b038281165f81815260a2602090815260408083209486168084529482528083205493835260a38252808320948352939052918220546001600160401b039091169190600f81810b600160801b909204900b03815b81811015613da8576001600160a01b038087165f90815260a3602090815260408083209389168352929052908120613d109083614453565b6001600160a01b038881165f90815260a0602090815260408083208584528252808320938b16835292815290829020825160608101845290546001600160401b0381168252600160401b8104600f0b92820192909252600160c01b90910463ffffffff16918101829052919250431015613d8b575050613da8565b613d99868260200151613e6c565b95505050806001019050613cd8565b506001600160a01b038086165f90815260a1602090815260408083209388168352929052208390613dd8906140c3565b613de29190615aa9565b9150509250929050565b5f61083c83836144c2565b5f61083c836001600160a01b0384166144c2565b5f61083c8383670de0b6b3a76400006145a5565b5f613e308460995f6114758961292e565b8015613e395750815b801561149c57505090516001600160401b031615159392505050565b5f61083c6001600160401b03808516908416615c2e565b5f61083c613e83836001600160401b038616615aec565b600f0b6145fa565b6020808301516001600160a01b038088165f90815260a284526040808220928816825291909352909120546001600160401b03908116911614613f5157602082810180516001600160a01b038881165f81815260a286526040808220938a1680835293875290819020805467ffffffffffffffff19166001600160401b0395861617905593518451918252948101919091529216908201527facf9095feb3a370c9cf692421c69ef320d4db5c66e6a7d29c7694eb02364fc559060600160405180910390a15b6001600160a01b038086165f90815260a060209081526040808320888452825280832093871683529281529082902083518154928501519385015163ffffffff16600160c01b0263ffffffff60c01b196001600160801b038616600160401b026001600160c01b03199095166001600160401b03909316929092179390931716919091179055600f0b15614033576001600160a01b0385165f908152609f60209081526040808320878452909152902061400b90846140e1565b506001600160a01b0385165f908152609d6020526040902061402d90856140d6565b50610b1b565b80516001600160401b03165f03610b1b576001600160a01b0385165f908152609f6020908152604080832087845290915290206140709084613df7565b506001600160a01b0385165f908152609f60209081526040808320878452909152902061409c90612bdd565b5f03610b1b576001600160a01b0385165f908152609d602052604090206118609085613dec565b5f6108f182670de0b6b3a7640000614665565b5f61083c838361469c565b5f61083c836001600160a01b03841661469c565b5f805b8251811015614164576141248484838151811061411757614117615678565b602002602001015161087c565b801561414d575061414d83828151811061414057614140615678565b6020026020010151612785565b1561415c5760019150506108f1565b6001016140f8565b505f9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156141c9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906141ed9190615c5b565b6001600160a01b0316336001600160a01b0316146114625760405163794821ff60e01b815260040160405180910390fd5b5f825f01828154811061423357614233615678565b905f5260205f200154905092915050565b5f61083c83670de0b6b3a7640000846146e8565b5f61083c8383670de0b6b3a76400006146e8565b5f61083c8383670de0b6b3a764000060016147cd565b6001600160a01b038084165f90815260a1602090815260408083209386168352929052206142b190438361481c565b604080516001600160a01b038086168252841660208201526001600160401b038316918101919091527f1c6458079a41077d003c11faf9bf097e693bd67979e4e6500bac7b29db779b5c90606001612745565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561435157602002820191905f5260205f20905b81548152602001906001019080831161433d575b50505050509050919050565b5f6143778254600f81810b600160801b909204900b131590565b1561439557604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f9081526001909101602052604090205490565b5f6143c98254600f81810b600160801b909204900b131590565b156143e757604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b5f60ff8216601f8111156108f157604051632cd44ac360e21b815260040160405180910390fd5b5f5f61447561446184614835565b85546144709190600f0b615c76565b61489e565b8454909150600160801b9004600f90810b9082900b126144a857604051632d0483c560e21b815260040160405180910390fd5b600f0b5f9081526001939093016020525050604090205490565b5f818152600183016020526040812054801561459c575f6144e4600183615a96565b85549091505f906144f790600190615a96565b9050818114614556575f865f01828154811061451557614515615678565b905f5260205f200154905080875f01848154811061453557614535615678565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061456757614567615c9d565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506108f1565b5f9150506108f1565b82545f90816145b686868385614907565b905080156145f0576145da866145cd600184615a96565b5f91825260209091200190565b54600160201b90046001600160e01b0316610872565b5091949350505050565b5f6001600160401b038211156146615760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b60648201526084016128b3565b5090565b81545f9080156146945761467e846145cd600184615a96565b54600160201b90046001600160e01b03166108ed565b509092915050565b5f8181526001830160205260408120546146e157508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556108f1565b505f6108f1565b5f80805f19858709858702925082811083820303915050805f0361471f5783828161471557614715615cb1565b049250505061083c565b8084116147665760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016128b3565b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b5f5f6147da8686866146e8565b905060018360028111156147f0576147f0615cc5565b14801561480c57505f848061480757614807615cb1565b868809115b1561149c57610872600182615cd9565b61483083836001600160401b03841661495a565b505050565b5f6001600160ff1b038211156146615760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016128b3565b80600f81900b81146149025760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016128b3565b919050565b5f5b81831015610a40575f61491c8484614a5d565b5f8781526020902090915063ffffffff86169082015463ffffffff16111561494657809250614954565b614951816001615cd9565b93505b50614909565b82548015614a10575f614972856145cd600185615a96565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090851610156149c45760405163151b8e3f60e11b815260040160405180910390fd5b805163ffffffff808616911603614a0e57826149e5866145cd600186615a96565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790555050505050565b505b506040805180820190915263ffffffff92831681526001600160e01b03918216602080830191825285546001810187555f968752952091519051909216600160201b029190921617910155565b5f614a6b6002848418615cec565b61083c90848416615cd9565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b0381118282101715614aad57614aad614a77565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614adb57614adb614a77565b604052919050565b6001600160a01b038116811461317e575f5ffd5b803563ffffffff81168114614902575f5ffd5b5f60408284031215614b1a575f5ffd5b604080519081016001600160401b0381118282101715614b3c57614b3c614a77565b6040529050808235614b4d81614ae3565b8152614b5b60208401614af7565b60208201525092915050565b5f60408284031215614b77575f5ffd5b61083c8383614b0a565b5f5f5f60808486031215614b93575f5ffd5b8335614b9e81614ae3565b9250614bad8560208601614b0a565b91506060840135614bbd81614ae3565b809150509250925092565b81516001600160401b03168152602080830151600f0b9082015260408083015163ffffffff1690820152606081016108f1565b5f5f60608385031215614c0c575f5ffd5b8235614c1781614ae3565b9150614c268460208501614b0a565b90509250929050565b5f60208284031215614c3f575f5ffd5b5035919050565b5f60208284031215614c56575f5ffd5b813561083c81614ae3565b80516001600160a01b0316825260209081015163ffffffff16910152565b5f8151808452602084019350602083015f5b82811015614cba57614ca4868351614c61565b6040959095019460209190910190600101614c91565b5093949350505050565b602081525f61083c6020830184614c7f565b5f5f83601f840112614ce6575f5ffd5b5081356001600160401b03811115614cfc575f5ffd5b6020830191508360208260051b8501011115610ffa575f5ffd5b5f5f5f60408486031215614d28575f5ffd5b8335614d3381614ae3565b925060208401356001600160401b03811115614d4d575f5ffd5b614d5986828701614cd6565b9497909650939450505050565b5f6001600160401b03821115614d7e57614d7e614a77565b5060051b60200190565b5f82601f830112614d97575f5ffd5b8135614daa614da582614d66565b614ab3565b8082825260208201915060208360051b860101925085831115614dcb575f5ffd5b602085015b83811015614df1578035614de381614ae3565b835260209283019201614dd0565b5095945050505050565b5f5f5f60808486031215614e0d575f5ffd5b614e178585614b0a565b925060408401356001600160401b03811115614e31575f5ffd5b614e3d86828701614d88565b92505060608401356001600160401b03811115614e58575f5ffd5b614e6486828701614d88565b9150509250925092565b5f8151808452602084019350602083015f5b82811015614cba578151865260209586019590910190600101614e80565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015614ef557603f19878603018452614ee0858351614e6e565b94506020938401939190910190600101614ec4565b50929695505050505050565b5f5f5f5f60a08587031215614f14575f5ffd5b614f1e8686614b0a565b935060408501356001600160401b03811115614f38575f5ffd5b614f4487828801614d88565b93505060608501356001600160401b03811115614f5f575f5ffd5b614f6b87828801614d88565b925050614f7a60808601614af7565b905092959194509250565b5f5f5f5f5f60608688031215614f99575f5ffd5b8535614fa481614ae3565b945060208601356001600160401b03811115614fbe575f5ffd5b614fca88828901614cd6565b90955093505060408601356001600160401b03811115614fe8575f5ffd5b614ff488828901614cd6565b969995985093965092949392505050565b5f5f60408385031215615016575f5ffd5b823561502181614ae3565b915060208301356001600160401b0381111561503b575f5ffd5b830160a0818603121561504c575f5ffd5b809150509250929050565b828152604060208201525f610b306040830184614e6e565b5f5f60408385031215615080575f5ffd5b823561508b81614ae3565b9150602083013561504c81614ae3565b5f8151808452602084019350602083015f5b82811015614cba576150e686835180516001600160401b03168252602080820151600f0b9083015260409081015163ffffffff16910152565b60609590950194602091909101906001016150ad565b604081525f61510e6040830185614c7f565b828103602084015261149c818561509b565b5f8151808452602084019350602083015f5b82811015614cba5781516001600160a01b0316865260209586019590910190600101615132565b602081525f61083c6020830184615120565b5f5f6040838503121561517c575f5ffd5b82356001600160401b03811115615191575f5ffd5b61519d85828601614d88565b925050602083013561504c81614ae3565b602080825282518282018190525f918401906040840190835b818110156151ee5783516001600160401b03168352602093840193909201916001016151c7565b509095945050505050565b5f5f5f5f6060858703121561520c575f5ffd5b843561521781614ae3565b935061522560208601614af7565b925060408501356001600160401b0381111561523f575f5ffd5b61524b87828801614cd6565b95989497509550505050565b5f5f60408385031215615268575f5ffd5b823561527381614ae3565b915060208301356001600160401b0381111561528d575f5ffd5b613de285828601614d88565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f5f604083850312156152df575f5ffd5b82356152ea81614ae3565b9150614c2660208401614af7565b5f60208284031215615308575f5ffd5b813560ff8116811461083c575f5ffd5b5f60608284031215615328575f5ffd5b50919050565b5f6020828403121561533e575f5ffd5b81356001600160401b03811115615353575f5ffd5b6108ed84828501615318565b5f5f5f60808486031215615371575f5ffd5b83356001600160401b03811115615386575f5ffd5b61539286828701614d88565b935050614bad8560208601614b0a565b602081525f61083c602083018461509b565b5f5f5f606084860312156153c6575f5ffd5b83356153d181614ae3565b925060208401356001600160401b038111156153eb575f5ffd5b6153f786828701614d88565b92505061540660408501614af7565b90509250925092565b5f5f60408385031215615420575f5ffd5b823561542b81614ae3565b915060208301356001600160401b03811115615445575f5ffd5b8301601f81018513615455575f5ffd5b8035615463614da582614d66565b8082825260208201915060208360051b850101925087831115615484575f5ffd5b602084015b838110156155a95780356001600160401b038111156154a6575f5ffd5b85016080818b03601f190112156154bb575f5ffd5b6154c3614a8b565b6154d08b60208401614b0a565b815260608201356001600160401b038111156154ea575f5ffd5b6154f98c602083860101614d88565b60208301525060808201356001600160401b03811115615517575f5ffd5b6020818401019250508a601f83011261552e575f5ffd5b813561553c614da582614d66565b8082825260208201915060208360051b86010192508d83111561555d575f5ffd5b6020850194505b828510156155935784356001600160401b0381168114615582575f5ffd5b825260209485019490910190615564565b6040840152505084525060209283019201615489565b50809450505050509250929050565b5f5f5f604084860312156155ca575f5ffd5b83356155d581614ae3565b925060208401356001600160401b038111156155ef575f5ffd5b8401601f810186136155ff575f5ffd5b80356001600160401b03811115615614575f5ffd5b866020828401011115615625575f5ffd5b939660209190910195509293505050565b5f5f60408385031215615647575f5ffd5b823561565281614ae3565b915060208301356001600160401b0381111561566c575f5ffd5b613de285828601615318565b634e487b7160e01b5f52603260045260245ffd5b5f8235603e198336030181126156a0575f5ffd5b9190910192915050565b5f602082840312156156ba575f5ffd5b61083c82614af7565b5f5f8335601e198436030181126156d8575f5ffd5b8301803591506001600160401b038211156156f1575f5ffd5b6020019150600581901b3603821315610ffa575f5ffd5b5f60208284031215615718575f5ffd5b813561ffff8116811461083c575f5ffd5b5f60208284031215615739575f5ffd5b8151801515811461083c575f5ffd5b604081016108f18284614c61565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff81811683821601908111156108f1576108f1615756565b8183526020830192505f815f5b84811015614cba5763ffffffff6157a983614af7565b1686526020958601959190910190600101615793565b6001600160a01b038581168252841660208201526060604082018190525f906108729083018486615786565b6001600160a01b038616815260c081016158086020830187614c61565b6001600160a01b039490941660608201526001600160401b0392909216608083015263ffffffff1660a09091015292915050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b602081525f610b3060208301848661583c565b5f5f8335601e1984360301811261588c575f5ffd5b8301803591506001600160401b038211156158a5575f5ffd5b602001915036819003821315610ffa575f5ffd5b6001600160a01b038781168252861660208201526080604082018190525f906158e59083018688615786565b82810360608401526158f881858761583c565b9998505050505050505050565b606081016159138285614c61565b6001600160a01b039290921660409190910152919050565b80516020808301519190811015615328575f1960209190910360031b1b16919050565b604081525f6159606040830185615120565b828103602084015261149c8185615120565b5f60208284031215615982575f5ffd5b81516001600160401b03811115615997575f5ffd5b8201601f810184136159a7575f5ffd5b80516159b5614da582614d66565b8082825260208201915060208360051b8501019250868311156159d6575f5ffd5b602084015b83811015615a735780516001600160401b038111156159f8575f5ffd5b8501603f81018913615a08575f5ffd5b6020810151615a19614da582614d66565b808282526020820191506020808460051b8601010192508b831115615a3c575f5ffd5b6040840193505b82841015615a5e578351825260209384019390910190615a43565b865250506020938401939190910190506159db565b509695505050505050565b5f60018201615a8f57615a8f615756565b5060010190565b818103818111156108f1576108f1615756565b6001600160401b0382811682821603908111156108f1576108f1615756565b5f81600f0b60016001607f1b03198103615ae457615ae4615756565b5f0392915050565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156108f1576108f1615756565b6001600160a01b038716815260e08101615b366020830188614c61565b60608201959095526001600160a01b039390931660808401526001600160401b0391821660a08401521660c09091015292915050565b5f60208284031215615b7c575f5ffd5b5051919050565b6001600160a01b03881681525f60c08201615ba1602084018a614c61565b60c060608401528690528660e083015f5b88811015615be2578235615bc581614ae3565b6001600160a01b0316825260209283019290910190600101615bb2565b508381036080850152615bf58188614e6e565b91505082810360a0840152615c0b81858761583c565b9a9950505050505050505050565b5f81615c2757615c27615756565b505f190190565b600f82810b9082900b0360016001607f1b0319811260016001607f1b03821317156108f1576108f1615756565b5f60208284031215615c6b575f5ffd5b815161083c81614ae3565b8082018281125f831280158216821582161715615c9557615c95615756565b505092915050565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b808201808211156108f1576108f1615756565b5f82615d0657634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212207ffcd99f9165c1567b83e60ff543a1e3202c0fabec9debb5f8adec22b57d410364736f6c634300081b0033",
    "sourceMap": "520:44939:117:-:0;;;1203:532;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1682:8;1639:21;1504:11;1517:19;1538:31;1588:15;-1:-1:-1;;;;;3618:38:159;;3610:67;;;;-1:-1:-1;;;3610:67:159;;;;;;;;;;;;-1:-1:-1;;;;;3687:32:159;;;;;5911:24:118;;;;;5945:40;;;;;;5995:64;;;501:44:156;;;961:24:157;:8;:22;:24::i;:::-;950:35;;-1:-1:-1;1706:22:117::4;:20;:22::i;:::-;1203:532:::0;;;;;;520:44939;;1711:286:38;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:38;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:38:o;5939:280:27:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:27;;3050:2:274;5998:66:27;;;3032:21:274;3089:2;3069:18;;;3062:30;3128:34;3108:18;;;3101:62;-1:-1:-1;;;3179:18:274;;;3172:37;3226:19;;5998:66:27;2848:403:274;5998:66:27;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:27;6140:15;6125:30;;;;;;6174:28;;3398:36:274;;;6174:28:27;;3386:2:274;3371:18;6174:28:27;;;;;;;6074:139;5939:280::o;14:151:274:-;-1:-1:-1;;;;;109:31:274;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:167::-;248:13;;301:10;290:22;;280:33;;270:61;;327:1;324;317:12;270:61;170:167;;;:::o;342:127::-;403:10;398:3;394:20;391:1;384:31;434:4;431:1;424:15;458:4;455:1;448:15;474:1644;681:6;689;697;705;713;721;774:3;762:9;753:7;749:23;745:33;742:53;;;791:1;788;781:12;742:53;823:9;817:16;842:51;887:5;842:51;:::i;:::-;962:2;947:18;;941:25;912:5;;-1:-1:-1;975:53:274;941:25;975:53;:::i;:::-;1099:2;1084:18;;1078:25;1047:7;;-1:-1:-1;1112:53:274;1078:25;1112:53;:::i;:::-;1184:7;-1:-1:-1;1210:48:274;1254:2;1239:18;;1210:48;:::i;:::-;1200:58;;1277:49;1321:3;1310:9;1306:19;1277:49;:::i;:::-;1370:3;1355:19;;1349:26;1267:59;;-1:-1:-1;;;;;;1387:30:274;;1384:50;;;1430:1;1427;1420:12;1384:50;1453:22;;1506:4;1498:13;;1494:27;-1:-1:-1;1484:55:274;;1535:1;1532;1525:12;1484:55;1562:9;;-1:-1:-1;;;;;1583:30:274;;1580:56;;;1616:18;;:::i;:::-;1665:2;1659:9;1757:2;1719:17;;-1:-1:-1;;1715:31:274;;;1748:2;1711:40;1707:54;1695:67;;-1:-1:-1;;;;;1777:34:274;;1813:22;;;1774:62;1771:88;;;1839:18;;:::i;:::-;1875:2;1868:22;1899;;;1940:15;;;1957:2;1936:24;1933:37;-1:-1:-1;1930:57:274;;;1983:1;1980;1973:12;1930:57;2032:6;2027:2;2023;2019:11;2014:2;2006:6;2002:15;1996:43;2085:1;2080:2;2071:6;2063;2059:19;2055:28;2048:39;2106:6;2096:16;;;;;474:1644;;;;;;;;:::o;2123:418::-;2272:2;2261:9;2254:21;2235:4;2304:6;2298:13;2347:6;2342:2;2331:9;2327:18;2320:34;2406:6;2401:2;2393:6;2389:15;2384:2;2373:9;2369:18;2363:50;2462:1;2457:2;2448:6;2437:9;2433:22;2429:31;2422:42;2532:2;2525;2521:7;2516:2;2508:6;2504:15;2500:29;2489:9;2485:45;2481:54;2473:62;;;2123:418;;;;:::o;2546:297::-;2664:12;;2711:4;2700:16;;;2694:23;;2664:12;2729:16;;2726:111;;;2823:1;2819:6;2809;2803:4;2799:17;2796:1;2792:25;2788:38;2781:5;2777:50;2768:59;;2726:111;;2546:297;;;:::o;3256:184::-;520:44939:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b50600436106102e5575f3560e01c80635c975abb11610195578063adc2e3d9116100e4578063d3d96ff41161009e578063f231bd0811610079578063f231bd08146107b6578063f605ce08146107c9578063fabc1cbc146107dc578063fe4b84df146107ef575f5ffd5b8063d3d96ff414610769578063dc2af6921461077c578063df5cf7231461078f575f5ffd5b8063adc2e3d9146106db578063b2447af7146106ee578063b66bd98914610701578063b9fbaed114610714578063ba1a84e514610743578063c221d8ae14610756575f5ffd5b80637bc1ef611161014f57806394d7d00c1161012a57806394d7d00c1461068f578063952899ee146106a2578063a9333ec8146106b5578063a9821821146106c8575f5ffd5b80637bc1ef6114610621578063886f1195146106485780638ce648541461066f575f5ffd5b80635c975abb146105a2578063670d3ba2146105aa5780636cfb4481146105bd5780636e3492b5146105e85780636e875dba146105fb57806379ae50cd1461060e575f5ffd5b806336352057116102515780634cfd29391161020b57806354fd4d50116101e657806354fd4d501461054f57806356c483e614610564578063595c6a67146105775780635ac86ab71461057f575f5ffd5b80634cfd29391461050857806350feea2014610529578063547afb871461053c575f5ffd5b8063363520571461044c57806340120dab1461046d5780634177a87c1461048e5780634657e26a146104ae5780634a10ffe5146104d55780634b5046ef146104f5575f5ffd5b8063261f84e0116102a2578063261f84e0146103a45780632981eb77146103b75780632b453a9a146103f35780632bab2c4a14610413578063304c10cd1461042657806332a879e414610439575f5ffd5b80630f3df50e146102e957806310e1b9b8146103195780631352c3e614610339578063136439dd1461035c57806315fe502814610371578063260dc75814610391575b5f5ffd5b6102fc6102f7366004614b67565b610802565b6040516001600160a01b0390911681526020015b60405180910390f35b61032c610327366004614b81565b610843565b6040516103109190614bc8565b61034c610347366004614bfb565b61087c565b6040519015158152602001610310565b61036f61036a366004614c2f565b6108f7565b005b61038461037f366004614c46565b610931565b6040516103109190614cc4565b61034c61039f366004614b67565b610a48565b61036f6103b2366004614d16565b610a79565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610310565b610406610401366004614dfb565b610b22565b6040516103109190614e9e565b610406610421366004614f01565b610b38565b6102fc610434366004614c46565b610bd7565b61036f610447366004614f85565b610c06565b61045f61045a366004615005565b610d43565b604051610310929190615057565b61048061047b36600461506f565b610e86565b6040516103109291906150fc565b6104a161049c366004614b67565b611001565b6040516103109190615159565b6102fc7f000000000000000000000000000000000000000000000000000000000000000081565b6104e86104e336600461516b565b611025565b60405161031091906151ae565b61036f610503366004614f85565b6110cd565b61051b610516366004614b67565b611160565b604051908152602001610310565b61036f6105373660046151f9565b611182565b6104e861054a366004615257565b611273565b61055761131b565b6040516103109190615299565b61036f6105723660046152ce565b61134b565b61036f611450565b61034c61058d3660046152f8565b606654600160ff9092169190911b9081161490565b60665461051b565b61034c6105b8366004614bfb565b611464565b6105d06105cb36600461506f565b611490565b6040516001600160401b039091168152602001610310565b61036f6105f636600461532e565b6114a5565b6104a1610609366004614b67565b611868565b61038461061c366004614c46565b611879565b6103de7f000000000000000000000000000000000000000000000000000000000000000081565b6102fc7f000000000000000000000000000000000000000000000000000000000000000081565b61068261067d36600461535f565b611953565b60405161031091906153a2565b6104e861069d3660046153b4565b611a0f565b61036f6106b036600461540f565b611afb565b6105d06106c336600461506f565b611f9c565b61036f6106d63660046155b8565b611fcb565b61036f6106e9366004615636565b61207d565b61051b6106fc366004614b67565b6123c6565b61036f61070f3660046151f9565b6123e8565b610727610722366004614c46565b612542565b60408051921515835263ffffffff909116602083015201610310565b61051b610751366004614c46565b6125dc565b6104a1610764366004614bfb565b6125fc565b61036f61077736600461506f565b612625565b61034c61078a366004614c46565b612752565b6102fc7f000000000000000000000000000000000000000000000000000000000000000081565b61034c6107c4366004614b67565b612785565b6105d06107d736600461506f565b6127a4565b61036f6107ea366004614c2f565b6127b0565b61036f6107fd366004614c2f565b61281d565b5f5f60a65f6108108561292e565b815260208101919091526040015f20546001600160a01b031690508015610837578061083c565b620e16e45b9392505050565b604080516060810182525f80825260208201819052918101829052906108728561086c8661292e565b85612991565b9695505050505050565b6001600160a01b0382165f908152609e6020526040812081908161089f8561292e565b815260208082019290925260409081015f2081518083019092525460ff8116151580835261010090910463ffffffff16928201929092529150806108ed5750806020015163ffffffff164311155b9150505b92915050565b6108ff612afd565b60665481811681146109245760405163c61dca5d60e01b815260040160405180910390fd5b61092d82612ba0565b5050565b6001600160a01b0381165f908152609d602052604081206060919061095590612bdd565b90505f816001600160401b0381111561097057610970614a77565b6040519080825280602002602001820160405280156109b457816020015b604080518082019091525f808252602082015281526020019060019003908161098e5790505b5090505f5b82811015610a40576001600160a01b0385165f908152609d60205260409020610a1b906109e69083612be6565b604080518082019091525f80825260208201525060408051808201909152606082901c815263ffffffff909116602082015290565b828281518110610a2d57610a2d615678565b60209081029190910101526001016109b9565b509392505050565b60208082015182516001600160a01b03165f9081526098909252604082206108f19163ffffffff90811690612bf116565b82610a8381612c08565b610aa05760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b0384165f90815260a4602052604090205460ff16610ad8576040516348f7dbb960e01b815260040160405180910390fd5b5f5b82811015610b1b57610b1385858584818110610af857610af8615678565b9050602002810190610b0a919061568c565b620e16e4612cb2565b600101610ada565b5050505050565b6060610b3084848443612e66565b949350505050565b6060610b4685858585612e66565b90505f5b8451811015610bce57610b76858281518110610b6857610b68615678565b60200260200101518761087c565b610bc6575f5b8451811015610bc4575f838381518110610b9857610b98615678565b60200260200101518281518110610bb157610bb1615678565b6020908102919091010152600101610b7c565b505b600101610b4a565b50949350505050565b6001600160a01b038082165f908152609760205260408120549091168015610bff578061083c565b5090919050565b84610c1081612c08565b610c2d5760405163932d94f760e01b815260040160405180910390fd5b838214610c4d576040516343714afd60e01b815260040160405180910390fd5b6001600160a01b0386165f90815260a4602052604090205460ff16610c85576040516348f7dbb960e01b815260040160405180910390fd5b5f5b84811015610d3a575f848483818110610ca257610ca2615678565b9050602002016020810190610cb79190614c46565b6001600160a01b031603610cde576040516339b190bb60e11b815260040160405180910390fd5b610d3287878784818110610cf457610cf4615678565b9050602002810190610d06919061568c565b868685818110610d1857610d18615678565b9050602002016020810190610d2d9190614c46565b612cb2565b600101610c87565b50505050505050565b5f60606001610d5181613153565b84610d5b81612c08565b610d785760405163932d94f760e01b815260040160405180910390fd5b5f6040518060400160405280886001600160a01b03168152602001876020016020810190610da691906156aa565b63ffffffff1690529050610dbd60608701876156c3565b9050610dcc60408801886156c3565b905014610dec576040516343714afd60e01b815260040160405180910390fd5b60208082015182516001600160a01b03165f90815260989092526040909120610e1e9163ffffffff90811690612bf116565b610e3b57604051631fb1705560e21b815260040160405180910390fd5b610e51610e4b6020880188614c46565b8261087c565b610e6e5760405163ebbff49760e01b815260040160405180910390fd5b610e788682613181565b945094505050509250929050565b6001600160a01b0382165f908152609d602052604081206060918291610eab90612bdd565b90505f816001600160401b03811115610ec657610ec6614a77565b604051908082528060200260200182016040528015610f0a57816020015b604080518082019091525f8082526020820152815260200190600190039081610ee45790505b5090505f826001600160401b03811115610f2657610f26614a77565b604051908082528060200260200182016040528015610f6f57816020015b604080516060810182525f80825260208083018290529282015282525f19909201910181610f445790505b5090505f5b83811015610ff2576001600160a01b0388165f908152609d60205260408120610fa1906109e69084612be6565b905080848381518110610fb657610fb6615678565b6020026020010181905250610fcc89828a610843565b838381518110610fde57610fde615678565b602090810291909101015250600101610f74565b509093509150505b9250929050565b60605f61083c60995f6110138661292e565b81526020019081526020015f206138c1565b60605f83516001600160401b0381111561104157611041614a77565b60405190808252806020026020018201604052801561106a578160200160208202803683370190505b5090505f5b8451811015610a405761109b85828151811061108d5761108d615678565b602002602001015185611f9c565b8282815181106110ad576110ad615678565b6001600160401b039092166020928302919091019091015260010161106f565b5f6110d781613153565b8382146110f7576040516343714afd60e01b815260040160405180910390fd5b5f5b84811015610d3a576111588787878481811061111757611117615678565b905060200201602081019061112c9190614c46565b86868581811061113e5761113e615678565b90506020020160208101906111539190615708565b6138cd565b6001016110f9565b5f60a55f61116d8461292e565b81526020019081526020015f20549050919050565b8361118c81612c08565b6111a95760405163932d94f760e01b815260040160405180910390fd5b6040805180820182526001600160a01b03871680825263ffffffff80881660208085018290525f938452609890529390912091926111e89291612bf116565b61120557604051631fb1705560e21b815260040160405180910390fd5b5f5b83811015610d3a5761126b8286868481811061122557611225615678565b905060200201602081019061123a9190614c46565b61126660405180604001604052808c6001600160a01b031681526020018b63ffffffff16815250612785565b6139d1565b600101611207565b60605f82516001600160401b0381111561128f5761128f614a77565b6040519080825280602002602001820160405280156112b8578160200160208202803683370190505b5090505f5b8351811015610a40576112e9858583815181106112dc576112dc615678565b6020026020010151611f9c565b8282815181106112fb576112fb615678565b6001600160401b03909216602092830291909101909101526001016112bd565b60606113467f0000000000000000000000000000000000000000000000000000000000000000613a73565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114465761138482612c08565b6113a1576040516348f5c3ed60e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0383811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611405573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114299190615729565b6114465760405163ccea9e6f60e01b815260040160405180910390fd5b61092d8282613ab0565b611458612afd565b6114625f19612ba0565b565b5f61083c83609a5f6114758661292e565b81526020019081526020015f20613c5c90919063ffffffff16565b5f5f61149c8484613c7d565b95945050505050565b60026114b081613153565b6114c56114c06020840184614c46565b612c08565b806114de57506114de6114c06040840160208501614c46565b6114fb576040516348f5c3ed60e01b815260040160405180910390fd5b5f5b61150a60408401846156c3565b90508110156117cc575f60405180604001604052808560200160208101906115329190614c46565b6001600160a01b0316815260200161154d60408701876156c3565b8581811061155d5761155d615678565b905060200201602081019061157291906156aa565b63ffffffff1681525090506115bf816020015163ffffffff1660985f8760200160208101906115a19190614c46565b6001600160a01b0316815260208101919091526040015f2090612bf1565b6115dc57604051631fb1705560e21b815260040160405180910390fd5b609e5f6115ec6020870187614c46565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6116158361292e565b815260208101919091526040015f205460ff16611645576040516325131d4f60e01b815260040160405180910390fd5b61167f6116518261292e565b609c5f6116616020890189614c46565b6001600160a01b0316815260208101919091526040015f2090613dec565b506116b76116906020860186614c46565b609a5f61169c8561292e565b81526020019081526020015f20613df790919063ffffffff16565b506116c56020850185614c46565b6001600160a01b03167fad34c3070be1dffbcaa499d000ba2b8d9848aefcac3059df245dd95c4ece14fe826040516116fd9190615748565b60405180910390a2604080518082019091525f8152602081016117407f00000000000000000000000000000000000000000000000000000000000000004361576a565b63ffffffff169052609e5f6117586020880188614c46565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6117818461292e565b81526020808201929092526040015f2082518154939092015163ffffffff166101000264ffffffff00199215159290921664ffffffffff1990931692909217179055506001016114fd565b506117e06104346040840160208501614c46565b6001600160a01b031663303ca9566117fb6020850185614c46565b61180b6040860160208701614c46565b61181860408701876156c3565b6040518563ffffffff1660e01b815260040161183794939291906157bf565b5f604051808303815f87803b15801561184e575f5ffd5b505af1158015611860573d5f5f3e3d5ffd5b505050505050565b60606108f1609a5f6110138561292e565b6001600160a01b0381165f908152609c602052604081206060919061189d90612bdd565b90505f816001600160401b038111156118b8576118b8614a77565b6040519080825280602002602001820160405280156118fc57816020015b604080518082019091525f80825260208201528152602001906001900390816118d65790505b5090505f5b82811015610a40576001600160a01b0385165f908152609c6020526040902061192e906109e69083612be6565b82828151811061194057611940615678565b6020908102919091010152600101611901565b60605f84516001600160401b0381111561196f5761196f614a77565b6040519080825280602002602001820160405280156119b857816020015b604080516060810182525f80825260208083018290529282015282525f1990920191018161198d5790505b5090505f5b8551811015610bce576119ea8682815181106119db576119db615678565b60200260200101518686610843565b8282815181106119fc576119fc615678565b60209081029190910101526001016119bd565b60605f83516001600160401b03811115611a2b57611a2b614a77565b604051908082528060200260200182016040528015611a54578160200160208202803683370190505b5090505f5b8451811015610bce576001600160a01b0386165f90815260a1602052604081208651611ac992879291899086908110611a9457611a94615678565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20613e0b90919063ffffffff16565b828281518110611adb57611adb615678565b6001600160401b0390921660209283029190910190910152600101611a59565b5f611b0581613153565b611b0e83612c08565b611b2b576040516348f5c3ed60e01b815260040160405180910390fd5b5f5f5f611b3786612542565b9150915081611b595760405163fa55fc8160e01b815260040160405180910390fd5b91505f90505b8351811015610b1b57838181518110611b7a57611b7a615678565b60200260200101516040015151848281518110611b9957611b99615678565b6020026020010151602001515114611bc4576040516343714afd60e01b815260040160405180910390fd5b5f848281518110611bd757611bd7615678565b602090810291909101810151518082015181516001600160a01b03165f90815260989093526040909220909250611c179163ffffffff90811690612bf116565b611c3457604051631fb1705560e21b815260040160405180910390fd5b5f611c3f878361087c565b90505f5b868481518110611c5557611c55615678565b60200260200101516020015151811015611f91575f878581518110611c7c57611c7c615678565b6020026020010151602001518281518110611c9957611c99615678565b60200260200101519050611cb0898261ffff6138cd565b5f5f611cbf8b61086c8861292e565b91509150806040015163ffffffff165f14611ced57604051630d8fcbe360e41b815260040160405180910390fd5b5f611cfa87858489613e1f565b9050611d3f825f01518c8a81518110611d1557611d15615678565b6020026020010151604001518781518110611d3257611d32615678565b6020026020010151613e55565b600f0b602083018190525f03611d6857604051634606179360e11b815260040160405180910390fd5b5f8260200151600f0b1215611eac578015611e2e57611de9611d898861292e565b6001600160a01b03808f165f90815260a360209081526040808320938a16835292905220908154600160801b90819004600f0b5f818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b611e137f00000000000000000000000000000000000000000000000000000000000000004361576a565b611e1e90600161576a565b63ffffffff166040830152611f19565b611e4083602001518360200151613e6c565b6001600160401b031660208401528a518b9089908110611e6257611e62615678565b6020026020010151604001518581518110611e7f57611e7f615678565b6020908102919091018101516001600160401b031683525f9083015263ffffffff43166040830152611f19565b5f8260200151600f0b1315611f1957611ecd83602001518360200151613e6c565b6001600160401b039081166020850181905284519091161015611f0357604051636c9be0bf60e01b815260040160405180910390fd5b611f0d894361576a565b63ffffffff1660408301525b611f2e8c611f268961292e565b868686613e8b565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd8c8886611f63865f01518760200151613e6c565b8660400151604051611f799594939291906157eb565b60405180910390a1505060019092019150611c439050565b505050600101611b5f565b6001600160a01b038083165f90815260a160209081526040808320938516835292905290812061083c906140c3565b82611fd581612c08565b611ff25760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b0384165f90815260a4602052604090205460ff16612034576001600160a01b0384165f90815260a460205260409020805460ff191660011790555b836001600160a01b03167fa89c1dc243d8908a96dd84944bcc97d6bc6ac00dd78e20621576be6a3c943713848460405161206f929190615864565b60405180910390a250505050565b600261208881613153565b8261209281612c08565b6120af5760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015612113573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121379190615729565b6121545760405163ccea9e6f60e01b815260040160405180910390fd5b5f5b61216360208501856156c3565b905081101561232b57604080518082019091525f90806121866020880188614c46565b6001600160a01b031681526020018680602001906121a491906156c3565b858181106121b4576121b4615678565b90506020020160208101906121c991906156aa565b63ffffffff90811690915260208083015183516001600160a01b03165f90815260989092526040909120929350612205929190811690612bf116565b61222257604051631fb1705560e21b815260040160405180910390fd5b61222c868261087c565b1561224a57604051636c6c6e2760e11b815260040160405180910390fd5b6122736122568261292e565b6001600160a01b0388165f908152609c60205260409020906140d6565b5061229f86609a5f6122848561292e565b81526020019081526020015f206140e190919063ffffffff16565b50856001600160a01b03167f43232edf9071753d2321e5fa7e018363ee248e5f2142e6c08edd3265bfb4895e826040516122d99190615748565b60405180910390a26001600160a01b0386165f908152609e602052604081206001916123048461292e565b815260208101919091526040015f20805460ff191691151591909117905550600101612156565b5061233c6104346020850185614c46565b6001600160a01b031663c63fd502856123586020870187614c46565b61236560208801886156c3565b61237260408a018a615877565b6040518763ffffffff1660e01b8152600401612393969594939291906158b9565b5f604051808303815f87803b1580156123aa575f5ffd5b505af11580156123bc573d5f5f3e3d5ffd5b5050505050505050565b5f6108f1609a5f6123d68561292e565b81526020019081526020015f20612bdd565b836123f281612c08565b61240f5760405163932d94f760e01b815260040160405180910390fd5b6040805180820182526001600160a01b03871680825263ffffffff80881660208085018290525f9384526098905293909120919261244e9291612bf116565b61246b57604051631fb1705560e21b815260040160405180910390fd5b5f6124758261292e565b90505f5b848110156123bc576124be86868381811061249657612496615678565b90506020020160208101906124ab9190614c46565b5f84815260996020526040902090613df7565b6124db576040516331bc342760e11b815260040160405180910390fd5b7f7b4b073d80dcac55a11177d8459ad9f664ceeb91f71f27167bb14f8152a7eeee8387878481811061250f5761250f615678565b90506020020160208101906125249190614c46565b604051612532929190615905565b60405180910390a1600101612479565b6001600160a01b0381165f908152609b602090815260408083208151608081018352905463ffffffff80821680845260ff600160201b8404161515958401869052650100000000008304821694840194909452600160481b9091041660608201819052849391929190158015906125c35750826060015163ffffffff164310155b156125d2575050604081015160015b9590945092505050565b6001600160a01b0381165f9081526098602052604081206108f190612bdd565b6001600160a01b0382165f908152609f60205260408120606091906108ed90826110138661292e565b8161262f81612c08565b61264c5760405163932d94f760e01b815260040160405180910390fd5b60405163b526578760e01b81526001600160a01b03848116600483015283169063b526578790602401602060405180830381865afa158015612690573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126b49190615729565b6126d157604051631d0b13c160e31b815260040160405180910390fd5b6001600160a01b038381165f90815260976020526040902080546001600160a01b0319169184169190911790557f2ae945c40c44dc0ec263f95609c3fdc6952e0aefa22d6374e44f2c997acedf858361272981610bd7565b604080516001600160a01b039384168152929091166020830152015b60405180910390a1505050565b5f5f61275d83611879565b90505f61276984610931565b905061277584836140f5565b80610b305750610b3084826140f5565b5f620e16e461279383610802565b6001600160a01b0316141592915050565b5f5f610bce8484613c7d565b6127b861416d565b606654801982198116146127df5760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b5f54610100900460ff161580801561283b57505f54600160ff909116105b806128545750303b15801561285457505f5460ff166001145b6128bc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff1916600117905580156128dd575f805461ff0019166101001790555b6128e682612ba0565b801561092d575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b5f815f0151826020015163ffffffff1660405160200161297992919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b6040516020818303038152906040526108f19061592b565b6040805180820182525f80825260208083018290528351606081018552828152808201839052808501839052845180860186526001600160a01b03898116855260a18452868520908816855290925293822092939281906129f1906140c3565b6001600160401b0390811682526001600160a01b038981165f81815260a260209081526040808320948c168084529482528083205486169682019690965291815260a082528481208b8252825284812092815291815290839020835160608101855290549283168152600160401b8304600f0b91810191909152600160c01b90910463ffffffff16918101829052919250431015612a93579092509050612af5565b612aa4815f01518260200151613e6c565b6001600160401b0316815260208101515f600f9190910b1215612ae257612ad382602001518260200151613e6c565b6001600160401b031660208301525b5f60408201819052602082015290925090505b935093915050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015612b5f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b839190615729565b61146257604051631d77d47760e21b815260040160405180910390fd5b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b5f6108f1825490565b5f61083c838361421e565b5f818152600183016020526040812054151561083c565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af1158015612c8e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f19190615729565b5f6040518060400160405280856001600160a01b03168152602001845f016020810190612cdf91906156aa565b63ffffffff168152509050612d29816020015163ffffffff1660985f876001600160a01b03166001600160a01b031681526020019081526020015f206140d690919063ffffffff16565b612d4657604051631fb1705560e21b815260040160405180910390fd5b7f31629285ead2335ae0933f86ed2ae63321f7af77b4e6eaabc42c057880977e6c81604051612d759190615748565b60405180910390a16001600160a01b038216620e16e414801590612e0a578260a65f612da08561292e565b81526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b031602179055507f90a6fa2a9b79b910872ebca540cf3bd8be827f586e6420c30d8836e30012907e8284604051612e01929190615905565b60405180910390a15b5f5b612e1960208601866156c3565b905081101561186057612e5e83612e3360208801886156c3565b84818110612e4357612e43615678565b9050602002016020810190612e589190614c46565b846139d1565b600101612e0c565b606083516001600160401b03811115612e8157612e81614a77565b604051908082528060200260200182016040528015612eb457816020015b6060815260200190600190039081612e9f5790505b5090505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f0e0e67686866040518363ffffffff1660e01b8152600401612f0692919061594e565b5f60405180830381865afa158015612f20573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052612f479190810190615972565b90505f5b8551811015613149575f868281518110612f6757612f67615678565b6020026020010151905085516001600160401b03811115612f8a57612f8a614a77565b604051908082528060200260200182016040528015612fb3578160200160208202803683370190505b50848381518110612fc657612fc6615678565b60209081029190910101525f5b865181101561313f575f878281518110612fef57612fef615678565b6020908102919091018101516001600160a01b038086165f90815260a184526040808220928416825291909352822090925061302a906140c3565b9050806001600160401b03165f03613043575050613137565b5f61304f858d85610843565b90508863ffffffff16816040015163ffffffff161115801561307757505f8160200151600f0b125b156130995761308d815f01518260200151613e6c565b6001600160401b031681525b80515f906130b4906001600160401b03908116908516614244565b90506130fb818989815181106130cc576130cc615678565b602002602001015187815181106130e5576130e5615678565b602002602001015161425890919063ffffffff16565b89888151811061310d5761310d615678565b6020026020010151868151811061312657613126615678565b602002602001018181525050505050505b600101612fd3565b5050600101612f4b565b5050949350505050565b606654600160ff83161b9081160361317e5760405163840a48d560e01b815260040160405180910390fd5b50565b5f60608161319260408601866156c3565b90506001600160401b038111156131ab576131ab614a77565b6040519080825280602002602001820160405280156131d4578160200160208202803683370190505b5090506131e460408601866156c3565b90506001600160401b038111156131fd576131fd614a77565b604051908082528060200260200182016040528015613226578160200160208202803683370190505b50915060a55f6132358661292e565b81526020019081526020015f205f815461324e90615a7e565b918290555092505f5b61326460408701876156c3565b9050811015613853578015806132f7575061328260408701876156c3565b61328d600184615a96565b81811061329c5761329c615678565b90506020020160208101906132b19190614c46565b6001600160a01b03166132c760408801886156c3565b838181106132d7576132d7615678565b90506020020160208101906132ec9190614c46565b6001600160a01b0316115b61331457604051639f1c805360e01b815260040160405180910390fd5b61332160608701876156c3565b8281811061333157613331615678565b905060200201355f1080156133715750670de0b6b3a764000061335760608801886156c3565b8381811061336757613367615678565b9050602002013511155b61338e57604051631353603160e01b815260040160405180910390fd5b6133cf61339e60408801886156c3565b838181106133ae576133ae615678565b90506020020160208101906133c39190614c46565b60995f6114758961292e565b6133ec576040516331bc342760e11b815260040160405180910390fd5b5f8061343e6133fe60208a018a614c46565b6134078961292e565b61341460408c018c6156c3565b8781811061342457613424615678565b90506020020160208101906134399190614c46565b612991565b805191935091506001600160401b03165f0361345b57505061384b565b5f61349661346c60608b018b6156c3565b8681811061347c5761347c615678565b85516001600160401b03169260209091020135905061426c565b83519091506134b16001600160401b03808416908316614244565b8686815181106134c3576134c3615678565b60200260200101818152505081835f018181516134e09190615aa9565b6001600160401b03169052508351829085906134fd908390615aa9565b6001600160401b031690525060208401805183919061351d908390615aa9565b6001600160401b031690525060208301515f600f9190910b1215613635575f61358061354c60608d018d6156c3565b8881811061355c5761355c615678565b90506020020135856020015161357190615ac8565b6001600160801b03169061426c565b9050806001600160401b03168460200181815161359d9190615aec565b600f0b9052507f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd6135d160208d018d614c46565b8b6135df60408f018f6156c3565b8a8181106135ef576135ef615678565b90506020020160208101906136049190614c46565b613615885f01518960200151613e6c565b886040015160405161362b9594939291906157eb565b60405180910390a1505b61368761364560208c018c614c46565b61364e8b61292e565b61365b60408e018e6156c3565b8981811061366b5761366b615678565b90506020020160208101906136809190614c46565b8787613e8b565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd6136b560208c018c614c46565b8a6136c360408e018e6156c3565b898181106136d3576136d3615678565b90506020020160208101906136e89190614c46565b86516040516136fc949392919043906157eb565b60405180910390a161374d61371460208c018c614c46565b61372160408d018d6156c3565b8881811061373157613731615678565b90506020020160208101906137469190614c46565b8651614282565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016635ae679a761378960208d018d614c46565b8b8b8e806040019061379b91906156c3565b8b8181106137ab576137ab615678565b90506020020160208101906137c09190614c46565b89516040516001600160e01b031960e088901b1681526137e895949392918991600401615b19565b6020604051808303815f875af1158015613804573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138289190615b6c565b87868151811061383a5761383a615678565b602002602001018181525050505050505b600101613257565b507f80969ad29428d6797ee7aad084f9e4a42a82fc506dcd2ca3b6fb431f85ccebe56138826020870187614c46565b8561389060408901896156c3565b8561389e60808c018c615877565b6040516138b19796959493929190615b83565b60405180910390a1509250929050565b60605f61083c83614304565b6001600160a01b038381165f90815260a360209081526040808320938616835292905290812054600f81810b600160801b909204900b035b5f8111801561391757508261ffff1682105b15610b1b576001600160a01b038086165f90815260a360209081526040808320938816835292905290812061394b9061435d565b90505f5f61395a888489612991565b91509150806040015163ffffffff1643101561397857505050610b1b565b6139858884898585613e8b565b6001600160a01b038089165f90815260a360209081526040808320938b168352929052206139b2906143af565b506139bc85615a7e565b94506139c784615c19565b9350505050613905565b8015613a155773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeabf196001600160a01b03831601613a1557604051632711b74d60e11b815260040160405180910390fd5b613a258260995f6122848761292e565b613a425760405163585cfb2f60e01b815260040160405180910390fd5b7f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b8383604051612745929190615905565b60605f613a7f8361442c565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b6001600160a01b0382165f908152609b60209081526040918290208251608081018452905463ffffffff808216835260ff600160201b830416151593830193909352650100000000008104831693820193909352600160481b909204166060820181905215801590613b2c5750806060015163ffffffff164310155b15613b4657604081015163ffffffff168152600160208201525b63ffffffff82166040820152613b7c7f00000000000000000000000000000000000000000000000000000000000000004361576a565b613b8790600161576a565b63ffffffff90811660608381019182526001600160a01b0386165f818152609b602090815260409182902087518154838a0151858b01519851928a1664ffffffffff1990921691909117600160201b91151591909102176cffffffffffffffff0000000000191665010000000000978916979097026cffffffff000000000000000000191696909617600160481b968816968702179055815192835294871694820194909452928301919091527f4e85751d6331506c6c62335f207eb31f12a61e570f34f5c17640308785c6d4db9101612745565b6001600160a01b0381165f908152600183016020526040812054151561083c565b6001600160a01b038281165f81815260a2602090815260408083209486168084529482528083205493835260a38252808320948352939052918220546001600160401b039091169190600f81810b600160801b909204900b03815b81811015613da8576001600160a01b038087165f90815260a3602090815260408083209389168352929052908120613d109083614453565b6001600160a01b038881165f90815260a0602090815260408083208584528252808320938b16835292815290829020825160608101845290546001600160401b0381168252600160401b8104600f0b92820192909252600160c01b90910463ffffffff16918101829052919250431015613d8b575050613da8565b613d99868260200151613e6c565b95505050806001019050613cd8565b506001600160a01b038086165f90815260a1602090815260408083209388168352929052208390613dd8906140c3565b613de29190615aa9565b9150509250929050565b5f61083c83836144c2565b5f61083c836001600160a01b0384166144c2565b5f61083c8383670de0b6b3a76400006145a5565b5f613e308460995f6114758961292e565b8015613e395750815b801561149c57505090516001600160401b031615159392505050565b5f61083c6001600160401b03808516908416615c2e565b5f61083c613e83836001600160401b038616615aec565b600f0b6145fa565b6020808301516001600160a01b038088165f90815260a284526040808220928816825291909352909120546001600160401b03908116911614613f5157602082810180516001600160a01b038881165f81815260a286526040808220938a1680835293875290819020805467ffffffffffffffff19166001600160401b0395861617905593518451918252948101919091529216908201527facf9095feb3a370c9cf692421c69ef320d4db5c66e6a7d29c7694eb02364fc559060600160405180910390a15b6001600160a01b038086165f90815260a060209081526040808320888452825280832093871683529281529082902083518154928501519385015163ffffffff16600160c01b0263ffffffff60c01b196001600160801b038616600160401b026001600160c01b03199095166001600160401b03909316929092179390931716919091179055600f0b15614033576001600160a01b0385165f908152609f60209081526040808320878452909152902061400b90846140e1565b506001600160a01b0385165f908152609d6020526040902061402d90856140d6565b50610b1b565b80516001600160401b03165f03610b1b576001600160a01b0385165f908152609f6020908152604080832087845290915290206140709084613df7565b506001600160a01b0385165f908152609f60209081526040808320878452909152902061409c90612bdd565b5f03610b1b576001600160a01b0385165f908152609d602052604090206118609085613dec565b5f6108f182670de0b6b3a7640000614665565b5f61083c838361469c565b5f61083c836001600160a01b03841661469c565b5f805b8251811015614164576141248484838151811061411757614117615678565b602002602001015161087c565b801561414d575061414d83828151811061414057614140615678565b6020026020010151612785565b1561415c5760019150506108f1565b6001016140f8565b505f9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156141c9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906141ed9190615c5b565b6001600160a01b0316336001600160a01b0316146114625760405163794821ff60e01b815260040160405180910390fd5b5f825f01828154811061423357614233615678565b905f5260205f200154905092915050565b5f61083c83670de0b6b3a7640000846146e8565b5f61083c8383670de0b6b3a76400006146e8565b5f61083c8383670de0b6b3a764000060016147cd565b6001600160a01b038084165f90815260a1602090815260408083209386168352929052206142b190438361481c565b604080516001600160a01b038086168252841660208201526001600160401b038316918101919091527f1c6458079a41077d003c11faf9bf097e693bd67979e4e6500bac7b29db779b5c90606001612745565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561435157602002820191905f5260205f20905b81548152602001906001019080831161433d575b50505050509050919050565b5f6143778254600f81810b600160801b909204900b131590565b1561439557604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f9081526001909101602052604090205490565b5f6143c98254600f81810b600160801b909204900b131590565b156143e757604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b5f60ff8216601f8111156108f157604051632cd44ac360e21b815260040160405180910390fd5b5f5f61447561446184614835565b85546144709190600f0b615c76565b61489e565b8454909150600160801b9004600f90810b9082900b126144a857604051632d0483c560e21b815260040160405180910390fd5b600f0b5f9081526001939093016020525050604090205490565b5f818152600183016020526040812054801561459c575f6144e4600183615a96565b85549091505f906144f790600190615a96565b9050818114614556575f865f01828154811061451557614515615678565b905f5260205f200154905080875f01848154811061453557614535615678565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061456757614567615c9d565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506108f1565b5f9150506108f1565b82545f90816145b686868385614907565b905080156145f0576145da866145cd600184615a96565b5f91825260209091200190565b54600160201b90046001600160e01b0316610872565b5091949350505050565b5f6001600160401b038211156146615760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b60648201526084016128b3565b5090565b81545f9080156146945761467e846145cd600184615a96565b54600160201b90046001600160e01b03166108ed565b509092915050565b5f8181526001830160205260408120546146e157508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556108f1565b505f6108f1565b5f80805f19858709858702925082811083820303915050805f0361471f5783828161471557614715615cb1565b049250505061083c565b8084116147665760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016128b3565b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b5f5f6147da8686866146e8565b905060018360028111156147f0576147f0615cc5565b14801561480c57505f848061480757614807615cb1565b868809115b1561149c57610872600182615cd9565b61483083836001600160401b03841661495a565b505050565b5f6001600160ff1b038211156146615760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016128b3565b80600f81900b81146149025760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016128b3565b919050565b5f5b81831015610a40575f61491c8484614a5d565b5f8781526020902090915063ffffffff86169082015463ffffffff16111561494657809250614954565b614951816001615cd9565b93505b50614909565b82548015614a10575f614972856145cd600185615a96565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090851610156149c45760405163151b8e3f60e11b815260040160405180910390fd5b805163ffffffff808616911603614a0e57826149e5866145cd600186615a96565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790555050505050565b505b506040805180820190915263ffffffff92831681526001600160e01b03918216602080830191825285546001810187555f968752952091519051909216600160201b029190921617910155565b5f614a6b6002848418615cec565b61083c90848416615cd9565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b0381118282101715614aad57614aad614a77565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614adb57614adb614a77565b604052919050565b6001600160a01b038116811461317e575f5ffd5b803563ffffffff81168114614902575f5ffd5b5f60408284031215614b1a575f5ffd5b604080519081016001600160401b0381118282101715614b3c57614b3c614a77565b6040529050808235614b4d81614ae3565b8152614b5b60208401614af7565b60208201525092915050565b5f60408284031215614b77575f5ffd5b61083c8383614b0a565b5f5f5f60808486031215614b93575f5ffd5b8335614b9e81614ae3565b9250614bad8560208601614b0a565b91506060840135614bbd81614ae3565b809150509250925092565b81516001600160401b03168152602080830151600f0b9082015260408083015163ffffffff1690820152606081016108f1565b5f5f60608385031215614c0c575f5ffd5b8235614c1781614ae3565b9150614c268460208501614b0a565b90509250929050565b5f60208284031215614c3f575f5ffd5b5035919050565b5f60208284031215614c56575f5ffd5b813561083c81614ae3565b80516001600160a01b0316825260209081015163ffffffff16910152565b5f8151808452602084019350602083015f5b82811015614cba57614ca4868351614c61565b6040959095019460209190910190600101614c91565b5093949350505050565b602081525f61083c6020830184614c7f565b5f5f83601f840112614ce6575f5ffd5b5081356001600160401b03811115614cfc575f5ffd5b6020830191508360208260051b8501011115610ffa575f5ffd5b5f5f5f60408486031215614d28575f5ffd5b8335614d3381614ae3565b925060208401356001600160401b03811115614d4d575f5ffd5b614d5986828701614cd6565b9497909650939450505050565b5f6001600160401b03821115614d7e57614d7e614a77565b5060051b60200190565b5f82601f830112614d97575f5ffd5b8135614daa614da582614d66565b614ab3565b8082825260208201915060208360051b860101925085831115614dcb575f5ffd5b602085015b83811015614df1578035614de381614ae3565b835260209283019201614dd0565b5095945050505050565b5f5f5f60808486031215614e0d575f5ffd5b614e178585614b0a565b925060408401356001600160401b03811115614e31575f5ffd5b614e3d86828701614d88565b92505060608401356001600160401b03811115614e58575f5ffd5b614e6486828701614d88565b9150509250925092565b5f8151808452602084019350602083015f5b82811015614cba578151865260209586019590910190600101614e80565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015614ef557603f19878603018452614ee0858351614e6e565b94506020938401939190910190600101614ec4565b50929695505050505050565b5f5f5f5f60a08587031215614f14575f5ffd5b614f1e8686614b0a565b935060408501356001600160401b03811115614f38575f5ffd5b614f4487828801614d88565b93505060608501356001600160401b03811115614f5f575f5ffd5b614f6b87828801614d88565b925050614f7a60808601614af7565b905092959194509250565b5f5f5f5f5f60608688031215614f99575f5ffd5b8535614fa481614ae3565b945060208601356001600160401b03811115614fbe575f5ffd5b614fca88828901614cd6565b90955093505060408601356001600160401b03811115614fe8575f5ffd5b614ff488828901614cd6565b969995985093965092949392505050565b5f5f60408385031215615016575f5ffd5b823561502181614ae3565b915060208301356001600160401b0381111561503b575f5ffd5b830160a0818603121561504c575f5ffd5b809150509250929050565b828152604060208201525f610b306040830184614e6e565b5f5f60408385031215615080575f5ffd5b823561508b81614ae3565b9150602083013561504c81614ae3565b5f8151808452602084019350602083015f5b82811015614cba576150e686835180516001600160401b03168252602080820151600f0b9083015260409081015163ffffffff16910152565b60609590950194602091909101906001016150ad565b604081525f61510e6040830185614c7f565b828103602084015261149c818561509b565b5f8151808452602084019350602083015f5b82811015614cba5781516001600160a01b0316865260209586019590910190600101615132565b602081525f61083c6020830184615120565b5f5f6040838503121561517c575f5ffd5b82356001600160401b03811115615191575f5ffd5b61519d85828601614d88565b925050602083013561504c81614ae3565b602080825282518282018190525f918401906040840190835b818110156151ee5783516001600160401b03168352602093840193909201916001016151c7565b509095945050505050565b5f5f5f5f6060858703121561520c575f5ffd5b843561521781614ae3565b935061522560208601614af7565b925060408501356001600160401b0381111561523f575f5ffd5b61524b87828801614cd6565b95989497509550505050565b5f5f60408385031215615268575f5ffd5b823561527381614ae3565b915060208301356001600160401b0381111561528d575f5ffd5b613de285828601614d88565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f5f604083850312156152df575f5ffd5b82356152ea81614ae3565b9150614c2660208401614af7565b5f60208284031215615308575f5ffd5b813560ff8116811461083c575f5ffd5b5f60608284031215615328575f5ffd5b50919050565b5f6020828403121561533e575f5ffd5b81356001600160401b03811115615353575f5ffd5b6108ed84828501615318565b5f5f5f60808486031215615371575f5ffd5b83356001600160401b03811115615386575f5ffd5b61539286828701614d88565b935050614bad8560208601614b0a565b602081525f61083c602083018461509b565b5f5f5f606084860312156153c6575f5ffd5b83356153d181614ae3565b925060208401356001600160401b038111156153eb575f5ffd5b6153f786828701614d88565b92505061540660408501614af7565b90509250925092565b5f5f60408385031215615420575f5ffd5b823561542b81614ae3565b915060208301356001600160401b03811115615445575f5ffd5b8301601f81018513615455575f5ffd5b8035615463614da582614d66565b8082825260208201915060208360051b850101925087831115615484575f5ffd5b602084015b838110156155a95780356001600160401b038111156154a6575f5ffd5b85016080818b03601f190112156154bb575f5ffd5b6154c3614a8b565b6154d08b60208401614b0a565b815260608201356001600160401b038111156154ea575f5ffd5b6154f98c602083860101614d88565b60208301525060808201356001600160401b03811115615517575f5ffd5b6020818401019250508a601f83011261552e575f5ffd5b813561553c614da582614d66565b8082825260208201915060208360051b86010192508d83111561555d575f5ffd5b6020850194505b828510156155935784356001600160401b0381168114615582575f5ffd5b825260209485019490910190615564565b6040840152505084525060209283019201615489565b50809450505050509250929050565b5f5f5f604084860312156155ca575f5ffd5b83356155d581614ae3565b925060208401356001600160401b038111156155ef575f5ffd5b8401601f810186136155ff575f5ffd5b80356001600160401b03811115615614575f5ffd5b866020828401011115615625575f5ffd5b939660209190910195509293505050565b5f5f60408385031215615647575f5ffd5b823561565281614ae3565b915060208301356001600160401b0381111561566c575f5ffd5b613de285828601615318565b634e487b7160e01b5f52603260045260245ffd5b5f8235603e198336030181126156a0575f5ffd5b9190910192915050565b5f602082840312156156ba575f5ffd5b61083c82614af7565b5f5f8335601e198436030181126156d8575f5ffd5b8301803591506001600160401b038211156156f1575f5ffd5b6020019150600581901b3603821315610ffa575f5ffd5b5f60208284031215615718575f5ffd5b813561ffff8116811461083c575f5ffd5b5f60208284031215615739575f5ffd5b8151801515811461083c575f5ffd5b604081016108f18284614c61565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff81811683821601908111156108f1576108f1615756565b8183526020830192505f815f5b84811015614cba5763ffffffff6157a983614af7565b1686526020958601959190910190600101615793565b6001600160a01b038581168252841660208201526060604082018190525f906108729083018486615786565b6001600160a01b038616815260c081016158086020830187614c61565b6001600160a01b039490941660608201526001600160401b0392909216608083015263ffffffff1660a09091015292915050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b602081525f610b3060208301848661583c565b5f5f8335601e1984360301811261588c575f5ffd5b8301803591506001600160401b038211156158a5575f5ffd5b602001915036819003821315610ffa575f5ffd5b6001600160a01b038781168252861660208201526080604082018190525f906158e59083018688615786565b82810360608401526158f881858761583c565b9998505050505050505050565b606081016159138285614c61565b6001600160a01b039290921660409190910152919050565b80516020808301519190811015615328575f1960209190910360031b1b16919050565b604081525f6159606040830185615120565b828103602084015261149c8185615120565b5f60208284031215615982575f5ffd5b81516001600160401b03811115615997575f5ffd5b8201601f810184136159a7575f5ffd5b80516159b5614da582614d66565b8082825260208201915060208360051b8501019250868311156159d6575f5ffd5b602084015b83811015615a735780516001600160401b038111156159f8575f5ffd5b8501603f81018913615a08575f5ffd5b6020810151615a19614da582614d66565b808282526020820191506020808460051b8601010192508b831115615a3c575f5ffd5b6040840193505b82841015615a5e578351825260209384019390910190615a43565b865250506020938401939190910190506159db565b509695505050505050565b5f60018201615a8f57615a8f615756565b5060010190565b818103818111156108f1576108f1615756565b6001600160401b0382811682821603908111156108f1576108f1615756565b5f81600f0b60016001607f1b03198103615ae457615ae4615756565b5f0392915050565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156108f1576108f1615756565b6001600160a01b038716815260e08101615b366020830188614c61565b60608201959095526001600160a01b039390931660808401526001600160401b0391821660a08401521660c09091015292915050565b5f60208284031215615b7c575f5ffd5b5051919050565b6001600160a01b03881681525f60c08201615ba1602084018a614c61565b60c060608401528690528660e083015f5b88811015615be2578235615bc581614ae3565b6001600160a01b0316825260209283019290910190600101615bb2565b508381036080850152615bf58188614e6e565b91505082810360a0840152615c0b81858761583c565b9a9950505050505050505050565b5f81615c2757615c27615756565b505f190190565b600f82810b9082900b0360016001607f1b0319811260016001607f1b03821317156108f1576108f1615756565b5f60208284031215615c6b575f5ffd5b815161083c81614ae3565b8082018281125f831280158216821582161715615c9557615c95615756565b505092915050565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b808201808211156108f1576108f1615756565b5f82615d0657634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212207ffcd99f9165c1567b83e60ff543a1e3202c0fabec9debb5f8adec22b57d410364736f6c634300081b0033",
    "sourceMap": "520:44939:117:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43712:420;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1976:32:274;;;1958:51;;1946:2;1931:18;43712:420:117;;;;;;;;33596:303;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;43259:408::-;;;;;;:::i;:::-;;:::i;:::-;;;3630:14:274;;3623:22;3605:41;;3593:2;3578:18;43259:408:117;3465:187:274;3762:401:159;;;;;;:::i;:::-;;:::i;:::-;;32719:410:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;40553:177::-;;;;;;:::i;:::-;;:::i;12483:316::-;;;;;;:::i;:::-;;:::i;1620:42:118:-;;;;;;;;6297:10:274;6285:23;;;6267:42;;6255:2;6240:18;1620:42:118;6123:192:274;42671:543:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;41886:740::-;;;;;;:::i;:::-;;:::i;41216:232::-;;;;;;:::i;:::-;;:::i;12844:591::-;;;;;;:::i;:::-;;:::i;1963:709::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;34433:690::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;41493:348::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;354:59:156:-;;;;;38405:364:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7837:468::-;;;;;;:::i;:::-;;:::i;44419:153::-;;;;;;:::i;:::-;;:::i;:::-;;;16991:25:274;;;16979:2;16964:18;44419:153:117;16845:177:274;13480:553:117;;;;;;:::i;:::-;;:::i;37970:390::-;;;;;;:::i;:::-;;:::i;1031:106:157:-;;;:::i;:::-;;;;;;;:::i;11389:317:117:-;;;;;;:::i;:::-;;:::i;4199:85:159:-;;;:::i;4933:163::-;;;;;;:::i;:::-;5065:7;;5036:1;:10;;;;;;;;5065:14;;;5064:24;;4933:163;4810:87;4883:7;;4810:87;;40319:189:117;;;;;;:::i;:::-;;:::i;35449:240::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;19409:31:274;;;19391:50;;19379:2;19364:18;35449:240:117;19247:200:274;9759:1585:117;;;;;;:::i;:::-;;:::i;40775:178::-;;;;;;:::i;:::-;;:::i;39861:413::-;;;;;;:::i;:::-;;:::i;1742:54:118:-;;;;;1964:47:159;;;;;33944:444:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;38814:462::-;;;;;;:::i;:::-;;:::i;2717:5075::-;;;;;;:::i;:::-;;:::i;37760:165::-;;;;;;:::i;:::-;;:::i;12200:238::-;;;;;;:::i;:::-;;:::i;8350:1364::-;;;;;;:::i;:::-;;:::i;40998:173::-;;;;;;:::i;:::-;;:::i;14078:648::-;;;;;;:::i;:::-;;:::i;39321:495::-;;;;;;:::i;:::-;;:::i;:::-;;;;26562:14:274;;26555:22;26537:41;;26626:10;26614:23;;;26609:2;26594:18;;26587:51;26510:18;39321:495:117;26371:273:274;32535:139:117;;;;;;:::i;:::-;;:::i;33174:377::-;;;;;;:::i;:::-;;:::i;11751:404::-;;;;;;:::i;:::-;;:::i;44617:840::-;;;;;;:::i;:::-;;:::i;1365:46:118:-;;;;;44177:197:117;;;;;;:::i;:::-;;:::i;35168:236::-;;;;;;:::i;:::-;;:::i;4320:454:159:-;;;;;;:::i;:::-;;:::i;1780:138:117:-;;;;;;:::i;:::-;;:::i;43712:420::-;43815:7;43944:31;43978:25;:44;44004:17;:11;:15;:17::i;:::-;43978:44;;;;;;;;;;;-1:-1:-1;43978:44:117;;-1:-1:-1;;;;;43978:44:117;;-1:-1:-1;44039:37:117;;:86;;44102:23;44039:86;;;597:42:118;44039:86:117;44032:93;43712:420;-1:-1:-1;;;43712:420:117:o;33596:303::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;33804:60:117;33826:8;33836:17;:11;:15;:17::i;:::-;33855:8;33804:21;:60::i;:::-;33769:95;33596:303;-1:-1:-1;;;;;;33596:303:117:o;43259:408::-;-1:-1:-1;;;;;43410:28:117;;43359:4;43410:28;;;:18;:28;;;;;43359:4;;;43439:17;:11;:15;:17::i;:::-;43410:47;;;;;;;;;;;;;;-1:-1:-1;43410:47:117;43375:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43375:82:117;43602:58;;;43639:6;:21;;;43623:37;;:12;:37;;43602:58;43595:65;;;43259:408;;;;;:::o;3762:401:159:-;2390:18;:16;:18::i;:::-;3876:7:::1;::::0;4025:37;;::::1;4024:62:::0;::::1;4016:97;;;;-1:-1:-1::0;;;4016:97:159::1;;;;;;;;;;;;4123:33;4140:15;4123:16;:33::i;:::-;3836:327;3762:401:::0;:::o;32719:410:117:-;-1:-1:-1;;;;;32847:23:117;;32830:14;32847:23;;;:13;:23;;;;;32798:20;;32830:14;32847:32;;:30;:32::i;:::-;32830:49;;32890:33;32944:6;-1:-1:-1;;;;;32926:25:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;32926:25:117;;;;;;;;;;;;;;;-1:-1:-1;32890:61:117;-1:-1:-1;32966:9:117;32961:132;32985:6;32981:1;:10;32961:132;;;-1:-1:-1;;;;;33052:23:117;;;;;;:13;:23;;;;;33030:52;;33052:29;;33079:1;33052:26;:29::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;703:137:152;;;;;;;;;767:2;750:19;;;703:137;;;;;;;;;;;559:288;33030:52:117;33012:12;33025:1;33012:15;;;;;;;;:::i;:::-;;;;;;;;;;:70;32993:3;;32961:132;;;-1:-1:-1;33110:12:117;32719:410;-1:-1:-1;;;32719:410:117:o;40553:177::-;40708:14;;;;;40682:15;;-1:-1:-1;;;;;40668:30:117;40645:4;40668:30;;;:13;:30;;;;;;:55;;;;;;;:39;:55;:::i;12483:316::-;12581:3;713:22:156;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:156;;;;;;;;;;;;-1:-1:-1;;;;;12604:27:117;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;12596:62;;;;-1:-1:-1::0;;;12596:62:117::1;;;;;;;;;;;;12673:9;12668:125;12688:17:::0;;::::1;12668:125;;;12726:56;12745:3;12750:6;;12757:1;12750:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;597:42:118;12726:18:117;:56::i;:::-;12707:3;;12668:125;;;;12483:316:::0;;;;:::o;42671:543::-;42842:18;43124:83;43150:11;43163:9;43174:10;43193:12;43124:25;:83::i;:::-;43117:90;42671:543;-1:-1:-1;;;;42671:543:117:o;41886:740::-;42092:33;42154:74;42180:11;42193:9;42204:10;42216:11;42154:25;:74::i;:::-;42137:91;-1:-1:-1;42244:9:117;42239:381;42263:9;:16;42259:1;:20;42239:381;;;42417:46;42437:9;42447:1;42437:12;;;;;;;;:::i;:::-;;;;;;;42451:11;42417:19;:46::i;:::-;42412:198;;42488:9;42483:113;42507:10;:17;42503:1;:21;42483:113;;;42576:1;42553:14;42568:1;42553:17;;;;;;;;:::i;:::-;;;;;;;42571:1;42553:20;;;;;;;;:::i;:::-;;;;;;;;;;:24;42526:3;;42483:113;;;;42412:198;42281:3;;42239:381;;;;41886:740;;;;;;:::o;41216:232::-;-1:-1:-1;;;;;41340:18:117;;;41289:13;41340:18;;;:13;:18;;;;;;41289:13;;41340:18;41376:32;;:65;;41432:9;41376:65;;;-1:-1:-1;41425:3:117;;41369:72;-1:-1:-1;41216:232:117:o;12844:591::-;13031:3;713:22:156;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:156;;;;;;;;;;;;13054:48:117;;::::1;13046:85;;;;-1:-1:-1::0;;;13046:85:117::1;;;;;;;;;;;;-1:-1:-1::0;;;;;13149:27:117;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;13141:62;;;;-1:-1:-1::0;;;13141:62:117::1;;;;;;;;;;;;13218:9;13213:216;13233:17:::0;;::::1;13213:216;;;13318:1;13279:24:::0;;13304:1;13279:27;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13279:41:117::1;::::0;13271:70:::1;;;;-1:-1:-1::0;;;13271:70:117::1;;;;;;;;;;;;13355:63;13374:3;13379:6;;13386:1;13379:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13390:24;;13415:1;13390:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13355:18;:63::i;:::-;13252:3;;13213:216;;;;12844:591:::0;;;;;;:::o;1963:709::-;2133:7;2142:16;1094:1:118;2960:30:159;2984:5;2960:23;:30::i;:::-;2119:3:117::1;713:22:156;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:156::1;;;;;;;;;;;;2253:30:117::2;2286:38;;;;;;;;2298:3;-1:-1:-1::0;;;;;2286:38:117::2;;;;;2303:6;:20;;;;;;;;;;:::i;:::-;2286:38;;::::0;;2253:71;-1:-1:-1;2370:18:117::2;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;:25:::0;-1:-1:-1;2342:17:117::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;:53;2334:90;;;;-1:-1:-1::0;;;2334:90:117::2;;;;;;;;;;;;2482:14;::::0;;::::2;::::0;2456:15;;-1:-1:-1;;;;;2442:30:117::2;;::::0;;;:13:::2;:30:::0;;;;;;;:55:::2;::::0;::::2;::::0;;::::2;::::0;:39:::2;:55;:::i;:::-;2434:86;;;;-1:-1:-1::0;;;2434:86:117::2;;;;;;;;;;;;2538:49;2558:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;2575:11;2538:19;:49::i;:::-;2530:82;;;;-1:-1:-1::0;;;2530:82:117::2;;;;;;;;;;;;2630:35;2645:6;2653:11;2630:14;:35::i;:::-;2623:42;;;;;3000:1:159::1;1963:709:117::0;;;;;;:::o;34433:690::-;-1:-1:-1;;;;;34618:23:117;;34601:14;34618:23;;;:13;:23;;;;;34548:20;;;;34618:32;;:30;:32::i;:::-;34601:49;;34661:33;34715:6;-1:-1:-1;;;;;34697:25:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;34697:25:117;;;;;;;;;;;;;;;;34661:61;;34732:32;34784:6;-1:-1:-1;;;;;34767:24:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;34767:24:117;;-1:-1:-1;;34767:24:117;;;;;;;;;;;-1:-1:-1;34732:59:117;-1:-1:-1;34807:9:117;34802:269;34826:6;34822:1;:10;34802:269;;;-1:-1:-1;;;;;34908:23:117;;34853:30;34908:23;;;:13;:23;;;;;34886:52;;34908:29;;34935:1;34908:26;:29::i;34886:52::-;34853:85;;34971:11;34953:12;34966:1;34953:15;;;;;;;;:::i;:::-;;;;;;:29;;;;35014:46;35028:8;35038:11;35051:8;35014:13;:46::i;:::-;34996:12;35009:1;34996:15;;;;;;;;:::i;:::-;;;;;;;;;;:64;-1:-1:-1;34834:3:117;;34802:269;;;-1:-1:-1;35089:12:117;;-1:-1:-1;35103:12:117;-1:-1:-1;;34433:690:117;;;;;;:::o;41493:348::-;41598:18;41628:23;41654:50;:22;:41;41677:17;:11;:15;:17::i;:::-;41654:41;;;;;;;;;;;:48;:50::i;38405:364::-;38502:15;38529:29;38574:9;:16;-1:-1:-1;;;;;38561:30:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38561:30:117;-1:-1:-1;38529:62:117;-1:-1:-1;38607:9:117;38602:130;38626:9;:16;38622:1;:20;38602:130;;;38682:39;38698:9;38708:1;38698:12;;;;;;;;:::i;:::-;;;;;;;38712:8;38682:15;:39::i;:::-;38663:13;38677:1;38663:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;38663:58:117;;;:16;;;;;;;;;;;:58;38644:3;;38602:130;;7837:468;939:1:118;2960:30:159;2984:5;2960:23;:30::i;:::-;8052:38:117;;::::1;8044:75;;;;-1:-1:-1::0;;;8044:75:117::1;;;;;;;;;;;;8134:9;8129:170;8149:21:::0;;::::1;8129:170;;;8191:97;8226:8;8246:10;;8257:1;8246:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8273:10;;8284:1;8273:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8191:23;:97::i;:::-;8172:3;;8129:170;;44419:153:::0;44511:7;44537:9;:28;44547:17;:11;:15;:17::i;:::-;44537:28;;;;;;;;;;;;44530:35;;44419:153;;;:::o;13480:553::-;13636:3;713:22:156;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:156;;;;;;;;;;;;13684:31:117::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;13684:31:117;::::1;::::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;13651:30:::1;13733:18:::0;;;:13:::1;:18:::0;;;;;;13684:31;;13733:43:::1;::::0;:18;:27:::1;:43;:::i;:::-;13725:74;;;;-1:-1:-1::0;;;13725:74:117::1;;;;;;;;;;;;13814:9;13809:218;13829:21:::0;;::::1;13809:218;;;13871:145;13914:11;13927:10;;13938:1;13927:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13942:60;13970:31;;;;;;;;13982:3;-1:-1:-1::0;;;;;13970:31:117::1;;;;;13987:13;13970:31;;;;::::0;13942:27:::1;:60::i;:::-;13871:25;:145::i;:::-;13852:3;;13809:218;;37970:390:::0;38090:15;38117:29;38162:10;:17;-1:-1:-1;;;;;38149:31:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38149:31:117;-1:-1:-1;38117:63:117;-1:-1:-1;38196:9:117;38191:132;38215:10;:17;38211:1;:21;38191:132;;;38272:40;38288:8;38298:10;38309:1;38298:13;;;;;;;;:::i;:::-;;;;;;;38272:15;:40::i;:::-;38253:13;38267:1;38253:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;38253:59:117;;;:16;;;;;;;;;;;:59;38234:3;;38191:132;;1031:106:157;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;11389:317:117:-;11472:10;-1:-1:-1;;;;;11494:10:117;11472:33;;11468:186;;11529:23;11543:8;11529:13;:23::i;:::-;11521:49;;;;-1:-1:-1;;;11521:49:117;;;;;;;;;;;;11592:31;;-1:-1:-1;;;11592:31:117;;-1:-1:-1;;;;;1976:32:274;;;11592:31:117;;;1958:51:274;11592:10:117;:21;;;;1931:18:274;;11592:31:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11584:59;;;;-1:-1:-1;;;11584:59:117;;;;;;;;;;;;11663:36;11683:8;11693:5;11663:19;:36::i;4199:85:159:-;2390:18;:16;:18::i;:::-;4249:28:::1;-1:-1:-1::0;;4249:16:159::1;:28::i;:::-;4199:85::o:0;40319:189:117:-;40421:4;40444:57;40492:8;40444:19;:38;40464:17;:11;:15;:17::i;:::-;40444:38;;;;;;;;;;;:47;;:57;;;;:::i;35449:240::-;35543:6;35564:30;35598:44;35623:8;35633;35598:24;:44::i;:::-;35561:81;35449:240;-1:-1:-1;;;;;35449:240:117:o;9759:1585::-;1276:1:118;2960:30:159;2984:5;2960:23;:30::i;:::-;10028::117::1;10042:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;10028:13;:30::i;:::-;:59;;;-1:-1:-1::0;10062:25:117::1;10076:10;::::0;;;::::1;::::0;::::1;;:::i;10062:25::-;10020:85;;;;-1:-1:-1::0;;;10020:85:117::1;;;;;;;;;;;;10121:9;10116:1062;10140:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;:28;;10136:1;:32;10116:1062;;;10271:30;10304:49;;;;;;;;10316:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10304:49:117::1;::::0;;::::1;;10328:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;10350:1;10328:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10304:49;;;;::::0;10271:82:::1;;10375:50;10410:11;:14;;;10375:50;;:13;:25;10389:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10375:25:117::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;10375:25:117;;:34:::1;:50::i;:::-;10367:81;;;;-1:-1:-1::0;;;10367:81:117::1;;;;;;;;;;;;10470:18;:35;10489:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;10470:35:117::1;-1:-1:-1::0;;;;;10470:35:117::1;;;;;;;;;;;;:54;10506:17;:11;:15;:17::i;:::-;10470:54:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;10470:54:117;:65;::::1;;10462:92;;;;-1:-1:-1::0;;;10462:92:117::1;;;;;;;;;;;;10618:57;10657:17;:11;:15;:17::i;:::-;10618:14;:31;10633:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;10618:31:117::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;10618:31:117;;:38:::1;:57::i;:::-;-1:-1:-1::0;10689:62:117::1;10735:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;10689:19;:38;10709:17;:11;:15;:17::i;:::-;10689:38;;;;;;;;;;;:45;;:62;;;;:::i;:::-;-1:-1:-1::0;10801:15:117::1;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;10770:60:117::1;;10818:11;10770:60;;;;;;:::i;:::-;;;;;;;;11023:144;::::0;;;;::::1;::::0;;;-1:-1:-1;11023:144:117;;::::1;::::0;::::1;11111:41;11134:18;11118:12;11111:41;:::i;:::-;11023:144;;::::0;;10966:18:::1;:35;10985:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;10966:35:117::1;-1:-1:-1::0;;;;;10966:35:117::1;;;;;;;;;;;;:54;11002:17;:11;:15;:17::i;:::-;10966:54:::0;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;10966:54:117;:201;;;;;;;::::1;::::0;::::1;;;;-1:-1:-1::0;;10966:201:117;::::1;;::::0;;;;-1:-1:-1;;10966:201:117;;;;;;;::::1;::::0;;-1:-1:-1;10966:201:117;10170:3:::1;10116:1062;;;-1:-1:-1::0;11239:27:117::1;11255:10;::::0;;;::::1;::::0;::::1;;:::i;11239:27::-;-1:-1:-1::0;;;;;11239:46:117::1;;11286:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;11303:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;11315:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;11239:98;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9759:1585:::0;;:::o;40775:178::-;40864:16;40899:47;:19;:38;40919:17;:11;:15;:17::i;39861:413::-;-1:-1:-1;;;;;39990:24:117;;39973:14;39990:24;;;:14;:24;;;;;39941:20;;39973:14;39990:33;;:31;:33::i;:::-;39973:50;;40033:33;40087:6;-1:-1:-1;;;;;40069:25:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;40069:25:117;;;;;;;;;;;;;;;-1:-1:-1;40033:61:117;-1:-1:-1;40110:9:117;40105:133;40129:6;40125:1;:10;40105:133;;;-1:-1:-1;;;;;40196:24:117;;;;;;:14;:24;;;;;40174:53;;40196:30;;40224:1;40196:27;:30::i;40174:53::-;40156:12;40169:1;40156:15;;;;;;;;:::i;:::-;;;;;;;;;;:71;40137:3;;40105:133;;33944:444;34101:19;34132:32;34184:9;:16;-1:-1:-1;;;;;34167:34:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;34167:34:117;;-1:-1:-1;;34167:34:117;;;;;;;;;;;-1:-1:-1;34132:69:117;-1:-1:-1;34217:9:117;34212:140;34236:9;:16;34232:1;:20;34212:140;;;34291:50;34305:9;34315:1;34305:12;;;;;;;;:::i;:::-;;;;;;;34319:11;34332:8;34291:13;:50::i;:::-;34273:12;34286:1;34273:15;;;;;;;;:::i;:::-;;;;;;;;;;:68;34254:3;;34212:140;;38814:462;38969:15;38996:29;39041:10;:17;-1:-1:-1;;;;;39028:31:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39028:31:117;-1:-1:-1;38996:63:117;-1:-1:-1;39075:9:117;39070:169;39094:10;:17;39090:1;:21;39070:169;;;-1:-1:-1;;;;;39151:30:117;;;;;;:20;:30;;;;;39182:13;;39151:77;;39215:11;;39151:30;39182:10;;39193:1;;39182:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;39151:45:117;-1:-1:-1;;;;;39151:45:117;;;;;;;;;;;;:57;;:77;;;;:::i;:::-;39132:13;39146:1;39132:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;39132:96:117;;;:16;;;;;;;;;;;:96;39113:3;;39070:169;;2717:5075;939:1:118;2960:30:159;2984:5;2960:23;:30::i;:::-;3049:23:117::1;3063:8;3049:13;:23::i;:::-;3041:49;;;;-1:-1:-1::0;;;3041:49:117::1;;;;;;;;;;;;3182:30;3237:10;3249:12;3265:28;3284:8;3265:18;:28::i;:::-;3236:57;;;;3315:5;3307:46;;;;-1:-1:-1::0;;;3307:46:117::1;;;;;;;;;;;;3393:5:::0;-1:-1:-1;3424:9:117::1;::::0;-1:-1:-1;3419:4367:117::1;3443:6;:13;3439:1;:17;3419:4367;;;3516:6;3523:1;3516:9;;;;;;;;:::i;:::-;;;;;;;:23;;;:30;3485:6;3492:1;3485:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;:61;3477:98;;;;-1:-1:-1::0;;;3477:98:117::1;;;;;;;;;;;;4028:30;4061:6;4068:1;4061:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;:21;4144:14;;::::1;::::0;4118:15;;-1:-1:-1;;;;;4104:30:117::1;4061:21;4104:30:::0;;;:13:::1;:30:::0;;;;;;;4061:21;;-1:-1:-1;4104:55:117::1;::::0;::::1;::::0;;::::1;::::0;:39:::1;:55;:::i;:::-;4096:86;;;;-1:-1:-1::0;;;4096:86:117::1;;;;;;;;;;;;4197:25;4225:42;4245:8;4255:11;4225:19;:42::i;:::-;4197:70:::0;-1:-1:-1;4287:9:117::1;4282:3494;4306:6;4313:1;4306:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;4302:1;:31;4282:3494;;;4358:18;4379:6;4386:1;4379:9;;;;;;;;:::i;:::-;;;;;;;:20;;;4400:1;4379:23;;;;;;;;:::i;:::-;;;;;;;4358:44;;4697:61;4721:8;4731;4741:16;4697:23;:61::i;:::-;4778:24;4804:28;4856:60;4878:8;4888:17;:11;:15;:17::i;4856:60::-;4777:139;;;;4942:10;:22;;;:27;;4968:1;4942:27;4934:66;;;;-1:-1:-1::0;;;4934:66:117::1;;;;;;;;;;;;5153:16;5172:79;5195:11;5208:8;5218:10;5230:20;5172:22;:79::i;:::-;5153:98;;5351:67;5362:10;:27;;;5391:6;5398:1;5391:9;;;;;;;;:::i;:::-;;;;;;;:23;;;5415:1;5391:26;;;;;;;;:::i;:::-;;;;;;;5351:10;:67::i;:::-;5326:92;;:22;::::0;::::1;:92:::0;;;5470:1:::1;5444:27:::0;5436:53:::1;;;;-1:-1:-1::0;;;5436:53:117::1;;;;;;;;;;;;5590:1;5565:10;:22;;;:26;;;5561:1725;;;5619:11;5615:1105;;;5853:65;5900:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;5853:27:117;;::::1;;::::0;;;:17:::1;:27;::::0;;;;;;;:37;;::::1;::::0;;;;;;;2195:10:84;;-1:-1:-1;;;2195:10:84;;;;;;2176:16;2215:22;;;:11;;;;:22;;;;;;:30;;;;2279:26;;-1:-1:-1;;;;;2279:26:84;;;2292:13;;;;2279:26;;;;;2096:226;5853:65:117::1;6195:41;6218:18;6202:12;6195:41;:::i;:::-;:45;::::0;6239:1:::1;6195:45;:::i;:::-;6170:70;;:22;::::0;::::1;:70:::0;5561:1725:::1;;5615:1105;6431:60;6442:4;:24;;;6468:10;:22;;;6431:10;:60::i;:::-;-1:-1:-1::0;;;;;6404:87:117::1;:24;::::0;::::1;:87:::0;6548:9;;:6;;6555:1;;6548:9;::::1;;;;;:::i;:::-;;;;;;;:23;;;6572:1;6548:26;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;6518:56:117::1;::::0;;:27:::1;6600:22:::0;;::::1;:26:::0;6652:45:::1;6684:12;6652:45;:22;::::0;::::1;:45:::0;5561:1725:::1;;;6773:1;6748:10;:22;;;:26;;;6744:542;;;7012:60;7023:4;:24;;;7049:10;:22;;;7012:10;:60::i;:::-;-1:-1:-1::0;;;;;6985:87:117;;::::1;:24;::::0;::::1;:87:::0;;;7130:17;;7102:45;;::::1;-1:-1:-1::0;7102:45:117::1;7094:79;;;;-1:-1:-1::0;;;7094:79:117::1;;;;;;;;;;;;7221:46;7244:23:::0;7228:12:::1;7221:46;:::i;:::-;7196:71;;:22;::::0;::::1;:71:::0;6744:542:::1;7339:78;7361:8;7371:17;:11;:15;:17::i;:::-;7390:8;7400:4;7406:10;7339:21;:78::i;:::-;7504:257;7543:8;7573:11;7606:8;7636:63;7647:10;:27;;;7676:10;:22;;;7636:10;:63::i;:::-;7721:10;:22;;;7504:257;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;4335:3:117::1;::::0;;::::1;::::0;-1:-1:-1;4282:3494:117::1;::::0;-1:-1:-1;4282:3494:117::1;;-1:-1:-1::0;;;3458:3:117::1;;3419:4367;;37760:165:::0;-1:-1:-1;;;;;37869:30:117;;;37844:6;37869:30;;;:20;:30;;;;;;;;:40;;;;;;;;;;;:49;;:47;:49::i;12200:238::-;12294:3;713:22:156;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:156;;;;;;;;;;;;-1:-1:-1;;;;;12314:27:117;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;12309:68;;-1:-1:-1::0;;;;;12343:27:117;::::1;;::::0;;;:22:::1;:27;::::0;;;;:34;;-1:-1:-1;;12343:34:117::1;12373:4;12343:34;::::0;;12309:68:::1;12414:3;-1:-1:-1::0;;;;;12392:39:117::1;;12419:11;;12392:39;;;;;;;:::i;:::-;;;;;;;;12200:238:::0;;;;:::o;8350:1364::-;1276:1:118;2960:30:159;2984:5;2960:23;:30::i;:::-;8548:8:117::1;713:22:156;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:156::1;;;;;;;;;;;;8625:31:117::2;::::0;-1:-1:-1;;;8625:31:117;;-1:-1:-1;;;;;1976:32:274;;;8625:31:117::2;::::0;::::2;1958:51:274::0;8625:10:117::2;:21;::::0;::::2;::::0;1931:18:274;;8625:31:117::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8617:59;;;;-1:-1:-1::0;;;8617:59:117::2;;;;;;;;;;;;8692:9;8687:814;8711:21;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;:28;;8707:1;:32;8687:814;;;8889:49;::::0;;;;::::2;::::0;;;8856:30:::2;::::0;8889:49;8901:10:::2;;::::0;::::2;:6:::0;:10:::2;:::i;:::-;-1:-1:-1::0;;;;;8889:49:117::2;;;;;8913:6;:21;;;;;;;;:::i;:::-;8935:1;8913:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8889:49;::::0;;::::2;::::0;;;9000:14:::2;::::0;;::::2;::::0;8974:15;;-1:-1:-1;;;;;8960:30:117::2;;::::0;;;:13:::2;:30:::0;;;;;;;8856:82;;-1:-1:-1;8960:55:117::2;::::0;:30;:55;;::::2;::::0;:39:::2;:55;:::i;:::-;8952:86;;;;-1:-1:-1::0;;;8952:86:117::2;;;;;;;;;;;;9061:42;9081:8;9091:11;9061:19;:42::i;:::-;9060:43;9052:74;;;;-1:-1:-1::0;;;9052:74:117::2;;;;;;;;;;;;9185:47;9214:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;9185:24:117;::::2;;::::0;;;:14:::2;:24;::::0;;;;;:28:::2;:47::i;:::-;;9246:52;9289:8;9246:19;:38;9266:17;:11;:15;:17::i;:::-;9246:38;;;;;;;;;;;:42;;:52;;;;:::i;:::-;;9344:8;-1:-1:-1::0;;;;;9317:49:117::2;;9354:11;9317:49;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;9425:28:117;::::2;;::::0;;;:18:::2;:28;::::0;;;;9486:4:::2;::::0;9454:17:::2;:11:::0;:15:::2;:17::i;:::-;9425:47:::0;;::::2;::::0;::::2;::::0;;;;;;-1:-1:-1;9425:47:117;:65;;-1:-1:-1;;9425:65:117::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;;8741:3:117::2;8687:814;;;-1:-1:-1::0;9605:27:117::2;9621:10;;::::0;::::2;:6:::0;:10:::2;:::i;9605:27::-;-1:-1:-1::0;;;;;9605:44:117::2;;9650:8:::0;9660:10:::2;;::::0;::::2;:6:::0;:10:::2;:::i;:::-;9672:21;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;9695:11;;::::0;::::2;:6:::0;:11:::2;:::i;:::-;9605:102;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3000:1:159::1;8350:1364:117::0;;;:::o;40998:173::-;41091:7;41117:47;:19;:38;41137:17;:11;:15;:17::i;:::-;41117:38;;;;;;;;;;;:45;:47::i;14078:648::-;14239:3;713:22:156;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:156;;;;;;;;;;;;14287:31:117::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;14287:31:117;::::1;::::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;14254:30:::1;14336:18:::0;;;:13:::1;:18:::0;;;;;;14287:31;;14336:43:::1;::::0;:18;:27:::1;:43;:::i;:::-;14328:74;;;;-1:-1:-1::0;;;14328:74:117::1;;;;;;;;;;;;14412:22;14437:17;:11;:15;:17::i;:::-;14412:42:::0;-1:-1:-1;14469:9:117::1;14464:256;14484:21:::0;;::::1;14464:256;;;14534:69;14588:10;;14599:1;14588:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;14534:38;::::0;;;:22:::1;:38;::::0;;;;;:45:::1;:69::i;:::-;14526:106;;;;-1:-1:-1::0;;;14526:106:117::1;;;;;;;;;;;;14651:58;14682:11;14695:10;;14706:1;14695:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;14651:58;;;;;;;:::i;:::-;;;;;;;;14507:3;;14464:256;;39321:495:::0;-1:-1:-1;;;;;39460:30:117;;39402:4;39460:30;;;:20;:30;;;;;;;;39426:64;;;;;;;;;;;;;;;;;-1:-1:-1;;;39426:64:117;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39426:64:117;;;;;;;;;;39402:4;;39426:64;;;;39643:21;;;;:57;;;39684:4;:16;;;39668:32;;:12;:32;;39643:57;39639:139;;;-1:-1:-1;;39724:17:117;;;;39763:4;39639:139;39796:5;39803;;-1:-1:-1;39321:495:117;-1:-1:-1;;;39321:495:117:o;32535:139::-;-1:-1:-1;;;;;32640:18:117;;32614:7;32640:18;;;:13;:18;;;;;:27;;:25;:27::i;33174:377::-;-1:-1:-1;;;;;33357:29:117;;33331:23;33357:29;;;:19;:29;;;;;33301:18;;33331:23;33357:57;;33331:23;33387:17;:11;:15;:17::i;11751:404::-;11836:3;713:22:156;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:156;;;;;;;;;;;;12001:26:117::1;::::0;-1:-1:-1;;;12001:26:117;;-1:-1:-1;;;;;1976:32:274;;;12001:26:117::1;::::0;::::1;1958:51:274::0;12001:21:117;::::1;::::0;::::1;::::0;1931:18:274;;12001:26:117::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11993:58;;;;-1:-1:-1::0;;;11993:58:117::1;;;;;;;;;;;;-1:-1:-1::0;;;;;12061:18:117;;::::1;;::::0;;;:13:::1;:18;::::0;;;;:30;;-1:-1:-1;;;;;;12061:30:117::1;::::0;;::::1;::::0;;;::::1;::::0;;12106:42:::1;12061:18:::0;12127:20:::1;12061:18:::0;12127:15:::1;:20::i;:::-;12106:42;::::0;;-1:-1:-1;;;;;34916:32:274;;;34898:51;;34985:32;;;;34980:2;34965:18;;34958:60;34871:18;12106:42:117::1;;;;;;;;11751:404:::0;;;:::o;44617:840::-;44707:4;45078:35;45116:27;45134:8;45116:17;:27::i;:::-;45078:65;;45153:34;45190:26;45207:8;45190:16;:26::i;:::-;45153:63;;45343:52;45370:8;45380:14;45343:26;:52::i;:::-;:107;;;;45399:51;45426:8;45436:13;45399:26;:51::i;44177:197::-;44281:4;597:42:118;44304:39:117;44331:11;44304:26;:39::i;:::-;-1:-1:-1;;;;;44304:63:117;;;;44177:197;-1:-1:-1;;44177:197:117:o;35168:236::-;35261:6;35280:29;35314:44;35339:8;35349;35314:24;:44::i;4320:454:159:-;2558:20;:18;:20::i;:::-;4438:7:::1;::::0;4632:20;::::1;4609:16:::0;::::1;4583:43:::0;::::1;4582:71;4574:106;;;;-1:-1:-1::0;;;4574:106:159::1;;;;;;;;;;;;4690:7;:25:::0;;;4730:37:::1;::::0;16991:25:274;;;4739:10:159::1;::::0;4730:37:::1;::::0;16979:2:274;16964:18;4730:37:159::1;;;;;;;4398:376;4320:454:::0;:::o;1780:138:117:-;3279:19:27;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:27;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:27;1713:19:35;:23;;;3387:66:27;;-1:-1:-1;3436:12:27;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:27;;35231:2:274;3325:201:27;;;35213:21:274;35270:2;35250:18;;;35243:30;35309:34;35289:18;;;35282:62;-1:-1:-1;;;35360:18:274;;;35353:44;35414:19;;3325:201:27;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:27;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:27;;;;;3562:65;1874:37:117::1;1891:19;1874:16;:37::i;:::-;3651:14:27::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:27;;;3721:14;;-1:-1:-1;35596:36:274;;3721:14:27;;35584:2:274;35569:18;3721:14:27;;;;;;;3269:483;1780:138:117;:::o;399:154:152:-;472:7;523:2;:6;;;538:2;:5;;;531:13;;506:39;;;;;;;;35818:2:274;35814:15;;;;-1:-1:-1;;35810:53:274;35798:66;;35920:3;35898:16;-1:-1:-1;;;;;;35894:59:274;35889:2;35880:12;;35873:81;35979:2;35970:12;;35643:345;506:39:152;;;;;;;;;;;;;498:48;;;:::i;25585:1185:117:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25808:175:117;;;;;;;-1:-1:-1;;;;;25849:30:117;;;;;:20;:30;;;;;:40;;;;;;;;;;;-1:-1:-1;;;25808:175:117;;25849:49;;:47;:49::i;:::-;-1:-1:-1;;;;;25808:175:117;;;;;-1:-1:-1;;;;;25933:29:117;;;;;;;:19;25808:175;25933:29;;;;;;;:39;;;;;;;;;;;;;;;25808:175;;;;;;;26025:21;;;:11;:21;;;;;:37;;;;;;;;:47;;;;;;;;;;25994:78;;;;;;;;;;;;;;-1:-1:-1;;;25994:78:117;;;;;;;;;;;-1:-1:-1;;;25994:78:117;;;;;;;;;;;25781:202;;-1:-1:-1;26157:12:117;:37;26153:93;;;26218:4;;-1:-1:-1;26224:10:117;-1:-1:-1;26210:25:117;;26153:93;26360:63;26371:10;:27;;;26400:10;:22;;;26360:10;:63::i;:::-;-1:-1:-1;;;;;26330:93:117;;;26515:22;;;;26330:27;26515:26;;;;;;26511:144;;;26584:60;26595:4;:24;;;26621:10;:22;;;26584:10;:60::i;:::-;-1:-1:-1;;;;;26557:87:117;:24;;;:87;26511:144;26690:1;26665:22;;;:26;;;26701:22;;;:26;26746:4;;-1:-1:-1;26665:10:117;-1:-1:-1;25585:1185:117;;;;;;;:::o;3014:117:159:-;3074:35;;-1:-1:-1;;;3074:35:159;;3098:10;3074:35;;;1958:51:274;3074:14:159;-1:-1:-1;;;;;3074:23:159;;;;1931:18:274;;3074:35:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3066:58;;;;-1:-1:-1;;;3066:58:159;;;;;;;;;;;5200:157;5281:7;:22;;;5318:32;;16991:25:274;;;5325:10:159;;5318:32;;16979:2:274;16964:18;5318:32:159;;;;;;;5200:157;:::o;6639:115:86:-;6702:7;6728:19;6736:3;4545:18;;4463:107;7096:129;7170:7;7196:22;7200:3;7212:5;7196:3;:22::i;11306:144::-;11383:4;4351:19;;;:12;;;:19;;;;;;:24;;11406:37;4255:127;1080:175:156;1175:73;;-1:-1:-1;;;1175:73:156;;-1:-1:-1;;;;;36542:32:274;;;1175:73:156;;;36524:51:274;1213:10:156;36591:18:274;;;36584:60;1233:4:156;36660:18:274;;;36653:60;1152:4:156;1240:7;;-1:-1:-1;;;;;;1240:7:156;36729:18:274;;;36722:61;1152:4:156;1175:20;:28;;;;;;36496:19:274;;1175:73:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;20923:890:117:-;21079:30;21112:38;;;;;;;;21124:3;-1:-1:-1;;;;;21112:38:117;;;;;21129:6;:20;;;;;;;;;;:::i;:::-;21112:38;;;;;21079:71;;21241:38;21264:11;:14;;;21241:38;;:13;:18;21255:3;-1:-1:-1;;;;;21241:18:117;-1:-1:-1;;;;;21241:18:117;;;;;;;;;;;;:22;;:38;;;;:::i;:::-;21233:69;;;;-1:-1:-1;;;21233:69:117;;;;;;;;;;;;21317:31;21336:11;21317:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;21383:47:117;;597:42:118;21383:47:117;;;;21441:198;;21524:23;21477:25;:44;21503:17;:11;:15;:17::i;:::-;21477:44;;;;;;;;;;;;:70;;;;;-1:-1:-1;;;;;21477:70:117;;;;;-1:-1:-1;;;;;21477:70:117;;;;;;21566:62;21591:11;21604:23;21566:62;;;;;;;:::i;:::-;;;;;;;;21441:198;21654:9;21649:158;21673:17;;;;:6;:17;:::i;:::-;:24;;21669:1;:28;21649:158;;;21718:78;21744:11;21757:17;;;;:6;:17;:::i;:::-;21775:1;21757:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;21779:16;21718:25;:78::i;:::-;21699:3;;21649:158;;29084:1907;29291:33;29369:9;:16;-1:-1:-1;;;;;29353:33:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29336:50;;29396:33;29432:10;-1:-1:-1;;;;;29432:29:117;;29462:9;29473:10;29432:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29432:52:117;;;;;;;;;;;;:::i;:::-;29396:88;-1:-1:-1;29500:9:117;29495:1490;29519:9;:16;29515:1;:20;29495:1490;;;29556:16;29575:9;29585:1;29575:12;;;;;;;;:::i;:::-;;;;;;;29556:31;;29636:10;:17;-1:-1:-1;;;;;29622:32:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29622:32:117;;29602:14;29617:1;29602:17;;;;;;;;:::i;:::-;;;;;;;;;;:52;29674:9;29669:1306;29693:10;:17;29689:1;:21;29669:1306;;;29735:18;29756:10;29767:1;29756:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;30030:30:117;;;30008:19;30030:30;;;:20;:30;;;;;;:40;;;;;;;;;;;29756:13;;-1:-1:-1;30030:49:117;;:47;:49::i;:::-;30008:71;;30101:12;-1:-1:-1;;;;;30101:17:117;30117:1;30101:17;30097:72;;30142:8;;;;30097:72;30187:23;30213:46;30227:8;30237:11;30250:8;30213:13;:46::i;:::-;30187:72;;30614:11;30593:32;;:5;:17;;;:32;;;;:57;;;;;30649:1;30629:5;:17;;;:21;;;30593:57;30589:182;;;30699:53;30710:5;:22;;;30734:5;:17;;;30699:10;:53::i;:::-;-1:-1:-1;;;;;30674:78:117;;;30589:182;30827:22;;30789:27;;30819:52;;-1:-1:-1;;;;;30819:31:117;;;;:52;;:38;:52::i;:::-;30789:82;;30912:48;30940:19;30912:14;30927:1;30912:17;;;;;;;;:::i;:::-;;;;;;;30930:1;30912:20;;;;;;;;:::i;:::-;;;;;;;:27;;:48;;;;:::i;:::-;30889:14;30904:1;30889:17;;;;;;;;:::i;:::-;;;;;;;30907:1;30889:20;;;;;;;;:::i;:::-;;;;;;:71;;;;;29717:1258;;;;29669:1306;29712:3;;29669:1306;;;-1:-1:-1;;29537:3:117;;29495:1490;;;;29326:1665;29084:1907;;;;;;:::o;3380:133:159:-;5065:7;;5036:1;:10;;;;5065:14;;;5064:24;3464:42;;;;-1:-1:-1;;;3464:42:159;;;;;;;;;;;;3380:133;:::o;15233:4301:117:-;15361:15;15378:23;15361:15;15457:17;;;;:6;:17;:::i;:::-;:24;;-1:-1:-1;;;;;15443:39:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15443:39:117;-1:-1:-1;15413:69:117;-1:-1:-1;15515:17:117;;;;:6;:17;:::i;:::-;:24;;-1:-1:-1;;;;;15501:39:117;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15501:39:117;;15492:48;;15622:9;:28;15632:17;:11;:15;:17::i;:::-;15622:28;;;;;;;;;;;;15620:30;;;;;:::i;:::-;;;;;-1:-1:-1;15620:30:117;-1:-1:-1;15746:9:117;15741:3675;15765:17;;;;:6;:17;:::i;:::-;:24;;15761:1;:28;15741:3675;;;15897:6;;;:93;;-1:-1:-1;15964:17:117;;;;:6;:17;:::i;:::-;15982:5;15986:1;15982;:5;:::i;:::-;15964:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15907:83:117;15923:17;;;;:6;:17;:::i;:::-;15941:1;15923:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15907:83:117;;15897:93;15872:184;;;;-1:-1:-1;;;15872:184:117;;;;;;;;;;;;16150:18;;;;:6;:18;:::i;:::-;16169:1;16150:21;;;;;;;:::i;:::-;;;;;;;16146:1;:25;:57;;;;-1:-1:-1;552:4:153;16175:18:117;;;;:6;:18;:::i;:::-;16194:1;16175:21;;;;;;;:::i;:::-;;;;;;;:28;;16146:57;16138:87;;;;-1:-1:-1;;;16138:87:117;;;;;;;;;;;;16330:81;16389:17;;;;:6;:17;:::i;:::-;16407:1;16389:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;16330:22;:41;16353:17;:11;:15;:17::i;16330:81::-;16305:164;;;;-1:-1:-1;;;16305:164:117;;;;;;;;;;;;16572:24;;16646:79;16668:15;;;;:6;:15;:::i;:::-;16685:17;:11;:15;:17::i;:::-;16704;;;;:6;:17;:::i;:::-;16722:1;16704:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;16646:21;:79::i;:::-;17032:27;;16571:154;;-1:-1:-1;16571:154:117;-1:-1:-1;;;;;;17032:32:117;:27;:32;17028:79;;17084:8;;;;17028:79;17338:23;17371:73;17422:18;;;;:6;:18;:::i;:::-;17441:1;17422:21;;;;;;;:::i;:::-;17379:27;;-1:-1:-1;;;;;17371:36:117;;17422:21;;;;;;;-1:-1:-1;17371:50:117;:73::i;:::-;17485:17;;17338:107;;-1:-1:-1;17532:51:117;-1:-1:-1;;;;;17532:25:117;;;;:51;;:32;:51::i;:::-;17516:10;17527:1;17516:13;;;;;;;;:::i;:::-;;;;;;:67;;;;;17629:16;17598:10;:27;;:47;;;;;;;:::i;:::-;-1:-1:-1;;;;;17598:47:117;;;-1:-1:-1;17659:37:117;;17680:16;;17659:4;;:37;;17680:16;;17659:37;:::i;:::-;-1:-1:-1;;;;;17659:37:117;;;-1:-1:-1;17710:24:117;;;:44;;17738:16;;17710:24;:44;;17738:16;;17710:44;:::i;:::-;-1:-1:-1;;;;;17710:44:117;;;-1:-1:-1;17969:22:117;;;;17994:1;17969:26;;;;;;17965:570;;;18015:21;18066:78;18122:18;;;;:6;:18;:::i;:::-;18141:1;18122:21;;;;;;;:::i;:::-;;;;;;;18083:10;:22;;;18082:23;;;:::i;:::-;-1:-1:-1;;;;;18066:41:117;;:55;:78::i;:::-;18015:130;;18204:14;-1:-1:-1;;;;;18196:23:117;18163:10;:22;;:57;;;;;;;:::i;:::-;;;;;-1:-1:-1;18244:276:117;18283:15;;;;:6;:15;:::i;:::-;18320:11;18353:17;;;;:6;:17;:::i;:::-;18371:1;18353:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18395:63;18406:10;:27;;;18435:10;:22;;;18395:10;:63::i;:::-;18480:10;:22;;;18244:276;;;;;;;;;;:::i;:::-;;;;;;;;17997:538;17965:570;18580:97;18602:15;;;;:6;:15;:::i;:::-;18619:17;:11;:15;:17::i;:::-;18638;;;;:6;:17;:::i;:::-;18656:1;18638:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18660:4;18666:10;18580:21;:97::i;:::-;18753:150;18788:15;;;;:6;:15;:::i;:::-;18805:11;18818:17;;;;:6;:17;:::i;:::-;18836:1;18818:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18840:27;;18753:150;;;;;;;18840:27;18876:12;;18753:150;:::i;:::-;;;;;;;;18918:77;18938:15;;;;:6;:15;:::i;:::-;18955:17;;;;:6;:17;:::i;:::-;18973:1;18955:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18977:17;;18918:19;:77::i;:::-;-1:-1:-1;;;;;19088:10:117;:30;;19147:15;;;;:6;:15;:::i;:::-;19193:11;19231:7;19266:6;:17;;;;;;;;:::i;:::-;19284:1;19266:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;19373:17;;19088:317;;-1:-1:-1;;;;;;19088:317:117;;;;;;;;;;;;;19322:16;;19088:317;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19076:6;19083:1;19076:9;;;;;;;;:::i;:::-;;;;;;:329;;;;;15796:3620;;;;15741:3675;15791:3;;15741:3675;;;-1:-1:-1;19431:96:117;19447:15;;;;:6;:15;:::i;:::-;19464:11;19477:17;;;;:6;:17;:::i;:::-;19496:10;19508:18;;;;:6;:18;:::i;:::-;19431:96;;;;;;;;;;;;:::i;:::-;;;;;;;;15403:4131;15233:4301;;;;;:::o;10259:300:86:-;10322:16;10350:22;10375:19;10383:3;10375:7;:19::i;22119:1209:117:-;-1:-1:-1;;;;;22273:27:117;;;22228:18;22273:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;5684:12:84;;;;;-1:-1:-1;;;5663:10:84;;;;;5656:41;22330:992:117;22346:1;22337:6;:10;:37;;;;;22364:10;22351:23;;:10;:23;22337:37;22330:992;;;-1:-1:-1;;;;;22415:27:117;;;22390:22;22415:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:45;;:43;:45::i;:::-;22390:70;;22475:24;22501:28;22549:57;22571:8;22581:14;22597:8;22549:21;:57::i;:::-;22474:132;;;;22807:10;:22;;;22792:37;;:12;:37;22788:81;;;22849:5;;;;;22788:81;23071:75;23093:8;23103:14;23119:8;23129:4;23135:10;23071:21;:75::i;:::-;-1:-1:-1;;;;;23215:27:117;;;;;;;:17;:27;;;;;;;;:37;;;;;;;;;:48;;:46;:48::i;:::-;-1:-1:-1;23277:12:117;;;:::i;:::-;;-1:-1:-1;23303:8:117;;;:::i;:::-;;;22376:946;;;22330:992;;19810:524;20044:16;20040:108;;;-1:-1:-1;;;;;;;20084:33:117;;;20076:61;;;;-1:-1:-1;;;20076:61:117;;;;;;;;;;;;20166:64;20220:8;20166:22;:41;20189:17;:11;:15;:17::i;20166:64::-;20158:105;;;;-1:-1:-1;;;20158:105:117;;;;;;;;;;;;20278:49;20305:11;20318:8;20278:49;;;;;;;:::i;2081:405:38:-;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:38;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:38;;;-1:-1:-1;2438:4:38;2429:14;;2422:28;;;;-1:-1:-1;2393:16:38;2081:405::o;23654:619:117:-;-1:-1:-1;;;;;23768:30:117;;23734:31;23768:30;;;:20;:30;;;;;;;;;23734:64;;;;;;;;;;;;;;;;-1:-1:-1;;;23734:64:117;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;23734:64:117;;;;;;;;;;23884:21;;;;:57;;;23925:4;:16;;;23909:32;;:12;:32;;23884:57;23880:149;;;23970:17;;;;23957:30;;;;24014:4;24001:10;;;:17;23880:149;24039:25;;;:17;;;:25;24093:53;24116:30;24100:12;24093:53;:::i;:::-;:57;;24149:1;24093:57;:::i;:::-;24074:76;;;;:16;;;;:76;;;-1:-1:-1;;;;;24161:30:117;;;;;;:20;:30;;;;;;;;;:37;;;;;;;;;;;;;;;;;-1:-1:-1;;24161:37:117;;;;;;;-1:-1:-1;;;24161:37:117;;;;;;;;-1:-1:-1;;24161:37:117;;;;;;;;;-1:-1:-1;;24161:37:117;;;;;-1:-1:-1;;;24161:37:117;;;;;;;;;24213:53;;43606:51:274;;;43693:23;;;43673:18;;;43666:51;;;;43733:18;;;43726:51;;;;24213:53:117;;43579:18:274;24213:53:117;43408:375:274;8860:165:86;-1:-1:-1;;;;;8993:23:86;;8940:4;4351:19;;;:12;;;:19;;;;;;:24;;8963:55;4255:127;35911:1804:117;-1:-1:-1;;;;;36430:29:117;;;36028;36430;;;:19;:29;;;;;;;;:39;;;;;;;;;;;;;36497:27;;;:17;:27;;;;;:37;;;;;;;;;5684:12:84;-1:-1:-1;;;;;36430:39:117;;;;36028:29;5684:12:84;;;;-1:-1:-1;;;5663:10:84;;;;;5656:41;36028:29:117;36553:836;36577:6;36573:1;:10;36553:836;;;-1:-1:-1;;;;;36629:27:117;;;36604:22;36629:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:43;;36670:1;36629:40;:43::i;:::-;-1:-1:-1;;;;;36717:21:117;;;36686:28;36717:21;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;36686:78;;;;;;;;;-1:-1:-1;;;;;36686:78:117;;;;-1:-1:-1;;;36686:78:117;;;;;;;;;;;-1:-1:-1;;;36686:78:117;;;;;;;;;;;36717:37;;-1:-1:-1;36951:12:117;:37;36947:81;;;37008:5;;;;36947:81;37320:58;37331:22;37355:10;:22;;;37320:10;:58::i;:::-;37295:83;;36590:799;;36585:3;;;;;36553:836;;;-1:-1:-1;;;;;;37568:30:117;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;37620:22;;37568:49;;:47;:49::i;:::-;:74;;;;:::i;:::-;37542:100;;37652:56;35911:1804;;;;;:::o;6210:129:86:-;6283:4;6306:26;6314:3;6326:5;6306:7;:26::i;8623:156::-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:86;;8719:7;:53::i;2408:167:154:-;2496:6;2528:39;2541:4;2558:3;552:4:153;2528:12:154;:39::i;24376:719:117:-;24578:4;24757:69;24816:8;24757:22;:41;24780:17;:11;:15;:17::i;24757:69::-;:205;;;;;24942:20;24757:205;:331;;;;-1:-1:-1;;25056:27:117;;-1:-1:-1;;;;;25056:32:117;;;;24634:454;-1:-1:-1;;;24376:719:117:o;31289:186::-;31378:6;31403:65;-1:-1:-1;;;;;31442:25:117;;;;31410:21;;31403:65;:::i;31538:145::-;31601:6;31626:50;31641:22;31662:1;-1:-1:-1;;;;;31648:10:117;;31641:22;:::i;:::-;31634:30;;31626:48;:50::i;26776:1893::-;27179:24;;;;;-1:-1:-1;;;;;27136:29:117;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;-1:-1:-1;;;;;27136:39:117;;;:67;;;27132:255;;27261:24;;;;;;-1:-1:-1;;;;;27219:29:117;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;:66;;-1:-1:-1;;27219:66:117;-1:-1:-1;;;;;27219:66:117;;;;;;27351:24;;27304:72;;44261:51:274;;;44328:18;;;44321:60;;;;44417:31;;44397:18;;;44390:59;27304:72:117;;44249:2:274;44234:18;27304:72:117;;;;;;;27132:255;-1:-1:-1;;;;;27712:21:117;;;;;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;:60;;;;;;;;;;;;;;-1:-1:-1;;;27712:60:117;-1:-1:-1;;;;;;;;;27712:60:117;;-1:-1:-1;;;27712:60:117;-1:-1:-1;;;;;;27712:60:117;;;-1:-1:-1;;;;;27712:60:117;;;;;;;;;;;;;;;;;;;;27894:27;27890:773;;-1:-1:-1;;;;;28081:29:117;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:68;;28139:8;28081:49;:68::i;:::-;-1:-1:-1;;;;;;28163:23:117;;;;;;:13;:23;;;;;:43;;28191:14;28163:27;:43::i;:::-;;27890:773;;;28227:27;;-1:-1:-1;;;;;28227:32:117;:27;:32;28223:440;;-1:-1:-1;;;;;28423:29:117;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:71;;28484:8;28423:52;:71::i;:::-;-1:-1:-1;;;;;;28513:29:117;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:54;;:52;:54::i;:::-;28571:1;28513:59;28509:144;;-1:-1:-1;;;;;28592:23:117;;;;;;:13;:23;;;;;:46;;28623:14;28592:30;:46::i;3045:154:154:-;3130:6;3162:29;3170:4;552::153;3162:7:154;:29::i;5919:123:86:-;5989:4;6012:23;6017:3;6029:5;6012:4;:23::i;8305:150::-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:86;;8398:4;:50::i;32017:396:117:-;32151:4;;32167:218;32191:12;:19;32187:1;:23;32167:218;;;32235:46;32255:8;32265:12;32278:1;32265:15;;;;;;;;:::i;:::-;;;;;;;32235:19;:46::i;:::-;:94;;;;;32285:44;32313:12;32326:1;32313:15;;;;;;;;:::i;:::-;;;;;;;32285:27;:44::i;:::-;32231:144;;;32356:4;32349:11;;;;;32231:144;32212:3;;32167:218;;;-1:-1:-1;32401:5:117;;32017:396;-1:-1:-1;;;32017:396:117:o;3137:125:159:-;3213:14;-1:-1:-1;;;;;3213:23:159;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3199:39:159;:10;-1:-1:-1;;;;;3199:39:159;;3191:64;;;;-1:-1:-1;;;3191:64:159;;;;;;;;;;;4912:118:86;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;1680:110:153:-;1741:7;1767:16;:1;552:4;1781:1;1767:8;:16::i;1564:110::-;1625:7;1651:16;:1;1660;552:4;1651:8;:16::i;2120:135::-;2188:7;2214:34;:1;2223;552:4;2231:16;2214:8;:34::i;30997:286:117:-;-1:-1:-1;;;;;31107:30:117;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;:98;;31166:12;31188:15;31107:45;:98::i;:::-;31220:56;;;-1:-1:-1;;;;;44279:32:274;;;44261:51;;44348:32;;44343:2;44328:18;;44321:60;-1:-1:-1;;;;;44417:31:274;;44397:18;;;44390:59;;;;31220:56:117;;44249:2:274;44234:18;31220:56:117;44042:413:274;5570:109:86;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;3759:212:84:-;3825:13;3854:12;3860:5;5888:12;;;;;-1:-1:-1;;;5874:10:84;;;;;:26;;;5785:122;3854:12;3850:32;;;3875:7;;-1:-1:-1;;;3875:7:84;;;;;;;;;;;3850:32;-1:-1:-1;3912:12:84;;;;3892:17;3941:23;;;3912:12;3941:11;;;:23;;;;;;;3759:212::o;3295:324::-;3359:13;3388:12;3394:5;5888:12;;;;;-1:-1:-1;;;5874:10:84;;;;;:26;;;5785:122;3388:12;3384:32;;;3409:7;;-1:-1:-1;;;3409:7:84;;;;;;;;;;;3384:32;-1:-1:-1;3446:12:84;;;;3426:17;3476:23;;;3446:12;3476:11;;;:23;;;;;;;3509:30;;;3573:29;;-1:-1:-1;;3573:29:84;3588:14;;-1:-1:-1;;;;;3573:29:84;;;;;;;;3476:23;3295:324::o;2558:245:38:-;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:38;;;;;;;;;;;4606:324:84;4684:13;4758:10;4771:66;4812:24;4830:5;4812:17;:24::i;:::-;4796:12;;4789:47;;;4796:12;;4789:47;:::i;:::-;4771:17;:66::i;:::-;4858:10;;4758:79;;-1:-1:-1;;;;4858:10:84;;;;;;4851:17;;;;;4847:43;;4877:13;;-1:-1:-1;;;4877:13:84;;;;;;;;;;;4847:43;4907:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4907:16:84;;;;;4606:324::o;2786:1388:86:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:86;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;4889:343:154;5060:16;;5027:7;;;5100:42;5060:9;5130:3;5027:7;5060:16;5100:18;:42::i;:::-;5086:56;-1:-1:-1;5159:8:154;;:66;;5185:33;5199:9;5210:7;5216:1;5210:3;:7;:::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;;6703:28;;6514:233;5185:33;:40;-1:-1:-1;;;5185:40:154;;-1:-1:-1;;;;;5185:40:154;5159:66;;;-1:-1:-1;5170:12:154;;5152:73;-1:-1:-1;;;;4889:343:154:o;13216:187:82:-;13272:6;-1:-1:-1;;;;;13298:25:82;;;13290:76;;;;-1:-1:-1;;;13290:76:82;;45271:2:274;13290:76:82;;;45253:21:274;45310:2;45290:18;;;45283:30;45349:34;45329:18;;;45322:62;-1:-1:-1;;;45400:18:274;;;45393:36;45446:19;;13290:76:82;45069:402:274;13290:76:82;-1:-1:-1;13390:5:82;13216:187::o;5358:230:154:-;5482:16;;5449:7;;5515:8;;:66;;5541:33;5555:9;5566:7;5572:1;5566:3;:7;:::i;5541:33::-;:40;-1:-1:-1;;;5541:40:154;;-1:-1:-1;;;;;5541:40:154;5515:66;;;-1:-1:-1;5526:12:154;;5358:230;-1:-1:-1;;5358:230:154:o;2214:404:86:-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:86;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:86;2589:12;;1667:4213:81;1749:14;;;-1:-1:-1;;2286:1:81;2283;2276:20;2329:1;2326;2322:9;2313:18;;2384:5;2380:2;2377:13;2369:5;2365:2;2361:14;2357:34;2348:43;;;2486:5;2495:1;2486:10;2482:368;;2824:11;2816:5;:19;;;;;:::i;:::-;;2809:26;;;;;;2482:368;2974:5;2960:11;:19;2952:53;;;;-1:-1:-1;;;2952:53:81;;45810:2:274;2952:53:81;;;45792:21:274;45849:2;45829:18;;;45822:30;-1:-1:-1;;;45868:18:274;;;45861:51;45929:18;;2952:53:81;45608:345:274;2952:53:81;3261:17;3396:11;3393:1;3390;3383:25;4774:1;3944;3929:12;;:16;;3914:32;;4049:22;;;;4755:1;:15;;4754:21;;5007;;;5003:25;;4992:36;5076:21;;;5072:25;;5061:36;5146:21;;;5142:25;;5131:36;5216:21;;;5212:25;;5201:36;5286:21;;;5282:25;;5271:36;5357:21;;;5353:25;;;5342:36;;;3899:12;4294;;;4290:23;;;4286:31;;;3510:20;;;3499:32;;;4406:12;;;;3557:21;;4147:16;;;;4397:21;;;;5821:15;;;-1:-1:-1;;;;1667:4213:81:o;6012:299::-;6113:7;6132:14;6149:25;6156:1;6159;6162:11;6149:6;:25::i;:::-;6132:42;-1:-1:-1;6200:11:81;6188:8;:23;;;;;;;;:::i;:::-;;:56;;;;;6243:1;6228:11;6215:25;;;;;:::i;:::-;6225:1;6222;6215:25;:29;6188:56;6184:98;;;6260:11;6270:1;6260:11;;:::i;1700:134:154:-;1791:36;1799:4;1816:3;-1:-1:-1;;;;;1791:36:154;;:7;:36::i;:::-;1700:134;;;:::o;34781:297:82:-;34837:6;-1:-1:-1;;;;;34962:5:82;:34;;34954:87;;;;-1:-1:-1;;;34954:87:82;;46422:2:274;34954:87:82;;;46404:21:274;46461:2;46441:18;;;46434:30;46500:34;46480:18;;;46473:62;-1:-1:-1;;;46551:18:274;;;46544:38;46599:19;;34954:87:82;46220:404:274;26101:198:82;26205:5;26229:19;;;;;;26221:71;;;;-1:-1:-1;;;26221:71:82;;46831:2:274;26221:71:82;;;46813:21:274;46870:2;46850:18;;;46843:30;46909:34;46889:18;;;46882:62;-1:-1:-1;;;46960:18:274;;;46953:37;47007:19;;26221:71:82;46629:403:274;26221:71:82;26101:198;;;:::o;5932:439:154:-;6084:7;6103:241;6116:4;6110:3;:10;6103:241;;;6136:11;6150:34;6174:3;6179:4;6150:23;:34::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;6136:48;;-1:-1:-1;6202:35:154;;;;6703:28;;6202:29;;;:35;6198:136;;;6264:3;6257:10;;6198:136;;;6312:7;:3;6318:1;6312:7;:::i;:::-;6306:13;;6198:136;6122:222;6103:241;;4054:667;4155:11;;4181:7;;4177:422;;4278:20;4301:28;4315:4;4321:7;4327:1;4321:3;:7;:::i;4301:28::-;4278:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4278:51:154;;;-1:-1:-1;;;;;4278:51:154;;;;;;;-1:-1:-1;4351:16:154;;;-1:-1:-1;4351:16:154;4343:52;;;;-1:-1:-1;;;4343:52:154;;;;;;;;;;;;4471:9;;:16;;;;;;;4467:122;;4545:5;4507:28;4521:4;4527:7;4533:1;4527:3;:7;:::i;4507:28::-;:43;;-1:-1:-1;;;;;4507:43:154;;;;-1:-1:-1;;;4507:43:154;;;;;;;;;;;-1:-1:-1;;;;;4054:667:154:o;4467:122::-;4190:409;4177:422;-1:-1:-1;4677:36:154;;;;;;;;;;;;;;;-1:-1:-1;;;;;4677:36:154;;;;;;;;;;4667:47;;;;;;;-1:-1:-1;4667:47:154;;;;;;;;;;;;-1:-1:-1;;;4667:47:154;;;;;;;;;4054:667::o;816:153:44:-;878:7;951:11;961:1;952:5;;;951:11;:::i;:::-;941:21;;942:5;;;941:21;:::i;14:127:274:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:274;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:275::-;475:2;469:9;540:2;521:13;;-1:-1:-1;;517:27:274;505:40;;-1:-1:-1;;;;;560:34:274;;596:22;;;557:62;554:88;;;622:18;;:::i;:::-;658:2;651:22;404:275;;-1:-1:-1;404:275:274:o;684:131::-;-1:-1:-1;;;;;759:31:274;;749:42;;739:70;;805:1;802;795:12;820:163;887:20;;947:10;936:22;;926:33;;916:61;;973:1;970;963:12;988:578;1046:5;1094:4;1082:9;1077:3;1073:19;1069:30;1066:50;;;1112:1;1109;1102:12;1066:50;1165:4;1159:11;;;1197:17;;-1:-1:-1;;;;;1229:34:274;;1265:22;;;1226:62;1223:88;;;1291:18;;:::i;:::-;1327:4;1320:24;1362:6;-1:-1:-1;1362:6:274;1392:23;;1424:33;1392:23;1424:33;:::i;:::-;1466:23;;1522:37;1555:2;1540:18;;1522:37;:::i;:::-;1517:2;1509:6;1505:15;1498:62;;988:578;;;;:::o;1571:236::-;1660:6;1713:2;1701:9;1692:7;1688:23;1684:32;1681:52;;;1729:1;1726;1719:12;1681:52;1752:49;1793:7;1782:9;1752:49;:::i;2020:532::-;2146:6;2154;2162;2215:3;2203:9;2194:7;2190:23;2186:33;2183:53;;;2232:1;2229;2222:12;2183:53;2271:9;2258:23;2290:31;2315:5;2290:31;:::i;:::-;2340:5;-1:-1:-1;2364:58:274;2414:7;2409:2;2394:18;;2364:58;:::i;:::-;2354:68;;2474:2;2463:9;2459:18;2446:32;2487:33;2512:7;2487:33;:::i;:::-;2539:7;2529:17;;;2020:532;;;;;:::o;2827:257::-;2637:12;;-1:-1:-1;;;;;2633:37:274;2621:50;;2735:4;2724:16;;;2718:23;2714:2;2703:39;2687:14;;;2680:63;2796:4;2785:16;;;2779:23;2804:10;2775:40;2759:14;;;2752:64;3019:2;3004:18;;3031:47;2557:265;3089:371;3187:6;3195;3248:2;3236:9;3227:7;3223:23;3219:32;3216:52;;;3264:1;3261;3254:12;3216:52;3303:9;3290:23;3322:31;3347:5;3322:31;:::i;:::-;3372:5;-1:-1:-1;3396:58:274;3446:7;3441:2;3426:18;;3396:58;:::i;:::-;3386:68;;3089:371;;;;;:::o;3657:180::-;3716:6;3769:2;3757:9;3748:7;3744:23;3740:32;3737:52;;;3785:1;3782;3775:12;3737:52;-1:-1:-1;3808:23:274;;3657:180;-1:-1:-1;3657:180:274:o;3842:247::-;3901:6;3954:2;3942:9;3933:7;3929:23;3925:32;3922:52;;;3970:1;3967;3960:12;3922:52;4009:9;3996:23;4028:31;4053:5;4028:31;:::i;4094:195::-;4175:12;;-1:-1:-1;;;;;4171:38:274;4159:51;;4263:4;4252:16;;;4246:23;4271:10;4242:40;4226:14;;4219:64;4094:195::o;4294:454::-;4358:3;4396:5;4390:12;4423:6;4418:3;4411:19;4455:4;4450:3;4446:14;4439:21;;4494:4;4487:5;4483:16;4517:1;4527:196;4541:6;4538:1;4535:13;4527:196;;;4590:49;4635:3;4626:6;4620:13;4590:49;:::i;:::-;4668:4;4659:14;;;;;4708:4;4696:17;;;;;4563:1;4556:9;4527:196;;;-1:-1:-1;4739:3:274;;4294:454;-1:-1:-1;;;;4294:454:274:o;4753:332::-;4992:2;4981:9;4974:21;4955:4;5012:67;5075:2;5064:9;5060:18;5052:6;5012:67;:::i;5090:391::-;5177:8;5187:6;5241:3;5234:4;5226:6;5222:17;5218:27;5208:55;;5259:1;5256;5249:12;5208:55;-1:-1:-1;5282:20:274;;-1:-1:-1;;;;;5314:30:274;;5311:50;;;5357:1;5354;5347:12;5311:50;5394:4;5386:6;5382:17;5370:29;;5454:3;5447:4;5437:6;5434:1;5430:14;5422:6;5418:27;5414:38;5411:47;5408:67;;;5471:1;5468;5461:12;5486:632;5617:6;5625;5633;5686:2;5674:9;5665:7;5661:23;5657:32;5654:52;;;5702:1;5699;5692:12;5654:52;5741:9;5728:23;5760:31;5785:5;5760:31;:::i;:::-;5810:5;-1:-1:-1;5866:2:274;5851:18;;5838:32;-1:-1:-1;;;;;5882:30:274;;5879:50;;;5925:1;5922;5915:12;5879:50;5964:94;6050:7;6041:6;6030:9;6026:22;5964:94;:::i;:::-;5486:632;;6077:8;;-1:-1:-1;5938:120:274;;-1:-1:-1;;;;5486:632:274:o;6320:183::-;6380:4;-1:-1:-1;;;;;6405:6:274;6402:30;6399:56;;;6435:18;;:::i;:::-;-1:-1:-1;6480:1:274;6476:14;6492:4;6472:25;;6320:183::o;6508:744::-;6562:5;6615:3;6608:4;6600:6;6596:17;6592:27;6582:55;;6633:1;6630;6623:12;6582:55;6673:6;6660:20;6700:64;6716:47;6756:6;6716:47;:::i;:::-;6700:64;:::i;:::-;6788:3;6812:6;6807:3;6800:19;6844:4;6839:3;6835:14;6828:21;;6905:4;6895:6;6892:1;6888:14;6880:6;6876:27;6872:38;6858:52;;6933:3;6925:6;6922:15;6919:35;;;6950:1;6947;6940:12;6919:35;6986:4;6978:6;6974:17;7000:221;7016:6;7011:3;7008:15;7000:221;;;7098:3;7085:17;7115:31;7140:5;7115:31;:::i;:::-;7159:18;;7206:4;7197:14;;;;7033;7000:221;;;-1:-1:-1;7239:7:274;6508:744;-1:-1:-1;;;;;6508:744:274:o;7257:734::-;7433:6;7441;7449;7502:3;7490:9;7481:7;7477:23;7473:33;7470:53;;;7519:1;7516;7509:12;7470:53;7542:49;7583:7;7572:9;7542:49;:::i;:::-;7532:59;;7642:2;7631:9;7627:18;7614:32;-1:-1:-1;;;;;7661:6:274;7658:30;7655:50;;;7701:1;7698;7691:12;7655:50;7724:61;7777:7;7768:6;7757:9;7753:22;7724:61;:::i;:::-;7714:71;;;7838:2;7827:9;7823:18;7810:32;-1:-1:-1;;;;;7857:8:274;7854:32;7851:52;;;7899:1;7896;7889:12;7851:52;7922:63;7977:7;7966:8;7955:9;7951:24;7922:63;:::i;:::-;7912:73;;;7257:734;;;;;:::o;7996:420::-;8049:3;8087:5;8081:12;8114:6;8109:3;8102:19;8146:4;8141:3;8137:14;8130:21;;8185:4;8178:5;8174:16;8208:1;8218:173;8232:6;8229:1;8226:13;8218:173;;;8293:13;;8281:26;;8336:4;8327:14;;;;8364:17;;;;8254:1;8247:9;8218:173;;8421:823;8613:4;8661:2;8650:9;8646:18;8691:2;8680:9;8673:21;8714:6;8749;8743:13;8780:6;8772;8765:22;8818:2;8807:9;8803:18;8796:25;;8880:2;8870:6;8867:1;8863:14;8852:9;8848:30;8844:39;8830:53;;8918:2;8910:6;8906:15;8939:1;8949:266;8963:6;8960:1;8957:13;8949:266;;;9056:2;9052:7;9040:9;9032:6;9028:22;9024:36;9019:3;9012:49;9084:51;9128:6;9119;9113:13;9084:51;:::i;:::-;9074:61;-1:-1:-1;9170:2:274;9193:12;;;;9158:15;;;;;8985:1;8978:9;8949:266;;;-1:-1:-1;9232:6:274;;8421:823;-1:-1:-1;;;;;;8421:823:274:o;9249:807::-;9433:6;9441;9449;9457;9510:3;9498:9;9489:7;9485:23;9481:33;9478:53;;;9527:1;9524;9517:12;9478:53;9550:49;9591:7;9580:9;9550:49;:::i;:::-;9540:59;;9650:2;9639:9;9635:18;9622:32;-1:-1:-1;;;;;9669:6:274;9666:30;9663:50;;;9709:1;9706;9699:12;9663:50;9732:61;9785:7;9776:6;9765:9;9761:22;9732:61;:::i;:::-;9722:71;;;9846:2;9835:9;9831:18;9818:32;-1:-1:-1;;;;;9865:8:274;9862:32;9859:52;;;9907:1;9904;9897:12;9859:52;9930:63;9985:7;9974:8;9963:9;9959:24;9930:63;:::i;:::-;9920:73;;;10012:38;10045:3;10034:9;10030:19;10012:38;:::i;:::-;10002:48;;9249:807;;;;;;;:::o;10292:987::-;10459:6;10467;10475;10483;10491;10544:2;10532:9;10523:7;10519:23;10515:32;10512:52;;;10560:1;10557;10550:12;10512:52;10599:9;10586:23;10618:31;10643:5;10618:31;:::i;:::-;10668:5;-1:-1:-1;10724:2:274;10709:18;;10696:32;-1:-1:-1;;;;;10740:30:274;;10737:50;;;10783:1;10780;10773:12;10737:50;10822:94;10908:7;10899:6;10888:9;10884:22;10822:94;:::i;:::-;10935:8;;-1:-1:-1;10796:120:274;-1:-1:-1;;11023:2:274;11008:18;;10995:32;-1:-1:-1;;;;;11039:32:274;;11036:52;;;11084:1;11081;11074:12;11036:52;11123:96;11211:7;11200:8;11189:9;11185:24;11123:96;:::i;:::-;10292:987;;;;-1:-1:-1;10292:987:274;;-1:-1:-1;11238:8:274;;11097:122;10292:987;-1:-1:-1;;;10292:987:274:o;11284:530::-;11387:6;11395;11448:2;11436:9;11427:7;11423:23;11419:32;11416:52;;;11464:1;11461;11454:12;11416:52;11503:9;11490:23;11522:31;11547:5;11522:31;:::i;:::-;11572:5;-1:-1:-1;11628:2:274;11613:18;;11600:32;-1:-1:-1;;;;;11644:30:274;;11641:50;;;11687:1;11684;11677:12;11641:50;11710:22;;11766:3;11748:16;;;11744:26;11741:46;;;11783:1;11780;11773:12;11741:46;11806:2;11796:12;;;11284:530;;;;;:::o;11819:332::-;12026:6;12015:9;12008:25;12069:2;12064;12053:9;12049:18;12042:30;11989:4;12089:56;12141:2;12130:9;12126:18;12118:6;12089:56;:::i;12156:407::-;12243:6;12251;12304:2;12292:9;12283:7;12279:23;12275:32;12272:52;;;12320:1;12317;12310:12;12272:52;12359:9;12346:23;12378:31;12403:5;12378:31;:::i;:::-;12428:5;-1:-1:-1;12485:2:274;12470:18;;12457:32;12498:33;12457:32;12498:33;:::i;12568:452::-;12631:3;12669:5;12663:12;12696:6;12691:3;12684:19;12728:4;12723:3;12719:14;12712:21;;12767:4;12760:5;12756:16;12790:1;12800:195;12814:6;12811:1;12808:13;12800:195;;;12863:48;12907:3;12898:6;12892:13;2637:12;;-1:-1:-1;;;;;2633:37:274;2621:50;;2735:4;2724:16;;;2718:23;2714:2;2703:39;2687:14;;;2680:63;2796:4;2785:16;;;2779:23;2804:10;2775:40;2759:14;;2752:64;2557:265;12863:48;12940:4;12931:14;;;;;12980:4;12968:17;;;;;12836:1;12829:9;12800:195;;13025:604;13400:2;13389:9;13382:21;13363:4;13426:67;13489:2;13478:9;13474:18;13466:6;13426:67;:::i;:::-;13541:9;13533:6;13529:22;13524:2;13513:9;13509:18;13502:50;13569:54;13616:6;13608;13569:54;:::i;13634:551::-;13698:3;13736:5;13730:12;13763:6;13758:3;13751:19;13795:4;13790:3;13786:14;13779:21;;13834:4;13827:5;13823:16;13857:1;13867:293;13881:6;13878:1;13875:13;13867:293;;;13940:13;;-1:-1:-1;;;;;14010:28:274;13998:41;;14075:4;14066:14;;;;14133:17;;;;14035:1;13896:9;13867:293;;14190:291;14388:2;14377:9;14370:21;14351:4;14408:67;14471:2;14460:9;14456:18;14448:6;14408:67;:::i;14725:502::-;14837:6;14845;14898:2;14886:9;14877:7;14873:23;14869:32;14866:52;;;14914:1;14911;14904:12;14866:52;14954:9;14941:23;-1:-1:-1;;;;;14979:6:274;14976:30;14973:50;;;15019:1;15016;15009:12;14973:50;15042:61;15095:7;15086:6;15075:9;15071:22;15042:61;:::i;:::-;15032:71;;;15153:2;15142:9;15138:18;15125:32;15166:31;15191:5;15166:31;:::i;15232:634::-;15420:2;15432:21;;;15502:13;;15405:18;;;15524:22;;;15372:4;;15603:15;;;15577:2;15562:18;;;15372:4;15646:194;15660:6;15657:1;15654:13;15646:194;;;15725:13;;-1:-1:-1;;;;;15721:38:274;15709:51;;15789:2;15815:15;;;;15780:12;;;;15682:1;15675:9;15646:194;;;-1:-1:-1;15857:3:274;;15232:634;-1:-1:-1;;;;;15232:634:274:o;17027:687::-;17149:6;17157;17165;17173;17226:2;17214:9;17205:7;17201:23;17197:32;17194:52;;;17242:1;17239;17232:12;17194:52;17281:9;17268:23;17300:31;17325:5;17300:31;:::i;:::-;17350:5;-1:-1:-1;17374:37:274;17407:2;17392:18;;17374:37;:::i;:::-;17364:47;;17462:2;17451:9;17447:18;17434:32;-1:-1:-1;;;;;17481:6:274;17478:30;17475:50;;;17521:1;17518;17511:12;17475:50;17560:94;17646:7;17637:6;17626:9;17622:22;17560:94;:::i;:::-;17027:687;;;;-1:-1:-1;17673:8:274;-1:-1:-1;;;;17027:687:274:o;17719:502::-;17831:6;17839;17892:2;17880:9;17871:7;17867:23;17863:32;17860:52;;;17908:1;17905;17898:12;17860:52;17947:9;17934:23;17966:31;17991:5;17966:31;:::i;:::-;18016:5;-1:-1:-1;18072:2:274;18057:18;;18044:32;-1:-1:-1;;;;;18088:30:274;;18085:50;;;18131:1;18128;18121:12;18085:50;18154:61;18207:7;18198:6;18187:9;18183:22;18154:61;:::i;18226:418::-;18375:2;18364:9;18357:21;18338:4;18407:6;18401:13;18450:6;18445:2;18434:9;18430:18;18423:34;18509:6;18504:2;18496:6;18492:15;18487:2;18476:9;18472:18;18466:50;18565:1;18560:2;18551:6;18540:9;18536:22;18532:31;18525:42;18635:2;18628;18624:7;18619:2;18611:6;18607:15;18603:29;18592:9;18588:45;18584:54;18576:62;;;18226:418;;;;:::o;18649:319::-;18716:6;18724;18777:2;18765:9;18756:7;18752:23;18748:32;18745:52;;;18793:1;18790;18783:12;18745:52;18832:9;18819:23;18851:31;18876:5;18851:31;:::i;:::-;18901:5;-1:-1:-1;18925:37:274;18958:2;18943:18;;18925:37;:::i;18973:269::-;19030:6;19083:2;19071:9;19062:7;19058:23;19054:32;19051:52;;;19099:1;19096;19089:12;19051:52;19138:9;19125:23;19188:4;19181:5;19177:16;19170:5;19167:27;19157:55;;19208:1;19205;19198:12;19452:164;19521:5;19566:2;19557:6;19552:3;19548:16;19544:25;19541:45;;;19582:1;19579;19572:12;19541:45;-1:-1:-1;19604:6:274;19452:164;-1:-1:-1;19452:164:274:o;19621:375::-;19717:6;19770:2;19758:9;19749:7;19745:23;19741:32;19738:52;;;19786:1;19783;19776:12;19738:52;19826:9;19813:23;-1:-1:-1;;;;;19851:6:274;19848:30;19845:50;;;19891:1;19888;19881:12;19845:50;19914:76;19982:7;19973:6;19962:9;19958:22;19914:76;:::i;20951:627::-;21102:6;21110;21118;21171:3;21159:9;21150:7;21146:23;21142:33;21139:53;;;21188:1;21185;21178:12;21139:53;21228:9;21215:23;-1:-1:-1;;;;;21253:6:274;21250:30;21247:50;;;21293:1;21290;21283:12;21247:50;21316:61;21369:7;21360:6;21349:9;21345:22;21316:61;:::i;:::-;21306:71;;;21396:58;21446:7;21441:2;21430:9;21426:18;21396:58;:::i;21583:329::-;21820:2;21809:9;21802:21;21783:4;21840:66;21902:2;21891:9;21887:18;21879:6;21840:66;:::i;21917:574::-;22037:6;22045;22053;22106:2;22094:9;22085:7;22081:23;22077:32;22074:52;;;22122:1;22119;22112:12;22074:52;22161:9;22148:23;22180:31;22205:5;22180:31;:::i;:::-;22230:5;-1:-1:-1;22286:2:274;22271:18;;22258:32;-1:-1:-1;;;;;22302:30:274;;22299:50;;;22345:1;22342;22335:12;22299:50;22368:61;22421:7;22412:6;22401:9;22397:22;22368:61;:::i;:::-;22358:71;;;22448:37;22481:2;22470:9;22466:18;22448:37;:::i;:::-;22438:47;;21917:574;;;;;:::o;22496:2630::-;22622:6;22630;22683:2;22671:9;22662:7;22658:23;22654:32;22651:52;;;22699:1;22696;22689:12;22651:52;22738:9;22725:23;22757:31;22782:5;22757:31;:::i;:::-;22807:5;-1:-1:-1;22863:2:274;22848:18;;22835:32;-1:-1:-1;;;;;22879:30:274;;22876:50;;;22922:1;22919;22912:12;22876:50;22945:22;;22998:4;22990:13;;22986:27;-1:-1:-1;22976:55:274;;23027:1;23024;23017:12;22976:55;23067:2;23054:16;23090:64;23106:47;23146:6;23106:47;:::i;23090:64::-;23176:3;23200:6;23195:3;23188:19;23232:2;23227:3;23223:12;23216:19;;23287:2;23277:6;23274:1;23270:14;23266:2;23262:23;23258:32;23244:46;;23313:7;23305:6;23302:19;23299:39;;;23334:1;23331;23324:12;23299:39;23366:2;23362;23358:11;23378:1718;23394:6;23389:3;23386:15;23378:1718;;;23480:3;23467:17;-1:-1:-1;;;;;23503:11:274;23500:35;23497:55;;;23548:1;23545;23538:12;23497:55;23575:20;;23647:4;23619:16;;;-1:-1:-1;;23615:30:274;23611:41;23608:61;;;23665:1;23662;23655:12;23608:61;23697:22;;:::i;:::-;23748:51;23791:7;23786:2;23782;23778:11;23748:51;:::i;:::-;23739:7;23732:68;23850:4;23846:2;23842:13;23829:27;-1:-1:-1;;;;;23875:8:274;23872:32;23869:52;;;23917:1;23914;23907:12;23869:52;23959:65;24016:7;24011:2;24000:8;23996:2;23992:17;23988:26;23959:65;:::i;:::-;23954:2;23945:7;23941:16;23934:91;;24075:4;24071:2;24067:13;24054:27;-1:-1:-1;;;;;24100:8:274;24097:32;24094:52;;;24142:1;24139;24132:12;24094:52;24192:2;24181:8;24177:2;24173:17;24169:26;24159:36;;;24237:7;24230:4;24226:2;24222:13;24218:27;24208:55;;24259:1;24256;24249:12;24208:55;24305:2;24292:16;24334:66;24350:49;24390:8;24350:49;:::i;24334:66::-;24428:5;24460:8;24453:5;24446:23;24502:2;24495:5;24491:14;24482:23;;24565:2;24553:8;24550:1;24546:16;24542:2;24538:25;24534:34;24518:50;;24597:7;24587:8;24584:21;24581:41;;;24618:1;24615;24608:12;24581:41;24656:2;24652;24648:11;24635:24;;24672:303;24690:8;24683:5;24680:19;24672:303;;;24786:5;24773:19;-1:-1:-1;;;;;24835:7:274;24831:32;24822:7;24819:45;24809:73;;24878:1;24875;24868:12;24809:73;24899:22;;24958:2;24711:14;;;;24947;;;;24672:303;;;25008:2;24995:16;;24988:33;-1:-1:-1;;25034:20:274;;-1:-1:-1;25083:2:274;25074:12;;;;23411;23378:1718;;;23382:3;25115:5;25105:15;;;;;;22496:2630;;;;;:::o;25131:722::-;25211:6;25219;25227;25280:2;25268:9;25259:7;25255:23;25251:32;25248:52;;;25296:1;25293;25286:12;25248:52;25335:9;25322:23;25354:31;25379:5;25354:31;:::i;:::-;25404:5;-1:-1:-1;25460:2:274;25445:18;;25432:32;-1:-1:-1;;;;;25476:30:274;;25473:50;;;25519:1;25516;25509:12;25473:50;25542:22;;25595:4;25587:13;;25583:27;-1:-1:-1;25573:55:274;;25624:1;25621;25614:12;25573:55;25664:2;25651:16;-1:-1:-1;;;;;25682:6:274;25679:30;25676:50;;;25722:1;25719;25712:12;25676:50;25767:7;25762:2;25753:6;25749:2;25745:15;25741:24;25738:37;25735:57;;;25788:1;25785;25778:12;25735:57;25131:722;;25819:2;25811:11;;;;;-1:-1:-1;25841:6:274;;-1:-1:-1;;;25131:722:274:o;25858:508::-;25961:6;25969;26022:2;26010:9;26001:7;25997:23;25993:32;25990:52;;;26038:1;26035;26028:12;25990:52;26077:9;26064:23;26096:31;26121:5;26096:31;:::i;:::-;26146:5;-1:-1:-1;26202:2:274;26187:18;;26174:32;-1:-1:-1;;;;;26218:30:274;;26215:50;;;26261:1;26258;26251:12;26215:50;26284:76;26352:7;26343:6;26332:9;26328:22;26284:76;:::i;27301:127::-;27362:10;27357:3;27353:20;27350:1;27343:31;27393:4;27390:1;27383:15;27417:4;27414:1;27407:15;27433:333;27535:4;27593:11;27580:25;27687:2;27683:7;27672:8;27656:14;27652:29;27648:43;27628:18;27624:68;27614:96;;27706:1;27703;27696:12;27614:96;27727:33;;;;;27433:333;-1:-1:-1;;27433:333:274:o;27771:184::-;27829:6;27882:2;27870:9;27861:7;27857:23;27853:32;27850:52;;;27898:1;27895;27888:12;27850:52;27921:28;27939:9;27921:28;:::i;27960:545::-;28053:4;28059:6;28119:11;28106:25;28213:2;28209:7;28198:8;28182:14;28178:29;28174:43;28154:18;28150:68;28140:96;;28232:1;28229;28222:12;28140:96;28259:33;;28311:20;;;-1:-1:-1;;;;;;28343:30:274;;28340:50;;;28386:1;28383;28376:12;28340:50;28419:4;28407:17;;-1:-1:-1;28470:1:274;28466:14;;;28450;28446:35;28436:46;;28433:66;;;28495:1;28492;28485:12;29350:272;29408:6;29461:2;29449:9;29440:7;29436:23;29432:32;29429:52;;;29477:1;29474;29467:12;29429:52;29516:9;29503:23;29566:6;29559:5;29555:18;29548:5;29545:29;29535:57;;29588:1;29585;29578:12;29627:277;29694:6;29747:2;29735:9;29726:7;29722:23;29718:32;29715:52;;;29763:1;29760;29753:12;29715:52;29795:9;29789:16;29848:5;29841:13;29834:21;29827:5;29824:32;29814:60;;29870:1;29867;29860:12;30458:260;30652:2;30637:18;;30664:48;30641:9;30694:6;30664:48;:::i;30723:127::-;30784:10;30779:3;30775:20;30772:1;30765:31;30815:4;30812:1;30805:15;30839:4;30836:1;30829:15;30855:167;30950:10;30923:18;;;30943;;;30919:43;;30974:19;;30971:45;;;30996:18;;:::i;31027:419::-;31126:6;31121:3;31114:19;31158:4;31153:3;31149:14;31142:21;;31096:3;31186:5;31209:1;31219:202;31233:6;31230:1;31227:13;31219:202;;;31325:10;31298:25;31316:6;31298:25;:::i;:::-;31294:42;31282:55;;31366:4;31357:14;;;;31394:17;;;;;31255:1;31248:9;31219:202;;31451:479;-1:-1:-1;;;;;31694:32:274;;;31676:51;;31763:32;;31758:2;31743:18;;31736:60;31832:2;31827;31812:18;;31805:30;;;-1:-1:-1;;31852:72:274;;31905:18;;31897:6;31889;31852:72;:::i;31935:656::-;-1:-1:-1;;;;;32287:32:274;;32269:51;;32256:3;32241:19;;32329:57;32382:2;32367:18;;32359:6;32329:57;:::i;:::-;-1:-1:-1;;;;;32422:32:274;;;;32417:2;32402:18;;32395:60;-1:-1:-1;;;;;32492:31:274;;;;32486:3;32471:19;;32464:60;32573:10;32561:23;32442:3;32540:19;;;32533:52;32422:32;31935:656;-1:-1:-1;;31935:656:274:o;32596:267::-;32685:6;32680:3;32673:19;32737:6;32730:5;32723:4;32718:3;32714:14;32701:43;-1:-1:-1;32789:1:274;32764:16;;;32782:4;32760:27;;;32753:38;;;;32845:2;32824:15;;;-1:-1:-1;;32820:29:274;32811:39;;;32807:50;;32596:267::o;32868:247::-;33027:2;33016:9;33009:21;32990:4;33047:62;33105:2;33094:9;33090:18;33082:6;33074;33047:62;:::i;33120:521::-;33197:4;33203:6;33263:11;33250:25;33357:2;33353:7;33342:8;33326:14;33322:29;33318:43;33298:18;33294:68;33284:96;;33376:1;33373;33366:12;33284:96;33403:33;;33455:20;;;-1:-1:-1;;;;;;33487:30:274;;33484:50;;;33530:1;33527;33520:12;33484:50;33563:4;33551:17;;-1:-1:-1;33594:14:274;33590:27;;;33580:38;;33577:58;;;33631:1;33628;33621:12;33646:669;-1:-1:-1;;;;;33945:32:274;;;33927:51;;34014:32;;34009:2;33994:18;;33987:60;34083:3;34078:2;34063:18;;34056:31;;;-1:-1:-1;;34110:73:274;;34163:19;;34155:6;34147;34110:73;:::i;:::-;34231:9;34223:6;34219:22;34214:2;34203:9;34199:18;34192:50;34259;34302:6;34294;34286;34259:50;:::i;:::-;34251:58;33646:669;-1:-1:-1;;;;;;;;;33646:669:274:o;34320:376::-;34561:2;34546:18;;34573:48;34550:9;34603:6;34573:48;:::i;:::-;-1:-1:-1;;;;;34657:32:274;;;;34652:2;34637:18;;;;34630:60;34320:376;;-1:-1:-1;34320:376:274:o;35993:297::-;36111:12;;36158:4;36147:16;;;36141:23;;36111:12;36176:16;;36173:111;;;-1:-1:-1;;36250:4:274;36246:17;;;;36243:1;36239:25;36235:38;36224:50;;35993:297;-1:-1:-1;35993:297:274:o;37156:495::-;37432:2;37421:9;37414:21;37395:4;37458:56;37510:2;37499:9;37495:18;37487:6;37458:56;:::i;:::-;37562:9;37554:6;37550:22;37545:2;37534:9;37530:18;37523:50;37590:55;37638:6;37630;37590:55;:::i;37656:1766::-;37776:6;37829:2;37817:9;37808:7;37804:23;37800:32;37797:52;;;37845:1;37842;37835:12;37797:52;37878:9;37872:16;-1:-1:-1;;;;;37903:6:274;37900:30;37897:50;;;37943:1;37940;37933:12;37897:50;37966:22;;38019:4;38011:13;;38007:27;-1:-1:-1;37997:55:274;;38048:1;38045;38038:12;37997:55;38081:2;38075:9;38104:64;38120:47;38160:6;38120:47;:::i;38104:64::-;38190:3;38214:6;38209:3;38202:19;38246:2;38241:3;38237:12;38230:19;;38301:2;38291:6;38288:1;38284:14;38280:2;38276:23;38272:32;38258:46;;38327:7;38319:6;38316:19;38313:39;;;38348:1;38345;38338:12;38313:39;38380:2;38376;38372:11;38392:1000;38408:6;38403:3;38400:15;38392:1000;;;38487:3;38481:10;-1:-1:-1;;;;;38510:11:274;38507:35;38504:55;;;38555:1;38552;38545:12;38504:55;38582:20;;38637:2;38629:11;;38625:25;-1:-1:-1;38615:53:274;;38664:1;38661;38654:12;38615:53;38711:2;38707;38703:11;38697:18;38741:66;38757:49;38797:8;38757:49;:::i;38741:66::-;38835:5;38867:8;38860:5;38853:23;38909:2;38902:5;38898:14;38889:23;;38981:2;38976;38964:8;38961:1;38957:16;38953:2;38949:25;38945:34;38941:43;38925:59;;39013:7;39003:8;39000:21;38997:41;;;39034:1;39031;39024:12;38997:41;39072:2;39068;39064:11;39051:24;;39088:229;39106:8;39099:5;39096:19;39088:229;;;39214:12;;39243:20;;39300:2;39127:14;;;;39289;;;;39088:229;;;39330:20;;-1:-1:-1;;39379:2:274;39370:12;;;;38425;;;;;-1:-1:-1;38392:1000:274;;;-1:-1:-1;39411:5:274;37656:1766;-1:-1:-1;;;;;;37656:1766:274:o;39427:135::-;39466:3;39487:17;;;39484:43;;39507:18;;:::i;:::-;-1:-1:-1;39554:1:274;39543:13;;39427:135::o;39567:128::-;39634:9;;;39655:11;;;39652:37;;;39669:18;;:::i;39700:194::-;-1:-1:-1;;;;;39798:26:274;;;39770;;;39766:59;;39837:28;;39834:54;;;39868:18;;:::i;39899:213::-;39934:3;39982:5;39978:2;39967:21;-1:-1:-1;;;;;40012:39:274;40003:7;40000:52;39997:78;;40055:18;;:::i;:::-;40095:1;40091:15;;39899:213;-1:-1:-1;;39899:213:274:o;40117:245::-;40215:2;40185:17;;;40204;;;;40181:41;-1:-1:-1;;;;;40237:44:274;;-1:-1:-1;;;;;;40283:49:274;;40234:99;40231:125;;;40336:18;;:::i;40367:736::-;-1:-1:-1;;;;;40747:32:274;;40729:51;;40716:3;40701:19;;40789:57;40842:2;40827:18;;40819:6;40789:57;:::i;:::-;40877:2;40862:18;;40855:34;;;;-1:-1:-1;;;;;40926:32:274;;;;40920:3;40905:19;;40898:61;-1:-1:-1;;;;;40996:31:274;;;40946:3;40975:19;;40968:60;41065:31;41059:3;41044:19;;;41037:60;40367:736;;-1:-1:-1;;40367:736:274:o;41108:230::-;41178:6;41231:2;41219:9;41210:7;41206:23;41202:32;41199:52;;;41247:1;41244;41237:12;41199:52;-1:-1:-1;41292:16:274;;41108:230;-1:-1:-1;41108:230:274:o;41870:1392::-;-1:-1:-1;;;;;42372:32:274;;42354:51;;42293:4;42341:3;42326:19;;42414:57;42467:2;42452:18;;42444:6;42414:57;:::i;:::-;42507:3;42502:2;42487:18;;42480:31;42546:22;;;42626:6;42599:3;42584:19;;42650:1;42660:348;42674:6;42671:1;42668:13;42660:348;;;42749:6;42736:20;42769:31;42794:5;42769:31;:::i;:::-;-1:-1:-1;;;;;42857:31:274;42845:44;;42925:4;42983:15;;;;42916:14;;;;42885:1;42689:9;42660:348;;;42664:3;43054:9;43049:3;43045:19;43039:3;43028:9;43024:19;43017:48;43088:41;43125:3;43117:6;43088:41;:::i;:::-;43074:55;;;43178:9;43170:6;43166:22;43160:3;43149:9;43145:19;43138:51;43206:50;43249:6;43241;43233;43206:50;:::i;:::-;43198:58;41870:1392;-1:-1:-1;;;;;;;;;;41870:1392:274:o;43267:136::-;43306:3;43334:5;43324:39;;43343:18;;:::i;:::-;-1:-1:-1;;;43379:18:274;;43267:136::o;43788:249::-;43888:2;43877:17;;;43858;;;;43854:41;-1:-1:-1;;;;;;43910:50:274;;-1:-1:-1;;;;;43962:45:274;;43907:101;43904:127;;;44011:18;;:::i;44460:251::-;44530:6;44583:2;44571:9;44562:7;44558:23;44554:32;44551:52;;;44599:1;44596;44589:12;44551:52;44631:9;44625:16;44650:31;44675:5;44650:31;:::i;44716:216::-;44780:9;;;44808:11;;;44755:3;44838:9;;44866:10;;44862:19;;44891:10;;44883:19;;44859:44;44856:70;;;44906:18;;:::i;:::-;44856:70;;44716:216;;;;:::o;44937:127::-;44998:10;44993:3;44989:20;44986:1;44979:31;45029:4;45026:1;45019:15;45053:4;45050:1;45043:15;45476:127;45537:10;45532:3;45528:20;45525:1;45518:31;45568:4;45565:1;45558:15;45592:4;45589:1;45582:15;45958:127;46019:10;46014:3;46010:20;46007:1;46000:31;46050:4;46047:1;46040:15;46074:4;46071:1;46064:15;46090:125;46155:9;;;46176:10;;;46173:36;;;46189:18;;:::i;47037:217::-;47077:1;47103;47093:132;;47147:10;47142:3;47138:20;47135:1;47128:31;47182:4;47179:1;47172:15;47210:4;47207:1;47200:15;47093:132;-1:-1:-1;47239:9:274;;47037:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "73963": [
        {
          "start": 1940,
          "length": 32
        },
        {
          "start": 4950,
          "length": 32
        },
        {
          "start": 5056,
          "length": 32
        },
        {
          "start": 8398,
          "length": 32
        },
        {
          "start": 11962,
          "length": 32
        },
        {
          "start": 14167,
          "length": 32
        }
      ],
      "73966": [
        {
          "start": 956,
          "length": 32
        },
        {
          "start": 5915,
          "length": 32
        },
        {
          "start": 7662,
          "length": 32
        }
      ],
      "73969": [
        {
          "start": 1574,
          "length": 32
        },
        {
          "start": 15191,
          "length": 32
        }
      ],
      "88804": [
        {
          "start": 1203,
          "length": 32
        },
        {
          "start": 11334,
          "length": 32
        }
      ],
      "88866": [
        {
          "start": 4898,
          "length": 32
        }
      ],
      "89053": [
        {
          "start": 1613,
          "length": 32
        },
        {
          "start": 11026,
          "length": 32
        },
        {
          "start": 16751,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ALLOCATION_CONFIGURATION_DELAY()": "7bc1ef61",
    "DEALLOCATION_DELAY()": "2981eb77",
    "addStrategiesToOperatorSet(address,uint32,address[])": "50feea20",
    "clearDeallocationQueue(address,address[],uint16[])": "4b5046ef",
    "createOperatorSets(address,(uint32,address[])[])": "261f84e0",
    "createRedistributingOperatorSets(address,(uint32,address[])[],address[])": "32a879e4",
    "delegation()": "df5cf723",
    "deregisterFromOperatorSets((address,address,uint32[]))": "6e3492b5",
    "getAVSRegistrar(address)": "304c10cd",
    "getAllocatableMagnitude(address,address)": "6cfb4481",
    "getAllocatedSets(address)": "15fe5028",
    "getAllocatedStake((address,uint32),address[],address[])": "2b453a9a",
    "getAllocatedStrategies(address,(address,uint32))": "c221d8ae",
    "getAllocation(address,(address,uint32),address)": "10e1b9b8",
    "getAllocationDelay(address)": "b9fbaed1",
    "getAllocations(address[],(address,uint32),address)": "8ce64854",
    "getEncumberedMagnitude(address,address)": "f605ce08",
    "getMaxMagnitude(address,address)": "a9333ec8",
    "getMaxMagnitudes(address,address[])": "547afb87",
    "getMaxMagnitudes(address[],address)": "4a10ffe5",
    "getMaxMagnitudesAtBlock(address,address[],uint32)": "94d7d00c",
    "getMemberCount((address,uint32))": "b2447af7",
    "getMembers((address,uint32))": "6e875dba",
    "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": "2bab2c4a",
    "getOperatorSetCount(address)": "ba1a84e5",
    "getRedistributionRecipient((address,uint32))": "0f3df50e",
    "getRegisteredSets(address)": "79ae50cd",
    "getSlashCount((address,uint32))": "4cfd2939",
    "getStrategiesInOperatorSet((address,uint32))": "4177a87c",
    "getStrategyAllocations(address,address)": "40120dab",
    "initialize(uint256)": "fe4b84df",
    "isMemberOfOperatorSet(address,(address,uint32))": "670d3ba2",
    "isOperatorRedistributable(address)": "dc2af692",
    "isOperatorSet((address,uint32))": "260dc758",
    "isOperatorSlashable(address,(address,uint32))": "1352c3e6",
    "isRedistributingOperatorSet((address,uint32))": "f231bd08",
    "modifyAllocations(address,((address,uint32),address[],uint64[])[])": "952899ee",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionController()": "4657e26a",
    "registerForOperatorSets(address,(address,uint32[],bytes))": "adc2e3d9",
    "removeStrategiesFromOperatorSet(address,uint32,address[])": "b66bd989",
    "setAVSRegistrar(address,address)": "d3d96ff4",
    "setAllocationDelay(address,uint32)": "56c483e6",
    "slashOperator(address,(address,uint32,address[],uint256[],string))": "36352057",
    "unpause(uint256)": "fabc1cbc",
    "updateAVSMetadataURI(address,string)": "a9821821",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_DEALLOCATION_DELAY\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_ALLOCATION_CONFIGURATION_DELAY\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAVSRegistrar\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSnapshotOrdering\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWadToSlash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModificationAlreadyPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonexistentAVSMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotSlashable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategiesMustBeInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyAlreadyInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotInOperatorSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UninitializedAllocationDelay\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AVSMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"AVSRegistrarSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"magnitude\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"encumberedMagnitude\",\"type\":\"uint64\"}],\"name\":\"EncumberedMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"maxMagnitude\",\"type\":\"uint64\"}],\"name\":\"MaxMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorSetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"wadSlashed\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"OperatorSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redistributionRecipient\",\"type\":\"address\"}],\"name\":\"RedistributionAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALLOCATION_CONFIGURATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEALLOCATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"addStrategiesToOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"numToClear\",\"type\":\"uint16[]\"}],\"name\":\"clearDeallocationQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"internalType\":\"struct IAllocationManagerTypes.CreateSetParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"internalType\":\"struct IAllocationManagerTypes.CreateSetParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"redistributionRecipients\",\"type\":\"address[]\"}],\"name\":\"createRedistributingOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"internalType\":\"struct IAllocationManagerTypes.DeregisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deregisterFromOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getAVSRegistrar\",\"outputs\":[{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocatableMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocatedSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getAllocatedStake\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getAllocatedStrategies\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocationDelay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getEncumberedMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getMaxMagnitudesAtBlock\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"futureBlock\",\"type\":\"uint32\"}],\"name\":\"getMinimumSlashableStake\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"slashableStake\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getOperatorSetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getRedistributionRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getRegisteredSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getSlashCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getStrategiesInOperatorSet\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getStrategyAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isMemberOfOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperatorRedistributable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isOperatorSlashable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isRedistributingOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"newMagnitudes\",\"type\":\"uint64[]\"}],\"internalType\":\"struct IAllocationManagerTypes.AllocateParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"modifyAllocations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IAllocationManagerTypes.RegisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"registerForOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"setAVSRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"setAllocationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"wadsToSlash\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IAllocationManagerTypes.SlashingParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"slashOperator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AlreadyMemberOfSet()\":[{\"details\":\"Thrown when trying to add an operator to a set they are already a member of\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InsufficientMagnitude()\":[{\"details\":\"Thrown when an allocation is attempted that exceeds a given operators total allocatable magnitude.\"}],\"InvalidAVSRegistrar()\":[{\"details\":\"Thrown when the AVSRegistrar is not correctly configured to prevent an AVSRegistrar contract from being used with the wrong AVS\"}],\"InvalidCaller()\":[{\"details\":\"Thrown when caller is not authorized to call a function.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidOperator()\":[{\"details\":\"Thrown when an invalid operator is provided.\"}],\"InvalidOperatorSet()\":[{\"details\":\"Thrown when an invalid operator set is provided.\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}],\"InvalidStrategy()\":[{\"details\":\"Thrown when an invalid strategy is provided.\"}],\"InvalidWadToSlash()\":[{\"details\":\"Thrown when `wadToSlash` is zero or greater than 1e18\"}],\"ModificationAlreadyPending()\":[{\"details\":\"Thrown when an allocation is attempted for a given operator when they have pending allocations or deallocations.\"}],\"NonexistentAVSMetadata()\":[{\"details\":\"Thrown when an invalid avs whose metadata is not registered is provided.\"}],\"NotMemberOfSet()\":[{\"details\":\"Thrown when trying to slash/remove an operator from a set they are not a member of\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorNotSlashable()\":[{\"details\":\"Thrown when attempting to slash an operator when they are not slashable.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}],\"SameMagnitude()\":[{\"details\":\"Thrown when an operator attempts to set their allocation for an operatorSet to the same value\"}],\"StrategiesMustBeInAscendingOrder()\":[{\"details\":\"Thrown when provided `strategies` are not in ascending order.\"}],\"StrategyAlreadyInOperatorSet()\":[{\"details\":\"Thrown when trying to add a strategy to an operator set that already contains it.\"}],\"StrategyNotInOperatorSet()\":[{\"details\":\"Thrown when a strategy is referenced that does not belong to an operator set.\"}],\"UninitializedAllocationDelay()\":[{\"details\":\"Thrown when an operator's allocation delay has yet to be set.\"}]},\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"details\":\"The URI is never stored; it is simply emitted through an event for off-chain indexing.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST NOT already exist in the operator setIf the operatorSet is redistributing, the `BEACONCHAIN_ETH_STRAT` may not be added, since redistribution is not supported for native eth\",\"params\":{\"avs\":\"the avs to set strategies for\",\"operatorSetId\":\"the operator set to add strategies to\",\"strategies\":\"the strategies to add\"}},\"clearDeallocationQueue(address,address[],uint16[])\":{\"details\":\"can be called permissionlessly by anyone\",\"params\":{\"numToClear\":\"a list of number of pending deallocations to clear for each strategy\",\"operator\":\"address to clear deallocations for\",\"strategies\":\"a list of strategies to clear deallocations for\"}},\"constructor\":{\"details\":\"Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay.\"},\"createRedistributingOperatorSets(address,(uint32,address[])[],address[])\":{\"details\":\"Same logic as `createOperatorSets`, except `redistributionRecipients` corresponding to each operator set are stored.      Additionally, emits `RedistributionOperatorSetCreated` event instead of `OperatorSetCreated` for each created operator set.\",\"params\":{\"avs\":\"The AVS creating the new operator sets.\",\"params\":\"An array of operator set creation parameters.\",\"redistributionRecipients\":\"An array of addresses that will receive redistributed funds when operators are slashed.\"}},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"details\":\"After deregistering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. deregisterOperator` method to complete deregistration. This call MUST succeed in order for deregistration to be successful.\"},\"getAllocatableMagnitude(address,address)\":{\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get allocatable magnitude for\"},\"returns\":{\"_0\":\"magnitude available to be allocated to an operator set\"}},\"getAllocatedSets(address)\":{\"params\":{\"operator\":\"the operator to query\"},\"returns\":{\"_0\":\"the list of operator sets the operator has current or pending allocations/deallocations in\"}},\"getAllocatedStake((address,uint32),address[],address[])\":{\"params\":{\"operatorSet\":\"the operator set to query\",\"operators\":\"the operators to query\",\"strategies\":\"the strategies to query\"}},\"getAllocatedStrategies(address,(address,uint32))\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\"},\"returns\":{\"_0\":\"the list of strategies\"}},\"getAllocation(address,(address,uint32),address)\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the current/pending stake allocation\"}},\"getAllocationDelay(address)\":{\"details\":\"The operator must have a configured delay before allocating magnitude\",\"params\":{\"operator\":\"The operator to query\"},\"returns\":{\"_0\":\"Whether the operator has configured a delay\",\"_1\":\"The time in blocks between allocating magnitude and magnitude becoming slashable\"}},\"getAllocations(address[],(address,uint32),address)\":{\"params\":{\"operatorSet\":\"the operator set to query\",\"operators\":\"the operators to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"each operator's allocation\"}},\"getEncumberedMagnitude(address,address)\":{\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get allocatable magnitude for\"},\"returns\":{\"_0\":\"currently allocated magnitude\"}},\"getMaxMagnitude(address,address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get the max magnitude for\"},\"returns\":{\"_0\":\"the max magnitude for the strategy\"}},\"getMaxMagnitudes(address,address[])\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMaxMagnitudes(address[],address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operators\":\"the operators to query\",\"strategy\":\"the strategy to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each operator\"}},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"blockNumber\":\"the blockNumber at which to check the max magnitudes\",\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMemberCount((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to get the member count for\"}},\"getMembers((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"details\":\"This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents. This method does not consider slashable stake in the withdrawal queue even though there could be slashable stake in the queue.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.\",\"params\":{\"futureBlock\":\"the block at which to get allocation information. Should be a future block.\",\"operatorSet\":\"the operator set to query\",\"operators\":\"the list of operators whose slashable stakes will be returned\",\"strategies\":\"the strategies that each slashable stake corresponds to\"}},\"getOperatorSetCount(address)\":{\"params\":{\"avs\":\"the AVS to query\"}},\"getRedistributionRecipient((address,uint32))\":{\"params\":{\"operatorSet\":\"The Operator Set to query.\"},\"returns\":{\"_0\":\"For redistributing Operator Sets, returns the configured redistribution address set during Operator Set creation.         For non-redistributing operator sets, returns the `DEFAULT_BURN_ADDRESS`.\"}},\"getRegisteredSets(address)\":{\"params\":{\"operator\":\"The operator address to query.\"}},\"getSlashCount((address,uint32))\":{\"params\":{\"operatorSet\":\"The operator set to query.\"},\"returns\":{\"_0\":\"The number of slashes for the operator set.\"}},\"getStrategiesInOperatorSet((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getStrategyAllocations(address,address)\":{\"details\":\"Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the list of all operator sets the operator has allocations for\",\"_1\":\"the corresponding list of allocations from the specific `strategy`\"}},\"initialize(uint256)\":{\"details\":\"Initializes the initial owner and paused status.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"params\":{\"operator\":\"The operator to query\",\"operatorSet\":\"The operator set to query\"}},\"isOperatorRedistributable(address)\":{\"params\":{\"operator\":\"The operator to query.\"}},\"isOperatorSlashable(address,(address,uint32))\":{\"params\":{\"operator\":\"the operator to check slashability for\",\"operatorSet\":\"the operator set to check slashability for\"}},\"isRedistributingOperatorSet((address,uint32))\":{\"params\":{\"operatorSet\":\"The Operator Set to query.\"},\"returns\":{\"_0\":\"For redistributing Operator Sets, returns true.         For non-redistributing Operator Sets, returns false.\"}},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"details\":\"Updates encumberedMagnitude for the updated strategies\",\"params\":{\"operator\":\"the operator to modify allocations for\",\"params\":\"array of magnitude adjustments for one or more operator sets\"}},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"details\":\"After registering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. registerOperator` method to complete registration. This call MUST succeed in order for registration to be successful.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST already exist in the operator set\",\"params\":{\"avs\":\"the avs to remove strategies for\",\"operatorSetId\":\"the operator set to remove strategies from\",\"strategies\":\"the strategies to remove\"}},\"setAVSRegistrar(address,address)\":{\"params\":{\"registrar\":\"the new registrar address\"}},\"setAllocationDelay(address,uint32)\":{\"params\":{\"delay\":\"the allocation delay in blocks\",\"operator\":\"The operator to set the delay on behalf of.\"}},\"slashOperator(address,(address,uint32,address[],uint256[],string))\":{\"details\":\"For each strategy:      1. Reduces the operator's current allocation magnitude by wadToSlash proportion.      2. Reduces the strategy's max and encumbered magnitudes proportionally.      3. If there is a pending deallocation, reduces it proportionally.      4. Updates the operator's shares in the DelegationManager.Small slashing amounts may not result in actual token burns due to      rounding, which will result in small amounts of tokens locked in the contract      rather than fully burning through the burn mechanism.\",\"params\":{\"avs\":\"The AVS address initiating the slash.\",\"params\":\"The slashing parameters, containing:  - operator: The operator to slash.  - operatorSetId: The ID of the operator set the operator is being slashed from.  - strategies: Array of strategies to slash allocations from (must be in ascending order).  - wadsToSlash: Array of proportions to slash from each strategy (must be between 0 and 1e18).  - description: Description of why the operator was slashed.\"},\"returns\":{\"_0\":\"The ID of the slash.\",\"_1\":\"The amount of shares that were slashed for each strategy.\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateAVSMetadataURI(address,string)\":{\"details\":\"Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an AVS.\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when an AVS updates their metadata URI (Uniform Resource Identifier).\"},\"AVSRegistrarSet(address,address)\":{\"notice\":\"Emitted when an AVS configures the address that will handle registration/deregistration\"},\"AllocationDelaySet(address,uint32,uint32)\":{\"notice\":\"Emitted when operator updates their allocation delay.\"},\"AllocationUpdated(address,(address,uint32),address,uint64,uint32)\":{\"notice\":\"Emitted when an operator's magnitude is updated for a given operatorSet and strategy\"},\"EncumberedMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when operator's encumbered magnitude is updated for a given strategy\"},\"MaxMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when an operator's max magnitude is updated for a given strategy\"},\"OperatorAddedToOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is added to an operator set.\"},\"OperatorRemovedFromOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is removed from an operator set.\"},\"OperatorSetCreated((address,uint32))\":{\"notice\":\"Emitted when an operator set is created by an AVS.\"},\"OperatorSlashed(address,(address,uint32),address[],uint256[],string)\":{\"notice\":\"Emitted when an operator is slashed by an operator set for a strategy `wadSlashed` is the proportion of the operator's total delegated stake that was slashed\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"RedistributionAddressSet((address,uint32),address)\":{\"notice\":\"Emitted when a redistributing operator set is created by an AVS.\"},\"StrategyAddedToOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is added to an operator set.\"},\"StrategyRemovedFromOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is removed from an operator set.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"ALLOCATION_CONFIGURATION_DELAY()\":{\"notice\":\"Delay before alloaction delay modifications take effect.\"},\"DEALLOCATION_DELAY()\":{\"notice\":\"Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to.\"},\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to add strategies to an operator set\"},\"clearDeallocationQueue(address,address[],uint16[])\":{\"notice\":\"This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed.\"},\"createOperatorSets(address,(uint32,address[])[])\":{\"notice\":\"Allows an AVS to create new operator sets, defining strategies that the operator set uses\"},\"createRedistributingOperatorSets(address,(uint32,address[])[],address[])\":{\"notice\":\"Allows an AVS to create new Redistribution operator sets.\"},\"delegation()\":{\"notice\":\"The DelegationManager contract for EigenLayer\"},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"notice\":\"Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed.\"},\"getAVSRegistrar(address)\":{\"notice\":\"Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)\"},\"getAllocatableMagnitude(address,address)\":{\"notice\":\"For a strategy, get the amount of magnitude not currently allocated to any operator set\"},\"getAllocatedSets(address)\":{\"notice\":\"Returns the list of operator sets the operator has current or pending allocations/deallocations in\"},\"getAllocatedStake((address,uint32),address[],address[])\":{\"notice\":\"Returns the current allocated stake, irrespective of the operator's slashable status for the operatorSet.\"},\"getAllocatedStrategies(address,(address,uint32))\":{\"notice\":\"Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set.\"},\"getAllocation(address,(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocation an operator has from a strategy to an operator set\"},\"getAllocationDelay(address)\":{\"notice\":\"Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false.\"},\"getAllocations(address[],(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocations for multiple operators from a strategy to an operator set\"},\"getEncumberedMagnitude(address,address)\":{\"notice\":\"For a strategy, get the amount of magnitude that is allocated across one or more operator sets\"},\"getMaxMagnitude(address,address)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategy\"},\"getMaxMagnitudes(address,address[])\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies\"},\"getMaxMagnitudes(address[],address)\":{\"notice\":\"Returns the maximum magnitudes each operator can allocate for the given strategy\"},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies at a given block number\"},\"getMemberCount((address,uint32))\":{\"notice\":\"Returns the number of operators registered to an operatorSet.\"},\"getMembers((address,uint32))\":{\"notice\":\"Returns all the operators registered to an operator set\"},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"notice\":\"Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set. Note that this function will return 0 for the slashable stake if the operator is not slashable at the time of the call.\"},\"getOperatorSetCount(address)\":{\"notice\":\"Returns the number of operator sets for the AVS\"},\"getRedistributionRecipient((address,uint32))\":{\"notice\":\"Returns the address where slashed funds will be sent for a given operator set.\"},\"getRegisteredSets(address)\":{\"notice\":\"Returns a list of all operator sets the operator is registered for\"},\"getSlashCount((address,uint32))\":{\"notice\":\"Returns the number of slashes for a given operator set.\"},\"getStrategiesInOperatorSet((address,uint32))\":{\"notice\":\"Returns an array of strategies in the operatorSet.\"},\"getStrategyAllocations(address,address)\":{\"notice\":\"Given a strategy, returns a list of operator sets and corresponding stake allocations.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"notice\":\"Returns whether the operator is registered for the operator set\"},\"isOperatorRedistributable(address)\":{\"notice\":\"Returns whether an operator is slashable by a redistributing operator set.\"},\"isOperatorSet((address,uint32))\":{\"notice\":\"Returns whether the operator set exists\"},\"isOperatorSlashable(address,(address,uint32))\":{\"notice\":\"Returns whether an operator is slashable by an operator set. This returns true if the operator is registered or their slashableUntil block has not passed. This is because even when operators are deregistered, they still remain slashable for a period of time.\"},\"isRedistributingOperatorSet((address,uint32))\":{\"notice\":\"Returns whether a given operator set supports redistribution or not when funds are slashed and burned from EigenLayer.\"},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"notice\":\"Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"notice\":\"Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to remove strategies from an operator set\"},\"setAVSRegistrar(address,address)\":{\"notice\":\"Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address.\"},\"setAllocationDelay(address,uint32)\":{\"notice\":\"Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable.\"},\"slashOperator(address,(address,uint32,address[],uint256[],string))\":{\"notice\":\"Called by an AVS to slash an operator in a given operator set. The operator must be registered and have slashable stake allocated to the operator set.\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateAVSMetadataURI(address,string)\":{\"notice\":\"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/AllocationManager.sol\":\"AllocationManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/contracts/core/AllocationManager.sol\":{\"keccak256\":\"0xd016f31c94d1b1410692ea512071f5973703061b417b1a5b23fe21a8334da038\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fe2d7299431dee988ddc9079ad17b7b08891671db3a0e307f7616d6cfaa498f0\",\"dweb:/ipfs/QmVVLwv9McCkM121hinAWHgqATvTvYRgVCUxoiidKJnNZs\"]},\"src/contracts/core/AllocationManagerStorage.sol\":{\"keccak256\":\"0xf589b0a8cfd36934f3591812b9f2a779cb57ee98562535d0885e9ce2d5292bf8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4b15c9fbe2a0ffa89afb75e0cb041f5a1e4e3e1afbf5373d3dec271036c202cc\",\"dweb:/ipfs/QmZvFt9HZFTQ1oXtHVuShCEVyjbNZpC12WYcb4NqF5nvZk\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x15890b5f7f440b06ad0f2f816901f74c77aba0bca678e6102f40961d9e42ab76\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a2c7db5673562265a7a1cda72d90506bb47710e72f17e2eaef87f06a702a29e0\",\"dweb:/ipfs/Qmdi8L2gZD6vj7iMjycwjioWCuagodKPSYFJeVwHVnZz1T\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xb1ef3d6c53eb535f01fb07c8f0247f8b3f9d31a88e5f397c8074363c73251f0f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f3cab7243290d74aaf382ee5e8c820f4a2dab99841fa7d48ff13c01a5a2f7cc3\",\"dweb:/ipfs/QmXq16ZQwHijHSFbcA54vniRBkn7z7WMmAQ6nSDQzhSirF\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f\",\"dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e\",\"dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071\",\"dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG\"]},\"src/contracts/libraries/Snapshots.sol\":{\"keccak256\":\"0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b\",\"dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY\"]},\"src/contracts/mixins/Deprecated_OwnableUpgradeable.sol\":{\"keccak256\":\"0xbc4f8d56fb4828b9c6bc8d7281aa269680c390213e0c9f5718b9dfda7118ddf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://27c580b74186c53bd28ecbb2a6135eaace3e3d221967016d001c12999b496b8f\",\"dweb:/ipfs/Qmbn94Mku6QXDgrp1XMpi5onBisTC3dtTWPJymBa2v22ts\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99\",\"dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegation",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_DEALLOCATION_DELAY",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_ALLOCATION_CONFIGURATION_DELAY",
              "type": "uint32"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Empty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAVSRegistrar"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSnapshotOrdering"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidStrategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidWadToSlash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ModificationAlreadyPending"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonexistentAVSMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorNotSlashable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutOfBounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategiesMustBeInAscendingOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyAlreadyInOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotInOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UninitializedAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSRegistrarSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "magnitude",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "encumberedMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EncumberedMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "maxMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "wadSlashed",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSlashed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "redistributionRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RedistributionAddressSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ALLOCATION_CONFIGURATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEALLOCATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategiesToOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint16[]",
              "name": "numToClear",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearDeallocationQueue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "redistributionRecipients",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRedistributingOperatorSets"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAllocationManagerTypes.DeregisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterFromOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAVSRegistrar",
          "outputs": [
            {
              "internalType": "contract IAVSRegistrar",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatableMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedStake",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedStrategies",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocation",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocationDelay",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocations",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEncumberedMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudesAtBlock",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "futureBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinimumSlashableStake",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "slashableStake",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRedistributionRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegisteredSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSlashCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategiesInOperatorSet",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategyAllocations",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMemberOfOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorRedistributable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorSlashable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRedistributingOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OperatorSet",
                  "name": "operatorSet",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "avs",
                      "type": "address"
                    },
                    {
                      "internalType": "uint32",
                      "name": "id",
                      "type": "uint32"
                    }
                  ]
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint64[]",
                  "name": "newMagnitudes",
                  "type": "uint64[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyAllocations"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.RegisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerForOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategiesFromOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAVSRegistrar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.SlashingParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "wadsToSlash",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "slashOperator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAVSMetadataURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST NOT already exist in the operator setIf the operatorSet is redistributing, the `BEACONCHAIN_ETH_STRAT` may not be added, since redistribution is not supported for native eth",
            "params": {
              "avs": "the avs to set strategies for",
              "operatorSetId": "the operator set to add strategies to",
              "strategies": "the strategies to add"
            }
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "details": "can be called permissionlessly by anyone",
            "params": {
              "numToClear": "a list of number of pending deallocations to clear for each strategy",
              "operator": "address to clear deallocations for",
              "strategies": "a list of strategies to clear deallocations for"
            }
          },
          "constructor": {
            "details": "Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay."
          },
          "createRedistributingOperatorSets(address,(uint32,address[])[],address[])": {
            "details": "Same logic as `createOperatorSets`, except `redistributionRecipients` corresponding to each operator set are stored.      Additionally, emits `RedistributionOperatorSetCreated` event instead of `OperatorSetCreated` for each created operator set.",
            "params": {
              "avs": "The AVS creating the new operator sets.",
              "params": "An array of operator set creation parameters.",
              "redistributionRecipients": "An array of addresses that will receive redistributed funds when operators are slashed."
            }
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "details": "After deregistering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. deregisterOperator` method to complete deregistration. This call MUST succeed in order for deregistration to be successful."
          },
          "getAllocatableMagnitude(address,address)": {
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get allocatable magnitude for"
            },
            "returns": {
              "_0": "magnitude available to be allocated to an operator set"
            }
          },
          "getAllocatedSets(address)": {
            "params": {
              "operator": "the operator to query"
            },
            "returns": {
              "_0": "the list of operator sets the operator has current or pending allocations/deallocations in"
            }
          },
          "getAllocatedStake((address,uint32),address[],address[])": {
            "params": {
              "operatorSet": "the operator set to query",
              "operators": "the operators to query",
              "strategies": "the strategies to query"
            }
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query"
            },
            "returns": {
              "_0": "the list of strategies"
            }
          },
          "getAllocation(address,(address,uint32),address)": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the current/pending stake allocation"
            }
          },
          "getAllocationDelay(address)": {
            "details": "The operator must have a configured delay before allocating magnitude",
            "params": {
              "operator": "The operator to query"
            },
            "returns": {
              "_0": "Whether the operator has configured a delay",
              "_1": "The time in blocks between allocating magnitude and magnitude becoming slashable"
            }
          },
          "getAllocations(address[],(address,uint32),address)": {
            "params": {
              "operatorSet": "the operator set to query",
              "operators": "the operators to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "each operator's allocation"
            }
          },
          "getEncumberedMagnitude(address,address)": {
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get allocatable magnitude for"
            },
            "returns": {
              "_0": "currently allocated magnitude"
            }
          },
          "getMaxMagnitude(address,address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get the max magnitude for"
            },
            "returns": {
              "_0": "the max magnitude for the strategy"
            }
          },
          "getMaxMagnitudes(address,address[])": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMaxMagnitudes(address[],address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operators": "the operators to query",
              "strategy": "the strategy to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each operator"
            }
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "blockNumber": "the blockNumber at which to check the max magnitudes",
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMemberCount((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to get the member count for"
            }
          },
          "getMembers((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "details": "This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents. This method does not consider slashable stake in the withdrawal queue even though there could be slashable stake in the queue.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.",
            "params": {
              "futureBlock": "the block at which to get allocation information. Should be a future block.",
              "operatorSet": "the operator set to query",
              "operators": "the list of operators whose slashable stakes will be returned",
              "strategies": "the strategies that each slashable stake corresponds to"
            }
          },
          "getOperatorSetCount(address)": {
            "params": {
              "avs": "the AVS to query"
            }
          },
          "getRedistributionRecipient((address,uint32))": {
            "params": {
              "operatorSet": "The Operator Set to query."
            },
            "returns": {
              "_0": "For redistributing Operator Sets, returns the configured redistribution address set during Operator Set creation.         For non-redistributing operator sets, returns the `DEFAULT_BURN_ADDRESS`."
            }
          },
          "getRegisteredSets(address)": {
            "params": {
              "operator": "The operator address to query."
            }
          },
          "getSlashCount((address,uint32))": {
            "params": {
              "operatorSet": "The operator set to query."
            },
            "returns": {
              "_0": "The number of slashes for the operator set."
            }
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getStrategyAllocations(address,address)": {
            "details": "Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the list of all operator sets the operator has allocations for",
              "_1": "the corresponding list of allocations from the specific `strategy`"
            }
          },
          "initialize(uint256)": {
            "details": "Initializes the initial owner and paused status."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "params": {
              "operator": "The operator to query",
              "operatorSet": "The operator set to query"
            }
          },
          "isOperatorRedistributable(address)": {
            "params": {
              "operator": "The operator to query."
            }
          },
          "isOperatorSlashable(address,(address,uint32))": {
            "params": {
              "operator": "the operator to check slashability for",
              "operatorSet": "the operator set to check slashability for"
            }
          },
          "isRedistributingOperatorSet((address,uint32))": {
            "params": {
              "operatorSet": "The Operator Set to query."
            },
            "returns": {
              "_0": "For redistributing Operator Sets, returns true.         For non-redistributing Operator Sets, returns false."
            }
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "details": "Updates encumberedMagnitude for the updated strategies",
            "params": {
              "operator": "the operator to modify allocations for",
              "params": "array of magnitude adjustments for one or more operator sets"
            }
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "details": "After registering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. registerOperator` method to complete registration. This call MUST succeed in order for registration to be successful."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST already exist in the operator set",
            "params": {
              "avs": "the avs to remove strategies for",
              "operatorSetId": "the operator set to remove strategies from",
              "strategies": "the strategies to remove"
            }
          },
          "setAVSRegistrar(address,address)": {
            "params": {
              "registrar": "the new registrar address"
            }
          },
          "setAllocationDelay(address,uint32)": {
            "params": {
              "delay": "the allocation delay in blocks",
              "operator": "The operator to set the delay on behalf of."
            }
          },
          "slashOperator(address,(address,uint32,address[],uint256[],string))": {
            "details": "For each strategy:      1. Reduces the operator's current allocation magnitude by wadToSlash proportion.      2. Reduces the strategy's max and encumbered magnitudes proportionally.      3. If there is a pending deallocation, reduces it proportionally.      4. Updates the operator's shares in the DelegationManager.Small slashing amounts may not result in actual token burns due to      rounding, which will result in small amounts of tokens locked in the contract      rather than fully burning through the burn mechanism.",
            "params": {
              "avs": "The AVS address initiating the slash.",
              "params": "The slashing parameters, containing:  - operator: The operator to slash.  - operatorSetId: The ID of the operator set the operator is being slashed from.  - strategies: Array of strategies to slash allocations from (must be in ascending order).  - wadsToSlash: Array of proportions to slash from each strategy (must be between 0 and 1e18).  - description: Description of why the operator was slashed."
            },
            "returns": {
              "_0": "The ID of the slash.",
              "_1": "The amount of shares that were slashed for each strategy."
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateAVSMetadataURI(address,string)": {
            "details": "Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.",
            "params": {
              "metadataURI": "The URI for metadata associated with an AVS."
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ALLOCATION_CONFIGURATION_DELAY()": {
            "notice": "Delay before alloaction delay modifications take effect."
          },
          "DEALLOCATION_DELAY()": {
            "notice": "Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to."
          },
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to add strategies to an operator set"
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "notice": "This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed."
          },
          "createOperatorSets(address,(uint32,address[])[])": {
            "notice": "Allows an AVS to create new operator sets, defining strategies that the operator set uses"
          },
          "createRedistributingOperatorSets(address,(uint32,address[])[],address[])": {
            "notice": "Allows an AVS to create new Redistribution operator sets."
          },
          "delegation()": {
            "notice": "The DelegationManager contract for EigenLayer"
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "notice": "Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed."
          },
          "getAVSRegistrar(address)": {
            "notice": "Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)"
          },
          "getAllocatableMagnitude(address,address)": {
            "notice": "For a strategy, get the amount of magnitude not currently allocated to any operator set"
          },
          "getAllocatedSets(address)": {
            "notice": "Returns the list of operator sets the operator has current or pending allocations/deallocations in"
          },
          "getAllocatedStake((address,uint32),address[],address[])": {
            "notice": "Returns the current allocated stake, irrespective of the operator's slashable status for the operatorSet."
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "notice": "Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set."
          },
          "getAllocation(address,(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocation an operator has from a strategy to an operator set"
          },
          "getAllocationDelay(address)": {
            "notice": "Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false."
          },
          "getAllocations(address[],(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocations for multiple operators from a strategy to an operator set"
          },
          "getEncumberedMagnitude(address,address)": {
            "notice": "For a strategy, get the amount of magnitude that is allocated across one or more operator sets"
          },
          "getMaxMagnitude(address,address)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategy"
          },
          "getMaxMagnitudes(address,address[])": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies"
          },
          "getMaxMagnitudes(address[],address)": {
            "notice": "Returns the maximum magnitudes each operator can allocate for the given strategy"
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies at a given block number"
          },
          "getMemberCount((address,uint32))": {
            "notice": "Returns the number of operators registered to an operatorSet."
          },
          "getMembers((address,uint32))": {
            "notice": "Returns all the operators registered to an operator set"
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "notice": "Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set. Note that this function will return 0 for the slashable stake if the operator is not slashable at the time of the call."
          },
          "getOperatorSetCount(address)": {
            "notice": "Returns the number of operator sets for the AVS"
          },
          "getRedistributionRecipient((address,uint32))": {
            "notice": "Returns the address where slashed funds will be sent for a given operator set."
          },
          "getRegisteredSets(address)": {
            "notice": "Returns a list of all operator sets the operator is registered for"
          },
          "getSlashCount((address,uint32))": {
            "notice": "Returns the number of slashes for a given operator set."
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "notice": "Returns an array of strategies in the operatorSet."
          },
          "getStrategyAllocations(address,address)": {
            "notice": "Given a strategy, returns a list of operator sets and corresponding stake allocations."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "notice": "Returns whether the operator is registered for the operator set"
          },
          "isOperatorRedistributable(address)": {
            "notice": "Returns whether an operator is slashable by a redistributing operator set."
          },
          "isOperatorSet((address,uint32))": {
            "notice": "Returns whether the operator set exists"
          },
          "isOperatorSlashable(address,(address,uint32))": {
            "notice": "Returns whether an operator is slashable by an operator set. This returns true if the operator is registered or their slashableUntil block has not passed. This is because even when operators are deregistered, they still remain slashable for a period of time."
          },
          "isRedistributingOperatorSet((address,uint32))": {
            "notice": "Returns whether a given operator set supports redistribution or not when funds are slashed and burned from EigenLayer."
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "notice": "Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "notice": "Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to remove strategies from an operator set"
          },
          "setAVSRegistrar(address,address)": {
            "notice": "Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address."
          },
          "setAllocationDelay(address,uint32)": {
            "notice": "Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable."
          },
          "slashOperator(address,(address,uint32,address[],uint256[],string))": {
            "notice": "Called by an AVS to slash an operator in a given operator set. The operator must be registered and have slashable stake allocated to the operator set."
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateAVSMetadataURI(address,string)": {
            "notice": "Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated."
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/AllocationManager.sol": "AllocationManager"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol": {
        "keccak256": "0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c",
        "urls": [
          "bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7",
          "dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/contracts/core/AllocationManager.sol": {
        "keccak256": "0xd016f31c94d1b1410692ea512071f5973703061b417b1a5b23fe21a8334da038",
        "urls": [
          "bzz-raw://fe2d7299431dee988ddc9079ad17b7b08891671db3a0e307f7616d6cfaa498f0",
          "dweb:/ipfs/QmVVLwv9McCkM121hinAWHgqATvTvYRgVCUxoiidKJnNZs"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/AllocationManagerStorage.sol": {
        "keccak256": "0xf589b0a8cfd36934f3591812b9f2a779cb57ee98562535d0885e9ce2d5292bf8",
        "urls": [
          "bzz-raw://4b15c9fbe2a0ffa89afb75e0cb041f5a1e4e3e1afbf5373d3dec271036c202cc",
          "dweb:/ipfs/QmZvFt9HZFTQ1oXtHVuShCEVyjbNZpC12WYcb4NqF5nvZk"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d",
        "urls": [
          "bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc",
          "dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0x15890b5f7f440b06ad0f2f816901f74c77aba0bca678e6102f40961d9e42ab76",
        "urls": [
          "bzz-raw://a2c7db5673562265a7a1cda72d90506bb47710e72f17e2eaef87f06a702a29e0",
          "dweb:/ipfs/Qmdi8L2gZD6vj7iMjycwjioWCuagodKPSYFJeVwHVnZz1T"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xb1ef3d6c53eb535f01fb07c8f0247f8b3f9d31a88e5f397c8074363c73251f0f",
        "urls": [
          "bzz-raw://f3cab7243290d74aaf382ee5e8c820f4a2dab99841fa7d48ff13c01a5a2f7cc3",
          "dweb:/ipfs/QmXq16ZQwHijHSFbcA54vniRBkn7z7WMmAQ6nSDQzhSirF"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f",
        "urls": [
          "bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f",
          "dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtilsMixin.sol": {
        "keccak256": "0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b",
        "urls": [
          "bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10",
          "dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5",
        "urls": [
          "bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e",
          "dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04",
        "urls": [
          "bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071",
          "dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Snapshots.sol": {
        "keccak256": "0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6",
        "urls": [
          "bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b",
          "dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY"
        ],
        "license": "MIT"
      },
      "src/contracts/mixins/Deprecated_OwnableUpgradeable.sol": {
        "keccak256": "0xbc4f8d56fb4828b9c6bc8d7281aa269680c390213e0c9f5718b9dfda7118ddf9",
        "urls": [
          "bzz-raw://27c580b74186c53bd28ecbb2a6135eaace3e3d221967016d001c12999b496b8f",
          "dweb:/ipfs/Qmbn94Mku6QXDgrp1XMpi5onBisTC3dtTWPJymBa2v22ts"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446",
        "urls": [
          "bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99",
          "dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 117
}