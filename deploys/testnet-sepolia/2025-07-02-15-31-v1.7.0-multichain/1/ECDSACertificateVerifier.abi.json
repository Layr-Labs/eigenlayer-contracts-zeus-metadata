{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_operatorTableUpdater",
          "type": "address",
          "internalType": "contract IOperatorTableUpdater"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "calculateCertificateDigest",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "messageHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "domainSeparator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorCount",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorInfo",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "operatorIndex",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo",
          "components": [
            {
              "name": "pubkey",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "weights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorInfos",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo[]",
          "components": [
            {
              "name": "pubkey",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "weights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetOwner",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalStakes",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "latestReferenceTimestamp",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxOperatorTableStaleness",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "operatorTableUpdater",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IOperatorTableUpdater"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "updateOperatorTable",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "operatorInfos",
          "type": "tuple[]",
          "internalType": "struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo[]",
          "components": [
            {
              "name": "pubkey",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "weights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "operatorSetConfig",
          "type": "tuple",
          "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
          "components": [
            {
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "maxStalenessPeriod",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "verifyCertificate",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "cert",
          "type": "tuple",
          "internalType": "struct IECDSACertificateVerifierTypes.ECDSACertificate",
          "components": [
            {
              "name": "referenceTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "messageHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "sig",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verifyCertificateNominal",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "cert",
          "type": "tuple",
          "internalType": "struct IECDSACertificateVerifierTypes.ECDSACertificate",
          "components": [
            {
              "name": "referenceTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "messageHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "sig",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "totalStakeNominalThresholds",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verifyCertificateProportion",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "cert",
          "type": "tuple",
          "internalType": "struct IECDSACertificateVerifierTypes.ECDSACertificate",
          "components": [
            {
              "name": "referenceTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "messageHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "sig",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "totalStakeProportionThresholds",
          "type": "uint16[]",
          "internalType": "uint16[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxStalenessPeriodUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "maxStalenessPeriod",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetOwnerUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TableUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "operatorInfos",
          "type": "tuple[]",
          "indexed": false,
          "internalType": "struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo[]",
          "components": [
            {
              "name": "pubkey",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "weights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CertificateStale",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignatureLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyTableUpdater",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReferenceTimestampDoesNotExist",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RootDisabled",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SignatureExpired",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "TableUpdateStale",
      "inputs": []
    },
    {
      "type": "error",
      "name": "VerificationFailed",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561000f575f5ffd5b5060405161244c38038061244c83398101604081905261002e9161016d565b6001600160a01b03821660805280806100468161005b565b60a0525061005490506100a1565b5050610297565b5f5f829050601f8151111561008e578260405163305a27a960e01b8152600401610085919061023c565b60405180910390fd5b805161009982610271565b179392505050565b5f54610100900460ff16156101085760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608401610085565b5f5460ff90811614610157575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b634e487b7160e01b5f52604160045260245ffd5b5f5f6040838503121561017e575f5ffd5b82516001600160a01b0381168114610194575f5ffd5b60208401519092506001600160401b038111156101af575f5ffd5b8301601f810185136101bf575f5ffd5b80516001600160401b038111156101d8576101d8610159565b604051601f8201601f19908116603f011681016001600160401b038111828210171561020657610206610159565b60405281815282820160200187101561021d575f5ffd5b8160208401602083015e5f602083830101528093505050509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80516020808301519190811015610291575f198160200360031b1b821691505b50919050565b60805160a05161217f6102cd5f395f8181610679015261123f01525f81816101db015281816106ad0152610e74015261217f5ff3fe608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c80636141879e1161009357806384818920116100635780638481892014610248578063be86e0b21461025b578063c0da24201461027e578063f698da2514610291575f5ffd5b80636141879e146101c357806368d6e081146101d65780637c85ac4c1461021557806380c7d3f314610235575f5ffd5b806323c2a3cb116100ce57806323c2a3cb1461015e57806354fd4d501461018657806356d482f51461019b5780635ddb9b5b146101b0575f5ffd5b806304cdbae4146100f4578063082ef73d1461011d578063184674341461013d575b5f5ffd5b6101076101023660046117b7565b610299565b60405161011491906117e9565b60405180910390f35b61013061012b3660046118e3565b61049d565b6040516101149190611979565b61015061014b36600461198b565b6105d0565b604051908152602001610114565b61017161016c3660046119b3565b61063f565b60405163ffffffff9091168152602001610114565b61018e610672565b60405161011491906119fc565b6101ae6101a9366004611a4e565b6106a2565b005b6101716101be366004611ac0565b61089f565b6101716101d1366004611ac0565b6108c5565b6101fd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b6102286102233660046119b3565b6108eb565b6040516101149190611ada565b610107610243366004611b4d565b610a59565b6101fd610256366004611ac0565b610a65565b61026e610269366004611b98565b610a8e565b6040519015158152602001610114565b61026e61028c366004611c7a565b610b21565b610150610c13565b60605f6102b36102ae36869003860186611ac0565b610cd3565b5f8181526003602052604090205490915063ffffffff8481169116146102ec57604051630cad17b760e31b815260040160405180910390fd5b5f81815260046020908152604080832063ffffffff871684529091529020548061032957604051630cad17b760e31b815260040160405180910390fd5b5f82815260056020908152604080832063ffffffff88168452825280832083805290915281206001015490816001600160401b0381111561036c5761036c61182b565b604051908082528060200260200182016040528015610395578160200160208202803683370190505b5090505f5b83811015610490575f85815260056020908152604080832063ffffffff808c168552908352818420908516845282528083206001018054825181850281018501909352808352919290919083018282801561041257602002820191905f5260205f20905b8154815260200190600101908083116103fe575b509394505f93505050505b81518110801561042c57508481105b156104865781818151811061044357610443611cf0565b602002602001015184828151811061045d5761045d611cf0565b602002602001018181516104719190611d18565b9052508061047e81611d2b565b91505061041d565b505060010161039a565b5093505050505b92915050565b604080518082019091525f8152606060208201525f6104bb85610cd3565b5f81815260046020908152604080832063ffffffff808a1685529252909120549192508416106105315760405162461bcd60e51b815260206004820152601c60248201527f4f70657261746f7220696e646578206f7574206f6620626f756e647300000000604482015260640160405180910390fd5b5f81815260056020908152604080832063ffffffff808916855290835281842090871684528252918290208251808401845281546001600160a01b03168152600182018054855181860281018601909652808652919492938581019392908301828280156105bc57602002820191905f5260205f20905b8154815260200190600101908083116105a8575b5050505050815250509150505b9392505050565b604080517fda346acb3ce99e7c5132bf8cafb159ad8085970ebfdba78007ef0fe163063d14602082015263ffffffff841691810191909152606081018290525f90819060800160405160208183030381529060405280519060200120905061063781610d36565b949350505050565b5f5f61064a84610cd3565b5f90815260046020908152604080832063ffffffff8716845290915290205491505092915050565b606061069d7f0000000000000000000000000000000000000000000000000000000000000000610d7c565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106eb5760405163030c1b6b60e11b815260040160405180910390fd5b5f6106fe6102ae36889003880188611ac0565b5f8181526003602052604090205490915063ffffffff9081169086161161073857604051632f20889f60e01b815260040160405180910390fd5b5f81815260046020908152604080832063ffffffff8916845290915281208490555b838110156107c45784848281811061077457610774611cf0565b90506020028101906107869190611d43565b5f83815260056020908152604080832063ffffffff808c168552908352818420908616845290915290206107ba8282611d78565b505060010161075a565b505f818152600360209081526040909120805463ffffffff191663ffffffff88161790556107f490830183611e7b565b5f8281526001602090815260409182902080546001600160a01b0319166001600160a01b03949094169390931790925561083391908401908401611e96565b5f8281526002602052604090819020805463ffffffff191663ffffffff9390931692909217909155517f4f588da9ec57976194a79b5594f8f8782923d93013df2b9ed12fe125805011ef9061088f908890889088908890611eaf565b60405180910390a1505050505050565b5f5f6108aa83610cd3565b5f9081526003602052604090205463ffffffff169392505050565b5f5f6108d083610cd3565b5f9081526002602052604090205463ffffffff169392505050565b60605f6108f784610cd3565b5f81815260046020908152604080832063ffffffff8089168552925282205492935082166001600160401b038111156109325761093261182b565b60405190808252806020026020018201604052801561097757816020015b604080518082019091525f8152606060208201528152602001906001900390816109505790505b5090505f5b8263ffffffff168163ffffffff161015610a4f575f84815260056020908152604080832063ffffffff808b16855290835281842090851684528252918290208251808401845281546001600160a01b0316815260018201805485518186028101860190965280865291949293858101939290830182828015610a1b57602002820191905f5260205f20905b815481526020019060010190808311610a07575b505050505081525050828263ffffffff1681518110610a3c57610a3c611cf0565b602090810291909101015260010161097c565b5095945050505050565b60606105c98383610db9565b5f5f610a7083610cd3565b5f908152600160205260409020546001600160a01b03169392505050565b5f5f610a9a8585610db9565b90508251815114610abe5760405163512509d360e11b815260040160405180910390fd5b5f5b8151811015610b1557838181518110610adb57610adb611cf0565b6020026020010151828281518110610af557610af5611cf0565b60200260200101511015610b0d575f925050506105c9565b600101610ac0565b50600195945050505050565b5f5f610b2d8686610db9565b90505f610b41876101026020890189611e96565b82519091508414610b655760405163512509d360e11b815260040160405180910390fd5b5f5b8251811015610c05575f612710878784818110610b8657610b86611cf0565b9050602002016020810190610b9b9190611fe2565b61ffff16848481518110610bb157610bb1611cf0565b6020026020010151610bc39190611d61565b610bcd9190612017565b905080848381518110610be257610be2611cf0565b60200260200101511015610bfc575f945050505050610637565b50600101610b67565b506001979650505050505050565b60408051808201909152600a81526922b4b3b2b72630bcb2b960b11b6020909101525f7f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a27667f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea610c80611237565b8051602091820120604051610cb8949392309101938452602084019290925260408301526001600160a01b0316606082015260800190565b60405160208183030381529060405280519060200120905090565b5f815f0151826020015163ffffffff16604051602001610d1e92919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b6040516020818303038152906040526104979061202a565b5f610d3f610c13565b60405161190160f01b6020820152602281019190915260428101839052606201604051602081830303815290604052805190602001209050919050565b60605f610d88836112ac565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b60605f610dce6102ae36869003860186611ac0565b5f8181526002602090815260409091205491925063ffffffff90911690610df790850185611e96565b610e01919061204d565b63ffffffff16421115610e275760405163640fcd6b60e11b815260040160405180910390fd5b610e346020840184611e96565b5f8281526003602052604090205463ffffffff908116911614610e6a57604051630cad17b760e31b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166364e1df84610ea66020860186611e96565b6040516001600160e01b031960e084901b16815263ffffffff919091166004820152602401602060405180830381865afa158015610ee6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0a9190612069565b610f2757604051631b14174b60e01b815260040160405180910390fd5b5f610f39856101026020870187611e96565b90505f81516001600160401b03811115610f5557610f5561182b565b604051908082528060200260200182016040528015610f7e578160200160208202803683370190505b5090505f610f9c610f926020880188611e96565b87602001356105d0565b90505f80610fea83610fb160408b018b612088565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506112d392505050565b915091508061100c5760405163439cc0cd60e01b815260040160405180910390fd5b5f5b8251811015611229575f83828151811061102a5761102a611cf0565b602002602001015190505f5f905061105d60405180604001604052805f6001600160a01b03168152602001606081525090565b5f5b60045f8c81526020019081526020015f205f8e5f0160208101906110839190611e96565b63ffffffff1663ffffffff1681526020019081526020015f20548110156111885760055f8c81526020019081526020015f205f8e5f0160208101906110c89190611e96565b63ffffffff908116825260208083019390935260409182015f90812091851681529083528190208151808301835281546001600160a01b03168152600182018054845181870281018701909552808552919492938584019390929083018282801561115057602002820191905f5260205f20905b81548152602001906001019080831161113c575b5050505050815250509150836001600160a01b0316825f01516001600160a01b0316036111805760019250611188565b60010161105f565b50816111a75760405163439cc0cd60e01b815260040160405180910390fd5b60208101515f5b8151811080156111be5750895181105b15611218578181815181106111d5576111d5611cf0565b60200260200101518a82815181106111ef576111ef611cf0565b602002602001018181516112039190611d18565b9052508061121081611d2b565b9150506111ae565b50506001909301925061100e915050565b509298975050505050505050565b60605f6112637f0000000000000000000000000000000000000000000000000000000000000000610d7c565b9050805f8151811061127757611277611cf0565b016020908101516040516001600160f81b03199091169181019190915260210160405160208183030381529060405291505090565b5f60ff8216601f81111561049757604051632cd44ac360e21b815260040160405180910390fd5b60605f5f83511180156112f15750604183516112ef91906120ca565b155b61130e57604051634be6321b60e01b815260040160405180910390fd5b5f6041845161131d9190612017565b9050806001600160401b038111156113375761133761182b565b604051908082528060200260200182016040528015611360578160200160208202803683370190505b5092505f5b818110156114e257604080516041808252608082019092525f916020820181803683370190505090505f5b60418110156113fb5786816113a6856041611d61565b6113b09190611d18565b815181106113c0576113c0611cf0565b602001015160f81c60f81b8282815181106113dd576113dd611cf0565b60200101906001600160f81b03191690815f1a905350600101611390565b505f5f61140889846114f0565b90925090505f816004811115611420576114206120dd565b14158061143457506001600160a01b038216155b1561144757505f94506114e99350505050565b5f8411801561148b57508661145d6001866120f1565b8151811061146d5761146d611cf0565b60200260200101516001600160a01b0316826001600160a01b031611155b1561149e57505f94506114e99350505050565b6114ab828a855f1961152f565b818785815181106114be576114be611cf0565b6001600160a01b039290921660209283029190910190910152505050600101611365565b5060019150505b9250929050565b5f5f8251604103611524576020830151604084015160608501515f1a61151887828585611587565b945094505050506114e9565b505f905060026114e9565b4281101561155057604051630819bdcd60e01b815260040160405180910390fd5b6115646001600160a01b0385168484611644565b61158157604051638baa579f60e01b815260040160405180910390fd5b50505050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156115bc57505f9050600361163b565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561160d573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b038116611635575f6001925092505061163b565b91505f90505b94509492505050565b5f5f5f61165185856114f0565b90925090505f816004811115611669576116696120dd565b1480156116875750856001600160a01b0316826001600160a01b0316145b8061169857506116988686866116a2565b9695505050505050565b5f5f5f856001600160a01b0316631626ba7e60e01b86866040516024016116ca929190612104565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611708919061211c565b5f60405180830381855afa9150503d805f8114611740576040519150601f19603f3d011682016040523d82523d5f602084013e611745565b606091505b509150915081801561175957506020815110155b801561169857508051630b135d3f60e11b9061177e9083016020908101908401612132565b149695505050505050565b5f60408284031215611799575f5ffd5b50919050565b803563ffffffff811681146117b2575f5ffd5b919050565b5f5f606083850312156117c8575f5ffd5b6117d28484611789565b91506117e06040840161179f565b90509250929050565b602080825282518282018190525f918401906040840190835b81811015611820578351835260209384019390920191600101611802565b509095945050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156118675761186761182b565b604052919050565b6001600160a01b0381168114611883575f5ffd5b50565b5f60408284031215611896575f5ffd5b604080519081016001600160401b03811182821017156118b8576118b861182b565b60405290508082356118c98161186f565b81526118d76020840161179f565b60208201525092915050565b5f5f5f608084860312156118f5575f5ffd5b6118ff8585611886565b925061190d6040850161179f565b915061191b6060850161179f565b90509250925092565b80516001600160a01b03168252602080820151604082850181905281519085018190525f929190910190829060608601905b80831015610a4f5783518252602082019150602084019350600183019250611956565b602081525f6105c96020830184611924565b5f5f6040838503121561199c575f5ffd5b6119a58361179f565b946020939093013593505050565b5f5f606083850312156119c4575f5ffd5b6117d28484611886565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6105c960208301846119ce565b5f5f83601f840112611a1e575f5ffd5b5081356001600160401b03811115611a34575f5ffd5b6020830191508360208260051b85010111156114e9575f5ffd5b5f5f5f5f5f60c08688031215611a62575f5ffd5b611a6c8787611789565b9450611a7a6040870161179f565b935060608601356001600160401b03811115611a94575f5ffd5b611aa088828901611a0e565b9094509250611ab490508760808801611789565b90509295509295909350565b5f60408284031215611ad0575f5ffd5b6105c98383611886565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015611b3157603f19878603018452611b1c858351611924565b94506020938401939190910190600101611b00565b50929695505050505050565b5f60608284031215611799575f5ffd5b5f5f60608385031215611b5e575f5ffd5b611b688484611789565b915060408301356001600160401b03811115611b82575f5ffd5b611b8e85828601611b3d565b9150509250929050565b5f5f5f60808486031215611baa575f5ffd5b611bb48585611789565b925060408401356001600160401b03811115611bce575f5ffd5b611bda86828701611b3d565b92505060608401356001600160401b03811115611bf5575f5ffd5b8401601f81018613611c05575f5ffd5b80356001600160401b03811115611c1e57611c1e61182b565b8060051b611c2e6020820161183f565b91825260208184018101929081019089841115611c49575f5ffd5b6020850194505b83851015611c6b578435825260209485019490910190611c50565b80955050505050509250925092565b5f5f5f5f60808587031215611c8d575f5ffd5b611c978686611789565b935060408501356001600160401b03811115611cb1575f5ffd5b611cbd87828801611b3d565b93505060608501356001600160401b03811115611cd8575f5ffd5b611ce487828801611a0e565b95989497509550505050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561049757610497611d04565b5f60018201611d3c57611d3c611d04565b5060010190565b5f8235603e19833603018112611d57575f5ffd5b9190910192915050565b808202811582820484141761049757610497611d04565b8135611d838161186f565b81546001600160a01b0319166001600160a01b0391909116178155602082013536839003601e19018112611db5575f5ffd5b820180356001600160401b03811115611dcc575f5ffd5b6020820191508060051b3603821315611de3575f5ffd5b600183016001600160401b03821115611dfe57611dfe61182b565b68010000000000000000821115611e1757611e1761182b565b805482825580831015611e4c575f828152602090208381019082015b80821015611e49575f8255600182019150611e33565b50505b505f90815260208120905b82811015611e7357833582820155602090930192600101611e57565b505050505050565b5f60208284031215611e8b575f5ffd5b81356105c98161186f565b5f60208284031215611ea6575f5ffd5b6105c98261179f565b5f608082018635611ebf8161186f565b6001600160a01b0316835263ffffffff611edb6020890161179f565b16602084015263ffffffff861660408401526080606084015283905260a0600584901b83018101908301855f603e1936839003015b87821015611fd357868503609f190184528235818112611f2e575f5ffd5b89018035611f3b8161186f565b6001600160a01b03168652602081013536829003601e19018112611f5d575f5ffd5b016020810190356001600160401b03811115611f77575f5ffd5b8060051b803603831315611f89575f5ffd5b60406020890181905288018290526001600160fb1b03821115611faa575f5ffd5b808360608a01376060818901019750505050602083019250602084019350600182019150611f10565b50929998505050505050505050565b5f60208284031215611ff2575f5ffd5b813561ffff811681146105c9575f5ffd5b634e487b7160e01b5f52601260045260245ffd5b5f8261202557612025612003565b500490565b80516020808301519190811015611799575f1960209190910360031b1b16919050565b63ffffffff818116838216019081111561049757610497611d04565b5f60208284031215612079575f5ffd5b815180151581146105c9575f5ffd5b5f5f8335601e1984360301811261209d575f5ffd5b8301803591506001600160401b038211156120b6575f5ffd5b6020019150368190038213156114e9575f5ffd5b5f826120d8576120d8612003565b500690565b634e487b7160e01b5f52602160045260245ffd5b8181038181111561049757610497611d04565b828152604060208201525f61063760408301846119ce565b5f82518060208501845e5f920191825250919050565b5f60208284031215612142575f5ffd5b505191905056fea2646970667358221220ff854521aed3fa42f72e0dbec14028754b09a83d79bc8b7d0b9ca7a3e78d463c64736f6c634300081b0033",
    "sourceMap": "548:12644:178:-:0;;;1199:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2038:44:179;;;;1377:8:178;;961:24:172;1377:8:178;961:22:172;:24::i;:::-;950:35;;-1:-1:-1;1397:22:178::2;::::0;-1:-1:-1;1397:20:178::2;:22::i;:::-;1199:227:::0;;548:12644;;1711:286:38;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:38;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:38:o;5939:280:27:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:27;;2211:2:321;5998:66:27;;;2193:21:321;2250:2;2230:18;;;2223:30;2289:34;2269:18;;;2262:62;-1:-1:-1;;;2340:18:321;;;2333:37;2387:19;;5998:66:27;2009:403:321;5998:66:27;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:27;6140:15;6125:30;;;;;;6174:28;;2559:36:321;;;6174:28:27;;2547:2:321;2532:18;6174:28:27;;;;;;;6074:139;5939:280::o;14:127:321:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1133;266:6;274;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;369:16;;-1:-1:-1;;;;;414:31:321;;404:42;;394:70;;460:1;457;450:12;394:70;532:2;517:18;;511:25;483:5;;-1:-1:-1;;;;;;548:30:321;;545:50;;;591:1;588;581:12;545:50;614:22;;667:4;659:13;;655:27;-1:-1:-1;645:55:321;;696:1;693;686:12;645:55;723:9;;-1:-1:-1;;;;;744:30:321;;741:56;;;777:18;;:::i;:::-;826:2;820:9;918:2;880:17;;-1:-1:-1;;876:31:321;;;909:2;872:40;868:54;856:67;;-1:-1:-1;;;;;938:34:321;;974:22;;;935:62;932:88;;;1000:18;;:::i;:::-;1036:2;1029:22;1060;;;1101:15;;;1118:2;1097:24;1094:37;-1:-1:-1;1091:57:321;;;1144:1;1141;1134:12;1091:57;1193:6;1188:2;1184;1180:11;1175:2;1167:6;1163:15;1157:43;1246:1;1241:2;1232:6;1224;1220:19;1216:28;1209:39;1267:6;1257:16;;;;;146:1133;;;;;:::o;1284:418::-;1433:2;1422:9;1415:21;1396:4;1465:6;1459:13;1508:6;1503:2;1492:9;1488:18;1481:34;1567:6;1562:2;1554:6;1550:15;1545:2;1534:9;1530:18;1524:50;1623:1;1618:2;1609:6;1598:9;1594:22;1590:31;1583:42;1693:2;1686;1682:7;1677:2;1669:6;1665:15;1661:29;1650:9;1646:45;1642:54;1634:62;;;1284:418;;;;:::o;1707:297::-;1825:12;;1872:4;1861:16;;;1855:23;;1825:12;1890:16;;1887:111;;;1984:1;1980:6;1970;1964:4;1960:17;1957:1;1953:25;1949:38;1942:5;1938:50;1929:59;;1887:111;;1707:297;;;:::o;2417:184::-;548:12644:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c80636141879e1161009357806384818920116100635780638481892014610248578063be86e0b21461025b578063c0da24201461027e578063f698da2514610291575f5ffd5b80636141879e146101c357806368d6e081146101d65780637c85ac4c1461021557806380c7d3f314610235575f5ffd5b806323c2a3cb116100ce57806323c2a3cb1461015e57806354fd4d501461018657806356d482f51461019b5780635ddb9b5b146101b0575f5ffd5b806304cdbae4146100f4578063082ef73d1461011d578063184674341461013d575b5f5ffd5b6101076101023660046117b7565b610299565b60405161011491906117e9565b60405180910390f35b61013061012b3660046118e3565b61049d565b6040516101149190611979565b61015061014b36600461198b565b6105d0565b604051908152602001610114565b61017161016c3660046119b3565b61063f565b60405163ffffffff9091168152602001610114565b61018e610672565b60405161011491906119fc565b6101ae6101a9366004611a4e565b6106a2565b005b6101716101be366004611ac0565b61089f565b6101716101d1366004611ac0565b6108c5565b6101fd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b6102286102233660046119b3565b6108eb565b6040516101149190611ada565b610107610243366004611b4d565b610a59565b6101fd610256366004611ac0565b610a65565b61026e610269366004611b98565b610a8e565b6040519015158152602001610114565b61026e61028c366004611c7a565b610b21565b610150610c13565b60605f6102b36102ae36869003860186611ac0565b610cd3565b5f8181526003602052604090205490915063ffffffff8481169116146102ec57604051630cad17b760e31b815260040160405180910390fd5b5f81815260046020908152604080832063ffffffff871684529091529020548061032957604051630cad17b760e31b815260040160405180910390fd5b5f82815260056020908152604080832063ffffffff88168452825280832083805290915281206001015490816001600160401b0381111561036c5761036c61182b565b604051908082528060200260200182016040528015610395578160200160208202803683370190505b5090505f5b83811015610490575f85815260056020908152604080832063ffffffff808c168552908352818420908516845282528083206001018054825181850281018501909352808352919290919083018282801561041257602002820191905f5260205f20905b8154815260200190600101908083116103fe575b509394505f93505050505b81518110801561042c57508481105b156104865781818151811061044357610443611cf0565b602002602001015184828151811061045d5761045d611cf0565b602002602001018181516104719190611d18565b9052508061047e81611d2b565b91505061041d565b505060010161039a565b5093505050505b92915050565b604080518082019091525f8152606060208201525f6104bb85610cd3565b5f81815260046020908152604080832063ffffffff808a1685529252909120549192508416106105315760405162461bcd60e51b815260206004820152601c60248201527f4f70657261746f7220696e646578206f7574206f6620626f756e647300000000604482015260640160405180910390fd5b5f81815260056020908152604080832063ffffffff808916855290835281842090871684528252918290208251808401845281546001600160a01b03168152600182018054855181860281018601909652808652919492938581019392908301828280156105bc57602002820191905f5260205f20905b8154815260200190600101908083116105a8575b5050505050815250509150505b9392505050565b604080517fda346acb3ce99e7c5132bf8cafb159ad8085970ebfdba78007ef0fe163063d14602082015263ffffffff841691810191909152606081018290525f90819060800160405160208183030381529060405280519060200120905061063781610d36565b949350505050565b5f5f61064a84610cd3565b5f90815260046020908152604080832063ffffffff8716845290915290205491505092915050565b606061069d7f0000000000000000000000000000000000000000000000000000000000000000610d7c565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106eb5760405163030c1b6b60e11b815260040160405180910390fd5b5f6106fe6102ae36889003880188611ac0565b5f8181526003602052604090205490915063ffffffff9081169086161161073857604051632f20889f60e01b815260040160405180910390fd5b5f81815260046020908152604080832063ffffffff8916845290915281208490555b838110156107c45784848281811061077457610774611cf0565b90506020028101906107869190611d43565b5f83815260056020908152604080832063ffffffff808c168552908352818420908616845290915290206107ba8282611d78565b505060010161075a565b505f818152600360209081526040909120805463ffffffff191663ffffffff88161790556107f490830183611e7b565b5f8281526001602090815260409182902080546001600160a01b0319166001600160a01b03949094169390931790925561083391908401908401611e96565b5f8281526002602052604090819020805463ffffffff191663ffffffff9390931692909217909155517f4f588da9ec57976194a79b5594f8f8782923d93013df2b9ed12fe125805011ef9061088f908890889088908890611eaf565b60405180910390a1505050505050565b5f5f6108aa83610cd3565b5f9081526003602052604090205463ffffffff169392505050565b5f5f6108d083610cd3565b5f9081526002602052604090205463ffffffff169392505050565b60605f6108f784610cd3565b5f81815260046020908152604080832063ffffffff8089168552925282205492935082166001600160401b038111156109325761093261182b565b60405190808252806020026020018201604052801561097757816020015b604080518082019091525f8152606060208201528152602001906001900390816109505790505b5090505f5b8263ffffffff168163ffffffff161015610a4f575f84815260056020908152604080832063ffffffff808b16855290835281842090851684528252918290208251808401845281546001600160a01b0316815260018201805485518186028101860190965280865291949293858101939290830182828015610a1b57602002820191905f5260205f20905b815481526020019060010190808311610a07575b505050505081525050828263ffffffff1681518110610a3c57610a3c611cf0565b602090810291909101015260010161097c565b5095945050505050565b60606105c98383610db9565b5f5f610a7083610cd3565b5f908152600160205260409020546001600160a01b03169392505050565b5f5f610a9a8585610db9565b90508251815114610abe5760405163512509d360e11b815260040160405180910390fd5b5f5b8151811015610b1557838181518110610adb57610adb611cf0565b6020026020010151828281518110610af557610af5611cf0565b60200260200101511015610b0d575f925050506105c9565b600101610ac0565b50600195945050505050565b5f5f610b2d8686610db9565b90505f610b41876101026020890189611e96565b82519091508414610b655760405163512509d360e11b815260040160405180910390fd5b5f5b8251811015610c05575f612710878784818110610b8657610b86611cf0565b9050602002016020810190610b9b9190611fe2565b61ffff16848481518110610bb157610bb1611cf0565b6020026020010151610bc39190611d61565b610bcd9190612017565b905080848381518110610be257610be2611cf0565b60200260200101511015610bfc575f945050505050610637565b50600101610b67565b506001979650505050505050565b60408051808201909152600a81526922b4b3b2b72630bcb2b960b11b6020909101525f7f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a27667f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea610c80611237565b8051602091820120604051610cb8949392309101938452602084019290925260408301526001600160a01b0316606082015260800190565b60405160208183030381529060405280519060200120905090565b5f815f0151826020015163ffffffff16604051602001610d1e92919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b6040516020818303038152906040526104979061202a565b5f610d3f610c13565b60405161190160f01b6020820152602281019190915260428101839052606201604051602081830303815290604052805190602001209050919050565b60605f610d88836112ac565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b60605f610dce6102ae36869003860186611ac0565b5f8181526002602090815260409091205491925063ffffffff90911690610df790850185611e96565b610e01919061204d565b63ffffffff16421115610e275760405163640fcd6b60e11b815260040160405180910390fd5b610e346020840184611e96565b5f8281526003602052604090205463ffffffff908116911614610e6a57604051630cad17b760e31b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166364e1df84610ea66020860186611e96565b6040516001600160e01b031960e084901b16815263ffffffff919091166004820152602401602060405180830381865afa158015610ee6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0a9190612069565b610f2757604051631b14174b60e01b815260040160405180910390fd5b5f610f39856101026020870187611e96565b90505f81516001600160401b03811115610f5557610f5561182b565b604051908082528060200260200182016040528015610f7e578160200160208202803683370190505b5090505f610f9c610f926020880188611e96565b87602001356105d0565b90505f80610fea83610fb160408b018b612088565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506112d392505050565b915091508061100c5760405163439cc0cd60e01b815260040160405180910390fd5b5f5b8251811015611229575f83828151811061102a5761102a611cf0565b602002602001015190505f5f905061105d60405180604001604052805f6001600160a01b03168152602001606081525090565b5f5b60045f8c81526020019081526020015f205f8e5f0160208101906110839190611e96565b63ffffffff1663ffffffff1681526020019081526020015f20548110156111885760055f8c81526020019081526020015f205f8e5f0160208101906110c89190611e96565b63ffffffff908116825260208083019390935260409182015f90812091851681529083528190208151808301835281546001600160a01b03168152600182018054845181870281018701909552808552919492938584019390929083018282801561115057602002820191905f5260205f20905b81548152602001906001019080831161113c575b5050505050815250509150836001600160a01b0316825f01516001600160a01b0316036111805760019250611188565b60010161105f565b50816111a75760405163439cc0cd60e01b815260040160405180910390fd5b60208101515f5b8151811080156111be5750895181105b15611218578181815181106111d5576111d5611cf0565b60200260200101518a82815181106111ef576111ef611cf0565b602002602001018181516112039190611d18565b9052508061121081611d2b565b9150506111ae565b50506001909301925061100e915050565b509298975050505050505050565b60605f6112637f0000000000000000000000000000000000000000000000000000000000000000610d7c565b9050805f8151811061127757611277611cf0565b016020908101516040516001600160f81b03199091169181019190915260210160405160208183030381529060405291505090565b5f60ff8216601f81111561049757604051632cd44ac360e21b815260040160405180910390fd5b60605f5f83511180156112f15750604183516112ef91906120ca565b155b61130e57604051634be6321b60e01b815260040160405180910390fd5b5f6041845161131d9190612017565b9050806001600160401b038111156113375761133761182b565b604051908082528060200260200182016040528015611360578160200160208202803683370190505b5092505f5b818110156114e257604080516041808252608082019092525f916020820181803683370190505090505f5b60418110156113fb5786816113a6856041611d61565b6113b09190611d18565b815181106113c0576113c0611cf0565b602001015160f81c60f81b8282815181106113dd576113dd611cf0565b60200101906001600160f81b03191690815f1a905350600101611390565b505f5f61140889846114f0565b90925090505f816004811115611420576114206120dd565b14158061143457506001600160a01b038216155b1561144757505f94506114e99350505050565b5f8411801561148b57508661145d6001866120f1565b8151811061146d5761146d611cf0565b60200260200101516001600160a01b0316826001600160a01b031611155b1561149e57505f94506114e99350505050565b6114ab828a855f1961152f565b818785815181106114be576114be611cf0565b6001600160a01b039290921660209283029190910190910152505050600101611365565b5060019150505b9250929050565b5f5f8251604103611524576020830151604084015160608501515f1a61151887828585611587565b945094505050506114e9565b505f905060026114e9565b4281101561155057604051630819bdcd60e01b815260040160405180910390fd5b6115646001600160a01b0385168484611644565b61158157604051638baa579f60e01b815260040160405180910390fd5b50505050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156115bc57505f9050600361163b565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561160d573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b038116611635575f6001925092505061163b565b91505f90505b94509492505050565b5f5f5f61165185856114f0565b90925090505f816004811115611669576116696120dd565b1480156116875750856001600160a01b0316826001600160a01b0316145b8061169857506116988686866116a2565b9695505050505050565b5f5f5f856001600160a01b0316631626ba7e60e01b86866040516024016116ca929190612104565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611708919061211c565b5f60405180830381855afa9150503d805f8114611740576040519150601f19603f3d011682016040523d82523d5f602084013e611745565b606091505b509150915081801561175957506020815110155b801561169857508051630b135d3f60e11b9061177e9083016020908101908401612132565b149695505050505050565b5f60408284031215611799575f5ffd5b50919050565b803563ffffffff811681146117b2575f5ffd5b919050565b5f5f606083850312156117c8575f5ffd5b6117d28484611789565b91506117e06040840161179f565b90509250929050565b602080825282518282018190525f918401906040840190835b81811015611820578351835260209384019390920191600101611802565b509095945050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156118675761186761182b565b604052919050565b6001600160a01b0381168114611883575f5ffd5b50565b5f60408284031215611896575f5ffd5b604080519081016001600160401b03811182821017156118b8576118b861182b565b60405290508082356118c98161186f565b81526118d76020840161179f565b60208201525092915050565b5f5f5f608084860312156118f5575f5ffd5b6118ff8585611886565b925061190d6040850161179f565b915061191b6060850161179f565b90509250925092565b80516001600160a01b03168252602080820151604082850181905281519085018190525f929190910190829060608601905b80831015610a4f5783518252602082019150602084019350600183019250611956565b602081525f6105c96020830184611924565b5f5f6040838503121561199c575f5ffd5b6119a58361179f565b946020939093013593505050565b5f5f606083850312156119c4575f5ffd5b6117d28484611886565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6105c960208301846119ce565b5f5f83601f840112611a1e575f5ffd5b5081356001600160401b03811115611a34575f5ffd5b6020830191508360208260051b85010111156114e9575f5ffd5b5f5f5f5f5f60c08688031215611a62575f5ffd5b611a6c8787611789565b9450611a7a6040870161179f565b935060608601356001600160401b03811115611a94575f5ffd5b611aa088828901611a0e565b9094509250611ab490508760808801611789565b90509295509295909350565b5f60408284031215611ad0575f5ffd5b6105c98383611886565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015611b3157603f19878603018452611b1c858351611924565b94506020938401939190910190600101611b00565b50929695505050505050565b5f60608284031215611799575f5ffd5b5f5f60608385031215611b5e575f5ffd5b611b688484611789565b915060408301356001600160401b03811115611b82575f5ffd5b611b8e85828601611b3d565b9150509250929050565b5f5f5f60808486031215611baa575f5ffd5b611bb48585611789565b925060408401356001600160401b03811115611bce575f5ffd5b611bda86828701611b3d565b92505060608401356001600160401b03811115611bf5575f5ffd5b8401601f81018613611c05575f5ffd5b80356001600160401b03811115611c1e57611c1e61182b565b8060051b611c2e6020820161183f565b91825260208184018101929081019089841115611c49575f5ffd5b6020850194505b83851015611c6b578435825260209485019490910190611c50565b80955050505050509250925092565b5f5f5f5f60808587031215611c8d575f5ffd5b611c978686611789565b935060408501356001600160401b03811115611cb1575f5ffd5b611cbd87828801611b3d565b93505060608501356001600160401b03811115611cd8575f5ffd5b611ce487828801611a0e565b95989497509550505050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561049757610497611d04565b5f60018201611d3c57611d3c611d04565b5060010190565b5f8235603e19833603018112611d57575f5ffd5b9190910192915050565b808202811582820484141761049757610497611d04565b8135611d838161186f565b81546001600160a01b0319166001600160a01b0391909116178155602082013536839003601e19018112611db5575f5ffd5b820180356001600160401b03811115611dcc575f5ffd5b6020820191508060051b3603821315611de3575f5ffd5b600183016001600160401b03821115611dfe57611dfe61182b565b68010000000000000000821115611e1757611e1761182b565b805482825580831015611e4c575f828152602090208381019082015b80821015611e49575f8255600182019150611e33565b50505b505f90815260208120905b82811015611e7357833582820155602090930192600101611e57565b505050505050565b5f60208284031215611e8b575f5ffd5b81356105c98161186f565b5f60208284031215611ea6575f5ffd5b6105c98261179f565b5f608082018635611ebf8161186f565b6001600160a01b0316835263ffffffff611edb6020890161179f565b16602084015263ffffffff861660408401526080606084015283905260a0600584901b83018101908301855f603e1936839003015b87821015611fd357868503609f190184528235818112611f2e575f5ffd5b89018035611f3b8161186f565b6001600160a01b03168652602081013536829003601e19018112611f5d575f5ffd5b016020810190356001600160401b03811115611f77575f5ffd5b8060051b803603831315611f89575f5ffd5b60406020890181905288018290526001600160fb1b03821115611faa575f5ffd5b808360608a01376060818901019750505050602083019250602084019350600182019150611f10565b50929998505050505050505050565b5f60208284031215611ff2575f5ffd5b813561ffff811681146105c9575f5ffd5b634e487b7160e01b5f52601260045260245ffd5b5f8261202557612025612003565b500490565b80516020808301519190811015611799575f1960209190910360031b1b16919050565b63ffffffff818116838216019081111561049757610497611d04565b5f60208284031215612079575f5ffd5b815180151581146105c9575f5ffd5b5f5f8335601e1984360301811261209d575f5ffd5b8301803591506001600160401b038211156120b6575f5ffd5b6020019150368190038213156114e9575f5ffd5b5f826120d8576120d8612003565b500690565b634e487b7160e01b5f52602160045260245ffd5b8181038181111561049757610497611d04565b828152604060208201525f61063760408301846119ce565b5f82518060208501845e5f920191825250919050565b5f60208284031215612142575f5ffd5b505191905056fea2646970667358221220ff854521aed3fa42f72e0dbec14028754b09a83d79bc8b7d0b9ca7a3e78d463c64736f6c634300081b0033",
    "sourceMap": "548:12644:178:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11429:994;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10612:442;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12903:287::-;;;;;;:::i;:::-;;:::i;:::-;;;4166:25:321;;;4154:2;4139:18;12903:287:178;4020:177:321;11106:271:178;;;;;;:::i;:::-;;:::i;:::-;;;4689:10:321;4677:23;;;4659:42;;4647:2;4632:18;11106:271:178;4515:192:321;1031:106:172;;;:::i;:::-;;;;;;;:::i;1558:1150:178:-;;;;;;:::i;:::-;;:::i;:::-;;9703:229;;;;;;:::i;:::-;;:::i;9429:224::-;;;;;;:::i;:::-;;:::i;1033:59:179:-;;;;;;;;-1:-1:-1;;;;;6921:32:321;;;6903:51;;6891:2;6876:18;1033:59:179;6726:234:321;9984:576:178;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2759:222::-;;;;;;:::i;:::-;;:::i;9162:217::-;;;;;;:::i;:::-;;:::i;3858:598::-;;;;;;:::i;:::-;;:::i;:::-;;;10237:14:321;;10230:22;10212:41;;10200:2;10185:18;3858:598:178;10072:187:321;3032:775:178;;;;;;:::i;:::-;;:::i;12475:376::-;;;:::i;11429:994::-;11557:16;11585:22;11610:17;:15;;;;;;;:11;:15;:::i;:::-;;:17::i;:::-;11645:42;;;;:26;:42;;;;;;;;-1:-1:-1;11645:64:178;;;;:42;;:64;11637:107;;;;-1:-1:-1;;;11637:107:178;;;;;;;;;;;;11754:21;11778:29;;;:13;:29;;;;;;;;:49;;;;;;;;;;;11845:17;11837:60;;;;-1:-1:-1;;;11837:60:178;;;;;;;;;;;;11907:23;11933:30;;;:14;:30;;;;;;;;:50;;;;;;;;;;:53;;;;;;;;:61;;:68;;;-1:-1:-1;;;;;12042:30:178;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12042:30:178;-1:-1:-1;12011:61:178;-1:-1:-1;12087:9:178;12082:307;12106:13;12102:1;:17;12082:307;;;12140:24;12167:30;;;:14;:30;;;;;;;;:50;;;;;;;;;;;;:61;;;;;;;;;;:69;;12140:96;;;;;;;;;;;;;;;;;;;12167:69;;12140:96;;;12167:69;12140:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12140:96:178;;-1:-1:-1;12255:9:178;;-1:-1:-1;;;;12250:129:178;12274:7;:14;12270:1;:18;:41;;;;;12296:15;12292:1;:19;12270:41;12250:129;;;12354:7;12362:1;12354:10;;;;;;;;:::i;:::-;;;;;;;12336:11;12348:1;12336:14;;;;;;;;:::i;:::-;;;;;;:28;;;;;;;:::i;:::-;;;-1:-1:-1;12313:3:178;;;;:::i;:::-;;;;12250:129;;;-1:-1:-1;;12121:3:178;;12082:307;;;-1:-1:-1;12405:11:178;-1:-1:-1;;;;11429:994:178;;;;;:::o;10612:442::-;-1:-1:-1;;;;;;;;;;;;;;;;;10807:22:178;10832:17;:11;:15;:17::i;:::-;10883:29;;;;:13;:29;;;;;;;;:49;;;;;;;;;;;;10807:42;;-1:-1:-1;10867:65:178;;;10859:106;;;;-1:-1:-1;;;10859:106:178;;11872:2:321;10859:106:178;;;11854:21:321;11911:2;11891:18;;;11884:30;11950;11930:18;;;11923:58;11998:18;;10859:106:178;;;;;;;;10982:30;;;;:14;:30;;;;;;;;:50;;;;;;;;;;;;:65;;;;;;;;;;;10975:72;;;;;;;;;-1:-1:-1;;;;;10975:72:178;;;;;;;;;;;;;;;;;;;;;;;;;10982:65;;10975:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10612:442;;;;;;:::o;12903:287::-;13058:71;;;620:76:179;13058:71:178;;;12227:25:321;12300:10;12288:23;;12268:18;;;12261:51;;;;12328:18;;;12321:34;;;13008:7:178;;;;12200:18:321;;13058:71:178;;;;;;;;;;;;13048:82;;;;;;13027:103;;13147:36;13172:10;13147:24;:36::i;:::-;13140:43;12903:287;-1:-1:-1;;;;12903:287:178:o;11106:271::-;11236:6;11254:22;11279:17;:11;:15;:17::i;:::-;11320:29;;;;:13;:29;;;;;;;;:49;;;;;;;;;;;;-1:-1:-1;;11106:271:178;;;;:::o;1031:106:172:-;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;1558:1150:178:-;813:10;-1:-1:-1;;;;;835:20:178;813:43;;805:72;;;;-1:-1:-1;;;805:72:178;;;;;;;;;;;;1812:22:::1;1837:17;:15;;::::0;;::::1;::::0;::::1;:11:::0;:15:::1;:::i;:17::-;1984:42;::::0;;;:26:::1;:42;::::0;;;;;1812;;-1:-1:-1;1984:42:178::1;::::0;;::::1;1963:63:::0;;::::1;;1955:92;;;;-1:-1:-1::0;;;1955:92:178::1;;;;;;;;;;;;2099:29;::::0;;;:13:::1;:29;::::0;;;;;;;:49:::1;::::0;::::1;::::0;;;;;;;:72;;;2241:156:::1;2261:24:::0;;::::1;2241:156;;;2370:13;;2384:1;2370:16;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2306:30;::::0;;;:14:::1;:30;::::0;;;;;;;:50:::1;::::0;;::::1;::::0;;;;;;;;:61;;::::1;::::0;;;;;;;:80:::1;::::0;:61;:80:::1;:::i;:::-;-1:-1:-1::0;;2287:3:178::1;;2241:156;;;-1:-1:-1::0;2407:42:178::1;::::0;;;:26:::1;:42;::::0;;;;;;;:63;;-1:-1:-1;;2407:63:178::1;;::::0;::::1;;::::0;;2517:23:::1;::::0;;::::1;::::0;::::1;:::i;:::-;2480:34;::::0;;;:18:::1;:34;::::0;;;;;;;;:60;;-1:-1:-1;;;;;;2480:60:178::1;-1:-1:-1::0;;;;;2480:60:178;;;::::1;::::0;;;::::1;::::0;;;2589:36:::1;::::0;;;;;;::::1;;:::i;:::-;2550;::::0;;;:20:::1;:36;::::0;;;;;;:75;;-1:-1:-1;;2550:75:178::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;2641:60;::::1;::::0;::::1;::::0;2654:11;;2667:18;;2687:13;;;;2641:60:::1;:::i;:::-;;;;;;;;1802:906;1558:1150:::0;;;;;:::o;9703:229::-;9806:6;9824:22;9849:17;:11;:15;:17::i;:::-;9883:42;;;;:26;:42;;;;;;;;;9703:229;-1:-1:-1;;;9703:229:178:o;9429:224::-;9533:6;9551:22;9576:17;:11;:15;:17::i;:::-;9610:36;;;;:20;:36;;;;;;;;;9429:224;-1:-1:-1;;;9429:224:178:o;9984:576::-;10114:26;10152:22;10177:17;:11;:15;:17::i;:::-;10204:19;10233:29;;;:13;:29;;;;;;;;:49;;;;;;;;;;;10152:42;;-1:-1:-1;10336:37:178;;-1:-1:-1;;;;;10336:37:178;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;10336:37:178;;;;;;;;;;;;;;;-1:-1:-1;10293:80:178;-1:-1:-1;10389:8:178;10384:139;10407:12;10403:16;;:1;:16;;;10384:139;;;10459:30;;;;:14;:30;;;;;;;;:50;;;;;;;;;;;;:53;;;;;;;;;;;10440:72;;;;;;;;;-1:-1:-1;;;;;10440:72:178;;;;;;;;;;;;;;;;;;;;;;;;;10459:53;;10440:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;10454:1;10440:16;;;;;;;;;;:::i;:::-;;;;;;;;;;:72;10421:3;;10384:139;;;-1:-1:-1;10540:13:178;9984:576;-1:-1:-1;;;;;9984:576:178:o;2759:222::-;2897:16;2932:42;2956:11;2969:4;2932:23;:42::i;9162:217::-;9260:7;9279:22;9304:17;:11;:15;:17::i;:::-;9338:34;;;;:18;:34;;;;;;-1:-1:-1;;;;;9338:34:178;;9162:217;-1:-1:-1;;;9162:217:178:o;3858:598::-;4057:4;4073:29;4105:42;4129:11;4142:4;4105:23;:42::i;:::-;4073:74;;4188:27;:34;4165:12;:19;:57;4157:89;;;;-1:-1:-1;;;4157:89:178;;;;;;;;;;;;4261:9;4256:173;4280:12;:19;4276:1;:23;4256:173;;;4342:27;4370:1;4342:30;;;;;;;;:::i;:::-;;;;;;;4324:12;4337:1;4324:15;;;;;;;;:::i;:::-;;;;;;;:48;4320:99;;;4399:5;4392:12;;;;;;4320:99;4301:3;;4256:173;;;-1:-1:-1;4445:4:178;;3858:598;-1:-1:-1;;;;;3858:598:178:o;3032:775::-;3238:4;3254:29;3286:42;3310:11;3323:4;3286:23;:42::i;:::-;3254:74;-1:-1:-1;3338:28:178;3369:52;3384:11;3397:23;;;;:4;:23;:::i;3369:52::-;3439:19;;3338:83;;-1:-1:-1;3439:60:178;;3431:92;;;;-1:-1:-1;;;3431:92:178;;;;;;;;;;;;3538:9;3533:247;3557:12;:19;3553:1;:23;3533:247;;;3597:17;3672:6;3635:30;;3666:1;3635:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3618:50;;:11;3630:1;3618:14;;;;;;;;:::i;:::-;;;;;;;:50;;;;:::i;:::-;3617:61;;;;:::i;:::-;3597:81;;3714:9;3696:12;3709:1;3696:15;;;;;;;;:::i;:::-;;;;;;;:27;3692:78;;;3750:5;3743:12;;;;;;;;3692:78;-1:-1:-1;3578:3:178;;3533:247;;;-1:-1:-1;3796:4:178;;3032:775;-1:-1:-1;;;;;;;3032:775:178:o;12475:376::-;12718:19;;;;;;;;;;;;-1:-1:-1;;;12718:19:178;;;;;12580:7;871:79:179;12708:30:178;12772:15;:13;:15::i;:::-;12756:33;;;;;;;12629:205;;;;;;12815:4;;12629:205;18223:25:321;;;18279:2;18264:18;;18257:34;;;;18322:2;18307:18;;18300:34;-1:-1:-1;;;;;18370:32:321;18365:2;18350:18;;18343:60;18210:3;18195:19;;17992:417;12629:205:178;;;;;;;;;;;;;12606:238;;;;;;12599:245;;12475:376;:::o;399:154:167:-;472:7;523:2;:6;;;538:2;:5;;;531:13;;506:39;;;;;;;;18589:2:321;18585:15;;;;-1:-1:-1;;18581:53:321;18569:66;;18691:3;18669:16;-1:-1:-1;;;;;;18665:59:321;18660:2;18651:12;;18644:81;18750:2;18741:12;;18414:345;506:39:167;;;;;;;;;;;;;498:48;;;:::i;2757:182:173:-;2842:7;2907:17;:15;:17::i;:::-;2878:53;;-1:-1:-1;;;2878:53:173;;;19324:27:321;19367:11;;;19360:27;;;;19403:12;;;19396:28;;;19440:12;;2878:53:173;;;;;;;;;;;;2868:64;;;;;;2861:71;;2757:182;;;:::o;2081:405:38:-;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:38;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:38;;;-1:-1:-1;2438:4:38;2429:14;;2422:28;;;;-1:-1:-1;2393:16:38;2081:405::o;4676:2424:178:-;4820:16;4848:22;4873:17;:15;;;;;;;:11;:15;:::i;:17::-;5010:36;;;;:20;:36;;;;;;;;;4848:42;;-1:-1:-1;5010:36:178;;;;;4984:23;;;;:4;:23;:::i;:::-;:62;;;;:::i;:::-;4965:81;;:15;:81;;4957:110;;;;-1:-1:-1;;;4957:110:178;;;;;;;;;;;;5186:23;;;;:4;:23;:::i;:::-;5140:42;;;;:26;:42;;;;;;:69;:42;;;:69;;;5132:112;;;;-1:-1:-1;;;5132:112:178;;;;;;;;;;;;-1:-1:-1;;;;;5355:20:178;:43;;5399:23;;;;:4;:23;:::i;:::-;5355:68;;-1:-1:-1;;;;;;5355:68:178;;;;;;;;4677:23:321;;;;5355:68:178;;;4659:42:321;4632:18;;5355:68:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5347:93;;;;-1:-1:-1;;;5347:93:178;;;;;;;;;;;;5483:28;5514:52;5529:11;5542:23;;;;:4;:23;:::i;5514:52::-;5483:83;;5576:29;5622:11;:18;-1:-1:-1;;;;;5608:33:178;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5608:33:178;-1:-1:-1;5576:65:178;-1:-1:-1;5713:22:178;5738:69;5765:23;;;;:4;:23;:::i;:::-;5790:4;:16;;;5738:26;:69::i;:::-;5713:94;-1:-1:-1;5851:24:178;;5901:42;5713:94;5934:8;;;;:4;:8;:::i;:::-;5901:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5901:16:178;;-1:-1:-1;;;5901:42:178:i;:::-;5850:93;;;;5961:15;5953:46;;;;-1:-1:-1;;;5953:46:178;;;;;;;;;;;;6056:9;6051:1013;6075:7;:14;6071:1;:18;6051:1013;;;6110:14;6127:7;6135:1;6127:10;;;;;;;;:::i;:::-;;;;;;;6110:27;;6203:15;6221:5;6203:23;;6240:37;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;6240:37:178;6297:9;6292:336;6316:13;:29;6330:14;6316:29;;;;;;;;;;;:54;6346:4;:23;;;;;;;;;;:::i;:::-;6316:54;;;;;;;;;;;;;;;;6312:1;:58;6292:336;;;6410:14;:30;6425:14;6410:30;;;;;;;;;;;:55;6441:4;:23;;;;;;;;;;:::i;:::-;6410:55;;;;;;;;;;;;;;;;;;-1:-1:-1;6410:55:178;;;:66;;;;;;;;;;;6395:81;;;;;;;;;-1:-1:-1;;;;;6395:81:178;;;;;;;;;;;;;;;;;;;;;;;;;6410:66;;6395:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6521:6;-1:-1:-1;;;;;6498:29:178;:12;:19;;;-1:-1:-1;;;;;6498:29:178;;6494:120;;6564:4;6551:17;;6590:5;;6494:120;6372:3;;6292:336;;;;6709:10;6704:77;;6746:20;;-1:-1:-1;;;6746:20:178;;;;;;;;;;;6704:77;6886:20;;;;6859:24;6920:134;6944:7;:14;6940:1;:18;:45;;;;;6966:12;:19;6962:1;:23;6940:45;6920:134;;;7029:7;7037:1;7029:10;;;;;;;;:::i;:::-;;;;;;;7010:12;7023:1;7010:15;;;;;;;;:::i;:::-;;;;;;:29;;;;;;;:::i;:::-;;;-1:-1:-1;6987:3:178;;;;:::i;:::-;;;;6920:134;;;-1:-1:-1;;6091:3:178;;;;;-1:-1:-1;6051:1013:178;;-1:-1:-1;;6051:1013:178;;-1:-1:-1;7081:12:178;;4676:2424;-1:-1:-1;;;;;;;;4676:2424:178:o;1357:170:172:-;1405:13;1430:14;1453:19;:8;:17;:19::i;:::-;1430:43;;1514:1;1516;1514:4;;;;;;;;:::i;:::-;;;;;;;1497:22;;-1:-1:-1;;;;;;1514:4:172;;;1497:22;;;20570:39:321;;;;20625:11;;1497:22:172;;;;;;;;;;;;1483:37;;;1357:170;:::o;2558:245:38:-;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:38;;;;;;;;;;;7655:1380:178;7772:24;7798:10;7934:1;7914:10;:17;:21;:52;;;;;7959:2;7939:10;:17;:22;;;;:::i;:::-;:27;7914:52;7906:87;;;;-1:-1:-1;;;7906:87:178;;;;;;;;;;;;8004:22;8049:2;8029:10;:17;:22;;;;:::i;:::-;8004:47;;8085:14;-1:-1:-1;;;;;8071:29:178;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8071:29:178;-1:-1:-1;8061:39:178;-1:-1:-1;8116:9:178;8111:885;8135:14;8131:1;:18;8111:885;;;8195:13;;;8205:2;8195:13;;;;;;;;;8170:22;;8195:13;;;;;;;;;;-1:-1:-1;;8170:38:178;-1:-1:-1;8227:9:178;8222:103;8246:2;8242:1;:6;8222:103;;;8288:10;8308:1;8299:6;:1;8303:2;8299:6;:::i;:::-;:10;;;;:::i;:::-;8288:22;;;;;;;;:::i;:::-;;;;;;;;;8273:9;8283:1;8273:12;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;8273:37:178;;;;;;;;-1:-1:-1;8250:3:178;;8222:103;;;;8374:17;8393:24;8421:40;8438:11;8451:9;8421:16;:40::i;:::-;8373:88;;-1:-1:-1;8373:88:178;-1:-1:-1;8488:26:178;8479:5;:35;;;;;;;;:::i;:::-;;;:62;;;-1:-1:-1;;;;;;8518:23:178;;;8479:62;8475:124;;;-1:-1:-1;8578:5:178;;-1:-1:-1;8561:23:178;;-1:-1:-1;;;;8561:23:178;8475:124;8688:1;8684;:5;:36;;;;-1:-1:-1;8706:7:178;8714:5;8718:1;8714;:5;:::i;:::-;8706:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8693:27:178;:9;-1:-1:-1;;;;;8693:27:178;;;8684:36;8680:98;;;-1:-1:-1;8757:5:178;;-1:-1:-1;8740:23:178;;-1:-1:-1;;;;8740:23:178;8680:98;8869:79;8895:9;8906:11;8919:9;-1:-1:-1;;8869:25:178;:79::i;:::-;8976:9;8963:7;8971:1;8963:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8963:22:178;;;;:10;;;;;;;;;;;:22;-1:-1:-1;;;8151:3:178;;8111:885;;;-1:-1:-1;9023:4:178;;-1:-1:-1;;7655:1380:178;;;;;;:::o;2145:730:78:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:78;;-1:-1:-1;2822:35:78;2802:56;;3667:714:173;3997:15;3987:6;:25;;3979:54;;;;-1:-1:-1;;;3979:54:173;;;;;;;;;;;;4300:53;-1:-1:-1;;;;;4300:26:173;;4327:14;4343:9;4300:26;:53::i;:::-;4292:82;;;;-1:-1:-1;;;4292:82:173;;;;;;;;;;;;3667:714;;;;:::o;5009:1456:78:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:78;;-1:-1:-1;6123:30:78;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;21256:25:321;;;21329:4;21317:17;;21297:18;;;21290:45;;;;21351:18;;;21344:34;;;21394:18;;;21387:34;;;6276:24:78;;21228:19:321;;6276:24:78;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:78;;-1:-1:-1;;6276:24:78;;;-1:-1:-1;;;;;;;6314:20:78;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:78;;-1:-1:-1;5009:1456:78;;;;;;;;:::o;1047:399:43:-;1153:4;1170:17;1189:35;1228:44;1256:4;1262:9;1228:27;:44::i;:::-;1169:103;;-1:-1:-1;1169:103:43;-1:-1:-1;1311:37:43;1302:5;:46;;;;;;;;:::i;:::-;;:69;;;;;1365:6;-1:-1:-1;;;;;1352:19:43;:9;-1:-1:-1;;;;;1352:19:43;;1302:69;1301:138;;;;1388:51;1415:6;1423:4;1429:9;1388:26;:51::i;:::-;1282:157;1047:399;-1:-1:-1;;;;;;1047:399:43:o;1852:495::-;1995:4;2012:12;2026:19;2049:6;-1:-1:-1;;;;;2049:17:43;2103:45;;;2150:4;2156:9;2080:86;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2080:86:43;;;;;;;;;;;;;;-1:-1:-1;;;;;2080:86:43;-1:-1:-1;;;;;;2080:86:43;;;;;;;;;;2049:127;;;;2080:86;2049:127;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:165;;;;2194:7;:42;;;;;2234:2;2217:6;:13;:19;;2194:42;:145;;;;-1:-1:-1;2252:29:43;;-1:-1:-1;;;2293:45:43;2252:29;;;;;;;;;;;;:::i;:::-;:87;;1852:495;-1:-1:-1;;;;;;1852:495:43:o;14:159:321:-;78:5;123:2;114:6;109:3;105:16;101:25;98:45;;;139:1;136;129:12;98:45;-1:-1:-1;161:6:321;14:159;-1:-1:-1;14:159:321:o;178:163::-;245:20;;305:10;294:22;;284:33;;274:61;;331:1;328;321:12;274:61;178:163;;;:::o;346:319::-;445:6;453;506:2;494:9;485:7;481:23;477:32;474:52;;;522:1;519;512:12;474:52;545:58;595:7;584:9;545:58;:::i;:::-;535:68;;622:37;655:2;644:9;640:18;622:37;:::i;:::-;612:47;;346:319;;;;;:::o;670:611::-;860:2;872:21;;;942:13;;845:18;;;964:22;;;812:4;;1043:15;;;1017:2;1002:18;;;812:4;1086:169;1100:6;1097:1;1094:13;1086:169;;;1161:13;;1149:26;;1204:2;1230:15;;;;1195:12;;;;1122:1;1115:9;1086:169;;;-1:-1:-1;1272:3:321;;670:611;-1:-1:-1;;;;;670:611:321:o;1286:127::-;1347:10;1342:3;1338:20;1335:1;1328:31;1378:4;1375:1;1368:15;1402:4;1399:1;1392:15;1418:275;1489:2;1483:9;1554:2;1535:13;;-1:-1:-1;;1531:27:321;1519:40;;-1:-1:-1;;;;;1574:34:321;;1610:22;;;1571:62;1568:88;;;1636:18;;:::i;:::-;1672:2;1665:22;1418:275;;-1:-1:-1;1418:275:321:o;1698:131::-;-1:-1:-1;;;;;1773:31:321;;1763:42;;1753:70;;1819:1;1816;1809:12;1753:70;1698:131;:::o;1834:578::-;1892:5;1940:4;1928:9;1923:3;1919:19;1915:30;1912:50;;;1958:1;1955;1948:12;1912:50;2011:4;2005:11;;;2043:17;;-1:-1:-1;;;;;2075:34:321;;2111:22;;;2072:62;2069:88;;;2137:18;;:::i;:::-;2173:4;2166:24;2208:6;-1:-1:-1;2208:6:321;2238:23;;2270:33;2238:23;2270:33;:::i;:::-;2312:23;;2368:37;2401:2;2386:18;;2368:37;:::i;:::-;2363:2;2355:6;2351:15;2344:62;;1834:578;;;;:::o;2417:381::-;2522:6;2530;2538;2591:3;2579:9;2570:7;2566:23;2562:33;2559:53;;;2608:1;2605;2598:12;2559:53;2631:49;2672:7;2661:9;2631:49;:::i;:::-;2621:59;;2699:37;2732:2;2721:9;2717:18;2699:37;:::i;:::-;2689:47;;2755:37;2788:2;2777:9;2773:18;2755:37;:::i;:::-;2745:47;;2417:381;;;;;:::o;2803:660::-;2932:12;;-1:-1:-1;;;;;2928:38:321;2916:51;;3013:4;3002:16;;;2996:23;2902:4;3035:14;;;3028:28;;;3105:19;;2893:14;;;3133:20;;;2863:3;;3206:23;;;;;2863:3;;3180:2;3171:12;;;3257:179;3271:6;3268:1;3265:13;3257:179;;;3340:6;3334:13;3327:5;3320:28;3381:4;3374:5;3370:16;3361:25;;3421:4;3413:6;3409:17;3399:27;;3293:1;3290;3286:9;3281:14;;3257:179;;3468:290;3669:2;3658:9;3651:21;3632:4;3689:63;3748:2;3737:9;3733:18;3725:6;3689:63;:::i;3763:252::-;3830:6;3838;3891:2;3879:9;3870:7;3866:23;3862:32;3859:52;;;3907:1;3904;3897:12;3859:52;3930:28;3948:9;3930:28;:::i;:::-;3920:38;4005:2;3990:18;;;;3977:32;;-1:-1:-1;;;3763:252:321:o;4202:308::-;4299:6;4307;4360:2;4348:9;4339:7;4335:23;4331:32;4328:52;;;4376:1;4373;4366:12;4328:52;4399:49;4440:7;4429:9;4399:49;:::i;4712:289::-;4754:3;4792:5;4786:12;4819:6;4814:3;4807:19;4875:6;4868:4;4861:5;4857:16;4850:4;4845:3;4841:14;4835:47;4927:1;4920:4;4911:6;4906:3;4902:16;4898:27;4891:38;4990:4;4983:2;4979:7;4974:2;4966:6;4962:15;4958:29;4953:3;4949:39;4945:50;4938:57;;;4712:289;;;;:::o;5006:220::-;5155:2;5144:9;5137:21;5118:4;5175:45;5216:2;5205:9;5201:18;5193:6;5175:45;:::i;5231:393::-;5320:8;5330:6;5384:3;5377:4;5369:6;5365:17;5361:27;5351:55;;5402:1;5399;5392:12;5351:55;-1:-1:-1;5425:20:321;;-1:-1:-1;;;;;5457:30:321;;5454:50;;;5500:1;5497;5490:12;5454:50;5537:4;5529:6;5525:17;5513:29;;5597:3;5590:4;5580:6;5577:1;5573:14;5565:6;5561:27;5557:38;5554:47;5551:67;;;5614:1;5611;5604:12;5629:851;5849:6;5857;5865;5873;5881;5934:3;5922:9;5913:7;5909:23;5905:33;5902:53;;;5951:1;5948;5941:12;5902:53;5974:58;6024:7;6013:9;5974:58;:::i;:::-;5964:68;;6051:37;6084:2;6073:9;6069:18;6051:37;:::i;:::-;6041:47;;6139:2;6128:9;6124:18;6111:32;-1:-1:-1;;;;;6158:6:321;6155:30;6152:50;;;6198:1;6195;6188:12;6152:50;6237:96;6325:7;6316:6;6305:9;6301:22;6237:96;:::i;:::-;6352:8;;-1:-1:-1;6211:122:321;-1:-1:-1;6406:68:321;;-1:-1:-1;6466:7:321;6460:3;6445:19;;6406:68;:::i;:::-;6396:78;;5629:851;;;;;;;;:::o;6485:236::-;6574:6;6627:2;6615:9;6606:7;6602:23;6598:32;6595:52;;;6643:1;6640;6633:12;6595:52;6666:49;6707:7;6696:9;6666:49;:::i;6965:852::-;7179:4;7227:2;7216:9;7212:18;7257:2;7246:9;7239:21;7280:6;7315;7309:13;7346:6;7338;7331:22;7384:2;7373:9;7369:18;7362:25;;7446:2;7436:6;7433:1;7429:14;7418:9;7414:30;7410:39;7396:53;;7484:2;7476:6;7472:15;7505:1;7515:273;7529:6;7526:1;7523:13;7515:273;;;7622:2;7618:7;7606:9;7598:6;7594:22;7590:36;7585:3;7578:49;7650:58;7701:6;7692;7686:13;7650:58;:::i;:::-;7640:68;-1:-1:-1;7743:2:321;7766:12;;;;7731:15;;;;;7551:1;7544:9;7515:273;;;-1:-1:-1;7805:6:321;;6965:852;-1:-1:-1;;;;;;6965:852:321:o;7822:164::-;7891:5;7936:2;7927:6;7922:3;7918:16;7914:25;7911:45;;;7952:1;7949;7942:12;7991:510;8128:6;8136;8189:2;8177:9;8168:7;8164:23;8160:32;8157:52;;;8205:1;8202;8195:12;8157:52;8228:58;8278:7;8267:9;8228:58;:::i;:::-;8218:68;;8337:2;8326:9;8322:18;8309:32;-1:-1:-1;;;;;8356:6:321;8353:30;8350:50;;;8396:1;8393;8386:12;8350:50;8419:76;8487:7;8478:6;8467:9;8463:22;8419:76;:::i;:::-;8409:86;;;7991:510;;;;;:::o;8714:1353::-;8885:6;8893;8901;8954:3;8942:9;8933:7;8929:23;8925:33;8922:53;;;8971:1;8968;8961:12;8922:53;8994:58;9044:7;9033:9;8994:58;:::i;:::-;8984:68;;9103:2;9092:9;9088:18;9075:32;-1:-1:-1;;;;;9122:6:321;9119:30;9116:50;;;9162:1;9159;9152:12;9116:50;9185:76;9253:7;9244:6;9233:9;9229:22;9185:76;:::i;:::-;9175:86;;;9314:2;9303:9;9299:18;9286:32;-1:-1:-1;;;;;9333:8:321;9330:32;9327:52;;;9375:1;9372;9365:12;9327:52;9398:24;;9453:4;9445:13;;9441:27;-1:-1:-1;9431:55:321;;9482:1;9479;9472:12;9431:55;9522:2;9509:16;-1:-1:-1;;;;;9540:6:321;9537:30;9534:56;;;9570:18;;:::i;:::-;9616:6;9613:1;9609:14;9643:30;9667:4;9663:2;9659:13;9643:30;:::i;:::-;9707:19;;;9751:4;9783:11;;;9779:22;;;9742:14;;;;9813:19;;;9810:39;;;9845:1;9842;9835:12;9810:39;9877:4;9873:2;9869:13;9858:24;;9891:146;9907:6;9902:3;9899:15;9891:146;;;9975:17;;9963:30;;10022:4;9924:14;;;;10013;;;;9891:146;;;10056:5;10046:15;;;;;;;8714:1353;;;;;:::o;10264:867::-;10436:6;10444;10452;10460;10513:3;10501:9;10492:7;10488:23;10484:33;10481:53;;;10530:1;10527;10520:12;10481:53;10553:58;10603:7;10592:9;10553:58;:::i;:::-;10543:68;;10662:2;10651:9;10647:18;10634:32;-1:-1:-1;;;;;10681:6:321;10678:30;10675:50;;;10721:1;10718;10711:12;10675:50;10744:76;10812:7;10803:6;10792:9;10788:22;10744:76;:::i;:::-;10734:86;;;10873:2;10862:9;10858:18;10845:32;-1:-1:-1;;;;;10892:8:321;10889:32;10886:52;;;10934:1;10931;10924:12;10886:52;10973:98;11063:7;11052:8;11041:9;11037:24;10973:98;:::i;:::-;10264:867;;;;-1:-1:-1;11090:8:321;-1:-1:-1;;;;10264:867:321:o;11136:127::-;11197:10;11192:3;11188:20;11185:1;11178:31;11228:4;11225:1;11218:15;11252:4;11249:1;11242:15;11268:127;11329:10;11324:3;11320:20;11317:1;11310:31;11360:4;11357:1;11350:15;11384:4;11381:1;11374:15;11400:125;11465:9;;;11486:10;;;11483:36;;;11499:18;;:::i;11530:135::-;11569:3;11590:17;;;11587:43;;11610:18;;:::i;:::-;-1:-1:-1;11657:1:321;11646:13;;11530:135::o;12366:335::-;12470:4;12528:11;12515:25;12622:2;12618:7;12607:8;12591:14;12587:29;12583:43;12563:18;12559:68;12549:96;;12641:1;12638;12631:12;12549:96;12662:33;;;;;12366:335;-1:-1:-1;;12366:335:321:o;12706:168::-;12779:9;;;12810;;12827:15;;;12821:22;;12807:37;12797:71;;12848:18;;:::i;13016:1662::-;13203:5;13190:19;13218:33;13243:7;13218:33;:::i;:::-;13280:11;;-1:-1:-1;;;;;;13276:54:321;-1:-1:-1;;;;;13332:33:321;;;;13273:93;13260:107;;13426:2;13415:14;;13402:28;13481:14;13477:26;;;-1:-1:-1;;13473:40:321;13449:65;;13439:93;;13528:1;13525;13518:12;13439:93;13553:30;;13606:18;;-1:-1:-1;;;;;13636:30:321;;13633:50;;;13679:1;13676;13669:12;13633:50;13716:2;13710:4;13706:13;13692:27;;13770:6;13767:1;13763:14;13747;13743:35;13735:6;13731:48;13728:68;;;13792:1;13789;13782:12;13728:68;13826:1;13820:4;13816:12;-1:-1:-1;;;;;13843:6:321;13840:30;13837:56;;;13873:18;;:::i;:::-;13916:20;13908:6;13905:32;13902:58;;;13940:18;;:::i;:::-;13989:3;13983:10;14014:6;14009:3;14002:19;14044:6;14036;14033:18;14030:288;;;14081:1;14074:14;;;14126:4;14113:18;;14197:17;;;;14154;;14227:81;14245:2;14238:5;14235:13;14227:81;;;14304:1;14297:5;14290:16;14271:1;14264:5;14260:13;14251:22;;14227:81;;;14231:3;;14030:288;-1:-1:-1;12963:1:321;12956:14;;;13000:4;12987:18;;;14444:228;14458:6;14455:1;14452:13;14444:228;;;14555:20;;14633:15;;;14626:36;14610:2;14598:15;;;;14480:1;14473:9;14444:228;;;14448:3;;;;13016:1662;;:::o;14683:247::-;14742:6;14795:2;14783:9;14774:7;14770:23;14766:32;14763:52;;;14811:1;14808;14801:12;14763:52;14850:9;14837:23;14869:31;14894:5;14869:31;:::i;14935:184::-;14993:6;15046:2;15034:9;15025:7;15021:23;15017:32;15014:52;;;15062:1;15059;15052:12;15014:52;15085:28;15103:9;15085:28;:::i;15124:2329::-;15466:4;15514:3;15503:9;15499:19;15553:6;15540:20;15569:31;15594:5;15569:31;:::i;:::-;-1:-1:-1;;;;;15627:31:321;15609:50;;15739:10;15701:36;15731:4;15719:17;;15701:36;:::i;:::-;15697:53;15690:4;15675:20;;15668:83;15799:10;15787:23;;15782:2;15767:18;;15760:51;15847:3;15842:2;15827:18;;15820:31;15886:22;;;15939:3;15989:1;15985:14;;;15970:30;;15966:40;;;15924:19;;16029:6;-1:-1:-1;;;16081:14:321;16077:27;;;16073:41;16123:1301;16137:6;16134:1;16131:13;16123:1301;;;16202:22;;;-1:-1:-1;;16198:37:321;16186:50;;16275:20;;16318:27;;;16308:55;;16359:1;16356;16349:12;16308:55;16391:31;;16450:21;;16484:33;16450:21;16484:33;:::i;:::-;-1:-1:-1;;;;;16545:33:321;16530:49;;16646:4;16633:18;;16620:32;16709:14;16705:28;;;-1:-1:-1;;16701:42:321;16675:69;;16665:97;;16758:1;16755;16748:12;16665:97;16790:34;16913:4;16900:18;;;16851:21;-1:-1:-1;;;;;16934:30:321;;16931:50;;;16977:1;16974;16967:12;16931:50;17011:6;17008:1;17004:14;17067:2;17051:14;17047:23;17038:7;17034:37;17031:57;;;17084:1;17081;17074:12;17031:57;17127:2;17120:4;17108:17;;17101:29;;;17150:15;;17143:31;;;-1:-1:-1;;;;;17190:31:321;;17187:51;;;17234:1;17231;17224:12;17187:51;17290:2;17281:7;17276:2;17268:6;17264:15;17251:42;17337:2;17332;17324:6;17320:15;17316:24;17306:34;;;;;17375:4;17367:6;17363:17;17353:27;;17409:4;17404:3;17400:14;17393:21;;16159:1;16156;16152:9;16147:14;;16123:1301;;;-1:-1:-1;17441:6:321;;15124:2329;-1:-1:-1;;;;;;;;;15124:2329:321:o;17458:272::-;17516:6;17569:2;17557:9;17548:7;17544:23;17540:32;17537:52;;;17585:1;17582;17575:12;17537:52;17624:9;17611:23;17674:6;17667:5;17663:18;17656:5;17653:29;17643:57;;17696:1;17693;17686:12;17735:127;17796:10;17791:3;17787:20;17784:1;17777:31;17827:4;17824:1;17817:15;17851:4;17848:1;17841:15;17867:120;17907:1;17933;17923:35;;17938:18;;:::i;:::-;-1:-1:-1;17972:9:321;;17867:120::o;18764:297::-;18882:12;;18929:4;18918:16;;;18912:23;;18882:12;18947:16;;18944:111;;;-1:-1:-1;;19021:4:321;19017:17;;;;19014:1;19010:25;19006:38;18995:50;;18764:297;-1:-1:-1;18764:297:321:o;19463:167::-;19558:10;19531:18;;;19551;;;19527:43;;19582:19;;19579:45;;;19604:18;;:::i;19635:277::-;19702:6;19755:2;19743:9;19734:7;19730:23;19726:32;19723:52;;;19771:1;19768;19761:12;19723:52;19803:9;19797:16;19856:5;19849:13;19842:21;19835:5;19832:32;19822:60;;19878:1;19875;19868:12;19917:521;19994:4;20000:6;20060:11;20047:25;20154:2;20150:7;20139:8;20123:14;20119:29;20115:43;20095:18;20091:68;20081:96;;20173:1;20170;20163:12;20081:96;20200:33;;20252:20;;;-1:-1:-1;;;;;;20284:30:321;;20281:50;;;20327:1;20324;20317:12;20281:50;20360:4;20348:17;;-1:-1:-1;20391:14:321;20387:27;;;20377:38;;20374:58;;;20428:1;20425;20418:12;20647:112;20679:1;20705;20695:35;;20710:18;;:::i;:::-;-1:-1:-1;20744:9:321;;20647:112::o;20764:127::-;20825:10;20820:3;20816:20;20813:1;20806:31;20856:4;20853:1;20846:15;20880:4;20877:1;20870:15;20896:128;20963:9;;;20984:11;;;20981:37;;;20998:18;;:::i;21432:289::-;21607:6;21596:9;21589:25;21650:2;21645;21634:9;21630:18;21623:30;21570:4;21670:45;21711:2;21700:9;21696:18;21688:6;21670:45;:::i;21726:301::-;21855:3;21893:6;21887:13;21939:6;21932:4;21924:6;21920:17;21915:3;21909:37;22001:1;21965:16;;21990:13;;;-1:-1:-1;21965:16:321;21726:301;-1:-1:-1;21726:301:321:o;22032:184::-;22102:6;22155:2;22143:9;22134:7;22130:23;22126:32;22123:52;;;22171:1;22168;22161:12;22123:52;-1:-1:-1;22194:16:321;;22032:184;-1:-1:-1;22032:184:321:o",
    "linkReferences": {},
    "immutableReferences": {
      "91070": [
        {
          "start": 1657,
          "length": 32
        },
        {
          "start": 4671,
          "length": 32
        }
      ],
      "94490": [
        {
          "start": 475,
          "length": 32
        },
        {
          "start": 1709,
          "length": 32
        },
        {
          "start": 3700,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "calculateCertificateDigest(uint32,bytes32)": "18467434",
    "domainSeparator()": "f698da25",
    "getOperatorCount((address,uint32),uint32)": "23c2a3cb",
    "getOperatorInfo((address,uint32),uint32,uint32)": "082ef73d",
    "getOperatorInfos((address,uint32),uint32)": "7c85ac4c",
    "getOperatorSetOwner((address,uint32))": "84818920",
    "getTotalStakes((address,uint32),uint32)": "04cdbae4",
    "latestReferenceTimestamp((address,uint32))": "5ddb9b5b",
    "maxOperatorTableStaleness((address,uint32))": "6141879e",
    "operatorTableUpdater()": "68d6e081",
    "updateOperatorTable((address,uint32),uint32,(address,uint256[])[],(address,uint32))": "56d482f5",
    "verifyCertificate((address,uint32),(uint32,bytes32,bytes))": "80c7d3f3",
    "verifyCertificateNominal((address,uint32),(uint32,bytes32,bytes),uint256[])": "be86e0b2",
    "verifyCertificateProportion((address,uint32),(uint32,bytes32,bytes),uint16[])": "c0da2420",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IOperatorTableUpdater\",\"name\":\"_operatorTableUpdater\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CertificateStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyTableUpdater\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferenceTimestampDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TableUpdateStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerificationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"name\":\"MaxStalenessPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OperatorSetOwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pubkey\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo[]\",\"name\":\"operatorInfos\",\"type\":\"tuple[]\"}],\"name\":\"TableUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"calculateCertificateDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getOperatorCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"}],\"name\":\"getOperatorInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pubkey\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getOperatorInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pubkey\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getOperatorSetOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getTotalStakes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"latestReferenceTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"maxOperatorTableStaleness\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorTableUpdater\",\"outputs\":[{\"internalType\":\"contract IOperatorTableUpdater\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pubkey\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo[]\",\"name\":\"operatorInfos\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct ICrossChainRegistryTypes.OperatorSetConfig\",\"name\":\"operatorSetConfig\",\"type\":\"tuple\"}],\"name\":\"updateOperatorTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct IECDSACertificateVerifierTypes.ECDSACertificate\",\"name\":\"cert\",\"type\":\"tuple\"}],\"name\":\"verifyCertificate\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct IECDSACertificateVerifierTypes.ECDSACertificate\",\"name\":\"cert\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalStakeNominalThresholds\",\"type\":\"uint256[]\"}],\"name\":\"verifyCertificateNominal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct IECDSACertificateVerifierTypes.ECDSACertificate\",\"name\":\"cert\",\"type\":\"tuple\"},{\"internalType\":\"uint16[]\",\"name\":\"totalStakeProportionThresholds\",\"type\":\"uint16[]\"}],\"name\":\"verifyCertificateProportion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements ECDSA signature verification with operator information caching\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"calculateCertificateDigest(uint32,bytes32)\":{\"details\":\"This function is public to allow offchain tools to calculate the same digestNote: This does not support smart contract based signatures for multichain\",\"params\":{\"messageHash\":\"The message hash\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The EIP-712 digest\"}},\"constructor\":{\"details\":\"Disables initializers to prevent implementation initialization\",\"params\":{\"_operatorTableUpdater\":\"Address authorized to update operator tables\",\"_version\":\"The version string for the SignatureUtilsMixin\"}},\"domainSeparator()\":{\"details\":\"This function overrides the base domainSeparator to not include chainId\",\"returns\":{\"_0\":\"The domain separator hash without chainId\"}},\"getOperatorCount((address,uint32),uint32)\":{\"params\":{\"operatorSet\":\"The operator set\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The number of operators\"}},\"getOperatorInfo((address,uint32),uint32,uint32)\":{\"params\":{\"operatorIndex\":\"The index of the operator\",\"operatorSet\":\"The operator set\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The operator info\"}},\"getOperatorInfos((address,uint32),uint32)\":{\"params\":{\"operatorSet\":\"The operator set\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The operator infos\"}},\"getTotalStakes((address,uint32),uint32)\":{\"params\":{\"operatorSet\":\"The operator set to calculate stakes for\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"totalStakes The total stakes for all operators\"}},\"maxOperatorTableStaleness((address,uint32))\":{\"returns\":{\"_0\":\"the maximum amount of seconds that a operator table can be in the past for a given operatorSet\"}},\"updateOperatorTable((address,uint32),uint32,(address,uint256[])[],(address,uint32))\":{\"details\":\"only callable by the operatorTableUpdater for the given operatorSetThe `referenceTimestamp` must be greater than the latest reference timestamp for the given operatorSet\",\"params\":{\"operatorInfos\":\"the operatorInfos to update the operator table with\",\"operatorSet\":\"the operatorSet to update the operator table for\",\"operatorSetConfig\":\"the configuration of the operatorSet\",\"referenceTimestamp\":\"the timestamp at which the operatorInfos were sourced\"}},\"verifyCertificate((address,uint32),(uint32,bytes32,bytes))\":{\"params\":{\"cert\":\"a certificate\"},\"returns\":{\"_0\":\"amount of stake that signed the certificate for each stake type. Each index corresponds to a stake type in the `weights` array in the `ECDSAOperatorInfo`\"}},\"verifyCertificateNominal((address,uint32),(uint32,bytes32,bytes),uint256[])\":{\"params\":{\"cert\":\"a certificate\",\"totalStakeNominalThresholds\":\"the nominal amount of total stake that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `weights` array in the `ECDSAOperatorInfo`\"},\"returns\":{\"_0\":\"Whether or not the certificate is valid and meets thresholds\"}},\"verifyCertificateProportion((address,uint32),(uint32,bytes32,bytes),uint16[])\":{\"params\":{\"cert\":\"a certificate\",\"totalStakeProportionThresholds\":\"the proportion, in BPS, of total stake that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `weights` array in the `ECDSAOperatorInfo`\"},\"returns\":{\"_0\":\"Whether or not the certificate is valid and meets thresholds\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"title\":\"ECDSACertificateVerifier\",\"version\":1},\"userdoc\":{\"errors\":{\"ArrayLengthMismatch()\":[{\"notice\":\"Thrown when array lengths mismatch\"}],\"CertificateStale()\":[{\"notice\":\"Thrown when the certificate is too stale\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when a signature is invalid.\"}],\"OnlyTableUpdater()\":[{\"notice\":\"Thrown when the table updater is not caller\"}],\"ReferenceTimestampDoesNotExist()\":[{\"notice\":\"Thrown when the reference timestamp does not exist\"}],\"RootDisabled()\":[{\"notice\":\"Thrown when the global table root is disabled\"}],\"SignatureExpired()\":[{\"notice\":\"Thrown when a signature has expired.\"}],\"TableUpdateStale()\":[{\"notice\":\"Thrown when the table update is stale\"}],\"VerificationFailed()\":[{\"notice\":\"Thrown when certificate verification fails\"}]},\"events\":{\"MaxStalenessPeriodUpdated((address,uint32),uint32)\":{\"notice\":\"Emitted when the max staleness period of an operatorSet is updated\"},\"OperatorSetOwnerUpdated((address,uint32),address)\":{\"notice\":\"Emitted when the owner of an operatorSet is updated\"},\"TableUpdated((address,uint32),uint32,(address,uint256[])[])\":{\"notice\":\"Emitted when an ECDSA table is updated\"}},\"kind\":\"user\",\"methods\":{\"calculateCertificateDigest(uint32,bytes32)\":{\"notice\":\"Calculate the EIP-712 digest for a certificate\"},\"constructor\":{\"notice\":\"Constructor for the certificate verifier\"},\"domainSeparator()\":{\"notice\":\"Override domainSeparator to not include chainId\"},\"getOperatorCount((address,uint32),uint32)\":{\"notice\":\"Get the total number of operators for a given reference timestamp\"},\"getOperatorInfo((address,uint32),uint32,uint32)\":{\"notice\":\"Get a single operator info by index\"},\"getOperatorInfos((address,uint32),uint32)\":{\"notice\":\"Get operator infos for a timestamp\"},\"getOperatorSetOwner((address,uint32))\":{\"notice\":\"the address of the owner of the OperatorSet\"},\"getTotalStakes((address,uint32),uint32)\":{\"notice\":\"Get the total stakes for all operators at a given reference timestamp\"},\"latestReferenceTimestamp((address,uint32))\":{\"notice\":\"The latest reference timestamp of the operator table for a given operatorSet\"},\"updateOperatorTable((address,uint32),uint32,(address,uint256[])[],(address,uint32))\":{\"notice\":\"updates the operator table\"},\"verifyCertificate((address,uint32),(uint32,bytes32,bytes))\":{\"notice\":\"verifies a certificate\"},\"verifyCertificateNominal((address,uint32),(uint32,bytes32,bytes),uint256[])\":{\"notice\":\"verifies a certificate and makes sure that the signed stakes meet provided portions of the total stake on the AVS\"},\"verifyCertificateProportion((address,uint32),(uint32,bytes32,bytes),uint16[])\":{\"notice\":\"verifies a certificate and makes sure that the signed stakes meet provided portions of the total stake on the AVS\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"notice\":\"Verifies ECDSA certificates across multiple operator sets\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/multichain/ECDSACertificateVerifier.sol\":\"ECDSACertificateVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol\":{\"keccak256\":\"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d\",\"dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol\":{\"keccak256\":\"0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b\",\"dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/contracts/interfaces/IBN254CertificateVerifier.sol\":{\"keccak256\":\"0xb03cbcf4b6102abd378ff223100c08adc3ac30fd37bbff34b217ef22d80f690a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5fd602c78df1927bf4a4daecf24144678b6650bca607c39e29fb65d587d4a912\",\"dweb:/ipfs/QmR9eruhpjXczLHURUEHHZfvi8axAZ3YRbNsz8xQ416ksN\"]},\"src/contracts/interfaces/IBaseCertificateVerifier.sol\":{\"keccak256\":\"0x6f0ef3e573cf4e92e1b071755373fb7738cef79049575f45e6fcd6d835e887ea\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a4fb251ce933d5661643594822fd40761b26a905733ade0ea33b0a8ead306391\",\"dweb:/ipfs/QmRkCwHmHPWLDPRmJdPnV2Gb8wPrL1vzAfS96S3uEYUg1a\"]},\"src/contracts/interfaces/ICrossChainRegistry.sol\":{\"keccak256\":\"0x0f8b182e2ce900f6cddc7e1e4addd0df858acf847796d6f823a6486628ae34b4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://25cca26efa67086bb5f57eb31aab36f1e1a63b93eb9690072774c6ea965a8591\",\"dweb:/ipfs/Qmduc74dW679rh2h9d9m3ShW3uWakk7Adcj8VuKEq5nDyL\"]},\"src/contracts/interfaces/IECDSACertificateVerifier.sol\":{\"keccak256\":\"0xf1fcb2f8e6b48f8a0e6f0c7252da5a1bf4381f888adb52dd2a7664469c7e74ab\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://330cd704da2dfec20a903e27038cb0cc826adee0206aa01d95e55195c9ffad2a\",\"dweb:/ipfs/QmVn7Q4QbLo3Jx4a4BsLMYs21JwXy3xWtnFn4nMAY9Jjop\"]},\"src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0xa667d4377331e23b31ac28a4c4f1ab0dfa24911d93b6f05cb772330cdf264d53\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://82a02653db3332887a018ce6dce4a760ff35d0d5393a416103d8fbd88c7c7bb9\",\"dweb:/ipfs/QmV5rUxZdr8x2sF5MU6RLXySMr9GJkHemEex3tF3QyFYjg\"]},\"src/contracts/interfaces/IOperatorTableCalculator.sol\":{\"keccak256\":\"0xfd8827a2210442970cb6cfc3d2c999bebefcbc51b0b854f076d24a2594f8ab68\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a6fdc6703726e2bfdc14018fd08d1366438065fae01407d2e73b9d38f4e6c934\",\"dweb:/ipfs/QmT3AU8aV3R7vCGf86sqyWqV94hMHEfYbho84XxuDKceNH\"]},\"src/contracts/interfaces/IOperatorTableUpdater.sol\":{\"keccak256\":\"0x24a6b11b4c77524a4f1bc156d85e453f07c9ed9d796683c9d2e8a870dc8eb08a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://249cccbe440018875433659c5a020e5b51dc9834038adeb947fbb833052c6139\",\"dweb:/ipfs/QmVjEgZbhb2taQg2C3P9Sb8QFeAiSoy9T7gTSUgxj4REvL\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/mixins/SignatureUtilsMixin.sol\":{\"keccak256\":\"0x99633a417aaf4f3af1c9d432921f30a9723a4d7257546cf5c963dc23ca8f436a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ed3046a8aa6c4bbd5be361e8505c3c61c1f54f02d0337c8344d3f9bf1f745542\",\"dweb:/ipfs/QmPcJeQn5vMGaJEwkNCKoeDvEH1a1koMNUy6rgdsccVuky\"]},\"src/contracts/multichain/ECDSACertificateVerifier.sol\":{\"keccak256\":\"0xe661fffecb8180a73d10e48a9f6d787184bd06a1e514390a55304a7c082048b2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c760521ac49a9fbfd16f930e13f81a8256e50be87095341b34f5b9cd3769df6\",\"dweb:/ipfs/QmaibMC7cnZih39bd5kLT24Cyg7W63xMpb4jgiAaLXZsue\"]},\"src/contracts/multichain/ECDSACertificateVerifierStorage.sol\":{\"keccak256\":\"0xe552df28d1f9377a5d88bdd79280915d238aed602bf3bc948a2957cb5d568982\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3543670e3fa7094273bbb4b61c40a02dfe99a0221e83d9252fa8d0ca2a51001\",\"dweb:/ipfs/QmR12tgAsSg8NhWaaSUc5zRmhtbSxDaUBhnT97HSYLfKno\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IOperatorTableUpdater",
              "name": "_operatorTableUpdater",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CertificateStale"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignatureLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyTableUpdater"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReferenceTimestampDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RootDisabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureExpired"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TableUpdateStale"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VerificationFailed"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "maxStalenessPeriod",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxStalenessPeriodUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetOwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo[]",
              "name": "operatorInfos",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "pubkey",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "weights",
                  "type": "uint256[]"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TableUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateCertificateDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorCount",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "operatorIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorInfo",
          "outputs": [
            {
              "internalType": "struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "pubkey",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "weights",
                  "type": "uint256[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorInfos",
          "outputs": [
            {
              "internalType": "struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "pubkey",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "weights",
                  "type": "uint256[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "latestReferenceTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxOperatorTableStaleness",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorTableUpdater",
          "outputs": [
            {
              "internalType": "contract IOperatorTableUpdater",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.ECDSAOperatorInfo[]",
              "name": "operatorInfos",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "pubkey",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "weights",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
              "name": "operatorSetConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "maxStalenessPeriod",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorTable"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IECDSACertificateVerifierTypes.ECDSACertificate",
              "name": "cert",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyCertificate",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IECDSACertificateVerifierTypes.ECDSACertificate",
              "name": "cert",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "totalStakeNominalThresholds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyCertificateNominal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IECDSACertificateVerifierTypes.ECDSACertificate",
              "name": "cert",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint16[]",
              "name": "totalStakeProportionThresholds",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyCertificateProportion",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateCertificateDigest(uint32,bytes32)": {
            "details": "This function is public to allow offchain tools to calculate the same digestNote: This does not support smart contract based signatures for multichain",
            "params": {
              "messageHash": "The message hash",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "The EIP-712 digest"
            }
          },
          "constructor": {
            "details": "Disables initializers to prevent implementation initialization",
            "params": {
              "_operatorTableUpdater": "Address authorized to update operator tables",
              "_version": "The version string for the SignatureUtilsMixin"
            }
          },
          "domainSeparator()": {
            "details": "This function overrides the base domainSeparator to not include chainId",
            "returns": {
              "_0": "The domain separator hash without chainId"
            }
          },
          "getOperatorCount((address,uint32),uint32)": {
            "params": {
              "operatorSet": "The operator set",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "The number of operators"
            }
          },
          "getOperatorInfo((address,uint32),uint32,uint32)": {
            "params": {
              "operatorIndex": "The index of the operator",
              "operatorSet": "The operator set",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "The operator info"
            }
          },
          "getOperatorInfos((address,uint32),uint32)": {
            "params": {
              "operatorSet": "The operator set",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "The operator infos"
            }
          },
          "getTotalStakes((address,uint32),uint32)": {
            "params": {
              "operatorSet": "The operator set to calculate stakes for",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "totalStakes The total stakes for all operators"
            }
          },
          "maxOperatorTableStaleness((address,uint32))": {
            "returns": {
              "_0": "the maximum amount of seconds that a operator table can be in the past for a given operatorSet"
            }
          },
          "updateOperatorTable((address,uint32),uint32,(address,uint256[])[],(address,uint32))": {
            "details": "only callable by the operatorTableUpdater for the given operatorSetThe `referenceTimestamp` must be greater than the latest reference timestamp for the given operatorSet",
            "params": {
              "operatorInfos": "the operatorInfos to update the operator table with",
              "operatorSet": "the operatorSet to update the operator table for",
              "operatorSetConfig": "the configuration of the operatorSet",
              "referenceTimestamp": "the timestamp at which the operatorInfos were sourced"
            }
          },
          "verifyCertificate((address,uint32),(uint32,bytes32,bytes))": {
            "params": {
              "cert": "a certificate"
            },
            "returns": {
              "_0": "amount of stake that signed the certificate for each stake type. Each index corresponds to a stake type in the `weights` array in the `ECDSAOperatorInfo`"
            }
          },
          "verifyCertificateNominal((address,uint32),(uint32,bytes32,bytes),uint256[])": {
            "params": {
              "cert": "a certificate",
              "totalStakeNominalThresholds": "the nominal amount of total stake that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `weights` array in the `ECDSAOperatorInfo`"
            },
            "returns": {
              "_0": "Whether or not the certificate is valid and meets thresholds"
            }
          },
          "verifyCertificateProportion((address,uint32),(uint32,bytes32,bytes),uint16[])": {
            "params": {
              "cert": "a certificate",
              "totalStakeProportionThresholds": "the proportion, in BPS, of total stake that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `weights` array in the `ECDSAOperatorInfo`"
            },
            "returns": {
              "_0": "Whether or not the certificate is valid and meets thresholds"
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "calculateCertificateDigest(uint32,bytes32)": {
            "notice": "Calculate the EIP-712 digest for a certificate"
          },
          "constructor": {
            "notice": "Constructor for the certificate verifier"
          },
          "domainSeparator()": {
            "notice": "Override domainSeparator to not include chainId"
          },
          "getOperatorCount((address,uint32),uint32)": {
            "notice": "Get the total number of operators for a given reference timestamp"
          },
          "getOperatorInfo((address,uint32),uint32,uint32)": {
            "notice": "Get a single operator info by index"
          },
          "getOperatorInfos((address,uint32),uint32)": {
            "notice": "Get operator infos for a timestamp"
          },
          "getOperatorSetOwner((address,uint32))": {
            "notice": "the address of the owner of the OperatorSet"
          },
          "getTotalStakes((address,uint32),uint32)": {
            "notice": "Get the total stakes for all operators at a given reference timestamp"
          },
          "latestReferenceTimestamp((address,uint32))": {
            "notice": "The latest reference timestamp of the operator table for a given operatorSet"
          },
          "updateOperatorTable((address,uint32),uint32,(address,uint256[])[],(address,uint32))": {
            "notice": "updates the operator table"
          },
          "verifyCertificate((address,uint32),(uint32,bytes32,bytes))": {
            "notice": "verifies a certificate"
          },
          "verifyCertificateNominal((address,uint32),(uint32,bytes32,bytes),uint256[])": {
            "notice": "verifies a certificate and makes sure that the signed stakes meet provided portions of the total stake on the AVS"
          },
          "verifyCertificateProportion((address,uint32),(uint32,bytes32,bytes),uint16[])": {
            "notice": "verifies a certificate and makes sure that the signed stakes meet provided portions of the total stake on the AVS"
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/multichain/ECDSACertificateVerifier.sol": "ECDSACertificateVerifier"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol": {
        "keccak256": "0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0",
        "urls": [
          "bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d",
          "dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol": {
        "keccak256": "0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df",
        "urls": [
          "bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b",
          "dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IBN254CertificateVerifier.sol": {
        "keccak256": "0xb03cbcf4b6102abd378ff223100c08adc3ac30fd37bbff34b217ef22d80f690a",
        "urls": [
          "bzz-raw://5fd602c78df1927bf4a4daecf24144678b6650bca607c39e29fb65d587d4a912",
          "dweb:/ipfs/QmR9eruhpjXczLHURUEHHZfvi8axAZ3YRbNsz8xQ416ksN"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IBaseCertificateVerifier.sol": {
        "keccak256": "0x6f0ef3e573cf4e92e1b071755373fb7738cef79049575f45e6fcd6d835e887ea",
        "urls": [
          "bzz-raw://a4fb251ce933d5661643594822fd40761b26a905733ade0ea33b0a8ead306391",
          "dweb:/ipfs/QmRkCwHmHPWLDPRmJdPnV2Gb8wPrL1vzAfS96S3uEYUg1a"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ICrossChainRegistry.sol": {
        "keccak256": "0x0f8b182e2ce900f6cddc7e1e4addd0df858acf847796d6f823a6486628ae34b4",
        "urls": [
          "bzz-raw://25cca26efa67086bb5f57eb31aab36f1e1a63b93eb9690072774c6ea965a8591",
          "dweb:/ipfs/Qmduc74dW679rh2h9d9m3ShW3uWakk7Adcj8VuKEq5nDyL"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IECDSACertificateVerifier.sol": {
        "keccak256": "0xf1fcb2f8e6b48f8a0e6f0c7252da5a1bf4381f888adb52dd2a7664469c7e74ab",
        "urls": [
          "bzz-raw://330cd704da2dfec20a903e27038cb0cc826adee0206aa01d95e55195c9ffad2a",
          "dweb:/ipfs/QmVn7Q4QbLo3Jx4a4BsLMYs21JwXy3xWtnFn4nMAY9Jjop"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IKeyRegistrar.sol": {
        "keccak256": "0xa667d4377331e23b31ac28a4c4f1ab0dfa24911d93b6f05cb772330cdf264d53",
        "urls": [
          "bzz-raw://82a02653db3332887a018ce6dce4a760ff35d0d5393a416103d8fbd88c7c7bb9",
          "dweb:/ipfs/QmV5rUxZdr8x2sF5MU6RLXySMr9GJkHemEex3tF3QyFYjg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableCalculator.sol": {
        "keccak256": "0xfd8827a2210442970cb6cfc3d2c999bebefcbc51b0b854f076d24a2594f8ab68",
        "urls": [
          "bzz-raw://a6fdc6703726e2bfdc14018fd08d1366438065fae01407d2e73b9d38f4e6c934",
          "dweb:/ipfs/QmT3AU8aV3R7vCGf86sqyWqV94hMHEfYbho84XxuDKceNH"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableUpdater.sol": {
        "keccak256": "0x24a6b11b4c77524a4f1bc156d85e453f07c9ed9d796683c9d2e8a870dc8eb08a",
        "urls": [
          "bzz-raw://249cccbe440018875433659c5a020e5b51dc9834038adeb947fbb833052c6139",
          "dweb:/ipfs/QmVjEgZbhb2taQg2C3P9Sb8QFeAiSoy9T7gTSUgxj4REvL"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtilsMixin.sol": {
        "keccak256": "0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b",
        "urls": [
          "bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10",
          "dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BN254.sol": {
        "keccak256": "0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc",
        "urls": [
          "bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc",
          "dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SignatureUtilsMixin.sol": {
        "keccak256": "0x99633a417aaf4f3af1c9d432921f30a9723a4d7257546cf5c963dc23ca8f436a",
        "urls": [
          "bzz-raw://ed3046a8aa6c4bbd5be361e8505c3c61c1f54f02d0337c8344d3f9bf1f745542",
          "dweb:/ipfs/QmPcJeQn5vMGaJEwkNCKoeDvEH1a1koMNUy6rgdsccVuky"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/ECDSACertificateVerifier.sol": {
        "keccak256": "0xe661fffecb8180a73d10e48a9f6d787184bd06a1e514390a55304a7c082048b2",
        "urls": [
          "bzz-raw://9c760521ac49a9fbfd16f930e13f81a8256e50be87095341b34f5b9cd3769df6",
          "dweb:/ipfs/QmaibMC7cnZih39bd5kLT24Cyg7W63xMpb4jgiAaLXZsue"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/ECDSACertificateVerifierStorage.sol": {
        "keccak256": "0xe552df28d1f9377a5d88bdd79280915d238aed602bf3bc948a2957cb5d568982",
        "urls": [
          "bzz-raw://b3543670e3fa7094273bbb4b61c40a02dfe99a0221e83d9252fa8d0ca2a51001",
          "dweb:/ipfs/QmR12tgAsSg8NhWaaSUc5zRmhtbSxDaUBhnT97HSYLfKno"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 178
}