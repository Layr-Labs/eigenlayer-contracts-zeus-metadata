{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_operatorTableUpdater",
          "type": "address",
          "internalType": "contract IOperatorTableUpdater"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getNonsignerOperatorInfo",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "operatorIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
          "components": [
            {
              "name": "pubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "weights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorCount",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetInfo",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
          "components": [
            {
              "name": "operatorInfoTreeRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "numOperators",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "aggregatePubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWeights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetOwner",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalStakeWeights",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isNonsignerCached",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "operatorIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isReferenceTimestampSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "latestReferenceTimestamp",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxOperatorTableStaleness",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "operatorTableUpdater",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IOperatorTableUpdater"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trySignatureVerification",
      "inputs": [
        {
          "name": "msgHash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "aggPubkey",
          "type": "tuple",
          "internalType": "struct BN254.G1Point",
          "components": [
            {
              "name": "X",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "Y",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "apkG2",
          "type": "tuple",
          "internalType": "struct BN254.G2Point",
          "components": [
            {
              "name": "X",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            },
            {
              "name": "Y",
              "type": "uint256[2]",
              "internalType": "uint256[2]"
            }
          ]
        },
        {
          "name": "signature",
          "type": "tuple",
          "internalType": "struct BN254.G1Point",
          "components": [
            {
              "name": "X",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "Y",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "pairingSuccessful",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "signatureValid",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "updateOperatorTable",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "operatorSetInfo",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
          "components": [
            {
              "name": "operatorInfoTreeRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "numOperators",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "aggregatePubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWeights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "operatorSetConfig",
          "type": "tuple",
          "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
          "components": [
            {
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "maxStalenessPeriod",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "verifyCertificate",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "cert",
          "type": "tuple",
          "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
          "components": [
            {
              "name": "referenceTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "messageHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "signature",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "apk",
              "type": "tuple",
              "internalType": "struct BN254.G2Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                }
              ]
            },
            {
              "name": "nonSignerWitnesses",
              "type": "tuple[]",
              "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
              "components": [
                {
                  "name": "operatorIndex",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "operatorInfoProof",
                  "type": "bytes",
                  "internalType": "bytes"
                },
                {
                  "name": "operatorInfo",
                  "type": "tuple",
                  "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                  "components": [
                    {
                      "name": "pubkey",
                      "type": "tuple",
                      "internalType": "struct BN254.G1Point",
                      "components": [
                        {
                          "name": "X",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "Y",
                          "type": "uint256",
                          "internalType": "uint256"
                        }
                      ]
                    },
                    {
                      "name": "weights",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "signedStakes",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "verifyCertificateNominal",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "cert",
          "type": "tuple",
          "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
          "components": [
            {
              "name": "referenceTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "messageHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "signature",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "apk",
              "type": "tuple",
              "internalType": "struct BN254.G2Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                }
              ]
            },
            {
              "name": "nonSignerWitnesses",
              "type": "tuple[]",
              "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
              "components": [
                {
                  "name": "operatorIndex",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "operatorInfoProof",
                  "type": "bytes",
                  "internalType": "bytes"
                },
                {
                  "name": "operatorInfo",
                  "type": "tuple",
                  "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                  "components": [
                    {
                      "name": "pubkey",
                      "type": "tuple",
                      "internalType": "struct BN254.G1Point",
                      "components": [
                        {
                          "name": "X",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "Y",
                          "type": "uint256",
                          "internalType": "uint256"
                        }
                      ]
                    },
                    {
                      "name": "weights",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "totalStakeNominalThresholds",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "verifyCertificateProportion",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "cert",
          "type": "tuple",
          "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
          "components": [
            {
              "name": "referenceTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "messageHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "signature",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "apk",
              "type": "tuple",
              "internalType": "struct BN254.G2Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                }
              ]
            },
            {
              "name": "nonSignerWitnesses",
              "type": "tuple[]",
              "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
              "components": [
                {
                  "name": "operatorIndex",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "operatorInfoProof",
                  "type": "bytes",
                  "internalType": "bytes"
                },
                {
                  "name": "operatorInfo",
                  "type": "tuple",
                  "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                  "components": [
                    {
                      "name": "pubkey",
                      "type": "tuple",
                      "internalType": "struct BN254.G1Point",
                      "components": [
                        {
                          "name": "X",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "Y",
                          "type": "uint256",
                          "internalType": "uint256"
                        }
                      ]
                    },
                    {
                      "name": "weights",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "totalStakeProportionThresholds",
          "type": "uint16[]",
          "internalType": "uint16[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxStalenessPeriodUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "maxStalenessPeriod",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetOwnerUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TableUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "operatorSetInfo",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
          "components": [
            {
              "name": "operatorInfoTreeRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "numOperators",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "aggregatePubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWeights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CertificateStale",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECAddFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECMulFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECPairingFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ExpModFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorIndex",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidProofLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyTableUpdater",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReferenceTimestampDoesNotExist",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RootDisabled",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "TableUpdateStale",
      "inputs": []
    },
    {
      "type": "error",
      "name": "VerificationFailed",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561000f575f5ffd5b50604051612b9e380380612b9e83398101604081905261002e9161016a565b6001600160a01b0382166080528061004581610058565b60a0525061005161009e565b5050610294565b5f5f829050601f8151111561008b578260405163305a27a960e01b81526004016100829190610239565b60405180910390fd5b80516100968261026e565b179392505050565b5f54610100900460ff16156101055760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608401610082565b5f5460ff90811614610154575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b634e487b7160e01b5f52604160045260245ffd5b5f5f6040838503121561017b575f5ffd5b82516001600160a01b0381168114610191575f5ffd5b60208401519092506001600160401b038111156101ac575f5ffd5b8301601f810185136101bc575f5ffd5b80516001600160401b038111156101d5576101d5610156565b604051601f8201601f19908116603f011681016001600160401b038111828210171561020357610203610156565b60405281815282820160200187101561021a575f5ffd5b8160208401602083015e5f602083830101528093505050509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b8051602080830151919081101561028e575f198160200360031b1b821691505b50919050565b60805160a0516128db6102c35f395f61059101525f818161022f015281816106dc0152610e9a01526128db5ff3fe608060405234801561000f575f5ffd5b50600436106100fb575f3560e01c80636141879e116100935780638481892011610063578063848189201461027c578063cd83a72b1461028f578063dd2ae1b9146102a2578063eb39e68f146102b5575f5ffd5b80636141879e146102025780636738c40b1461021557806368d6e0811461022a5780637d1d1f5b14610269575f5ffd5b806326af6a3c116100ce57806326af6a3c1461019257806354fd4d50146101b25780635be87274146101c75780635ddb9b5b146101da575f5ffd5b8063017d7974146100ff578063080b7150146101275780631a18746c1461014757806323c2a3cb14610171575b5f5ffd5b61011261010d36600461229b565b6102d5565b60405190151581526020015b60405180910390f35b61013a610135366004612376565b610466565b60405161011e91906123c1565b61015a6101553660046123f8565b61047b565b60408051921515835290151560208301520161011e565b61018461017f366004612446565b61049c565b60405190815260200161011e565b6101a56101a0366004612478565b6104d2565b60405161011e91906124ed565b6101ba61058a565b60405161011e9190612522565b6101126101d5366004612478565b6105ba565b6101ed6101e8366004612557565b610685565b60405163ffffffff909116815260200161011e565b6101ed610210366004612557565b6106ab565b610228610223366004612587565b6106d1565b005b6102517f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011e565b61013a610277366004612446565b6108b7565b61025161028a366004612557565b610937565b61011261029d366004612446565b610960565b6101126102b0366004612640565b610996565b6102c86102c3366004612446565b610a29565b60405161011e91906126f8565b5f5f6102e18585610aee565b90505f6102ed86610c8b565b5f8181526004602081815260408084208a5163ffffffff16855282528084208151608081018352815481526001820154818501528251808401845260028301548152600383015481860152818401529381018054835181860281018601909452808452969750949593949093606086019383018282801561038b57602002820191905f5260205f20905b815481526020019060010190808311610377575b50505050508152505090505f8160600151905085518451146103c05760405163512509d360e11b815260040160405180910390fd5b5f5b8451811015610455575f6127108883815181106103e1576103e161270a565b602002602001015161ffff168484815181106103ff576103ff61270a565b60200260200101516104119190612732565b61041b919061275d565b9050808683815181106104305761043061270a565b6020026020010151101561044c575f965050505050505061045f565b506001016103c2565b5060019450505050505b9392505050565b60606104728383610aee565b90505b92915050565b5f5f61048f86848787600162061a80610cee565b9150915094509492505050565b5f5f6104a784610c8b565b5f90815260046020908152604080832063ffffffff8716845290915290206001015491505092915050565b6104da611c34565b5f6104e485610c8b565b5f81815260056020908152604080832063ffffffff89168452825280832087845282529182902082516080810184528154818501908152600183015460608301528152600282018054855181860281018601909652808652959650909491938584019390929083018282801561057757602002820191905f5260205f20905b815481526020019060010190808311610563575b5050505050815250509150509392505050565b60606105b57f0000000000000000000000000000000000000000000000000000000000000000610db6565b905090565b5f5f6105c585610c8b565b5f81815260056020908152604080832063ffffffff8916845282528083208784528252808320815160808101835281548184019081526001830154606083015281526002820180548451818702810187019095528085529697509495909491938581019392919083018282801561065957602002820191905f5260205f20905b815481526020019060010190808311610645575b505050919092525050815151919250501580159061067b575080516020015115155b9695505050505050565b5f5f61069083610c8b565b5f9081526003602052604090205463ffffffff169392505050565b5f5f6106b683610c8b565b5f9081526002602052604090205463ffffffff169392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461071a5760405163030c1b6b60e11b815260040160405180910390fd5b5f61073261072d36879003870187612557565b610c8b565b5f8181526003602052604090205490915063ffffffff9081169085161161076c57604051632f20889f60e01b815260040160405180910390fd5b5f81815260046020818152604080842063ffffffff891685528252928390208651815581870151600182015592860151805160028501558101516003840155606086015180518794936107c493908501920190611c5e565b5050505f818152600360209081526040909120805463ffffffff191663ffffffff87161790556107f690830183612770565b5f8281526001602090815260409182902080546001600160a01b0319166001600160a01b03949094169390931790925561083591908401908401612789565b5f828152600260209081526040808320805463ffffffff191663ffffffff958616179055600682528083209388168352929052819020805460ff19166001179055517f93e6bea1c9b5dce4a5c07b00261e956df2a4a253d9ab6ca070ca2037d72ada9e906108a8908790879087906127a2565b60405180910390a15050505050565b60605f6108c384610c8b565b5f81815260046020818152604080842063ffffffff89168552825292839020909101805483518184028101840190945280845293945091929083018282801561092957602002820191905f5260205f20905b815481526020019060010190808311610915575b505050505091505092915050565b5f5f61094283610c8b565b5f908152600160205260409020546001600160a01b03169392505050565b5f5f61096b84610c8b565b5f90815260066020908152604080832063ffffffff8716845290915290205460ff1691505092915050565b5f5f6109a28585610aee565b905082518151146109c65760405163512509d360e11b815260040160405180910390fd5b5f5b8151811015610a1d578381815181106109e3576109e361270a565b60200260200101518282815181106109fd576109fd61270a565b60200260200101511015610a15575f9250505061045f565b6001016109c8565b50600195945050505050565b610a31611ca7565b5f610a3b84610c8b565b5f81815260046020818152604080842063ffffffff8916855282529283902083516080810185528154815260018201548184015284518086018652600283015481526003830154818501528186015292810180548551818502810185019096528086529596509294909360608601939092909190830182828015610adc57602002820191905f5260205f20905b815481526020019060010190808311610ac8575b50505050508152505091505092915050565b6060610af8611cd9565b610b0184610c8b565b8082528351610b109190610df3565b80515f908152600460208181526040808420875163ffffffff1685528252928390208351608081018552815481526001820154818401528451808601865260028301548152600383015481850152818601529281018054855181850281018501909652808652939491936060860193830182828015610bac57602002820191905f5260205f20905b815481526020019060010190808311610b98575b505050919092525050506020820181905260600151516001600160401b03811115610bd957610bd9611e07565b604051908082528060200260200182016040528015610c02578160200160208202803683370190505b5060408201525f5b81602001516060015151811015610c66578160200151606001518181518110610c3557610c3561270a565b602002602001015182604001518281518110610c5357610c5361270a565b6020908102919091010152600101610c0a565b50610c718184610f2d565b6060820152610c808184611057565b604001519392505050565b5f815f0151826020015163ffffffff16604051602001610cd692919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b604051602081830303815290604052610475906127ee565b5f5f5f610cfa896110c5565b90505f610d098a89898c61114f565b90505f610d20610d198a84611203565b8b90611273565b90505f610d62610d5b84610d556040805180820182525f80825260209182015281518083019092526001825260029082015290565b90611203565b8590611273565b90508715610d8757610d7e82610d766112e7565b838c8b6113a7565b96509450610da7565b610d9a82610d936112e7565b838c6115bb565b95508515610da757600194505b50505050965096945050505050565b60605f610dc2836117f2565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f8281526002602052604090205463ffffffff16801580610e235750610e198183612811565b63ffffffff164211155b610e405760405163640fcd6b60e11b815260040160405180910390fd5b5f83815260066020908152604080832063ffffffff8616845290915290205460ff16610e7f57604051630cad17b760e31b815260040160405180910390fd5b60405163193877e160e21b815263ffffffff831660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906364e1df8490602401602060405180830381865afa158015610ee7573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0b919061282d565b610f2857604051631b14174b60e01b815260040160405180910390fd5b505050565b6040805180820182525f808252602091820181905282518084019093528083529082018190525b826080015151811015611050575f83608001518281518110610f7857610f7861270a565b60200260200101519050846020015160200151815f015163ffffffff1610610fb3576040516301fa53c760e11b815260040160405180910390fd5b845184515f91610fc39184611819565b8051909150610fd3908590611273565b93505f5b8160200151518110156110455786604001515181101561103d57816020015181815181106110075761100761270a565b6020026020010151876040015182815181106110255761102561270a565b60200260200101818151611039919061284c565b9052505b600101610fd7565b505050600101610f54565b5092915050565b5f6110776110688460600151611990565b60208501516040015190611273565b90505f5f6110938460200151848660600151876040015161047b565b915091508180156110a15750805b6110be5760405163439cc0cd60e01b815260040160405180910390fd5b5050505050565b604080518082019091525f80825260208201525f80806110f25f5160206128865f395f51905f528661285f565b90505b6110fe81611a26565b90935091505f5160206128865f395f51905f528283098303611136576040805180820190915290815260208101919091529392505050565b5f5160206128865f395f51905f526001820890506110f5565b8251602080850151845180519083015186840151805190850151875188870151604080519889018e90528801989098526060870195909552608086019390935260a085019190915260c084015260e08301526101008201526101208101919091525f907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019061014001604051602081830303815290604052805190602001205f1c6111fa919061285f565b95945050505050565b604080518082019091525f808252602082015261121e611d1e565b835181526020808501519082015260408082018490525f908360608460076107d05a03fa9050808061124c57fe5b508061126b57604051632319df1960e11b815260040160405180910390fd5b505092915050565b604080518082019091525f808252602082015261128e611d3c565b835181526020808501518183015283516040808401919091529084015160608301525f908360808460066107d05a03fa905080806112c857fe5b508061126b5760405163d4b68fd760e01b815260040160405180910390fd5b6112ef611d5a565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820182528681526020808201869052825180840190935286835282018490525f918291906113d8611d7a565b5f5b600281101561158f575f6113ef826006612732565b90508482600281106114035761140361270a565b60200201515183611414835f612872565b600c81106114245761142461270a565b602002015284826002811061143b5761143b61270a565b602002015160200151838260016114529190612872565b600c81106114625761146261270a565b60200201528382600281106114795761147961270a565b602002015151518361148c836002612872565b600c811061149c5761149c61270a565b60200201528382600281106114b3576114b361270a565b60200201515160016020020151836114cc836003612872565b600c81106114dc576114dc61270a565b60200201528382600281106114f3576114f361270a565b6020020151602001515f6002811061150d5761150d61270a565b60200201518361151e836004612872565b600c811061152e5761152e61270a565b60200201528382600281106115455761154561270a565b6020020151602001516001600281106115605761156061270a565b602002015183611571836005612872565b600c81106115815761158161270a565b6020020152506001016113da565b50611598611d99565b5f6020826101808560088cfa9151919c9115159b50909950505050505050505050565b6040805180820182528581526020808201859052825180840190935285835282018390525f916115e9611d7a565b5f5b60028110156117a0575f611600826006612732565b90508482600281106116145761161461270a565b60200201515183611625835f612872565b600c81106116355761163561270a565b602002015284826002811061164c5761164c61270a565b602002015160200151838260016116639190612872565b600c81106116735761167361270a565b602002015283826002811061168a5761168a61270a565b602002015151518361169d836002612872565b600c81106116ad576116ad61270a565b60200201528382600281106116c4576116c461270a565b60200201515160016020020151836116dd836003612872565b600c81106116ed576116ed61270a565b60200201528382600281106117045761170461270a565b6020020151602001515f6002811061171e5761171e61270a565b60200201518361172f836004612872565b600c811061173f5761173f61270a565b60200201528382600281106117565761175661270a565b6020020151602001516001600281106117715761177161270a565b602002015183611782836005612872565b600c81106117925761179261270a565b6020020152506001016115eb565b506117a9611d99565b5f6020826101808560086107d05a03fa905080806117c357fe5b50806117e2576040516324ccc79360e21b815260040160405180910390fd5b5051151598975050505050505050565b5f60ff8216601f81111561047557604051632cd44ac360e21b815260040160405180910390fd5b611821611c34565b5f84815260056020908152604080832063ffffffff80881685529083528184208651909116845282528083208151608081018352815481840190815260018301546060830152815260028201805484518187028101870190955280855291949293858401939092908301828280156118b657602002820191905f5260205f20905b8154815260200190600101908083116118a2575b5050509190925250508151519192505f9115159050806118da575081516020015115155b905080611983575f6118fa8787875f015188604001518960200151611aa2565b90508061191a5760405163439cc0cd60e01b815260040160405180910390fd5b6040808601515f8981526005602090815283822063ffffffff808c1684529082528483208a51909116835281529290208151805182558301516001820155828201518051929391926119729260028501920190611c5e565b509050508460400151935050611987565b8192505b50509392505050565b604080518082019091525f808252602082015281511580156119b457506020820151155b156119d1575050604080518082019091525f808252602082015290565b6040518060400160405280835f015181526020015f5160206128865f395f51905f528460200151611a02919061285f565b611a19905f5160206128865f395f51905f5261284c565b905292915050565b919050565b5f80805f5160206128865f395f51905f5260035f5160206128865f395f51905f52865f5160206128865f395f51905f52888909090890505f611a96827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f525f5160206128865f395f51905f52611b0d565b91959194509092505050565b5f5f83604051602001611ab591906124ed565b60408051601f1981840301815291815281516020928301205f8a81526004845282812063ffffffff808c1683529452919091205490925090611b01908590839085908a811690611b8616565b98975050505050505050565b5f5f611b17611d99565b611b1f611db7565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa92508280611b5c57fe5b5082611b7b5760405163d51edae360e01b815260040160405180910390fd5b505195945050505050565b5f83611b93868585611b9d565b1495945050505050565b5f60208451611bac919061285f565b15611bca576040516313717da960e21b815260040160405180910390fd5b8260205b85518111611c2b57611be160028561285f565b5f03611c0257815f528086015160205260405f209150600284049350611c19565b808601515f528160205260405f2091506002840493505b611c24602082612872565b9050611bce565b50949350505050565b604080516080810182525f91810182815260608201929092529081905b8152602001606081525090565b828054828255905f5260205f20908101928215611c97579160200282015b82811115611c97578251825591602001919060010190611c7c565b50611ca3929150611dd5565b5090565b60405180608001604052805f81526020015f8152602001611c5160405180604001604052805f81526020015f81525090565b60405180608001604052805f8152602001611cf2611ca7565b815260200160608152602001611d1960405180604001604052805f81526020015f81525090565b905290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280611d6d611de9565b8152602001611d19611de9565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b5b80821115611ca3575f8155600101611dd6565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b0381118282101715611e3d57611e3d611e07565b60405290565b60405160a081016001600160401b0381118282101715611e3d57611e3d611e07565b604051606081016001600160401b0381118282101715611e3d57611e3d611e07565b604051608081016001600160401b0381118282101715611e3d57611e3d611e07565b604051601f8201601f191681016001600160401b0381118282101715611ed157611ed1611e07565b604052919050565b80356001600160a01b0381168114611a21575f5ffd5b803563ffffffff81168114611a21575f5ffd5b5f60408284031215611f12575f5ffd5b611f1a611e1b565b9050611f2582611ed9565b8152611f3360208301611eef565b602082015292915050565b5f60408284031215611f4e575f5ffd5b611f56611e1b565b823581526020928301359281019290925250919050565b5f82601f830112611f7c575f5ffd5b611f84611e1b565b806040840185811115611f95575f5ffd5b845b81811015611faf578035845260209384019301611f97565b509095945050505050565b5f60808284031215611fca575f5ffd5b611fd2611e1b565b9050611fde8383611f6d565b8152611f338360408401611f6d565b5f6001600160401b0382111561200557612005611e07565b5060051b60200190565b5f82601f83011261201e575f5ffd5b813561203161202c82611fed565b611ea9565b8082825260208201915060208360051b860101925085831115612052575f5ffd5b602085015b8381101561206f578035835260209283019201612057565b5095945050505050565b5f60608284031215612089575f5ffd5b612091611e1b565b905061209d8383611f3e565b815260408201356001600160401b038111156120b7575f5ffd5b6120c38482850161200f565b60208301525092915050565b5f61012082840312156120e0575f5ffd5b6120e8611e43565b90506120f382611eef565b81526020828101359082015261210c8360408401611f3e565b604082015261211e8360808401611fba565b60608201526101008201356001600160401b0381111561213c575f5ffd5b8201601f8101841361214c575f5ffd5b803561215a61202c82611fed565b8082825260208201915060208360051b85010192508683111561217b575f5ffd5b602084015b8381101561228b5780356001600160401b0381111561219d575f5ffd5b85016060818a03601f190112156121b2575f5ffd5b6121ba611e65565b6121c660208301611eef565b815260408201356001600160401b038111156121e0575f5ffd5b82016020810190603f018b136121f4575f5ffd5b80356001600160401b0381111561220d5761220d611e07565b612220601f8201601f1916602001611ea9565b8181528c6020838501011115612234575f5ffd5b816020840160208301375f6020838301015280602085015250505060608201356001600160401b03811115612267575f5ffd5b6122768b602083860101612079565b60408301525084525060209283019201612180565b5060808501525091949350505050565b5f5f5f608084860312156122ad575f5ffd5b6122b78585611f02565b925060408401356001600160401b038111156122d1575f5ffd5b6122dd868287016120cf565b92505060608401356001600160401b038111156122f8575f5ffd5b8401601f81018613612308575f5ffd5b803561231661202c82611fed565b8082825260208201915060208360051b850101925088831115612337575f5ffd5b6020840193505b8284101561236857833561ffff81168114612357575f5ffd5b82526020938401939091019061233e565b809450505050509250925092565b5f5f60608385031215612387575f5ffd5b6123918484611f02565b915060408301356001600160401b038111156123ab575f5ffd5b6123b7858286016120cf565b9150509250929050565b602080825282518282018190525f918401906040840190835b81811015611faf5783518352602093840193909201916001016123da565b5f5f5f5f610120858703121561240c575f5ffd5b8435935061241d8660208701611f3e565b925061242c8660608701611fba565b915061243b8660e08701611f3e565b905092959194509250565b5f5f60608385031215612457575f5ffd5b6124618484611f02565b915061246f60408401611eef565b90509250929050565b5f5f5f6080848603121561248a575f5ffd5b6124948585611f02565b92506124a260408501611eef565b929592945050506060919091013590565b5f8151808452602084019350602083015f5b828110156124e35781518652602095860195909101906001016124c5565b5093949350505050565b60208082528251805183830152015160408201525f602083015160608084015261251a60808401826124b3565b949350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60408284031215612567575f5ffd5b6104728383611f02565b5f60408284031215612581575f5ffd5b50919050565b5f5f5f5f60c0858703121561259a575f5ffd5b6125a48686612571565b93506125b260408601611eef565b925060608501356001600160401b038111156125cc575f5ffd5b850160a081880312156125dd575f5ffd5b6125e5611e87565b81358152602080830135908201526126008860408401611f3e565b604082015260808201356001600160401b0381111561261d575f5ffd5b6126298982850161200f565b606083015250925061243b90508660808701612571565b5f5f5f60808486031215612652575f5ffd5b61265c8585611f02565b925060408401356001600160401b03811115612676575f5ffd5b612682868287016120cf565b92505060608401356001600160401b0381111561269d575f5ffd5b6126a98682870161200f565b9150509250925092565b80518252602081015160208301525f60408201516126de604085018280518252602090810151910152565b50606082015160a0608085015261251a60a08501826124b3565b602081525f61047260208301846126b3565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176104755761047561271e565b634e487b7160e01b5f52601260045260245ffd5b5f8261276b5761276b612749565b500490565b5f60208284031215612780575f5ffd5b61047282611ed9565b5f60208284031215612799575f5ffd5b61047282611eef565b6001600160a01b036127b385611ed9565b16815263ffffffff6127c760208601611eef565b16602082015263ffffffff83166040820152608060608201525f6111fa60808301846126b3565b80516020808301519190811015612581575f1960209190910360031b1b16919050565b63ffffffff81811683821601908111156104755761047561271e565b5f6020828403121561283d575f5ffd5b8151801515811461045f575f5ffd5b818103818111156104755761047561271e565b5f8261286d5761286d612749565b500690565b808201808211156104755761047561271e56fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a26469706673582212203d2215cbed0070c17d3a64ae4df403d618fea31e750250314ef2f308eb81174164736f6c634300081b0033",
    "sourceMap": "641:14488:150:-:0;;;1584:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1981:44:151;;;;1754:8:150;961:24:148;1754:8:150;961:22:148;:24::i;:::-;950:35;;-1:-1:-1;1774:22:150::2;:20;:22::i;:::-;1584:219:::0;;641:14488;;1711:286:37;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:37;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:37:o;5939:280:26:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:26;;2211:2:245;5998:66:26;;;2193:21:245;2250:2;2230:18;;;2223:30;2289:34;2269:18;;;2262:62;-1:-1:-1;;;2340:18:245;;;2333:37;2387:19;;5998:66:26;2009:403:245;5998:66:26;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:26;6140:15;6125:30;;;;;;6174:28;;2559:36:245;;;6174:28:26;;2547:2:245;2532:18;6174:28:26;;;;;;;6074:139;5939:280::o;14:127:245:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1133;266:6;274;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;369:16;;-1:-1:-1;;;;;414:31:245;;404:42;;394:70;;460:1;457;450:12;394:70;532:2;517:18;;511:25;483:5;;-1:-1:-1;;;;;;548:30:245;;545:50;;;591:1;588;581:12;545:50;614:22;;667:4;659:13;;655:27;-1:-1:-1;645:55:245;;696:1;693;686:12;645:55;723:9;;-1:-1:-1;;;;;744:30:245;;741:56;;;777:18;;:::i;:::-;826:2;820:9;918:2;880:17;;-1:-1:-1;;876:31:245;;;909:2;872:40;868:54;856:67;;-1:-1:-1;;;;;938:34:245;;974:22;;;935:62;932:88;;;1000:18;;:::i;:::-;1036:2;1029:22;1060;;;1101:15;;;1118:2;1097:24;1094:37;-1:-1:-1;1091:57:245;;;1144:1;1141;1134:12;1091:57;1193:6;1188:2;1184;1180:11;1175:2;1167:6;1163:15;1157:43;1246:1;1241:2;1232:6;1224;1220:19;1216:28;1209:39;1267:6;1257:16;;;;;146:1133;;;;;:::o;1284:418::-;1433:2;1422:9;1415:21;1396:4;1465:6;1459:13;1508:6;1503:2;1492:9;1488:18;1481:34;1567:6;1562:2;1554:6;1550:15;1545:2;1534:9;1530:18;1524:50;1623:1;1618:2;1609:6;1598:9;1594:22;1590:31;1583:42;1693:2;1686;1682:7;1677:2;1669:6;1665:15;1661:29;1650:9;1646:45;1642:54;1634:62;;;1284:418;;;;:::o;1707:297::-;1825:12;;1872:4;1861:16;;;1855:23;;1825:12;1890:16;;1887:111;;;1984:1;1980:6;1970;1964:4;1960:17;1957:1;1953:25;1949:38;1942:5;1938:50;1929:59;;1887:111;;1707:297;;;:::o;2417:184::-;641:14488:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b50600436106100fb575f3560e01c80636141879e116100935780638481892011610063578063848189201461027c578063cd83a72b1461028f578063dd2ae1b9146102a2578063eb39e68f146102b5575f5ffd5b80636141879e146102025780636738c40b1461021557806368d6e0811461022a5780637d1d1f5b14610269575f5ffd5b806326af6a3c116100ce57806326af6a3c1461019257806354fd4d50146101b25780635be87274146101c75780635ddb9b5b146101da575f5ffd5b8063017d7974146100ff578063080b7150146101275780631a18746c1461014757806323c2a3cb14610171575b5f5ffd5b61011261010d36600461229b565b6102d5565b60405190151581526020015b60405180910390f35b61013a610135366004612376565b610466565b60405161011e91906123c1565b61015a6101553660046123f8565b61047b565b60408051921515835290151560208301520161011e565b61018461017f366004612446565b61049c565b60405190815260200161011e565b6101a56101a0366004612478565b6104d2565b60405161011e91906124ed565b6101ba61058a565b60405161011e9190612522565b6101126101d5366004612478565b6105ba565b6101ed6101e8366004612557565b610685565b60405163ffffffff909116815260200161011e565b6101ed610210366004612557565b6106ab565b610228610223366004612587565b6106d1565b005b6102517f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011e565b61013a610277366004612446565b6108b7565b61025161028a366004612557565b610937565b61011261029d366004612446565b610960565b6101126102b0366004612640565b610996565b6102c86102c3366004612446565b610a29565b60405161011e91906126f8565b5f5f6102e18585610aee565b90505f6102ed86610c8b565b5f8181526004602081815260408084208a5163ffffffff16855282528084208151608081018352815481526001820154818501528251808401845260028301548152600383015481860152818401529381018054835181860281018601909452808452969750949593949093606086019383018282801561038b57602002820191905f5260205f20905b815481526020019060010190808311610377575b50505050508152505090505f8160600151905085518451146103c05760405163512509d360e11b815260040160405180910390fd5b5f5b8451811015610455575f6127108883815181106103e1576103e161270a565b602002602001015161ffff168484815181106103ff576103ff61270a565b60200260200101516104119190612732565b61041b919061275d565b9050808683815181106104305761043061270a565b6020026020010151101561044c575f965050505050505061045f565b506001016103c2565b5060019450505050505b9392505050565b60606104728383610aee565b90505b92915050565b5f5f61048f86848787600162061a80610cee565b9150915094509492505050565b5f5f6104a784610c8b565b5f90815260046020908152604080832063ffffffff8716845290915290206001015491505092915050565b6104da611c34565b5f6104e485610c8b565b5f81815260056020908152604080832063ffffffff89168452825280832087845282529182902082516080810184528154818501908152600183015460608301528152600282018054855181860281018601909652808652959650909491938584019390929083018282801561057757602002820191905f5260205f20905b815481526020019060010190808311610563575b5050505050815250509150509392505050565b60606105b57f0000000000000000000000000000000000000000000000000000000000000000610db6565b905090565b5f5f6105c585610c8b565b5f81815260056020908152604080832063ffffffff8916845282528083208784528252808320815160808101835281548184019081526001830154606083015281526002820180548451818702810187019095528085529697509495909491938581019392919083018282801561065957602002820191905f5260205f20905b815481526020019060010190808311610645575b505050919092525050815151919250501580159061067b575080516020015115155b9695505050505050565b5f5f61069083610c8b565b5f9081526003602052604090205463ffffffff169392505050565b5f5f6106b683610c8b565b5f9081526002602052604090205463ffffffff169392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461071a5760405163030c1b6b60e11b815260040160405180910390fd5b5f61073261072d36879003870187612557565b610c8b565b5f8181526003602052604090205490915063ffffffff9081169085161161076c57604051632f20889f60e01b815260040160405180910390fd5b5f81815260046020818152604080842063ffffffff891685528252928390208651815581870151600182015592860151805160028501558101516003840155606086015180518794936107c493908501920190611c5e565b5050505f818152600360209081526040909120805463ffffffff191663ffffffff87161790556107f690830183612770565b5f8281526001602090815260409182902080546001600160a01b0319166001600160a01b03949094169390931790925561083591908401908401612789565b5f828152600260209081526040808320805463ffffffff191663ffffffff958616179055600682528083209388168352929052819020805460ff19166001179055517f93e6bea1c9b5dce4a5c07b00261e956df2a4a253d9ab6ca070ca2037d72ada9e906108a8908790879087906127a2565b60405180910390a15050505050565b60605f6108c384610c8b565b5f81815260046020818152604080842063ffffffff89168552825292839020909101805483518184028101840190945280845293945091929083018282801561092957602002820191905f5260205f20905b815481526020019060010190808311610915575b505050505091505092915050565b5f5f61094283610c8b565b5f908152600160205260409020546001600160a01b03169392505050565b5f5f61096b84610c8b565b5f90815260066020908152604080832063ffffffff8716845290915290205460ff1691505092915050565b5f5f6109a28585610aee565b905082518151146109c65760405163512509d360e11b815260040160405180910390fd5b5f5b8151811015610a1d578381815181106109e3576109e361270a565b60200260200101518282815181106109fd576109fd61270a565b60200260200101511015610a15575f9250505061045f565b6001016109c8565b50600195945050505050565b610a31611ca7565b5f610a3b84610c8b565b5f81815260046020818152604080842063ffffffff8916855282529283902083516080810185528154815260018201548184015284518086018652600283015481526003830154818501528186015292810180548551818502810185019096528086529596509294909360608601939092909190830182828015610adc57602002820191905f5260205f20905b815481526020019060010190808311610ac8575b50505050508152505091505092915050565b6060610af8611cd9565b610b0184610c8b565b8082528351610b109190610df3565b80515f908152600460208181526040808420875163ffffffff1685528252928390208351608081018552815481526001820154818401528451808601865260028301548152600383015481850152818601529281018054855181850281018501909652808652939491936060860193830182828015610bac57602002820191905f5260205f20905b815481526020019060010190808311610b98575b505050919092525050506020820181905260600151516001600160401b03811115610bd957610bd9611e07565b604051908082528060200260200182016040528015610c02578160200160208202803683370190505b5060408201525f5b81602001516060015151811015610c66578160200151606001518181518110610c3557610c3561270a565b602002602001015182604001518281518110610c5357610c5361270a565b6020908102919091010152600101610c0a565b50610c718184610f2d565b6060820152610c808184611057565b604001519392505050565b5f815f0151826020015163ffffffff16604051602001610cd692919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b604051602081830303815290604052610475906127ee565b5f5f5f610cfa896110c5565b90505f610d098a89898c61114f565b90505f610d20610d198a84611203565b8b90611273565b90505f610d62610d5b84610d556040805180820182525f80825260209182015281518083019092526001825260029082015290565b90611203565b8590611273565b90508715610d8757610d7e82610d766112e7565b838c8b6113a7565b96509450610da7565b610d9a82610d936112e7565b838c6115bb565b95508515610da757600194505b50505050965096945050505050565b60605f610dc2836117f2565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f8281526002602052604090205463ffffffff16801580610e235750610e198183612811565b63ffffffff164211155b610e405760405163640fcd6b60e11b815260040160405180910390fd5b5f83815260066020908152604080832063ffffffff8616845290915290205460ff16610e7f57604051630cad17b760e31b815260040160405180910390fd5b60405163193877e160e21b815263ffffffff831660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906364e1df8490602401602060405180830381865afa158015610ee7573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0b919061282d565b610f2857604051631b14174b60e01b815260040160405180910390fd5b505050565b6040805180820182525f808252602091820181905282518084019093528083529082018190525b826080015151811015611050575f83608001518281518110610f7857610f7861270a565b60200260200101519050846020015160200151815f015163ffffffff1610610fb3576040516301fa53c760e11b815260040160405180910390fd5b845184515f91610fc39184611819565b8051909150610fd3908590611273565b93505f5b8160200151518110156110455786604001515181101561103d57816020015181815181106110075761100761270a565b6020026020010151876040015182815181106110255761102561270a565b60200260200101818151611039919061284c565b9052505b600101610fd7565b505050600101610f54565b5092915050565b5f6110776110688460600151611990565b60208501516040015190611273565b90505f5f6110938460200151848660600151876040015161047b565b915091508180156110a15750805b6110be5760405163439cc0cd60e01b815260040160405180910390fd5b5050505050565b604080518082019091525f80825260208201525f80806110f25f5160206128865f395f51905f528661285f565b90505b6110fe81611a26565b90935091505f5160206128865f395f51905f528283098303611136576040805180820190915290815260208101919091529392505050565b5f5160206128865f395f51905f526001820890506110f5565b8251602080850151845180519083015186840151805190850151875188870151604080519889018e90528801989098526060870195909552608086019390935260a085019190915260c084015260e08301526101008201526101208101919091525f907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019061014001604051602081830303815290604052805190602001205f1c6111fa919061285f565b95945050505050565b604080518082019091525f808252602082015261121e611d1e565b835181526020808501519082015260408082018490525f908360608460076107d05a03fa9050808061124c57fe5b508061126b57604051632319df1960e11b815260040160405180910390fd5b505092915050565b604080518082019091525f808252602082015261128e611d3c565b835181526020808501518183015283516040808401919091529084015160608301525f908360808460066107d05a03fa905080806112c857fe5b508061126b5760405163d4b68fd760e01b815260040160405180910390fd5b6112ef611d5a565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820182528681526020808201869052825180840190935286835282018490525f918291906113d8611d7a565b5f5b600281101561158f575f6113ef826006612732565b90508482600281106114035761140361270a565b60200201515183611414835f612872565b600c81106114245761142461270a565b602002015284826002811061143b5761143b61270a565b602002015160200151838260016114529190612872565b600c81106114625761146261270a565b60200201528382600281106114795761147961270a565b602002015151518361148c836002612872565b600c811061149c5761149c61270a565b60200201528382600281106114b3576114b361270a565b60200201515160016020020151836114cc836003612872565b600c81106114dc576114dc61270a565b60200201528382600281106114f3576114f361270a565b6020020151602001515f6002811061150d5761150d61270a565b60200201518361151e836004612872565b600c811061152e5761152e61270a565b60200201528382600281106115455761154561270a565b6020020151602001516001600281106115605761156061270a565b602002015183611571836005612872565b600c81106115815761158161270a565b6020020152506001016113da565b50611598611d99565b5f6020826101808560088cfa9151919c9115159b50909950505050505050505050565b6040805180820182528581526020808201859052825180840190935285835282018390525f916115e9611d7a565b5f5b60028110156117a0575f611600826006612732565b90508482600281106116145761161461270a565b60200201515183611625835f612872565b600c81106116355761163561270a565b602002015284826002811061164c5761164c61270a565b602002015160200151838260016116639190612872565b600c81106116735761167361270a565b602002015283826002811061168a5761168a61270a565b602002015151518361169d836002612872565b600c81106116ad576116ad61270a565b60200201528382600281106116c4576116c461270a565b60200201515160016020020151836116dd836003612872565b600c81106116ed576116ed61270a565b60200201528382600281106117045761170461270a565b6020020151602001515f6002811061171e5761171e61270a565b60200201518361172f836004612872565b600c811061173f5761173f61270a565b60200201528382600281106117565761175661270a565b6020020151602001516001600281106117715761177161270a565b602002015183611782836005612872565b600c81106117925761179261270a565b6020020152506001016115eb565b506117a9611d99565b5f6020826101808560086107d05a03fa905080806117c357fe5b50806117e2576040516324ccc79360e21b815260040160405180910390fd5b5051151598975050505050505050565b5f60ff8216601f81111561047557604051632cd44ac360e21b815260040160405180910390fd5b611821611c34565b5f84815260056020908152604080832063ffffffff80881685529083528184208651909116845282528083208151608081018352815481840190815260018301546060830152815260028201805484518187028101870190955280855291949293858401939092908301828280156118b657602002820191905f5260205f20905b8154815260200190600101908083116118a2575b5050509190925250508151519192505f9115159050806118da575081516020015115155b905080611983575f6118fa8787875f015188604001518960200151611aa2565b90508061191a5760405163439cc0cd60e01b815260040160405180910390fd5b6040808601515f8981526005602090815283822063ffffffff808c1684529082528483208a51909116835281529290208151805182558301516001820155828201518051929391926119729260028501920190611c5e565b509050508460400151935050611987565b8192505b50509392505050565b604080518082019091525f808252602082015281511580156119b457506020820151155b156119d1575050604080518082019091525f808252602082015290565b6040518060400160405280835f015181526020015f5160206128865f395f51905f528460200151611a02919061285f565b611a19905f5160206128865f395f51905f5261284c565b905292915050565b919050565b5f80805f5160206128865f395f51905f5260035f5160206128865f395f51905f52865f5160206128865f395f51905f52888909090890505f611a96827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f525f5160206128865f395f51905f52611b0d565b91959194509092505050565b5f5f83604051602001611ab591906124ed565b60408051601f1981840301815291815281516020928301205f8a81526004845282812063ffffffff808c1683529452919091205490925090611b01908590839085908a811690611b8616565b98975050505050505050565b5f5f611b17611d99565b611b1f611db7565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa92508280611b5c57fe5b5082611b7b5760405163d51edae360e01b815260040160405180910390fd5b505195945050505050565b5f83611b93868585611b9d565b1495945050505050565b5f60208451611bac919061285f565b15611bca576040516313717da960e21b815260040160405180910390fd5b8260205b85518111611c2b57611be160028561285f565b5f03611c0257815f528086015160205260405f209150600284049350611c19565b808601515f528160205260405f2091506002840493505b611c24602082612872565b9050611bce565b50949350505050565b604080516080810182525f91810182815260608201929092529081905b8152602001606081525090565b828054828255905f5260205f20908101928215611c97579160200282015b82811115611c97578251825591602001919060010190611c7c565b50611ca3929150611dd5565b5090565b60405180608001604052805f81526020015f8152602001611c5160405180604001604052805f81526020015f81525090565b60405180608001604052805f8152602001611cf2611ca7565b815260200160608152602001611d1960405180604001604052805f81526020015f81525090565b905290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280611d6d611de9565b8152602001611d19611de9565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b5b80821115611ca3575f8155600101611dd6565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b0381118282101715611e3d57611e3d611e07565b60405290565b60405160a081016001600160401b0381118282101715611e3d57611e3d611e07565b604051606081016001600160401b0381118282101715611e3d57611e3d611e07565b604051608081016001600160401b0381118282101715611e3d57611e3d611e07565b604051601f8201601f191681016001600160401b0381118282101715611ed157611ed1611e07565b604052919050565b80356001600160a01b0381168114611a21575f5ffd5b803563ffffffff81168114611a21575f5ffd5b5f60408284031215611f12575f5ffd5b611f1a611e1b565b9050611f2582611ed9565b8152611f3360208301611eef565b602082015292915050565b5f60408284031215611f4e575f5ffd5b611f56611e1b565b823581526020928301359281019290925250919050565b5f82601f830112611f7c575f5ffd5b611f84611e1b565b806040840185811115611f95575f5ffd5b845b81811015611faf578035845260209384019301611f97565b509095945050505050565b5f60808284031215611fca575f5ffd5b611fd2611e1b565b9050611fde8383611f6d565b8152611f338360408401611f6d565b5f6001600160401b0382111561200557612005611e07565b5060051b60200190565b5f82601f83011261201e575f5ffd5b813561203161202c82611fed565b611ea9565b8082825260208201915060208360051b860101925085831115612052575f5ffd5b602085015b8381101561206f578035835260209283019201612057565b5095945050505050565b5f60608284031215612089575f5ffd5b612091611e1b565b905061209d8383611f3e565b815260408201356001600160401b038111156120b7575f5ffd5b6120c38482850161200f565b60208301525092915050565b5f61012082840312156120e0575f5ffd5b6120e8611e43565b90506120f382611eef565b81526020828101359082015261210c8360408401611f3e565b604082015261211e8360808401611fba565b60608201526101008201356001600160401b0381111561213c575f5ffd5b8201601f8101841361214c575f5ffd5b803561215a61202c82611fed565b8082825260208201915060208360051b85010192508683111561217b575f5ffd5b602084015b8381101561228b5780356001600160401b0381111561219d575f5ffd5b85016060818a03601f190112156121b2575f5ffd5b6121ba611e65565b6121c660208301611eef565b815260408201356001600160401b038111156121e0575f5ffd5b82016020810190603f018b136121f4575f5ffd5b80356001600160401b0381111561220d5761220d611e07565b612220601f8201601f1916602001611ea9565b8181528c6020838501011115612234575f5ffd5b816020840160208301375f6020838301015280602085015250505060608201356001600160401b03811115612267575f5ffd5b6122768b602083860101612079565b60408301525084525060209283019201612180565b5060808501525091949350505050565b5f5f5f608084860312156122ad575f5ffd5b6122b78585611f02565b925060408401356001600160401b038111156122d1575f5ffd5b6122dd868287016120cf565b92505060608401356001600160401b038111156122f8575f5ffd5b8401601f81018613612308575f5ffd5b803561231661202c82611fed565b8082825260208201915060208360051b850101925088831115612337575f5ffd5b6020840193505b8284101561236857833561ffff81168114612357575f5ffd5b82526020938401939091019061233e565b809450505050509250925092565b5f5f60608385031215612387575f5ffd5b6123918484611f02565b915060408301356001600160401b038111156123ab575f5ffd5b6123b7858286016120cf565b9150509250929050565b602080825282518282018190525f918401906040840190835b81811015611faf5783518352602093840193909201916001016123da565b5f5f5f5f610120858703121561240c575f5ffd5b8435935061241d8660208701611f3e565b925061242c8660608701611fba565b915061243b8660e08701611f3e565b905092959194509250565b5f5f60608385031215612457575f5ffd5b6124618484611f02565b915061246f60408401611eef565b90509250929050565b5f5f5f6080848603121561248a575f5ffd5b6124948585611f02565b92506124a260408501611eef565b929592945050506060919091013590565b5f8151808452602084019350602083015f5b828110156124e35781518652602095860195909101906001016124c5565b5093949350505050565b60208082528251805183830152015160408201525f602083015160608084015261251a60808401826124b3565b949350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60408284031215612567575f5ffd5b6104728383611f02565b5f60408284031215612581575f5ffd5b50919050565b5f5f5f5f60c0858703121561259a575f5ffd5b6125a48686612571565b93506125b260408601611eef565b925060608501356001600160401b038111156125cc575f5ffd5b850160a081880312156125dd575f5ffd5b6125e5611e87565b81358152602080830135908201526126008860408401611f3e565b604082015260808201356001600160401b0381111561261d575f5ffd5b6126298982850161200f565b606083015250925061243b90508660808701612571565b5f5f5f60808486031215612652575f5ffd5b61265c8585611f02565b925060408401356001600160401b03811115612676575f5ffd5b612682868287016120cf565b92505060608401356001600160401b0381111561269d575f5ffd5b6126a98682870161200f565b9150509250925092565b80518252602081015160208301525f60408201516126de604085018280518252602090810151910152565b50606082015160a0608085015261251a60a08501826124b3565b602081525f61047260208301846126b3565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176104755761047561271e565b634e487b7160e01b5f52601260045260245ffd5b5f8261276b5761276b612749565b500490565b5f60208284031215612780575f5ffd5b61047282611ed9565b5f60208284031215612799575f5ffd5b61047282611eef565b6001600160a01b036127b385611ed9565b16815263ffffffff6127c760208601611eef565b16602082015263ffffffff83166040820152608060608201525f6111fa60808301846126b3565b80516020808301519190811015612581575f1960209190910360031b1b16919050565b63ffffffff81811683821601908111156104755761047561271e565b5f6020828403121561283d575f5ffd5b8151801515811461045f575f5ffd5b818103818111156104755761047561271e565b5f8261286d5761286d612749565b500690565b808201808211156104755761047561271e56fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a26469706673582212203d2215cbed0070c17d3a64ae4df403d618fea31e750250314ef2f308eb81174164736f6c634300081b0033",
    "sourceMap": "641:14488:150:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3258:1069;;;;;;:::i;:::-;;:::i;:::-;;;8922:14:245;;8915:22;8897:41;;8885:2;8870:18;3258:1069:150;;;;;;;;2986:221;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13367:480::-;;;;;;:::i;:::-;;:::i;:::-;;;;10826:14:245;;10819:22;10801:41;;10885:14;;10878:22;10873:2;10858:18;;10851:50;10774:18;13367:480:150;10639:268:245;13035:281:150;;;;;;:::i;:::-;;:::i;:::-;;;11371:25:245;;;11359:2;11344:18;13035:281:150;11225:177:245;13898:336:150;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1031:106:148:-;;;:::i;:::-;;;;;;;:::i;14285:501:150:-;;;;;;:::i;:::-;;:::i;12083:229::-;;;;;;:::i;:::-;;:::i;:::-;;;13709:10:245;13697:23;;;13679:42;;13667:2;13652:18;12083:229:150;13535:192:245;11809:224:150;;;;;;:::i;:::-;;:::i;1935:1000::-;;;;;;:::i;:::-;;:::i;:::-;;711:59:151;;;;;;;;-1:-1:-1;;;;;15378:32:245;;;15360:51;;15348:2;15333:18;711:59:151;15183:234:245;12690:294:150;;;;;;:::i;:::-;;:::i;11542:217::-;;;;;;:::i;:::-;;:::i;12362:278::-;;;;;;:::i;:::-;;:::i;4378:587::-;;;;;;:::i;:::-;;:::i;14837:290::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3258:1069::-;3453:4;3469:29;3501:37;3520:11;3533:4;3501:18;:37::i;:::-;3469:69;;3549:22;3574:17;:11;:15;:17::i;:::-;3601:43;3647:33;;;:17;:33;;;;;;;;3681:23;;3647:58;;;;;;;;;3601:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3549:42;;-1:-1:-1;3601:43:150;;:104;;3647:58;;3601:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3715:28;3746:15;:28;;;3715:59;;3816:30;:37;3793:12;:19;:60;3785:92;;;;-1:-1:-1;;;3785:92:150;;;;;;;;;;;;3893:9;3888:411;3912:12;:19;3908:1;:23;3888:411;;;4106:17;622:6:151;4144:30:150;4175:1;4144:33;;;;;;;;:::i;:::-;;;;;;;4127:50;;:11;4139:1;4127:14;;;;;;;;:::i;:::-;;;;;;;:50;;;;:::i;:::-;4126:70;;;;:::i;:::-;4106:90;;4233:9;4215:12;4228:1;4215:15;;;;;;;;:::i;:::-;;;;;;;:27;4211:78;;;4269:5;4262:12;;;;;;;;;;4211:78;-1:-1:-1;3933:3:150;;3888:411;;;;4316:4;4309:11;;;;;;3258:1069;;;;;;:::o;2986:221::-;3115:29;3163:37;3182:11;3195:4;3163:18;:37::i;:::-;3156:44;;2986:221;;;;;:::o;13367:480::-;13569:22;13593:19;13631:209;13683:7;13704:9;13727;13750:5;13769:4;509:7:151;13631:38:150;:209::i;:::-;13624:216;;;;13367:480;;;;;;;:::o;13035:281::-;13165:7;13184:22;13209:17;:11;:15;:17::i;:::-;13243:33;;;;:17;:33;;;;;;;;:53;;;;;;;;;;:66;;;;-1:-1:-1;;13035:281:150;;;;:::o;13898:336::-;14067:24;;:::i;:::-;14103:22;14128:17;:11;:15;:17::i;:::-;14162:30;;;;:14;:30;;;;;;;;:50;;;;;;;;;;:65;;;;;;;;;14155:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14103:42;;-1:-1:-1;14155:72:150;;14162:65;;14155:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13898:336;;;;;:::o;1031:106:148:-;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;14285:501:150:-;14447:4;14463:22;14488:17;:11;:15;:17::i;:::-;14515:37;14555:30;;;:14;:30;;;;;;;;:50;;;;;;;;;;:65;;;;;;;;14515:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14463:42;;-1:-1:-1;14515:37:150;;:105;;14555:65;;14515:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14515:105:150;;;;-1:-1:-1;;14723:19:150;;:21;14515:105;;-1:-1:-1;;14723:26:150;;;;:56;;-1:-1:-1;14753:19:150;;:21;;;:26;;14723:56;14716:63;14285:501;-1:-1:-1;;;;;;14285:501:150:o;12083:229::-;12186:6;12204:22;12229:17;:11;:15;:17::i;:::-;12263:42;;;;:26;:42;;;;;;;;;12083:229;-1:-1:-1;;;12083:229:150:o;11809:224::-;11913:6;11931:22;11956:17;:11;:15;:17::i;:::-;11990:36;;;;:20;:36;;;;;;;;;11809:224;-1:-1:-1;;;11809:224:150:o;1935:1000::-;1208:10;-1:-1:-1;;;;;1230:20:150;1208:43;;1200:72;;;;-1:-1:-1;;;1200:72:150;;;;;;;;;;;;2190:22:::1;2215:17;:15;;::::0;;::::1;::::0;::::1;:11:::0;:15:::1;:::i;:::-;;:17::i;:::-;2362:42;::::0;;;:26:::1;:42;::::0;;;;;2190;;-1:-1:-1;2362:42:150::1;::::0;;::::1;2341:63:::0;;::::1;;2333:92;;;;-1:-1:-1::0;;;2333:92:150::1;;;;;;;;;;;;2475:33;::::0;;;:17:::1;:33;::::0;;;;;;;:53:::1;::::0;::::1;::::0;;;;;;;;:71;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;2531:15;;2475:53;:71:::1;::::0;;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;2556:42:150::1;::::0;;;:26:::1;:42;::::0;;;;;;;:63;;-1:-1:-1;;2556:63:150::1;;::::0;::::1;;::::0;;2666:23:::1;::::0;;::::1;::::0;::::1;:::i;:::-;2629:34;::::0;;;:18:::1;:34;::::0;;;;;;;;:60;;-1:-1:-1;;;;;;2629:60:150::1;-1:-1:-1::0;;;;;2629:60:150;;;::::1;::::0;;;::::1;::::0;;;2738:36:::1;::::0;;;;;;::::1;;:::i;:::-;2699;::::0;;;:20:::1;:36;::::0;;;;;;;:75;;-1:-1:-1;;2699:75:150::1;;::::0;;::::1;;::::0;;2784:23:::1;:39:::0;;;;;:59;;::::1;::::0;;;;;;;;:66;;-1:-1:-1;;2784:66:150::1;-1:-1:-1::0;2784:66:150::1;::::0;;2866:62;::::1;::::0;::::1;::::0;2879:11;;2784:59;;2912:15;;2866:62:::1;:::i;:::-;;;;;;;;2180:755;1935:1000:::0;;;;:::o;12690:294::-;12824:16;12852:22;12877:17;:11;:15;:17::i;:::-;12911:33;;;;:17;:33;;;;;;;;:53;;;;;;;;;;;:66;;;12904:73;;;;;;;;;;;;;;;;;12852:42;;-1:-1:-1;12904:73:150;;;;;12911:66;12904:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12690:294;;;;:::o;11542:217::-;11640:7;11659:22;11684:17;:11;:15;:17::i;:::-;11718:34;;;;:18;:34;;;;;;-1:-1:-1;;;;;11718:34:150;;11542:217;-1:-1:-1;;;11542:217:150:o;12362:278::-;12499:4;12515:22;12540:17;:11;:15;:17::i;:::-;12574:39;;;;:23;:39;;;;;;;;:59;;;;;;;;;;;;;;-1:-1:-1;;12362:278:150;;;;:::o;4378:587::-;4568:4;4584:29;4616:37;4635:11;4648:4;4616:18;:37::i;:::-;4584:69;;4695:27;:34;4672:12;:19;:57;4664:89;;;;-1:-1:-1;;;4664:89:150;;;;;;;;;;;;4769:9;4764:173;4788:12;:19;4784:1;:23;4764:173;;;4850:27;4878:1;4850:30;;;;;;;;:::i;:::-;;;;;;;4832:12;4845:1;4832:15;;;;;;;;:::i;:::-;;;;;;;:48;4828:99;;;4907:5;4900:12;;;;;;4828:99;4809:3;;4764:173;;;-1:-1:-1;4954:4:150;;4378:587;-1:-1:-1;;;;;4378:587:150:o;14837:290::-;14969:27;;:::i;:::-;15008:22;15033:17;:11;:15;:17::i;:::-;15067:33;;;;:17;:33;;;;;;;;:53;;;;;;;;;;;15060:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15008:42;;-1:-1:-1;15060:60:150;;15067:53;;15060:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14837:290;;;;:::o;5332:872::-;5462:29;5503:30;;:::i;:::-;5564:17;:11;:15;:17::i;:::-;5543:38;;;5642:23;;5592:74;;5543:38;5592:29;:74::i;:::-;5716:18;;5698:37;;;;:17;:37;;;;;;;;5736:23;;5698:62;;;;;;;;;;5676:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5698:62;;5676:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5676:84:150;;;;-1:-1:-1;;;5676:19:150;;;:84;;;5865:32;;;:39;-1:-1:-1;;;;;5851:54:150;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5851:54:150;-1:-1:-1;5832:16:150;;;:73;5920:9;5915:152;5939:3;:19;;;:32;;;:39;5935:1;:43;5915:152;;;6021:3;:19;;;:32;;;6054:1;6021:35;;;;;;;;:::i;:::-;;;;;;;5999:3;:16;;;6016:1;5999:19;;;;;;;;:::i;:::-;;;;;;;;;;:57;5980:3;;5915:152;;;;6096:29;6115:3;6120:4;6096:18;:29::i;:::-;6077:16;;;:48;6136:27;6077:3;6158:4;6136:16;:27::i;:::-;6181:16;;;;5332:872;-1:-1:-1;;;5332:872:150:o;399:154:143:-;472:7;523:2;:6;;;538:2;:5;;;531:13;;506:39;;;;;;;;19038:2:245;19034:15;;;;-1:-1:-1;;19030:53:245;19018:66;;19140:3;19118:16;-1:-1:-1;;;;;;19114:59:245;19109:2;19100:12;;19093:81;19199:2;19190:12;;18863:345;506:39:143;;;;;;;;;;;;;498:48;;;:::i;1065:1076:139:-;1316:12;1330:22;1364:33;1400:23;1415:7;1400:14;:23::i;:::-;1364:59;;1433:13;1449:55;1465:7;1474:8;1484;1494:9;1449:15;:55::i;:::-;1433:71;-1:-1:-1;1551:27:139;1581:42;1596:26;:8;1433:71;1596:19;:26::i;:::-;1581:9;;:14;:42::i;:::-;1551:72;;1633:28;1664:56;1682:37;1713:5;1682:19;-1:-1:-1;;;;;;;;;;;;;;;;;2862:13:138;;;;;;;;2870:1;2862:13;;2873:1;2862:13;;;;;2783:99;1682:19:139;:30;;:37::i;:::-;1664:12;;:17;:56::i;:::-;1633:87;;1735:11;1731:404;;;1856:80;1874:6;1882:22;:20;:22::i;:::-;1906:7;1915:8;1925:10;1856:17;:80::i;:::-;1809:127;-1:-1:-1;1809:127:139;-1:-1:-1;1731:404:139;;;1977:64;1991:6;1999:22;:20;:22::i;:::-;2023:7;2032:8;1977:13;:64::i;:::-;1967:74;;2059:7;2055:70;;;2106:4;2086:24;;2055:70;1354:787;;;;1065:1076;;;;;;;;;:::o;2081:405:37:-;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:37;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:37;;;-1:-1:-1;2438:4:37;2429:14;;2422:28;;;;-1:-1:-1;2393:16:37;2081:405::o;6423:707:150:-;6589:19;6611:36;;;:20;:36;;;;;;;;6665:17;;;:73;;-1:-1:-1;6705:33:150;6726:12;6705:18;:33;:::i;:::-;6686:52;;:15;:52;;6665:73;6657:102;;;;-1:-1:-1;;;6657:102:150;;;;;;;;;;;;6838:39;;;;:23;:39;;;;;;;;:59;;;;;;;;;;;;;6830:102;;;;-1:-1:-1;;;6830:102:150;;;;;;;;;;;;7043:63;;-1:-1:-1;;;7043:63:150;;13709:10:245;13697:23;;7043:63:150;;;13679:42:245;7043:20:150;-1:-1:-1;;;;;7043:43:150;;;;13652:18:245;;7043:63:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7035:88;;;;-1:-1:-1;;;7035:88:150;;;;;;;;;;;;6527:603;6423:707;;:::o;7403:1000::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;7593:19:150;;;;;;;;;;;;;;;;;7623:774;7647:4;:23;;;:30;7643:1;:34;7623:774;;;7698:39;7740:4;:23;;;7764:1;7740:26;;;;;;;;:::i;:::-;;;;;;;7698:68;;7813:3;:19;;;:32;;;7789:7;:21;;;:56;;;7781:89;;;;-1:-1:-1;;;7781:89:150;;;;;;;;;;;;7974:18;;7994:23;;7885:37;;7941:86;;8019:7;7941:32;:86::i;:::-;8075:19;;7885:142;;-1:-1:-1;8057:38:150;;:12;;:17;:38::i;:::-;8042:53;-1:-1:-1;8182:9:150;8177:210;8201:12;:20;;;:27;8197:1;:31;8177:210;;;8261:3;:16;;;:23;8257:1;:27;8253:120;;;8331:12;:20;;;8352:1;8331:23;;;;;;;;:::i;:::-;;;;;;;8308:3;:16;;;8325:1;8308:19;;;;;;;;:::i;:::-;;;;;;:46;;;;;;;:::i;:::-;;;-1:-1:-1;8253:120:150;8230:3;;8177:210;;;-1:-1:-1;;;7679:3:150;;7623:774;;;;7403:1000;;;;:::o;10004:533::-;10203:30;10236:67;10277:25;:3;:16;;;:23;:25::i;:::-;10236:19;;;;:35;;;;:40;:67::i;:::-;10203:100;;10315:22;10339:19;10374:79;10399:4;:16;;;10417:9;10428:4;:8;;;10438:4;:14;;;10374:24;:79::i;:::-;10314:139;;;;10472:17;:35;;;;;10493:14;10472:35;10464:66;;;;-1:-1:-1;;;10464:66:150;;;;;;;;;;;;10106:431;;;10004:533;;:::o;11698:464:138:-;-1:-1:-1;;;;;;;;;;;;;;;;;11791:12:138;;;11853:24;-1:-1:-1;;;;;;;;;;;11861:2:138;11853:24;:::i;:::-;11841:36;;11888:238;11927:13;11938:1;11927:10;:13::i;:::-;11915:25;;-1:-1:-1;11915:25:138;-1:-1:-1;;;;;;;;;;;;12004:1:138;12001;11994:24;11986:4;:32;11982:91;;12045:13;;;;;;;;;;;;;;;;;;;;11698:464;-1:-1:-1;;;11698:464:138:o;11982:91::-;-1:-1:-1;;;;;;;;;;;12101:1:138;12098;12091:24;12087:28;;11888:238;;2495:661:139;2840:10;;2872;;;;;2904;;:13;;2939;;;;2974:10;;;;:13;;3009;;;;3044:11;;3077;;;;2773:333;;;;;;20572:19:245;;;20607:12;;20600:28;;;;20644:12;;;20637:28;;;;20681:12;;;20674:28;;;;20718:13;;;20711:29;;;;20756:13;;;20749:29;20794:13;;;20787:29;20832:13;;;20825:29;20870:13;;;20863:29;;;;2692:13:139;;2062:102:138;;20908:13:245;;2773:333:139;;;;;;;;;;;;2746:374;;;;;;2725:405;;:424;;;;:::i;:::-;2717:432;2495:661;-1:-1:-1;;;;;2495:661:139:o;7788:550:138:-;-1:-1:-1;;;;;;;;;;;;;;;;;7888:23:138;;:::i;:::-;7932:3;;7921:14;;:8;7956:3;;;;7945:8;;;:14;7969:8;;;;:12;;;-1:-1:-1;;8156:1:138;8150:4;7921:14;8140:1;8133:4;8126:5;8122:16;8111:53;8100:64;-1:-1:-1;8100:64:138;;8234:47;8261:20;8270:9;8234:47;;8308:7;8300:31;;;;-1:-1:-1;;;8300:31:138;;;;;;;;;;;;7878:460;;7788:550;;;;:::o;5563:585::-;-1:-1:-1;;;;;;;;;;;;;;;;;5666:23:138;;:::i;:::-;5710:4;;5699:15;;:8;5735:4;;;;5724:8;;;:15;5760:4;;5749:8;;;;:15;;;;5785:4;;;;5774:8;;;:15;-1:-1:-1;;5965:1:138;5959:4;5699:15;5949:1;5942:4;5935:5;5931:16;5920:53;5909:64;-1:-1:-1;5909:64:138;;6043:47;6070:20;6079:9;6043:47;;6118:7;6110:31;;;;-1:-1:-1;;;6110:31:138;;;;;;;;;;;4804:128;4853:14;;:::i;:::-;-1:-1:-1;4886:39:138;;;;;;;;4245:102;4886:39;;;;;;4395:102;4886:39;;;;;;;;;;;;;;4545:102;4886:39;;4695:102;4886:39;;;;;;;;;;;;;;;4804:128::o;9829:1112::-;10037:31;;;;;;;;;;;;;;;;;;10078;;;;;;;;;;;;;;;;10015:4;;;;10037:31;10120:24;;:::i;:::-;10160:9;10155:302;10179:1;10175;:5;10155:302;;;10201:9;10213:5;:1;10217;10213:5;:::i;:::-;10201:17;;10247:2;10250:1;10247:5;;;;;;;:::i;:::-;;;;;:7;10232:5;10238;:1;10247:7;10238:5;:::i;:::-;10232:12;;;;;;;:::i;:::-;;;;:22;10283:2;10286:1;10283:5;;;;;;;:::i;:::-;;;;;:7;;;10268:5;10274:1;10278;10274:5;;;;:::i;:::-;10268:12;;;;;;;:::i;:::-;;;;:22;10319:2;10322:1;10319:5;;;;;;;:::i;:::-;;;;;:7;:10;10304:5;10310;:1;10314;10310:5;:::i;:::-;10304:12;;;;;;;:::i;:::-;;;;:25;10358:2;10361:1;10358:5;;;;;;;:::i;:::-;;;;;:7;10366:1;10358:10;;;;10343:5;10349;:1;10353;10349:5;:::i;:::-;10343:12;;;;;;;:::i;:::-;;;;:25;10397:2;10400:1;10397:5;;;;;;;:::i;:::-;;;;;:7;;;10405:1;10397:10;;;;;;;:::i;:::-;;;;;10382:5;10388;:1;10392;10388:5;:::i;:::-;10382:12;;;;;;;:::i;:::-;;;;:25;10436:2;10439:1;10436:5;;;;;;;:::i;:::-;;;;;:7;;;10444:1;10436:10;;;;;;;:::i;:::-;;;;;10421:5;10427;:1;10431;10427:5;:::i;:::-;10421:12;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;10182:3:138;;10155:302;;;;10467:21;;:::i;:::-;10498:12;10672:4;10667:3;10652:13;10645:5;10642:1;10630:10;10619:58;10922:6;;10608:69;;10922:11;;;;-1:-1:-1;10905:29:138;;-1:-1:-1;;;;;;;;;;9829:1112:138:o;8588:1024::-;8758:31;;;;;;;;;;;;;;;;;;8799;;;;;;;;;;;;;;;;8742:4;;8841:24;;:::i;:::-;8881:9;8876:302;8900:1;8896;:5;8876:302;;;8922:9;8934:5;:1;8938;8934:5;:::i;:::-;8922:17;;8968:2;8971:1;8968:5;;;;;;;:::i;:::-;;;;;:7;8953:5;8959;:1;8968:7;8959:5;:::i;:::-;8953:12;;;;;;;:::i;:::-;;;;:22;9004:2;9007:1;9004:5;;;;;;;:::i;:::-;;;;;:7;;;8989:5;8995:1;8999;8995:5;;;;:::i;:::-;8989:12;;;;;;;:::i;:::-;;;;:22;9040:2;9043:1;9040:5;;;;;;;:::i;:::-;;;;;:7;:10;9025:5;9031;:1;9035;9031:5;:::i;:::-;9025:12;;;;;;;:::i;:::-;;;;:25;9079:2;9082:1;9079:5;;;;;;;:::i;:::-;;;;;:7;9087:1;9079:10;;;;9064:5;9070;:1;9074;9070:5;:::i;:::-;9064:12;;;;;;;:::i;:::-;;;;:25;9118:2;9121:1;9118:5;;;;;;;:::i;:::-;;;;;:7;;;9126:1;9118:10;;;;;;;:::i;:::-;;;;;9103:5;9109;:1;9113;9109:5;:::i;:::-;9103:12;;;;;;;:::i;:::-;;;;:25;9157:2;9160:1;9157:5;;;;;;;:::i;:::-;;;;;:7;;;9165:1;9157:10;;;;;;;:::i;:::-;;;;;9142:5;9148;:1;9152;9148:5;:::i;:::-;9142:12;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;8903:3:138;;8876:302;;;;9188:21;;:::i;:::-;9219:12;9399:4;9394:3;9379:13;9372:5;9369:1;9362:4;9355:5;9351:16;9340:64;9329:75;-1:-1:-1;9329:75:138;;9474:47;9501:20;9510:9;9474:47;;9549:7;9541:35;;;;-1:-1:-1;;;9541:35:138;;;;;;;;;;;;-1:-1:-1;9594:6:138;:11;;;;-1:-1:-1;;;;;;;;8588:1024:138:o;2558:245:37:-;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:37;;;;;;;;;;;8735:1092:150;8917:37;;:::i;:::-;8966:35;9004:30;;;:14;:30;;;;;;;;:50;;;;;;;;;;;;9055:21;;9004:73;;;;;;;;;;8966:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9004:73;;8966:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8966:111:150;;;;-1:-1:-1;;9195:17:150;;:19;8966:111;;-1:-1:-1;9174:17:150;;9195:24;;;-1:-1:-1;9195:24:150;:52;;-1:-1:-1;9223:17:150;;:19;;;:24;;9195:52;9174:74;;9264:12;9259:562;;9292:13;9308:232;9356:14;9388:18;9424:7;:21;;;9463:7;:20;;;9501:7;:25;;;9308:30;:232::i;:::-;9292:248;;9563:8;9555:39;;;;-1:-1:-1;;;9555:39:150;;;;;;;;;;;;9685:20;;;;;9609:30;;;;:14;:30;;;;;;;:50;;;;;;;;;;;;9660:21;;9609:73;;;;;;;;;;:96;;;;;;;;;;;;;;;;;;;9685:20;;9609:73;;:96;;;;;;;;;:::i;:::-;;;;;9734:7;:20;;;9719:35;;9278:487;9259:562;;;9800:10;9785:25;;9259:562;8956:871;;8735:1092;;;;;:::o;5187:309:138:-;-1:-1:-1;;;;;;;;;;;;;;;;;5340:3:138;;:8;:20;;;;-1:-1:-1;5352:3:138;;;;:8;5340:20;5336:154;;;-1:-1:-1;;5383:13:138;;;;;;;;;-1:-1:-1;5383:13:138;;;;;;;;5187:309::o;5336:154::-;5434:45;;;;;;;;5442:1;:3;;;5434:45;;;;-1:-1:-1;;;;;;;;;;;5461:1:138;:3;;;:16;;;;:::i;:::-;5447:31;;-1:-1:-1;;;;;;;;;;;5447:31:138;:::i;:::-;5434:45;;5427:52;5187:309;-1:-1:-1;;5187:309:138:o;5336:154::-;5187:309;;;:::o;12283:447::-;12351:7;;;-1:-1:-1;;;;;;;;;;;12482:1:138;-1:-1:-1;;;;;;;;;;;12466:1:138;-1:-1:-1;;;;;;;;;;;12450:1:138;12447;12440:24;12433:47;12426:70;12411:85;;12593:9;12605:91;12612:4;12618:65;-1:-1:-1;;;;;;;;;;;12605:6:138;:91::i;:::-;12715:4;;12593:103;;-1:-1:-1;12283:447:138;;-1:-1:-1;;;12283:447:138:o;10922:493:150:-;11163:13;11188:12;11224;11213:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11213:24:150;;;;;;;;;11203:35;;11213:24;11203:35;;;;11248:12;11263:33;;;:17;:33;;;;;:53;;;;;;;;;;;;:74;11203:35;;-1:-1:-1;11263:74:150;11354:54;;:5;;11263:74;;11203:35;;11354:54;;;;:27;:54;:::i;:::-;11347:61;10922:493;-1:-1:-1;;;;;;;;10922:493:150:o;12736:835:138:-;12827:14;12853:12;12875:24;;:::i;:::-;12909:23;;:::i;:::-;12953:4;12942:15;;;13025:8;;;:15;;;13109:8;;;:15;;;13193:8;;;:16;;;13219:8;;;:20;;;13249:8;;;:19;;;13357:6;13351:4;12942:15;13255:1;13334:4;13327:5;13323:16;13312:58;13301:69;-1:-1:-1;13301:69:138;;13440:47;13467:20;13476:9;13440:47;;13514:7;13506:32;;;;-1:-1:-1;;;13506:32:138;;;;;;;;;;;;-1:-1:-1;13555:9:138;;;-1:-1:-1;;;;;12736:835:138:o;1273:240:142:-;1428:4;1502;1451:47;1479:5;1486:4;1492:5;1451:27;:47::i;:::-;:55;;1273:240;-1:-1:-1;;;;;1273:240:142:o;2030:1081::-;2169:7;2211:2;2196:5;:12;:17;;;;:::i;:::-;:22;2188:53;;;;-1:-1:-1;;;2188:53:142;;;;;;;;;;;;2274:4;2305:2;2288:788;2314:5;:12;2309:1;:17;2288:788;;2355:9;2363:1;2355:5;:9;:::i;:::-;2368:1;2355:14;2351:715;;2514:12;2508:4;2501:26;2578:1;2571:5;2567:13;2561:20;2555:4;2548:34;2635:4;2629;2619:21;2603:37;;2681:1;2674:5;2670:13;2661:22;;2351:715;;;2882:1;2875:5;2871:13;2865:20;2859:4;2852:34;2920:12;2914:4;2907:26;2986:4;2980;2970:21;2954:37;;3032:1;3025:5;3021:13;3012:22;;2351:715;2328:7;2333:2;2328:7;;:::i;:::-;;;2288:788;;;-1:-1:-1;3092:12:142;2030:1081;-1:-1:-1;;;;2030:1081:142:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:245:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:257;218:4;212:11;;;250:17;;-1:-1:-1;;;;;282:34:245;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:4;373:24;146:257;:::o;408:253::-;480:2;474:9;522:4;510:17;;-1:-1:-1;;;;;542:34:245;;578:22;;;539:62;536:88;;;604:18;;:::i;666:253::-;738:2;732:9;780:4;768:17;;-1:-1:-1;;;;;800:34:245;;836:22;;;797:62;794:88;;;862:18;;:::i;924:253::-;996:2;990:9;1038:4;1026:17;;-1:-1:-1;;;;;1058:34:245;;1094:22;;;1055:62;1052:88;;;1120:18;;:::i;1182:275::-;1253:2;1247:9;1318:2;1299:13;;-1:-1:-1;;1295:27:245;1283:40;;-1:-1:-1;;;;;1338:34:245;;1374:22;;;1335:62;1332:88;;;1400:18;;:::i;:::-;1436:2;1429:22;1182:275;;-1:-1:-1;1182:275:245:o;1462:173::-;1530:20;;-1:-1:-1;;;;;1579:31:245;;1569:42;;1559:70;;1625:1;1622;1615:12;1640:163;1707:20;;1767:10;1756:22;;1746:33;;1736:61;;1793:1;1790;1783:12;1808:297;1866:5;1914:4;1902:9;1897:3;1893:19;1889:30;1886:50;;;1932:1;1929;1922:12;1886:50;1954:22;;:::i;:::-;1945:31;;1999:29;2018:9;1999:29;:::i;:::-;1992:5;1985:44;2061:37;2094:2;2083:9;2079:18;2061:37;:::i;:::-;2056:2;2049:5;2045:14;2038:61;1808:297;;;;:::o;2110:386::-;2164:5;2212:4;2200:9;2195:3;2191:19;2187:30;2184:50;;;2230:1;2227;2220:12;2184:50;2252:22;;:::i;:::-;2319:23;;2351:22;;2446:2;2431:18;;;2418:32;2466:14;;;2459:31;;;;-1:-1:-1;2243:31:245;2110:386;-1:-1:-1;2110:386:245:o;2501:542::-;2551:5;2604:3;2597:4;2589:6;2585:17;2581:27;2571:55;;2622:1;2619;2612:12;2571:55;2646:22;;:::i;:::-;2692:3;2730:2;2722:6;2718:15;2756:3;2748:6;2745:15;2742:35;;;2773:1;2770;2763:12;2742:35;2797:6;2812:200;2828:6;2823:3;2820:15;2812:200;;;2920:17;;2950:18;;2997:4;2988:14;;;;2845;2812:200;;;-1:-1:-1;3030:7:245;;2501:542;-1:-1:-1;;;;;2501:542:245:o;3048:320::-;3102:5;3150:4;3138:9;3133:3;3129:19;3125:30;3122:50;;;3168:1;3165;3158:12;3122:50;3190:22;;:::i;:::-;3181:31;;3235:40;3271:3;3260:9;3235:40;:::i;:::-;3228:5;3221:55;3310:51;3357:3;3350:4;3339:9;3335:20;3310:51;:::i;3373:207::-;3457:4;-1:-1:-1;;;;;3482:6:245;3479:30;3476:56;;;3512:18;;:::i;:::-;-1:-1:-1;3557:1:245;3553:14;3569:4;3549:25;;3373:207::o;3585:747::-;3639:5;3692:3;3685:4;3677:6;3673:17;3669:27;3659:55;;3710:1;3707;3700:12;3659:55;3750:6;3737:20;3777:88;3793:71;3857:6;3793:71;:::i;:::-;3777:88;:::i;:::-;3889:3;3913:6;3908:3;3901:19;3945:4;3940:3;3936:14;3929:21;;4006:4;3996:6;3993:1;3989:14;3981:6;3977:27;3973:38;3959:52;;4034:3;4026:6;4023:15;4020:35;;;4051:1;4048;4041:12;4020:35;4087:4;4079:6;4075:17;4101:200;4117:6;4112:3;4109:15;4101:200;;;4209:17;;4239:18;;4286:4;4277:14;;;;4134;4101:200;;;-1:-1:-1;4319:7:245;3585:747;-1:-1:-1;;;;;3585:747:245:o;4337:453::-;4401:5;4449:4;4437:9;4432:3;4428:19;4424:30;4421:50;;;4467:1;4464;4457:12;4421:50;4489:22;;:::i;:::-;4480:31;;4534:41;4571:3;4560:9;4534:41;:::i;:::-;4527:5;4520:56;4627:4;4616:9;4612:20;4599:34;-1:-1:-1;;;;;4648:6:245;4645:30;4642:50;;;4688:1;4685;4678:12;4642:50;4726:57;4779:3;4770:6;4759:9;4755:22;4726:57;:::i;:::-;4719:4;4712:5;4708:16;4701:83;;4337:453;;;;:::o;4795:2549::-;4858:5;4906:6;4894:9;4889:3;4885:19;4881:32;4878:52;;;4926:1;4923;4916:12;4878:52;4948:22;;:::i;:::-;4939:31;;4993:28;5011:9;4993:28;:::i;:::-;4979:43;;5095:2;5080:18;;;5067:32;5115:14;;;5108:31;5171:50;5217:3;5212:2;5197:18;;5171:50;:::i;:::-;5166:2;5159:5;5155:14;5148:74;5256:51;5303:3;5297;5286:9;5282:19;5256:51;:::i;:::-;5249:4;5242:5;5238:16;5231:77;5359:3;5348:9;5344:19;5331:33;-1:-1:-1;;;;;5379:6:245;5376:30;5373:50;;;5419:1;5416;5409:12;5373:50;5442:22;;5495:4;5487:13;;5483:23;-1:-1:-1;5473:51:245;;5520:1;5517;5510:12;5473:51;5560:2;5547:16;5583:88;5599:71;5663:6;5599:71;:::i;5583:88::-;5693:3;5717:6;5712:3;5705:19;5749:2;5744:3;5740:12;5733:19;;5804:2;5794:6;5791:1;5787:14;5783:2;5779:23;5775:32;5761:46;;5830:3;5822:6;5819:15;5816:35;;;5847:1;5844;5837:12;5816:35;5879:2;5875;5871:11;5891:1408;5907:6;5902:3;5899:15;5891:1408;;;5993:3;5980:17;-1:-1:-1;;;;;6016:11:245;6013:35;6010:55;;;6061:1;6058;6051:12;6010:55;6088:20;;6156:4;6132:12;;;-1:-1:-1;;6128:26:245;6124:37;6121:57;;;6174:1;6171;6164:12;6121:57;6206:22;;:::i;:::-;6257:30;6283:2;6279;6275:11;6257:30;:::i;:::-;6248:7;6241:47;6338:2;6334;6330:11;6317:25;-1:-1:-1;;;;;6361:8:245;6358:32;6355:52;;;6403:1;6400;6393:12;6355:52;6434:17;;6453:2;6430:26;;;6483:13;;6479:23;-1:-1:-1;6469:51:245;;6516:1;6513;6506:12;6469:51;6562:2;6549:16;-1:-1:-1;;;;;6584:8:245;6581:32;6578:58;;;6616:18;;:::i;:::-;6664:59;6713:2;6688:19;;-1:-1:-1;;6684:33:245;6719:2;6680:42;6664:59;:::i;:::-;6752:8;6743:7;6736:25;6808:3;6803:2;6792:8;6788:2;6784:17;6780:26;6777:35;6774:55;;;6825:1;6822;6815:12;6774:55;6886:8;6881:2;6877;6873:11;6868:2;6859:7;6855:16;6842:53;6948:1;6943:2;6932:8;6923:7;6919:22;6915:31;6908:42;6988:7;6983:2;6974:7;6970:16;6963:33;;;;7046:4;7042:2;7038:13;7025:27;-1:-1:-1;;;;;7071:8:245;7068:32;7065:52;;;7113:1;7110;7103:12;7065:52;7155:68;7219:3;7214:2;7203:8;7199:2;7195:17;7191:26;7155:68;:::i;:::-;7150:2;7137:16;;7130:94;-1:-1:-1;7237:20:245;;-1:-1:-1;7286:2:245;7277:12;;;;5924;5891:1408;;;-1:-1:-1;7326:3:245;7315:15;;7308:30;-1:-1:-1;7319:5:245;;4795:2549;-1:-1:-1;;;;4795:2549:245:o;7349:1403::-;7515:6;7523;7531;7584:3;7572:9;7563:7;7559:23;7555:33;7552:53;;;7601:1;7598;7591:12;7552:53;7624:49;7665:7;7654:9;7624:49;:::i;:::-;7614:59;;7724:2;7713:9;7709:18;7696:32;-1:-1:-1;;;;;7743:6:245;7740:30;7737:50;;;7783:1;7780;7773:12;7737:50;7806:67;7865:7;7856:6;7845:9;7841:22;7806:67;:::i;:::-;7796:77;;;7926:2;7915:9;7911:18;7898:32;-1:-1:-1;;;;;7945:8:245;7942:32;7939:52;;;7987:1;7984;7977:12;7939:52;8010:24;;8065:4;8057:13;;8053:27;-1:-1:-1;8043:55:245;;8094:1;8091;8084:12;8043:55;8134:2;8121:16;8157:88;8173:71;8237:6;8173:71;:::i;8157:88::-;8267:3;8291:6;8286:3;8279:19;8323:4;8318:3;8314:14;8307:21;;8380:4;8370:6;8367:1;8363:14;8359:2;8355:23;8351:34;8337:48;;8408:7;8400:6;8397:19;8394:39;;;8429:1;8426;8419:12;8394:39;8461:4;8457:2;8453:13;8442:24;;8475:247;8491:6;8486:3;8483:15;8475:247;;;8573:3;8560:17;8621:6;8614:5;8610:18;8603:5;8600:29;8590:57;;8643:1;8640;8633:12;8590:57;8660:18;;8707:4;8508:14;;;;8698;;;;8475:247;;;8741:5;8731:15;;;;;;7349:1403;;;;;:::o;8949:488::-;9082:6;9090;9143:2;9131:9;9122:7;9118:23;9114:32;9111:52;;;9159:1;9156;9149:12;9111:52;9182:49;9223:7;9212:9;9182:49;:::i;:::-;9172:59;;9282:2;9271:9;9267:18;9254:32;-1:-1:-1;;;;;9301:6:245;9298:30;9295:50;;;9341:1;9338;9331:12;9295:50;9364:67;9423:7;9414:6;9403:9;9399:22;9364:67;:::i;:::-;9354:77;;;8949:488;;;;;:::o;9442:611::-;9632:2;9644:21;;;9714:13;;9617:18;;;9736:22;;;9584:4;;9815:15;;;9789:2;9774:18;;;9584:4;9858:169;9872:6;9869:1;9866:13;9858:169;;;9933:13;;9921:26;;9976:2;10002:15;;;;9967:12;;;;9894:1;9887:9;9858:169;;10058:576;10222:6;10230;10238;10246;10299:3;10287:9;10278:7;10274:23;10270:33;10267:53;;;10316:1;10313;10306:12;10267:53;10361:23;;;-1:-1:-1;10427:54:245;10473:7;10468:2;10453:18;;10427:54;:::i;:::-;10417:64;;10500:54;10546:7;10541:2;10530:9;10526:18;10500:54;:::i;:::-;10490:64;;10573:55;10620:7;10614:3;10603:9;10599:19;10573:55;:::i;:::-;10563:65;;10058:576;;;;;;;:::o;10912:308::-;11009:6;11017;11070:2;11058:9;11049:7;11045:23;11041:32;11038:52;;;11086:1;11083;11076:12;11038:52;11109:49;11150:7;11139:9;11109:49;:::i;:::-;11099:59;;11177:37;11210:2;11199:9;11195:18;11177:37;:::i;:::-;11167:47;;10912:308;;;;;:::o;11407:423::-;11513:6;11521;11529;11582:3;11570:9;11561:7;11557:23;11553:33;11550:53;;;11599:1;11596;11589:12;11550:53;11622:49;11663:7;11652:9;11622:49;:::i;:::-;11612:59;;11690:37;11723:2;11712:9;11708:18;11690:37;:::i;:::-;11407:423;;11680:47;;-1:-1:-1;;;11796:2:245;11781:18;;;;11768:32;;11407:423::o;11988:420::-;12041:3;12079:5;12073:12;12106:6;12101:3;12094:19;12138:4;12133:3;12129:14;12122:21;;12177:4;12170:5;12166:16;12200:1;12210:173;12224:6;12221:1;12218:13;12210:173;;;12285:13;;12273:26;;12328:4;12319:14;;;;12356:17;;;;12246:1;12239:9;12210:173;;;-1:-1:-1;12399:3:245;;11988:420;-1:-1:-1;;;;11988:420:245:o;12413:453::-;12614:2;12596:21;;;12652:13;;11908:12;;12667:18;;;11896:25;11959:16;11953:23;11937:14;;;11930:47;12577:4;12733:2;12725:6;12721:15;12715:22;12775:4;12768;12757:9;12753:20;12746:34;12797:63;12855:3;12844:9;12840:19;12826:12;12797:63;:::i;:::-;12789:71;12413:453;-1:-1:-1;;;;12413:453:245:o;12871:418::-;13020:2;13009:9;13002:21;12983:4;13052:6;13046:13;13095:6;13090:2;13079:9;13075:18;13068:34;13154:6;13149:2;13141:6;13137:15;13132:2;13121:9;13117:18;13111:50;13210:1;13205:2;13196:6;13185:9;13181:22;13177:31;13170:42;13280:2;13273;13269:7;13264:2;13256:6;13252:15;13248:29;13237:9;13233:45;13229:54;13221:62;;;12871:418;;;;:::o;13294:236::-;13383:6;13436:2;13424:9;13415:7;13411:23;13407:32;13404:52;;;13452:1;13449;13442:12;13404:52;13475:49;13516:7;13505:9;13475:49;:::i;13732:159::-;13796:5;13841:2;13832:6;13827:3;13823:16;13819:25;13816:45;;;13857:1;13854;13847:12;13816:45;-1:-1:-1;13879:6:245;13732:159;-1:-1:-1;13732:159:245:o;13896:1282::-;14090:6;14098;14106;14114;14167:3;14155:9;14146:7;14142:23;14138:33;14135:53;;;14184:1;14181;14174:12;14135:53;14207:58;14257:7;14246:9;14207:58;:::i;:::-;14197:68;;14284:37;14317:2;14306:9;14302:18;14284:37;:::i;:::-;14274:47;;14372:2;14361:9;14357:18;14344:32;-1:-1:-1;;;;;14391:6:245;14388:30;14385:50;;;14431:1;14428;14421:12;14385:50;14454:22;;14510:4;14492:16;;;14488:27;14485:47;;;14528:1;14525;14518:12;14485:47;14554:22;;:::i;:::-;14621:16;;14646:22;;14734:2;14726:11;;;14713:25;14754:14;;;14747:31;14810:47;14849:7;14844:2;14836:11;;14810:47;:::i;:::-;14805:2;14798:5;14794:14;14787:71;14904:4;14900:2;14896:13;14883:27;-1:-1:-1;;;;;14925:8:245;14922:32;14919:52;;;14967:1;14964;14957:12;14919:52;15003:56;15051:7;15040:8;15036:2;15032:17;15003:56;:::i;:::-;14998:2;14987:14;;14980:80;-1:-1:-1;14991:5:245;-1:-1:-1;15103:69:245;;-1:-1:-1;15164:7:245;15157:4;15142:20;;15103:69;:::i;15630:731::-;15797:6;15805;15813;15866:3;15854:9;15845:7;15841:23;15837:33;15834:53;;;15883:1;15880;15873:12;15834:53;15906:49;15947:7;15936:9;15906:49;:::i;:::-;15896:59;;16006:2;15995:9;15991:18;15978:32;-1:-1:-1;;;;;16025:6:245;16022:30;16019:50;;;16065:1;16062;16055:12;16019:50;16088:67;16147:7;16138:6;16127:9;16123:22;16088:67;:::i;:::-;16078:77;;;16208:2;16197:9;16193:18;16180:32;-1:-1:-1;;;;;16227:8:245;16224:32;16221:52;;;16269:1;16266;16259:12;16221:52;16292:63;16347:7;16336:8;16325:9;16321:24;16292:63;:::i;:::-;16282:73;;;15630:731;;;;;:::o;16366:451::-;16465:5;16459:12;16454:3;16447:25;16521:4;16514:5;16510:16;16504:23;16497:4;16492:3;16488:14;16481:47;16429:3;16574:4;16567:5;16563:16;16557:23;16589:55;16638:4;16633:3;16629:14;16615:12;11908;;11896:25;;11970:4;11959:16;;;11953:23;11937:14;;11930:47;11835:148;16589:55;;16692:4;16685:5;16681:16;16675:23;16730:4;16723;16718:3;16714:14;16707:28;16751:60;16805:4;16800:3;16796:14;16780;16751:60;:::i;16822:299::-;17029:2;17018:9;17011:21;16992:4;17049:66;17111:2;17100:9;17096:18;17088:6;17049:66;:::i;17126:127::-;17187:10;17182:3;17178:20;17175:1;17168:31;17218:4;17215:1;17208:15;17242:4;17239:1;17232:15;17258:127;17319:10;17314:3;17310:20;17307:1;17300:31;17350:4;17347:1;17340:15;17374:4;17371:1;17364:15;17390:168;17463:9;;;17494;;17511:15;;;17505:22;;17491:37;17481:71;;17532:18;;:::i;17563:127::-;17624:10;17619:3;17615:20;17612:1;17605:31;17655:4;17652:1;17645:15;17679:4;17676:1;17669:15;17695:120;17735:1;17761;17751:35;;17766:18;;:::i;:::-;-1:-1:-1;17800:9:245;;17695:120::o;17820:186::-;17879:6;17932:2;17920:9;17911:7;17907:23;17903:32;17900:52;;;17948:1;17945;17938:12;17900:52;17971:29;17990:9;17971:29;:::i;18011:184::-;18069:6;18122:2;18110:9;18101:7;18097:23;18093:32;18090:52;;;18138:1;18135;18128:12;18090:52;18161:28;18179:9;18161:28;:::i;18200:658::-;-1:-1:-1;;;;;18527:26:245;18546:6;18527:26;:::i;:::-;18523:52;18512:9;18505:71;18656:10;18618:36;18648:4;18640:6;18636:17;18618:36;:::i;:::-;18614:53;18607:4;18596:9;18592:20;18585:83;18716:10;18708:6;18704:23;18699:2;18688:9;18684:18;18677:51;18764:3;18759:2;18748:9;18744:18;18737:31;18486:4;18785:67;18847:3;18836:9;18832:19;18824:6;18785:67;:::i;19213:297::-;19331:12;;19378:4;19367:16;;;19361:23;;19331:12;19396:16;;19393:111;;;-1:-1:-1;;19470:4:245;19466:17;;;;19463:1;19459:25;19455:38;19444:50;;19213:297;-1:-1:-1;19213:297:245:o;19515:167::-;19610:10;19583:18;;;19603;;;19579:43;;19634:19;;19631:45;;;19656:18;;:::i;19687:277::-;19754:6;19807:2;19795:9;19786:7;19782:23;19778:32;19775:52;;;19823:1;19820;19813:12;19775:52;19855:9;19849:16;19908:5;19901:13;19894:21;19887:5;19884:32;19874:60;;19930:1;19927;19920:12;19969:128;20036:9;;;20057:11;;;20054:37;;;20071:18;;:::i;20102:112::-;20134:1;20160;20150:35;;20165:18;;:::i;:::-;-1:-1:-1;20199:9:245;;20102:112::o;20932:125::-;20997:9;;;21018:10;;;21015:36;;;21031:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "82916": [
        {
          "start": 1425,
          "length": 32
        }
      ],
      "84127": [
        {
          "start": 559,
          "length": 32
        },
        {
          "start": 1756,
          "length": 32
        },
        {
          "start": 3738,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "getNonsignerOperatorInfo((address,uint32),uint32,uint256)": "26af6a3c",
    "getOperatorCount((address,uint32),uint32)": "23c2a3cb",
    "getOperatorSetInfo((address,uint32),uint32)": "eb39e68f",
    "getOperatorSetOwner((address,uint32))": "84818920",
    "getTotalStakeWeights((address,uint32),uint32)": "7d1d1f5b",
    "isNonsignerCached((address,uint32),uint32,uint256)": "5be87274",
    "isReferenceTimestampSet((address,uint32),uint32)": "cd83a72b",
    "latestReferenceTimestamp((address,uint32))": "5ddb9b5b",
    "maxOperatorTableStaleness((address,uint32))": "6141879e",
    "operatorTableUpdater()": "68d6e081",
    "trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))": "1a18746c",
    "updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))": "6738c40b",
    "verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))": "080b7150",
    "verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])": "dd2ae1b9",
    "verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])": "017d7974",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IOperatorTableUpdater\",\"name\":\"_operatorTableUpdater\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CertificateStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECAddFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECMulFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECPairingFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpModFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProofLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyTableUpdater\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferenceTimestampDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootDisabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TableUpdateStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerificationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"name\":\"MaxStalenessPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OperatorSetOwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"operatorSetInfo\",\"type\":\"tuple\"}],\"name\":\"TableUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"operatorIndex\",\"type\":\"uint256\"}],\"name\":\"getNonsignerOperatorInfo\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getOperatorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getOperatorSetInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getOperatorSetOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getTotalStakeWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"operatorIndex\",\"type\":\"uint256\"}],\"name\":\"isNonsignerCached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"isReferenceTimestampSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"latestReferenceTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"maxOperatorTableStaleness\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorTableUpdater\",\"outputs\":[{\"internalType\":\"contract IOperatorTableUpdater\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggPubkey\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"trySignatureVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"pairingSuccessful\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"signatureValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"operatorSetInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct ICrossChainRegistryTypes.OperatorSetConfig\",\"name\":\"operatorSetConfig\",\"type\":\"tuple\"}],\"name\":\"updateOperatorTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"operatorInfoProof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254Certificate\",\"name\":\"cert\",\"type\":\"tuple\"}],\"name\":\"verifyCertificate\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"signedStakes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"operatorInfoProof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254Certificate\",\"name\":\"cert\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalStakeNominalThresholds\",\"type\":\"uint256[]\"}],\"name\":\"verifyCertificateNominal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"operatorInfoProof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254Certificate\",\"name\":\"cert\",\"type\":\"tuple\"},{\"internalType\":\"uint16[]\",\"name\":\"totalStakeProportionThresholds\",\"type\":\"uint16[]\"}],\"name\":\"verifyCertificateProportion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract uses BN254 curves for signature verification and      caches operator information for efficient verification\",\"errors\":{\"ECAddFailed()\":[{\"details\":\"Thrown when the sum of two points of G1 fails\"}],\"ECMulFailed()\":[{\"details\":\"Thrown when the scalar multiplication of a point of G1 fails\"}],\"ECPairingFailed()\":[{\"details\":\"Thrown when the pairing check fails\"}],\"ExpModFailed()\":[{\"details\":\"Thrown when the exponentiation mod fails\"}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Disables initializers to prevent implementation initialization\",\"params\":{\"_operatorTableUpdater\":\"Address authorized to update operator tables\",\"_version\":\"The semantic version of the contract\"}},\"getNonsignerOperatorInfo((address,uint32),uint32,uint256)\":{\"details\":\"The non-signing operatorInfo is stored upon a successful certificate verification. Once cached,      non-signer proofs do not need to be passed in as part of the `BN254Certificate`\",\"params\":{\"operatorIndex\":\"The operator index\",\"operatorSet\":\"The operatorSet\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The cached operator info, empty if the operator is not in the cache\"}},\"getOperatorCount((address,uint32),uint32)\":{\"details\":\"Returns 0 if the reference timestamp is not set or the number of operators is 0\",\"params\":{\"operatorSet\":\"The operator set to get the number of operators for\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The number of operators\"}},\"getOperatorSetInfo((address,uint32),uint32)\":{\"params\":{\"operatorSet\":\"The operator set\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The operator set info, empty if the operatorSet has not been updated for the given reference timestamp\"}},\"getOperatorSetOwner((address,uint32))\":{\"details\":\"The owner of the OperatorSet is not used by this contract, but can be used by periphery contracts      to gate access control for on-chain operations\",\"params\":{\"operatorSet\":\"The operatorSet to get the owner of\"},\"returns\":{\"_0\":\"The owner\"}},\"getTotalStakeWeights((address,uint32),uint32)\":{\"details\":\"For ECDSA, this function *reverts* if the reference timestamp is not set or the number of operators is 0For BN254, this function returns empty array if the reference timestamp is not set or the number of operators is 0\",\"params\":{\"operatorSet\":\"The operator set to calculate stakes for\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The sum of stake weights for each stake type, empty if the operatorSet has not been updated for the given reference timestamp\"}},\"isNonsignerCached((address,uint32),uint32,uint256)\":{\"details\":\"The non-signing operatorInfo is stored upon a successful certificate verification. Once cached,      non-signer proofs do not need to be passed in as part of the `BN254Certificate`\",\"params\":{\"operatorIndex\":\"The operator index\",\"operatorSet\":\"The operator set\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"Whether the operator is cached\"}},\"isReferenceTimestampSet((address,uint32),uint32)\":{\"details\":\"The reference timestamp is set when the operator table is updated\",\"params\":{\"operatorSet\":\"The operatorSet to check\",\"referenceTimestamp\":\"The reference timestamp to check\"},\"returns\":{\"_0\":\"Whether the reference timestamp has been updated\"}},\"latestReferenceTimestamp((address,uint32))\":{\"details\":\"The latest reference timestamp is set when the operator table is updated\",\"params\":{\"operatorSet\":\"The operatorSet to get the latest reference timestamp of\"},\"returns\":{\"_0\":\"The latest reference timestamp, 0 if the operatorSet has never been updated\"}},\"maxOperatorTableStaleness((address,uint32))\":{\"details\":\"A staleness period of 0 allows for certificates to be verified against any timestamp in the pastStaleness periods should not be greater than 0 and less than the update cadence of the `OperatorTables`, since      certificates would be unable to be validated against\",\"params\":{\"operatorSet\":\"The operatorSet to get the max staleness period of\"},\"returns\":{\"_0\":\"The max staleness period\"}},\"trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))\":{\"params\":{\"aggPubkey\":\"The aggregate public key of signers\",\"apkG2\":\"The G2 point representation of the aggregate public key\",\"msgHash\":\"The message hash that was signed\",\"signature\":\"The BLS signature to verify\"},\"returns\":{\"pairingSuccessful\":\"Whether the pairing operation completed successfully\",\"signatureValid\":\"Whether the signature is valid\"}},\"updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))\":{\"details\":\"Only callable by the `OperatorTableUpdater`The `referenceTimestamp` must correspond to a reference timestamp for a globalTableRoot stored in the `OperatorTableUpdater`The `referenceTimestamp` must be greater than the latest reference timestamp for the given operatorSet\",\"params\":{\"operatorSet\":\"the operatorSet to update the operator table for\",\"operatorSetConfig\":\"the configuration of the operatorSet, which includes the owner and max staleness period\",\"operatorSetInfo\":\"the operatorInfos to update the operator table with\",\"referenceTimestamp\":\"the timestamp at which the operatorInfos were sourced via the `globalTableRoot`\"}},\"verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))\":{\"params\":{\"cert\":\"a certificate\",\"operatorSet\":\"the operatorSet that the certificate is for\"},\"returns\":{\"signedStakes\":\"array of stake weights that signed the certificate for each stake type. Each index         corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`.\"}},\"verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])\":{\"params\":{\"cert\":\"the certificate\",\"operatorSet\":\"the operatorSet that the certificate is for\",\"totalStakeNominalThresholds\":\"the nominal amount of stake that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`\"},\"returns\":{\"_0\":\"Whether or not certificate is valid and meets nominal thresholds\"}},\"verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])\":{\"params\":{\"cert\":\"the certificate\",\"operatorSet\":\"the operatorSet that the certificate is for\",\"totalStakeProportionThresholds\":\"the proportion, in BPS, of total stake weight that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`\"},\"returns\":{\"_0\":\"whether or not certificate is valid and meets proportion thresholds\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"title\":\"BN254CertificateVerifier\",\"version\":1},\"userdoc\":{\"errors\":{\"ArrayLengthMismatch()\":[{\"notice\":\"Thrown when array lengths mismatch\"}],\"CertificateStale()\":[{\"notice\":\"Thrown when the certificate is too stale, per the max staleness period of the operatorSet\"}],\"InvalidOperatorIndex()\":[{\"notice\":\"thrown when operator index provided in certificate is invalid\"}],\"OnlyTableUpdater()\":[{\"notice\":\"Thrown when the table updater is not caller\"}],\"ReferenceTimestampDoesNotExist()\":[{\"notice\":\"Thrown when the reference timestamp does not exist\"}],\"RootDisabled()\":[{\"notice\":\"Thrown when the global table root is disabled\"}],\"TableUpdateStale()\":[{\"notice\":\"Thrown when the table update is stale\"}],\"VerificationFailed()\":[{\"notice\":\"Thrown when certificate verification fails\"}]},\"events\":{\"MaxStalenessPeriodUpdated((address,uint32),uint32)\":{\"notice\":\"Emitted when the max staleness period of an operatorSet is updated\"},\"OperatorSetOwnerUpdated((address,uint32),address)\":{\"notice\":\"Emitted when the owner of an operatorSet is updated\"},\"TableUpdated((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"notice\":\"Emitted when an BN254 table is updated\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor for the certificate verifier\"},\"getNonsignerOperatorInfo((address,uint32),uint32,uint256)\":{\"notice\":\"Get cached nonsigner operator info\"},\"getOperatorCount((address,uint32),uint32)\":{\"notice\":\"Get the number of operators at a given reference timestamp\"},\"getOperatorSetInfo((address,uint32),uint32)\":{\"notice\":\"Get operator set info for a timestamp\"},\"getOperatorSetOwner((address,uint32))\":{\"notice\":\"The address of the owner of the OperatorSet\"},\"getTotalStakeWeights((address,uint32),uint32)\":{\"notice\":\"Get the total stake weights for all operators at a given reference timestamp\"},\"isNonsignerCached((address,uint32),uint32,uint256)\":{\"notice\":\"Check if a nonsigner is cached\"},\"isReferenceTimestampSet((address,uint32),uint32)\":{\"notice\":\"Whether the operator table has been updated for a given reference timestamp\"},\"latestReferenceTimestamp((address,uint32))\":{\"notice\":\"The latest reference timestamp of the operator table for a given operatorSet. This value is         updated each time an operator table is updated\"},\"maxOperatorTableStaleness((address,uint32))\":{\"notice\":\"The max staleness period of the operator table for a given operatorSet. This value is AVS-set and         transported by the multichain protocol\"},\"trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))\":{\"notice\":\"Convenience function to attempt signature verification with gas limit for safety\"},\"updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))\":{\"notice\":\"updates the operator table with stake weights for an operatorSet\"},\"verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))\":{\"notice\":\"verifies a certificate\"},\"verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])\":{\"notice\":\"verifies a certificate and makes sure that the signed stakes meet provided nominal stake thresholds\"},\"verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])\":{\"notice\":\"verifies a certificate and makes sure that the signed stakes meet provided portions of the total stake weight on the AVS\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"notice\":\"Singleton verifier for BN254 certificates across multiple operator sets\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/multichain/BN254CertificateVerifier.sol\":\"BN254CertificateVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"src/contracts/interfaces/IBN254CertificateVerifier.sol\":{\"keccak256\":\"0x7752b30f86aa336ef2fe520e4a44077c3ea8c7eab0e2d10ce72c7418447f11b4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a930bb2a3c66072b5387e1645a0bad9b867a6d0b4251a070cb32f2194d9dd63d\",\"dweb:/ipfs/Qmdpwp4j19P2WkmtYUTFj5GveCm35zHjfEU81zJqwJpmYr\"]},\"src/contracts/interfaces/IBaseCertificateVerifier.sol\":{\"keccak256\":\"0x73868ac5e03f51617288695fe3e78dbd9595f7131b4db32419ada6941e12711f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c94787fdcc69a43642d0b72c006994aae6dd26e0fcde7cfc175a44d8303b7565\",\"dweb:/ipfs/QmQeaQWds1kSCymh6HYPKBjFMfSDfHUCZREC6khbbNyLA4\"]},\"src/contracts/interfaces/ICrossChainRegistry.sol\":{\"keccak256\":\"0x0b14b4dec4978bd42a8a1483b430854a773f8cbbe09981833055fe260dd04750\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://42828bc630691170efa41caceecf8146f81f1b400cd3fbe2a49a1ab791a722d5\",\"dweb:/ipfs/QmaW3Hey61bXYLwFnBpRPATJqfKZKvZgzZyRtqkaKCGw51\"]},\"src/contracts/interfaces/IECDSACertificateVerifier.sol\":{\"keccak256\":\"0x3f92435ab10774d48d05ee7c76aca07b221dd6681d2d8384ad297a9c1f099a3e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a38a48bebad8614520d4d9e606b3f27d5375fb5827c7acd68a29f36a96f004d0\",\"dweb:/ipfs/QmPbTK68MEEnnzJytdH21oiLrRXE82Sdr8X3nxvsQmJHwf\"]},\"src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c\",\"dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF\"]},\"src/contracts/interfaces/IOperatorTableCalculator.sol\":{\"keccak256\":\"0xaf9b4bd05cbd4fbd5c466c50ed00f3a11d2f549449a3f247a82595497c39451b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d1a15978f7d282beea242a4e9771df4b5f8e2af4b38eaf04e3ab02510cafa51e\",\"dweb:/ipfs/QmVjaydhAzDgeJ1rxakWLoqo9WpGfVh7ajmFYsQZBrPQ16\"]},\"src/contracts/interfaces/IOperatorTableUpdater.sol\":{\"keccak256\":\"0x1f0c91e7c7453439b42fdcffe98c943744d486ff3a0fb42f55919dd6dc2907db\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://71d9476038c553db7ef8e01251b5924b19e4fea705959171c97d0f1c11d1f9bc\",\"dweb:/ipfs/QmaNZHaBn93mL7hextMFyr4PqnWPbaCaiHyFeHQZXCHEmz\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"src/contracts/libraries/BN254SignatureVerifier.sol\":{\"keccak256\":\"0x92afd8306d1dc64e290600cce1da66435319c2b1bc8f9a926080c301ab61a839\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f6bae17ee733ad08e8e70724a56913d6add435c997ab64c2e922edebf7a7752b\",\"dweb:/ipfs/QmZDA3GEQ5nhn6dWTM3fKRDLF3pjLPYm8KLDXVgBjdUKXt\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xfea37c052df354d4bd9a1f312dfec81abc8718de41d7cd0c8bd22241887ed246\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bdc6ab1ef26a39e7db1219e5ecfbbf137473ef4d531a31eed4827b5099c063\",\"dweb:/ipfs/QmVgSDqpMH5dP3rwR1fL59syT9o2tTuwaT7BfWjRY3YhPZ\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/multichain/BN254CertificateVerifier.sol\":{\"keccak256\":\"0x91429c42d45bdec36fc5f07c2d1d8aef0357c72d60036d42cdc7bb6fe770580c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://95040d0ff92a14d8c1f2da68efebd1e31fe9eb5cf13606089aa94c5fda0b7647\",\"dweb:/ipfs/QmNsAmezrTFFd29BkNNAXcZ4ekrjPtBxUZgd2GN2thSxRj\"]},\"src/contracts/multichain/BN254CertificateVerifierStorage.sol\":{\"keccak256\":\"0x13532fb53a446e54528f998fcee8a5e04336d6b5ffda701fc12f05253a6f7e3f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0280d130cd7a499bf1d3a8fccc67d69650f7e5361dcc43bbd8c2a76c7847de4a\",\"dweb:/ipfs/QmZFJ2DbqpArAcuRC9ctniGVguqRk368Z1xhKrFCJbAzqe\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IOperatorTableUpdater",
              "name": "_operatorTableUpdater",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CertificateStale"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECAddFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECMulFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECPairingFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpModFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorIndex"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidProofLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyTableUpdater"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReferenceTimestampDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RootDisabled"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TableUpdateStale"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VerificationFailed"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "maxStalenessPeriod",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxStalenessPeriodUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetOwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
              "name": "operatorSetInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorInfoTreeRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "numOperators",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "aggregatePubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "totalWeights",
                  "type": "uint256[]"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TableUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "operatorIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonsignerOperatorInfo",
          "outputs": [
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "pubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "weights",
                  "type": "uint256[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetInfo",
          "outputs": [
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorInfoTreeRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "numOperators",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "aggregatePubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "totalWeights",
                  "type": "uint256[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeWeights",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "operatorIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isNonsignerCached",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isReferenceTimestampSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "latestReferenceTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxOperatorTableStaleness",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorTableUpdater",
          "outputs": [
            {
              "internalType": "contract IOperatorTableUpdater",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32"
            },
            {
              "internalType": "struct BN254.G1Point",
              "name": "aggPubkey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct BN254.G2Point",
              "name": "apkG2",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ]
            },
            {
              "internalType": "struct BN254.G1Point",
              "name": "signature",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "trySignatureVerification",
          "outputs": [
            {
              "internalType": "bool",
              "name": "pairingSuccessful",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "signatureValid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
              "name": "operatorSetInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorInfoTreeRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "numOperators",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "aggregatePubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "totalWeights",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
              "name": "operatorSetConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "maxStalenessPeriod",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorTable"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
              "name": "cert",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "signature",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apk",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
                  "name": "nonSignerWitnesses",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operatorIndex",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "operatorInfoProof",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                      "name": "operatorInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct BN254.G1Point",
                          "name": "pubkey",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "X",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "Y",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "weights",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyCertificate",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "signedStakes",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
              "name": "cert",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "signature",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apk",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
                  "name": "nonSignerWitnesses",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operatorIndex",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "operatorInfoProof",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                      "name": "operatorInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct BN254.G1Point",
                          "name": "pubkey",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "X",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "Y",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "weights",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "totalStakeNominalThresholds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyCertificateNominal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
              "name": "cert",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "signature",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apk",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
                  "name": "nonSignerWitnesses",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operatorIndex",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "operatorInfoProof",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                      "name": "operatorInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct BN254.G1Point",
                          "name": "pubkey",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "X",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "Y",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "weights",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint16[]",
              "name": "totalStakeProportionThresholds",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyCertificateProportion",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Disables initializers to prevent implementation initialization",
            "params": {
              "_operatorTableUpdater": "Address authorized to update operator tables",
              "_version": "The semantic version of the contract"
            }
          },
          "getNonsignerOperatorInfo((address,uint32),uint32,uint256)": {
            "details": "The non-signing operatorInfo is stored upon a successful certificate verification. Once cached,      non-signer proofs do not need to be passed in as part of the `BN254Certificate`",
            "params": {
              "operatorIndex": "The operator index",
              "operatorSet": "The operatorSet",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "The cached operator info, empty if the operator is not in the cache"
            }
          },
          "getOperatorCount((address,uint32),uint32)": {
            "details": "Returns 0 if the reference timestamp is not set or the number of operators is 0",
            "params": {
              "operatorSet": "The operator set to get the number of operators for",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "The number of operators"
            }
          },
          "getOperatorSetInfo((address,uint32),uint32)": {
            "params": {
              "operatorSet": "The operator set",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "The operator set info, empty if the operatorSet has not been updated for the given reference timestamp"
            }
          },
          "getOperatorSetOwner((address,uint32))": {
            "details": "The owner of the OperatorSet is not used by this contract, but can be used by periphery contracts      to gate access control for on-chain operations",
            "params": {
              "operatorSet": "The operatorSet to get the owner of"
            },
            "returns": {
              "_0": "The owner"
            }
          },
          "getTotalStakeWeights((address,uint32),uint32)": {
            "details": "For ECDSA, this function *reverts* if the reference timestamp is not set or the number of operators is 0For BN254, this function returns empty array if the reference timestamp is not set or the number of operators is 0",
            "params": {
              "operatorSet": "The operator set to calculate stakes for",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "The sum of stake weights for each stake type, empty if the operatorSet has not been updated for the given reference timestamp"
            }
          },
          "isNonsignerCached((address,uint32),uint32,uint256)": {
            "details": "The non-signing operatorInfo is stored upon a successful certificate verification. Once cached,      non-signer proofs do not need to be passed in as part of the `BN254Certificate`",
            "params": {
              "operatorIndex": "The operator index",
              "operatorSet": "The operator set",
              "referenceTimestamp": "The reference timestamp"
            },
            "returns": {
              "_0": "Whether the operator is cached"
            }
          },
          "isReferenceTimestampSet((address,uint32),uint32)": {
            "details": "The reference timestamp is set when the operator table is updated",
            "params": {
              "operatorSet": "The operatorSet to check",
              "referenceTimestamp": "The reference timestamp to check"
            },
            "returns": {
              "_0": "Whether the reference timestamp has been updated"
            }
          },
          "latestReferenceTimestamp((address,uint32))": {
            "details": "The latest reference timestamp is set when the operator table is updated",
            "params": {
              "operatorSet": "The operatorSet to get the latest reference timestamp of"
            },
            "returns": {
              "_0": "The latest reference timestamp, 0 if the operatorSet has never been updated"
            }
          },
          "maxOperatorTableStaleness((address,uint32))": {
            "details": "A staleness period of 0 allows for certificates to be verified against any timestamp in the pastStaleness periods should not be greater than 0 and less than the update cadence of the `OperatorTables`, since      certificates would be unable to be validated against",
            "params": {
              "operatorSet": "The operatorSet to get the max staleness period of"
            },
            "returns": {
              "_0": "The max staleness period"
            }
          },
          "trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))": {
            "params": {
              "aggPubkey": "The aggregate public key of signers",
              "apkG2": "The G2 point representation of the aggregate public key",
              "msgHash": "The message hash that was signed",
              "signature": "The BLS signature to verify"
            },
            "returns": {
              "pairingSuccessful": "Whether the pairing operation completed successfully",
              "signatureValid": "Whether the signature is valid"
            }
          },
          "updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))": {
            "details": "Only callable by the `OperatorTableUpdater`The `referenceTimestamp` must correspond to a reference timestamp for a globalTableRoot stored in the `OperatorTableUpdater`The `referenceTimestamp` must be greater than the latest reference timestamp for the given operatorSet",
            "params": {
              "operatorSet": "the operatorSet to update the operator table for",
              "operatorSetConfig": "the configuration of the operatorSet, which includes the owner and max staleness period",
              "operatorSetInfo": "the operatorInfos to update the operator table with",
              "referenceTimestamp": "the timestamp at which the operatorInfos were sourced via the `globalTableRoot`"
            }
          },
          "verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))": {
            "params": {
              "cert": "a certificate",
              "operatorSet": "the operatorSet that the certificate is for"
            },
            "returns": {
              "signedStakes": "array of stake weights that signed the certificate for each stake type. Each index         corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`."
            }
          },
          "verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])": {
            "params": {
              "cert": "the certificate",
              "operatorSet": "the operatorSet that the certificate is for",
              "totalStakeNominalThresholds": "the nominal amount of stake that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`"
            },
            "returns": {
              "_0": "Whether or not certificate is valid and meets nominal thresholds"
            }
          },
          "verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])": {
            "params": {
              "cert": "the certificate",
              "operatorSet": "the operatorSet that the certificate is for",
              "totalStakeProportionThresholds": "the proportion, in BPS, of total stake weight that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`"
            },
            "returns": {
              "_0": "whether or not certificate is valid and meets proportion thresholds"
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor for the certificate verifier"
          },
          "getNonsignerOperatorInfo((address,uint32),uint32,uint256)": {
            "notice": "Get cached nonsigner operator info"
          },
          "getOperatorCount((address,uint32),uint32)": {
            "notice": "Get the number of operators at a given reference timestamp"
          },
          "getOperatorSetInfo((address,uint32),uint32)": {
            "notice": "Get operator set info for a timestamp"
          },
          "getOperatorSetOwner((address,uint32))": {
            "notice": "The address of the owner of the OperatorSet"
          },
          "getTotalStakeWeights((address,uint32),uint32)": {
            "notice": "Get the total stake weights for all operators at a given reference timestamp"
          },
          "isNonsignerCached((address,uint32),uint32,uint256)": {
            "notice": "Check if a nonsigner is cached"
          },
          "isReferenceTimestampSet((address,uint32),uint32)": {
            "notice": "Whether the operator table has been updated for a given reference timestamp"
          },
          "latestReferenceTimestamp((address,uint32))": {
            "notice": "The latest reference timestamp of the operator table for a given operatorSet. This value is         updated each time an operator table is updated"
          },
          "maxOperatorTableStaleness((address,uint32))": {
            "notice": "The max staleness period of the operator table for a given operatorSet. This value is AVS-set and         transported by the multichain protocol"
          },
          "trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))": {
            "notice": "Convenience function to attempt signature verification with gas limit for safety"
          },
          "updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))": {
            "notice": "updates the operator table with stake weights for an operatorSet"
          },
          "verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))": {
            "notice": "verifies a certificate"
          },
          "verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])": {
            "notice": "verifies a certificate and makes sure that the signed stakes meet provided nominal stake thresholds"
          },
          "verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])": {
            "notice": "verifies a certificate and makes sure that the signed stakes meet provided portions of the total stake weight on the AVS"
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/multichain/BN254CertificateVerifier.sol": "BN254CertificateVerifier"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IBN254CertificateVerifier.sol": {
        "keccak256": "0x7752b30f86aa336ef2fe520e4a44077c3ea8c7eab0e2d10ce72c7418447f11b4",
        "urls": [
          "bzz-raw://a930bb2a3c66072b5387e1645a0bad9b867a6d0b4251a070cb32f2194d9dd63d",
          "dweb:/ipfs/Qmdpwp4j19P2WkmtYUTFj5GveCm35zHjfEU81zJqwJpmYr"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IBaseCertificateVerifier.sol": {
        "keccak256": "0x73868ac5e03f51617288695fe3e78dbd9595f7131b4db32419ada6941e12711f",
        "urls": [
          "bzz-raw://c94787fdcc69a43642d0b72c006994aae6dd26e0fcde7cfc175a44d8303b7565",
          "dweb:/ipfs/QmQeaQWds1kSCymh6HYPKBjFMfSDfHUCZREC6khbbNyLA4"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ICrossChainRegistry.sol": {
        "keccak256": "0x0b14b4dec4978bd42a8a1483b430854a773f8cbbe09981833055fe260dd04750",
        "urls": [
          "bzz-raw://42828bc630691170efa41caceecf8146f81f1b400cd3fbe2a49a1ab791a722d5",
          "dweb:/ipfs/QmaW3Hey61bXYLwFnBpRPATJqfKZKvZgzZyRtqkaKCGw51"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IECDSACertificateVerifier.sol": {
        "keccak256": "0x3f92435ab10774d48d05ee7c76aca07b221dd6681d2d8384ad297a9c1f099a3e",
        "urls": [
          "bzz-raw://a38a48bebad8614520d4d9e606b3f27d5375fb5827c7acd68a29f36a96f004d0",
          "dweb:/ipfs/QmPbTK68MEEnnzJytdH21oiLrRXE82Sdr8X3nxvsQmJHwf"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IKeyRegistrar.sol": {
        "keccak256": "0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8",
        "urls": [
          "bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c",
          "dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableCalculator.sol": {
        "keccak256": "0xaf9b4bd05cbd4fbd5c466c50ed00f3a11d2f549449a3f247a82595497c39451b",
        "urls": [
          "bzz-raw://d1a15978f7d282beea242a4e9771df4b5f8e2af4b38eaf04e3ab02510cafa51e",
          "dweb:/ipfs/QmVjaydhAzDgeJ1rxakWLoqo9WpGfVh7ajmFYsQZBrPQ16"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableUpdater.sol": {
        "keccak256": "0x1f0c91e7c7453439b42fdcffe98c943744d486ff3a0fb42f55919dd6dc2907db",
        "urls": [
          "bzz-raw://71d9476038c553db7ef8e01251b5924b19e4fea705959171c97d0f1c11d1f9bc",
          "dweb:/ipfs/QmaNZHaBn93mL7hextMFyr4PqnWPbaCaiHyFeHQZXCHEmz"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BN254.sol": {
        "keccak256": "0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc",
        "urls": [
          "bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc",
          "dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/BN254SignatureVerifier.sol": {
        "keccak256": "0x92afd8306d1dc64e290600cce1da66435319c2b1bc8f9a926080c301ab61a839",
        "urls": [
          "bzz-raw://f6bae17ee733ad08e8e70724a56913d6add435c997ab64c2e922edebf7a7752b",
          "dweb:/ipfs/QmZDA3GEQ5nhn6dWTM3fKRDLF3pjLPYm8KLDXVgBjdUKXt"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0xfea37c052df354d4bd9a1f312dfec81abc8718de41d7cd0c8bd22241887ed246",
        "urls": [
          "bzz-raw://c5bdc6ab1ef26a39e7db1219e5ecfbbf137473ef4d531a31eed4827b5099c063",
          "dweb:/ipfs/QmVgSDqpMH5dP3rwR1fL59syT9o2tTuwaT7BfWjRY3YhPZ"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/BN254CertificateVerifier.sol": {
        "keccak256": "0x91429c42d45bdec36fc5f07c2d1d8aef0357c72d60036d42cdc7bb6fe770580c",
        "urls": [
          "bzz-raw://95040d0ff92a14d8c1f2da68efebd1e31fe9eb5cf13606089aa94c5fda0b7647",
          "dweb:/ipfs/QmNsAmezrTFFd29BkNNAXcZ4ekrjPtBxUZgd2GN2thSxRj"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/BN254CertificateVerifierStorage.sol": {
        "keccak256": "0x13532fb53a446e54528f998fcee8a5e04336d6b5ffda701fc12f05253a6f7e3f",
        "urls": [
          "bzz-raw://0280d130cd7a499bf1d3a8fccc67d69650f7e5361dcc43bbd8c2a76c7847de4a",
          "dweb:/ipfs/QmZFJ2DbqpArAcuRC9ctniGVguqRk368Z1xhKrFCJbAzqe"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 150
}