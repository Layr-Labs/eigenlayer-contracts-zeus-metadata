{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_bn254CertificateVerifier",
          "type": "address",
          "internalType": "contract IBN254CertificateVerifier"
        },
        {
          "name": "_ecdsaCertificateVerifier",
          "type": "address",
          "internalType": "contract IECDSACertificateVerifier"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "GENERATOR_GLOBAL_TABLE_ROOT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GENERATOR_MAX_STALENESS_PERIOD",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GENERATOR_REFERENCE_TIMESTAMP",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GLOBAL_TABLE_ROOT_CERT_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_BPS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "OPERATOR_INFO_LEAF_SALT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "OPERATOR_TABLE_LEAF_SALT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "bn254CertificateVerifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IBN254CertificateVerifier"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateOperatorInfoLeaf",
      "inputs": [
        {
          "name": "operatorInfo",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
          "components": [
            {
              "name": "pubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "weights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "calculateOperatorTableLeaf",
      "inputs": [
        {
          "name": "operatorTableBytes",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "confirmGlobalTableRoot",
      "inputs": [
        {
          "name": "globalTableRootCert",
          "type": "tuple",
          "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
          "components": [
            {
              "name": "referenceTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "messageHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "signature",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "apk",
              "type": "tuple",
              "internalType": "struct BN254.G2Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]",
                  "internalType": "uint256[2]"
                }
              ]
            },
            {
              "name": "nonSignerWitnesses",
              "type": "tuple[]",
              "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
              "components": [
                {
                  "name": "operatorIndex",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "operatorInfoProof",
                  "type": "bytes",
                  "internalType": "bytes"
                },
                {
                  "name": "operatorInfo",
                  "type": "tuple",
                  "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                  "components": [
                    {
                      "name": "pubkey",
                      "type": "tuple",
                      "internalType": "struct BN254.G1Point",
                      "components": [
                        {
                          "name": "X",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "Y",
                          "type": "uint256",
                          "internalType": "uint256"
                        }
                      ]
                    },
                    {
                      "name": "weights",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "disableRoot",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ecdsaCertificateVerifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IECDSACertificateVerifier"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCertificateVerifier",
      "inputs": [
        {
          "name": "curveType",
          "type": "uint8",
          "internalType": "enum IKeyRegistrarTypes.CurveType"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentGlobalTableRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGenerator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGeneratorConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
          "components": [
            {
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "maxStalenessPeriod",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGeneratorReferenceTimestamp",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGlobalTableRootByTimestamp",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGlobalTableUpdateMessageHash",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getGlobalTableUpdateSignableDigest",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLatestReferenceBlockNumber",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLatestReferenceTimestamp",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReferenceBlockNumberByTimestamp",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReferenceTimestampByBlockNumber",
      "inputs": [
        {
          "name": "referenceBlockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "globalRootConfirmationThreshold",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_initialGenerator",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "_globalRootConfirmationThreshold",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "generatorInfo",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
          "components": [
            {
              "name": "operatorInfoTreeRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "numOperators",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "aggregatePubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWeights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isRootValid",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRootValidByTimestamp",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGlobalRootConfirmationThreshold",
      "inputs": [
        {
          "name": "bps",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateGenerator",
      "inputs": [
        {
          "name": "generator",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "generatorInfo",
          "type": "tuple",
          "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
          "components": [
            {
              "name": "operatorInfoTreeRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "numOperators",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "aggregatePubkey",
              "type": "tuple",
              "internalType": "struct BN254.G1Point",
              "components": [
                {
                  "name": "X",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWeights",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateOperatorTable",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "operatorSetIndex",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "proof",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "operatorTableBytes",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "GeneratorUpdated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GlobalRootConfirmationThresholdUpdated",
      "inputs": [
        {
          "name": "bps",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GlobalRootDisabled",
      "inputs": [
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NewGlobalTableRoot",
      "inputs": [
        {
          "name": "referenceTimestamp",
          "type": "uint32",
          "indexed": true,
          "internalType": "uint32"
        },
        {
          "name": "globalTableRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "CannotDisableGeneratorRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CertificateInvalid",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "EmptyRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "GlobalTableRootInFuture",
      "inputs": []
    },
    {
      "type": "error",
      "name": "GlobalTableRootStale",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidConfirmationThreshold",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCurveType",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidGenerator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidGlobalTableRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidIndex",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMessageHash",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSetProof",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidProofLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "TableUpdateForPastTimestamp",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610100604052348015610010575f5ffd5b50604051612e6a380380612e6a83398101604081905261002f916101b9565b808484846001600160a01b03811661005a576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b0390811660805291821660a0521660c05261007b81610090565b60e052506100876100d6565b505050506102fe565b5f5f829050601f815111156100c3578260405163305a27a960e01b81526004016100ba91906102a3565b60405180910390fd5b80516100ce826102d8565b179392505050565b5f54610100900460ff161561013d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b60648201526084016100ba565b5f5460ff9081161461018c575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146101a2575f5ffd5b50565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f608085870312156101cc575f5ffd5b84516101d78161018e565b60208601519094506101e88161018e565b60408601519093506101f98161018e565b60608601519092506001600160401b03811115610214575f5ffd5b8501601f81018713610224575f5ffd5b80516001600160401b0381111561023d5761023d6101a5565b604051601f8201601f19908116603f011681016001600160401b038111828210171561026b5761026b6101a5565b604052818152828201602001891015610282575f5ffd5b8160208401602083015e5f6020838301015280935050505092959194509250565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156102f8575f198160200360031b1b821691505b50919050565b60805160a05160c05160e051612aec61037e5f395f610a1301525f81816105b501528181610aad0152610e6d01525f818161061c0152818161094101528181610a6d01528181610b1901528181610dc8015281816111420152818161142b01526114dd01525f818161053c0152818161160901526118f50152612aec5ff3fe608060405234801561000f575f5ffd5b5060043610610255575f3560e01c80636f728c5011610140578063ad0f9582116100bf578063c3be1e3311610084578063c3be1e3314610672578063c5916a3914610685578063eaaed9d5146106aa578063f2fde38b146106bd578063fabc1cbc146106d0578063fd967f47146106e3575f5ffd5b8063ad0f9582146105b0578063b0cb3a24146105d7578063b8c1430614610617578063c252aa221461063e578063c3621f0a1461065f575f5ffd5b80638da5cb5b116101055780638da5cb5b1461055e5780639ea947781461056f5780639f7e206f14610582578063a2c902f514610595578063a2f2e24d1461059d575f5ffd5b80636f728c50146104f5578063715018a6146105205780637551ba3414610528578063790961ea14610530578063886f119514610537575f5ffd5b806331a599d2116101d757806354fd4d501161019c57806354fd4d5014610470578063595c6a67146104855780635ac86ab71461048d5780635c975abb146104b0578063612abcb0146104b857806364e1df84146104c0575f5ffd5b806331a599d2146103ea5780633ef6cd7a1461040f578063401c370f146104365780634624e6a314610449578063538a37901461045d575f5ffd5b80631e2ca2601161021d5780631e2ca260146103125780632370356c1461035b57806323b7b5b21461036e57806328522d791461039657806330ef41b4146103b8575f5ffd5b806306f5187514610259578063121409ea1461026e578063136439dd1461028d578063193b79f3146102a05780631bdc0deb146102dd575b5f5ffd5b61026c610267366004611b4f565b6106ec565b005b610276608e81565b60405160ff90911681526020015b60405180910390f35b61026c61029b366004611bc5565b6108c6565b6102c86102ae366004611bed565b63ffffffff9081165f908152609b60205260409020541690565b60405163ffffffff9091168152602001610284565b6103047fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a86981565b604051908152602001610284565b6040805180820182525f80825260209182015281518083019092526098546001600160a01b0381168352600160a01b900463ffffffff16908201525b6040516102849190611c26565b61026c610369366004611c34565b610900565b6102c861037c366004611bed565b63ffffffff9081165f908152609a60205260409020541690565b60975462010000900463ffffffff165f90815260996020526040902054610304565b6103da6103c6366004611bc5565b5f908152609c602052604090205460ff1690565b6040519015158152602001610284565b60975462010000900463ffffffff9081165f908152609a6020526040902054166102c8565b6103047f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc81565b610304610444366004611c4d565b610914565b60975462010000900463ffffffff166102c8565b61030461046b366004611d3c565b6109bd565b610478610a0c565b6040516102849190611e34565b61026c610a3c565b6103da61049b366004611e69565b606654600160ff9092169190911b9081161490565b606654610304565b6102c8600181565b6103da6104ce366004611bed565b63ffffffff165f908152609960209081526040808320548352609c90915290205460ff1690565b610508610503366004611e97565b610a50565b6040516001600160a01b039091168152602001610284565b61026c610aef565b6102c8610b00565b6102c85f81565b6105087f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b0316610508565b61026c61057d366004611ef4565b610b8e565b61026c610590366004611f8f565b610ede565b610276607581565b6103046105ab366004611fda565b610ef0565b6105087f000000000000000000000000000000000000000000000000000000000000000081565b6040805180820182525f8082526020918201528151808301909252609d546001600160a01b0381168352600160a01b900463ffffffff169082015261034e565b6105087f000000000000000000000000000000000000000000000000000000000000000081565b60975461064c9061ffff1681565b60405161ffff9091168152602001610284565b61026c61066d366004611bc5565b610f26565b610304610680366004611c4d565b610fdb565b610304610693366004611bed565b63ffffffff165f9081526099602052604090205490565b61026c6106b8366004612018565b611043565b61026c6106cb366004612084565b611292565b61026c6106de366004611bc5565b611308565b61064c61271081565b5f54610100900460ff161580801561070a57505f54600160ff909116105b806107235750303b15801561072357505f5460ff166001145b61078b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff1916600117905580156107ac575f805461ff0019166101001790555b6107b586611375565b6107be856113c6565b609d80546001600160c01b031916301790556107da8483611403565b6107e383611583565b7fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a8697fbb86fbc034f4e382929974bcd8419ed626b0ea647f962d89ba2fb6bd28785ab98190555f52609c6020527f38353ab40115e4013d688e07cff5857dde443bd05e72c49fcb5e684a9bb9efc4805460ff19166001179055609780544263ffffffff16620100000265ffffffff00001990911617905580156108be575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6108ce6115f4565b60665481811681146108f35760405163c61dca5d60e01b815260040160405180910390fd5b6108fc826113c6565b5050565b610908611697565b61091181611583565b50565b5f5f610921858585610fdb565b6040516306119d0d60e21b815260016004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631846743490604401602060405180830381865afa15801561098e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b2919061209f565b9150505b9392505050565b5f6075826040516020016109d191906120f0565b60408051601f19818403018152908290526109ef929160200161211d565b604051602081830303815290604052805190602001209050919050565b6060610a377f00000000000000000000000000000000000000000000000000000000000000006116f1565b905090565b610a446115f4565b610a4e5f196113c6565b565b5f6002826002811115610a6557610a65612146565b03610a9157507f0000000000000000000000000000000000000000000000000000000000000000919050565b6001826002811115610aa557610aa5612146565b03610ad157507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405163fdea7c0960e01b815260040160405180910390fd5b919050565b610af7611697565b610a4e5f611375565b604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b90610b4f9060989060040161215a565b602060405180830381865afa158015610b6a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a379190612181565b6001610b998161172e565b610ba1611759565b5f5f5f5f610baf87876117b2565b5f8f8152609c60205260409020549397509195509350915060ff16610be75760405163504570e360e01b815260040160405180910390fd5b604080518082019091526098546001600160a01b0381168252600160a01b900463ffffffff166020820152610c1b906117f9565b610c24856117f9565b03610c4257604051631fb1705560e21b815260040160405180910390fd5b610c4b83610a50565b6001600160a01b031663cd83a72b858e6040518363ffffffff1660e01b8152600401610c7892919061219c565b602060405180830381865afa158015610c93573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb791906121bd565b15610cc55750505050610eca565b610cce83610a50565b6001600160a01b0316635ddb9b5b856040518263ffffffff1660e01b8152600401610cf99190611c26565b602060405180830381865afa158015610d14573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d389190612181565b63ffffffff168c63ffffffff1611610d635760405163207617df60e01b815260040160405180910390fd5b63ffffffff8c165f908152609960205260409020548b14610d975760405163639d09b560e11b815260040160405180910390fd5b610dad8b8b8b8b610da88c8c610ef0565b61185c565b6002836002811115610dc157610dc1612146565b03610e52577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636738c40b858e610e00856118c1565b866040518563ffffffff1660e01b8152600401610e2094939291906121dc565b5f604051808303815f87803b158015610e37575f5ffd5b505af1158015610e49573d5f5f3e3d5ffd5b50505050610ec5565b6001836002811115610e6657610e66612146565b03610ad1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166356d482f5858e610ea5856118dd565b866040518563ffffffff1660e01b8152600401610e20949392919061225d565b505050505b610ed4600160c955565b5050505050505050565b610ee6611697565b6108fc8282611403565b5f608e8383604051602001610f0793929190612302565b6040516020818303038152906040528051906020012090505b92915050565b610f2e6115f4565b5f818152609c602052604090205460ff16610f5c5760405163504570e360e01b815260040160405180910390fd5b7fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a8698103610f9c576040516319920afd60e11b815260040160405180910390fd5b5f818152609c6020526040808220805460ff191690555182917f8bd43de1250f58fe6ec9a78671a8b78dba70f0018656d157a3aeaabec389df3491a250565b604080517f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc602082015290810184905263ffffffff8084166060830152821660808201525f9060a0016040516020818303038152906040528051906020012090509392505050565b5f61104d8161172e565b611055611759565b428363ffffffff16111561107c57604051635a119db560e11b815260040160405180910390fd5b60975463ffffffff620100009091048116908416116110ae5760405163037fa86b60e31b815260040160405180910390fd5b6110b9848484610fdb565b8560200135146110dc57604051638b56642d60e01b815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683375050609754825192935061ffff16918391505f9061111757611117612329565b61ffff90921660209283029190910190910152604051625f5e5d60e21b81525f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063017d79749061117c906098908b90879060040161245b565b6020604051808303815f875af1158015611198573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111bc91906121bd565b9050806111dc57604051633042041f60e21b815260040160405180910390fd5b6097805463ffffffff80881662010000810265ffffffff000019909316929092179092555f818152609a602090815260408083208054958a1663ffffffff1996871681179091558352609b825280832080549095168417909455828252609981528382208a9055898252609c9052828120805460ff19166001179055915188927f010dcbe0d1e019c93357711f7bb6287d543b7ff7de74f29df3fb5ecceec8d36991a3505061128b600160c955565b5050505050565b61129a611697565b6001600160a01b0381166112ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610782565b61091181611375565b6113106118f3565b606654801982198116146113375760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b81609861141082826125e8565b5050604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b90611460908690600401612679565b602060405180830381865afa15801561147b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061149f9190612181565b905063ffffffff8116156114c657604051636446f91760e01b815260040160405180910390fd5b604051636738c40b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636738c40b9061151a9086906001908790609d90600401612687565b5f604051808303815f87803b158015611531575f5ffd5b505af1158015611543573d5f5f3e3d5ffd5b505050507f3463431b09dfd43dec7349f8f24acfa753fe4cf40a26235402d213373df15856836040516115769190612679565b60405180910390a1505050565b61271061ffff821611156115aa576040516307336f0360e11b815260040160405180910390fd5b6097805461ffff191661ffff83169081179091556040519081527ff5d1836df8fcd7c1e54047e94ac8773d2855395603e2ef9ba5f5f16905f225929060200160405180910390a150565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611656573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061167a91906121bd565b610a4e57604051631d77d47760e21b815260040160405180910390fd5b6033546001600160a01b03163314610a4e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610782565b60605f6116fd836119a4565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b606654600160ff83161b908116036109115760405163840a48d560e01b815260040160405180910390fd5b600260c954036117ab5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610782565b600260c955565b604080518082019091525f8082526020820152604080518082019091525f808252602082018190529060606117e985870187612760565b9299919850965090945092505050565b5f815f0151826020015163ffffffff1660405160200161184492919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b604051602081830303815290604052610f2090612825565b6118a483838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508992508591505063ffffffff88166119cb565b61128b5760405163afa42ca760e01b815260040160405180910390fd5b6118c9611ac5565b81806020019051810190610f2091906128ad565b606081806020019051810190610f20919061295c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561194f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119739190612a5d565b6001600160a01b0316336001600160a01b031614610a4e5760405163794821ff60e01b815260040160405180910390fd5b5f60ff8216601f811115610f2057604051632cd44ac360e21b815260040160405180910390fd5b5f836119ea576040516329e7276760e11b815260040160405180910390fd5b836119f6868585611a00565b1495945050505050565b5f83515f03611a105750816109b6565b60208451611a1e9190612a78565b15611a3c576040516313717da960e21b815260040160405180910390fd5b8260205b85518111611a9d57611a53600285612a78565b5f03611a7457815f528086015160205260405f209150600284049350611a8b565b808601515f528160205260405f2091506002840493505b611a96602082612a97565b9050611a40565b508215611abd576040516363df817160e01b815260040160405180910390fd5b949350505050565b60405180608001604052805f81526020015f8152602001611af760405180604001604052805f81526020015f81525090565b8152602001606081525090565b6001600160a01b0381168114610911575f5ffd5b5f60408284031215611b28575f5ffd5b50919050565b803561ffff81168114610aea575f5ffd5b5f60a08284031215611b28575f5ffd5b5f5f5f5f5f60c08688031215611b63575f5ffd5b8535611b6e81611b04565b945060208601359350611b848760408801611b18565b9250611b9260808701611b2e565b915060a08601356001600160401b03811115611bac575f5ffd5b611bb888828901611b3f565b9150509295509295909350565b5f60208284031215611bd5575f5ffd5b5035919050565b63ffffffff81168114610911575f5ffd5b5f60208284031215611bfd575f5ffd5b81356109b681611bdc565b80516001600160a01b0316825260209081015163ffffffff16910152565b60408101610f208284611c08565b5f60208284031215611c44575f5ffd5b6109b682611b2e565b5f5f5f60608486031215611c5f575f5ffd5b833592506020840135611c7181611bdc565b91506040840135611c8181611bdc565b809150509250925092565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b0381118282101715611cc257611cc2611c8c565b60405290565b604051608081016001600160401b0381118282101715611cc257611cc2611c8c565b604051601f8201601f191681016001600160401b0381118282101715611d1257611d12611c8c565b604052919050565b5f6001600160401b03821115611d3257611d32611c8c565b5060051b60200190565b5f60208284031215611d4c575f5ffd5b81356001600160401b03811115611d61575f5ffd5b82018084036060811215611d73575f5ffd5b611d7b611ca0565b6040821215611d88575f5ffd5b611d90611ca0565b83358152602080850135908201528152604083013591506001600160401b03821115611dba575f5ffd5b818301925085601f840112611dcd575f5ffd5b82359150611de2611ddd83611d1a565b611cea565b8083825260208201915060208460051b860101935087841115611e03575f5ffd5b6020850194505b83851015611e25578435825260209485019490910190611e0a565b60208301525095945050505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215611e79575f5ffd5b813560ff811681146109b6575f5ffd5b803560038110610aea575f5ffd5b5f60208284031215611ea7575f5ffd5b6109b682611e89565b5f5f83601f840112611ec0575f5ffd5b5081356001600160401b03811115611ed6575f5ffd5b602083019150836020828501011115611eed575f5ffd5b9250929050565b5f5f5f5f5f5f5f60a0888a031215611f0a575f5ffd5b8735611f1581611bdc565b9650602088013595506040880135611f2c81611bdc565b945060608801356001600160401b03811115611f46575f5ffd5b611f528a828b01611eb0565b90955093505060808801356001600160401b03811115611f70575f5ffd5b611f7c8a828b01611eb0565b989b979a50959850939692959293505050565b5f5f60608385031215611fa0575f5ffd5b611faa8484611b18565b915060408301356001600160401b03811115611fc4575f5ffd5b611fd085828601611b3f565b9150509250929050565b5f5f60208385031215611feb575f5ffd5b82356001600160401b03811115612000575f5ffd5b61200c85828601611eb0565b90969095509350505050565b5f5f5f5f6080858703121561202b575f5ffd5b84356001600160401b03811115612040575f5ffd5b85016101208188031215612052575f5ffd5b935060208501359250604085013561206981611bdc565b9150606085013561207981611bdc565b939692955090935050565b5f60208284031215612094575f5ffd5b81356109b681611b04565b5f602082840312156120af575f5ffd5b5051919050565b5f8151808452602084019350602083015f5b828110156120e65781518652602095860195909101906001016120c8565b5093949350505050565b60208082528251805183830152015160408201525f6020830151606080840152611abd60808401826120b6565b60ff60f81b8360f81b1681525f82518060208501600185015e5f92016001019182525092915050565b634e487b7160e01b5f52602160045260245ffd5b60408101610f208284546001600160a01b038116825260a01c63ffffffff16602090910152565b5f60208284031215612191575f5ffd5b81516109b681611bdc565b606081016121aa8285611c08565b63ffffffff831660408301529392505050565b5f602082840312156121cd575f5ffd5b815180151581146109b6575f5ffd5b6121e68186611c08565b63ffffffff8416604082015260c06060820152825160c0820152602083015160e08201525f604084015161222861010084018280518252602090810151910152565b50606084015160a06101408401526122446101608401826120b6565b9150506122546080830184611c08565b95945050505050565b5f60c0820161226c8388611c08565b63ffffffff8616604084015260c0606084015280855180835260e08501915060e08160051b8601019250602087015f5b828110156122ed5786850360df19018452815180516001600160a01b031686526020908101516040918701829052906122d7908701826120b6565b955050602093840193919091019060010161229c565b50505050809150506122546080830184611c08565b60f884901b6001600160f81b0319168152818360018301375f910160010190815292915050565b634e487b7160e01b5f52603260045260245ffd5b5f5f8335601e19843603018112612352575f5ffd5b83016020810192503590506001600160401b03811115612370575f5ffd5b8060051b3603821315611eed575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f8235605e198336030181126123bd575f5ffd5b90910192915050565b8183525f6001600160fb1b038311156123dd575f5ffd5b8260051b80836020870137939093016020019392505050565b80358252602080820135908301525f612412604083018361233d565b606060408601526122546060860182846123c6565b5f8151808452602084019350602083015f5b828110156120e657815161ffff16865260209586019590910190600101612439565b61247e8185546001600160a01b038116825260a01c63ffffffff16602090910152565b608060408201525f6101a08201843561249681611bdc565b63ffffffff166080840152602085013560a0840152604085013560c0840152606085013560e0840152604060808601610100850137604060c086016101408501376124e561010086018661233d565b610120610180860152828184526101c0860190506101c08260051b8701019350825f5b838110156125c7578786036101bf1901835261252482866123a9565b803561252f81611bdc565b63ffffffff168752602081013536829003601e1901811261254e575f5ffd5b81016020810190356001600160401b03811115612569575f5ffd5b803603821315612577575f5ffd5b606060208a015261258c60608a018284612381565b91505061259c60408301836123a9565b915087810360408901526125b081836123f6565b975050506020928301929190910190600101612508565b505050505082810360608401526125de8185612427565b9695505050505050565b81356125f381611b04565b81546001600160a01b031981166001600160a01b03929092169182178355602084013561261f81611bdc565b6001600160c01b03199190911690911760a09190911b63ffffffff60a01b1617905550565b803561264f81611b04565b6001600160a01b03168252602081013561266881611bdc565b63ffffffff81166020840152505050565b60408101610f208284612644565b6126918186612644565b63ffffffff841660408281019190915260c06060808401829052853591840191909152602085013560e0840152908401356101008301528301356101208201525f6126df608085018561233d565b60a06101408501526126f6610160850182846123c6565b925050506122546080830184546001600160a01b038116825260a01c63ffffffff16602090910152565b5f60408284031215612730575f5ffd5b612738611ca0565b9050813561274581611b04565b8152602082013561275581611bdc565b602082015292915050565b5f5f5f5f60c08587031215612773575f5ffd5b61277d8686612720565b935061278b60408601611e89565b925061279a8660608701612720565b915060a08501356001600160401b038111156127b4575f5ffd5b8501601f810187136127c4575f5ffd5b80356001600160401b038111156127dd576127dd611c8c565b6127f0601f8201601f1916602001611cea565b818152886020838501011115612804575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b80516020808301519190811015611b28575f1960209190910360031b1b16919050565b5f82601f830112612857575f5ffd5b8151612865611ddd82611d1a565b8082825260208201915060208360051b860101925085831115612886575f5ffd5b602085015b838110156128a357805183526020928301920161288b565b5095945050505050565b5f602082840312156128bd575f5ffd5b81516001600160401b038111156128d2575f5ffd5b820180840360a08112156128e4575f5ffd5b6128ec611cc8565b82518152602080840151908201526040603f198301121561290b575f5ffd5b612913611ca0565b604084810151825260608501516020830152820152608083015191506001600160401b03821115612942575f5ffd5b61294e86838501612848565b606082015295945050505050565b5f6020828403121561296c575f5ffd5b81516001600160401b03811115612981575f5ffd5b8201601f81018413612991575f5ffd5b805161299f611ddd82611d1a565b8082825260208201915060208360051b8501019250868311156129c0575f5ffd5b602084015b83811015612a525780516001600160401b038111156129e2575f5ffd5b85016040818a03601f190112156129f7575f5ffd5b6129ff611ca0565b6020820151612a0d81611b04565b815260408201516001600160401b03811115612a27575f5ffd5b612a368b602083860101612848565b60208301525080855250506020830192506020810190506129c5565b509695505050505050565b5f60208284031215612a6d575f5ffd5b81516109b681611b04565b5f82612a9257634e487b7160e01b5f52601260045260245ffd5b500690565b80820180821115610f2057634e487b7160e01b5f52601160045260245ffdfea2646970667358221220383df0454ad9496b57e13a357e8f29ef958ab90c31374b06e0030e1fc9f1834164736f6c634300081b0033",
    "sourceMap": "490:16712:185:-:0;;;776:410;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1133:8;1025:25;1052;1096:15;-1:-1:-1;;;;;3618:38:189;;3610:67;;;;-1:-1:-1;;;3610:67:189;;;;;;;;;;;;-1:-1:-1;;;;;3687:32:189;;;;;3285:52:186;;;;;3347;;;961:24:177;:8;:22;:24::i;:::-;950:35;;-1:-1:-1;1157:22:185::3;:20;:22::i;:::-;776:410:::0;;;;490:16712;;1711:286:37;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:37;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:37:o;5939:280:26:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:26;;2749:2:336;5998:66:26;;;2731:21:336;2788:2;2768:18;;;2761:30;2827:34;2807:18;;;2800:62;-1:-1:-1;;;2878:18:336;;;2871:37;2925:19;;5998:66:26;2547:403:336;5998:66:26;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:26;6140:15;6125:30;;;;;;6174:28;;3097:36:336;;;6174:28:26;;3085:2:336;3070:18;6174:28:26;;;;;;;6074:139;5939:280::o;14:158:336:-;-1:-1:-1;;;;;116:31:336;;106:42;;96:70;;162:1;159;152:12;96:70;14:158;:::o;177:127::-;238:10;233:3;229:20;226:1;219:31;269:4;266:1;259:15;293:4;290:1;283:15;309:1508;511:6;519;527;535;588:3;576:9;567:7;563:23;559:33;556:53;;;605:1;602;595:12;556:53;637:9;631:16;656:58;708:5;656:58;:::i;:::-;783:2;768:18;;762:25;733:5;;-1:-1:-1;796:60:336;762:25;796:60;:::i;:::-;927:2;912:18;;906:25;875:7;;-1:-1:-1;940:60:336;906:25;940:60;:::i;:::-;1070:2;1055:18;;1049:25;1019:7;;-1:-1:-1;;;;;;1086:30:336;;1083:50;;;1129:1;1126;1119:12;1083:50;1152:22;;1205:4;1197:13;;1193:27;-1:-1:-1;1183:55:336;;1234:1;1231;1224:12;1183:55;1261:9;;-1:-1:-1;;;;;1282:30:336;;1279:56;;;1315:18;;:::i;:::-;1364:2;1358:9;1456:2;1418:17;;-1:-1:-1;;1414:31:336;;;1447:2;1410:40;1406:54;1394:67;;-1:-1:-1;;;;;1476:34:336;;1512:22;;;1473:62;1470:88;;;1538:18;;:::i;:::-;1574:2;1567:22;1598;;;1639:15;;;1656:2;1635:24;1632:37;-1:-1:-1;1629:57:336;;;1682:1;1679;1672:12;1629:57;1731:6;1726:2;1722;1718:11;1713:2;1705:6;1701:15;1695:43;1784:1;1779:2;1770:6;1762;1758:19;1754:28;1747:39;1805:6;1795:16;;;;;309:1508;;;;;;;:::o;1822:418::-;1971:2;1960:9;1953:21;1934:4;2003:6;1997:13;2046:6;2041:2;2030:9;2026:18;2019:34;2105:6;2100:2;2092:6;2088:15;2083:2;2072:9;2068:18;2062:50;2161:1;2156:2;2147:6;2136:9;2132:22;2128:31;2121:42;2231:2;2224;2220:7;2215:2;2207:6;2203:15;2199:29;2188:9;2184:45;2180:54;2172:62;;;1822:418;;;;:::o;2245:297::-;2363:12;;2410:4;2399:16;;;2393:23;;2363:12;2428:16;;2425:111;;;2522:1;2518:6;2508;2502:4;2498:17;2495:1;2491:25;2487:38;2480:5;2476:50;2467:59;;2425:111;;2245:297;;;:::o;2955:184::-;490:16712:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b5060043610610255575f3560e01c80636f728c5011610140578063ad0f9582116100bf578063c3be1e3311610084578063c3be1e3314610672578063c5916a3914610685578063eaaed9d5146106aa578063f2fde38b146106bd578063fabc1cbc146106d0578063fd967f47146106e3575f5ffd5b8063ad0f9582146105b0578063b0cb3a24146105d7578063b8c1430614610617578063c252aa221461063e578063c3621f0a1461065f575f5ffd5b80638da5cb5b116101055780638da5cb5b1461055e5780639ea947781461056f5780639f7e206f14610582578063a2c902f514610595578063a2f2e24d1461059d575f5ffd5b80636f728c50146104f5578063715018a6146105205780637551ba3414610528578063790961ea14610530578063886f119514610537575f5ffd5b806331a599d2116101d757806354fd4d501161019c57806354fd4d5014610470578063595c6a67146104855780635ac86ab71461048d5780635c975abb146104b0578063612abcb0146104b857806364e1df84146104c0575f5ffd5b806331a599d2146103ea5780633ef6cd7a1461040f578063401c370f146104365780634624e6a314610449578063538a37901461045d575f5ffd5b80631e2ca2601161021d5780631e2ca260146103125780632370356c1461035b57806323b7b5b21461036e57806328522d791461039657806330ef41b4146103b8575f5ffd5b806306f5187514610259578063121409ea1461026e578063136439dd1461028d578063193b79f3146102a05780631bdc0deb146102dd575b5f5ffd5b61026c610267366004611b4f565b6106ec565b005b610276608e81565b60405160ff90911681526020015b60405180910390f35b61026c61029b366004611bc5565b6108c6565b6102c86102ae366004611bed565b63ffffffff9081165f908152609b60205260409020541690565b60405163ffffffff9091168152602001610284565b6103047fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a86981565b604051908152602001610284565b6040805180820182525f80825260209182015281518083019092526098546001600160a01b0381168352600160a01b900463ffffffff16908201525b6040516102849190611c26565b61026c610369366004611c34565b610900565b6102c861037c366004611bed565b63ffffffff9081165f908152609a60205260409020541690565b60975462010000900463ffffffff165f90815260996020526040902054610304565b6103da6103c6366004611bc5565b5f908152609c602052604090205460ff1690565b6040519015158152602001610284565b60975462010000900463ffffffff9081165f908152609a6020526040902054166102c8565b6103047f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc81565b610304610444366004611c4d565b610914565b60975462010000900463ffffffff166102c8565b61030461046b366004611d3c565b6109bd565b610478610a0c565b6040516102849190611e34565b61026c610a3c565b6103da61049b366004611e69565b606654600160ff9092169190911b9081161490565b606654610304565b6102c8600181565b6103da6104ce366004611bed565b63ffffffff165f908152609960209081526040808320548352609c90915290205460ff1690565b610508610503366004611e97565b610a50565b6040516001600160a01b039091168152602001610284565b61026c610aef565b6102c8610b00565b6102c85f81565b6105087f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b0316610508565b61026c61057d366004611ef4565b610b8e565b61026c610590366004611f8f565b610ede565b610276607581565b6103046105ab366004611fda565b610ef0565b6105087f000000000000000000000000000000000000000000000000000000000000000081565b6040805180820182525f8082526020918201528151808301909252609d546001600160a01b0381168352600160a01b900463ffffffff169082015261034e565b6105087f000000000000000000000000000000000000000000000000000000000000000081565b60975461064c9061ffff1681565b60405161ffff9091168152602001610284565b61026c61066d366004611bc5565b610f26565b610304610680366004611c4d565b610fdb565b610304610693366004611bed565b63ffffffff165f9081526099602052604090205490565b61026c6106b8366004612018565b611043565b61026c6106cb366004612084565b611292565b61026c6106de366004611bc5565b611308565b61064c61271081565b5f54610100900460ff161580801561070a57505f54600160ff909116105b806107235750303b15801561072357505f5460ff166001145b61078b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff1916600117905580156107ac575f805461ff0019166101001790555b6107b586611375565b6107be856113c6565b609d80546001600160c01b031916301790556107da8483611403565b6107e383611583565b7fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a8697fbb86fbc034f4e382929974bcd8419ed626b0ea647f962d89ba2fb6bd28785ab98190555f52609c6020527f38353ab40115e4013d688e07cff5857dde443bd05e72c49fcb5e684a9bb9efc4805460ff19166001179055609780544263ffffffff16620100000265ffffffff00001990911617905580156108be575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6108ce6115f4565b60665481811681146108f35760405163c61dca5d60e01b815260040160405180910390fd5b6108fc826113c6565b5050565b610908611697565b61091181611583565b50565b5f5f610921858585610fdb565b6040516306119d0d60e21b815260016004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631846743490604401602060405180830381865afa15801561098e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b2919061209f565b9150505b9392505050565b5f6075826040516020016109d191906120f0565b60408051601f19818403018152908290526109ef929160200161211d565b604051602081830303815290604052805190602001209050919050565b6060610a377f00000000000000000000000000000000000000000000000000000000000000006116f1565b905090565b610a446115f4565b610a4e5f196113c6565b565b5f6002826002811115610a6557610a65612146565b03610a9157507f0000000000000000000000000000000000000000000000000000000000000000919050565b6001826002811115610aa557610aa5612146565b03610ad157507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405163fdea7c0960e01b815260040160405180910390fd5b919050565b610af7611697565b610a4e5f611375565b604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b90610b4f9060989060040161215a565b602060405180830381865afa158015610b6a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a379190612181565b6001610b998161172e565b610ba1611759565b5f5f5f5f610baf87876117b2565b5f8f8152609c60205260409020549397509195509350915060ff16610be75760405163504570e360e01b815260040160405180910390fd5b604080518082019091526098546001600160a01b0381168252600160a01b900463ffffffff166020820152610c1b906117f9565b610c24856117f9565b03610c4257604051631fb1705560e21b815260040160405180910390fd5b610c4b83610a50565b6001600160a01b031663cd83a72b858e6040518363ffffffff1660e01b8152600401610c7892919061219c565b602060405180830381865afa158015610c93573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb791906121bd565b15610cc55750505050610eca565b610cce83610a50565b6001600160a01b0316635ddb9b5b856040518263ffffffff1660e01b8152600401610cf99190611c26565b602060405180830381865afa158015610d14573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d389190612181565b63ffffffff168c63ffffffff1611610d635760405163207617df60e01b815260040160405180910390fd5b63ffffffff8c165f908152609960205260409020548b14610d975760405163639d09b560e11b815260040160405180910390fd5b610dad8b8b8b8b610da88c8c610ef0565b61185c565b6002836002811115610dc157610dc1612146565b03610e52577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636738c40b858e610e00856118c1565b866040518563ffffffff1660e01b8152600401610e2094939291906121dc565b5f604051808303815f87803b158015610e37575f5ffd5b505af1158015610e49573d5f5f3e3d5ffd5b50505050610ec5565b6001836002811115610e6657610e66612146565b03610ad1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166356d482f5858e610ea5856118dd565b866040518563ffffffff1660e01b8152600401610e20949392919061225d565b505050505b610ed4600160c955565b5050505050505050565b610ee6611697565b6108fc8282611403565b5f608e8383604051602001610f0793929190612302565b6040516020818303038152906040528051906020012090505b92915050565b610f2e6115f4565b5f818152609c602052604090205460ff16610f5c5760405163504570e360e01b815260040160405180910390fd5b7fcefe99cb2e240b5f07de5cd472a75fc6e345370b73588ab161cb25c4a259a8698103610f9c576040516319920afd60e11b815260040160405180910390fd5b5f818152609c6020526040808220805460ff191690555182917f8bd43de1250f58fe6ec9a78671a8b78dba70f0018656d157a3aeaabec389df3491a250565b604080517f4491f5ee91595f938885ef73c9a1fa8a6d14ff9b9dab4aa24b8802bbb9bfc1cc602082015290810184905263ffffffff8084166060830152821660808201525f9060a0016040516020818303038152906040528051906020012090509392505050565b5f61104d8161172e565b611055611759565b428363ffffffff16111561107c57604051635a119db560e11b815260040160405180910390fd5b60975463ffffffff620100009091048116908416116110ae5760405163037fa86b60e31b815260040160405180910390fd5b6110b9848484610fdb565b8560200135146110dc57604051638b56642d60e01b815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683375050609754825192935061ffff16918391505f9061111757611117612329565b61ffff90921660209283029190910190910152604051625f5e5d60e21b81525f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063017d79749061117c906098908b90879060040161245b565b6020604051808303815f875af1158015611198573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111bc91906121bd565b9050806111dc57604051633042041f60e21b815260040160405180910390fd5b6097805463ffffffff80881662010000810265ffffffff000019909316929092179092555f818152609a602090815260408083208054958a1663ffffffff1996871681179091558352609b825280832080549095168417909455828252609981528382208a9055898252609c9052828120805460ff19166001179055915188927f010dcbe0d1e019c93357711f7bb6287d543b7ff7de74f29df3fb5ecceec8d36991a3505061128b600160c955565b5050505050565b61129a611697565b6001600160a01b0381166112ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610782565b61091181611375565b6113106118f3565b606654801982198116146113375760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b81609861141082826125e8565b5050604051635ddb9b5b60e01b81525f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ddb9b5b90611460908690600401612679565b602060405180830381865afa15801561147b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061149f9190612181565b905063ffffffff8116156114c657604051636446f91760e01b815260040160405180910390fd5b604051636738c40b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636738c40b9061151a9086906001908790609d90600401612687565b5f604051808303815f87803b158015611531575f5ffd5b505af1158015611543573d5f5f3e3d5ffd5b505050507f3463431b09dfd43dec7349f8f24acfa753fe4cf40a26235402d213373df15856836040516115769190612679565b60405180910390a1505050565b61271061ffff821611156115aa576040516307336f0360e11b815260040160405180910390fd5b6097805461ffff191661ffff83169081179091556040519081527ff5d1836df8fcd7c1e54047e94ac8773d2855395603e2ef9ba5f5f16905f225929060200160405180910390a150565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611656573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061167a91906121bd565b610a4e57604051631d77d47760e21b815260040160405180910390fd5b6033546001600160a01b03163314610a4e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610782565b60605f6116fd836119a4565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b606654600160ff83161b908116036109115760405163840a48d560e01b815260040160405180910390fd5b600260c954036117ab5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610782565b600260c955565b604080518082019091525f8082526020820152604080518082019091525f808252602082018190529060606117e985870187612760565b9299919850965090945092505050565b5f815f0151826020015163ffffffff1660405160200161184492919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b604051602081830303815290604052610f2090612825565b6118a483838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508992508591505063ffffffff88166119cb565b61128b5760405163afa42ca760e01b815260040160405180910390fd5b6118c9611ac5565b81806020019051810190610f2091906128ad565b606081806020019051810190610f20919061295c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561194f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119739190612a5d565b6001600160a01b0316336001600160a01b031614610a4e5760405163794821ff60e01b815260040160405180910390fd5b5f60ff8216601f811115610f2057604051632cd44ac360e21b815260040160405180910390fd5b5f836119ea576040516329e7276760e11b815260040160405180910390fd5b836119f6868585611a00565b1495945050505050565b5f83515f03611a105750816109b6565b60208451611a1e9190612a78565b15611a3c576040516313717da960e21b815260040160405180910390fd5b8260205b85518111611a9d57611a53600285612a78565b5f03611a7457815f528086015160205260405f209150600284049350611a8b565b808601515f528160205260405f2091506002840493505b611a96602082612a97565b9050611a40565b508215611abd576040516363df817160e01b815260040160405180910390fd5b949350505050565b60405180608001604052805f81526020015f8152602001611af760405180604001604052805f81526020015f81525090565b8152602001606081525090565b6001600160a01b0381168114610911575f5ffd5b5f60408284031215611b28575f5ffd5b50919050565b803561ffff81168114610aea575f5ffd5b5f60a08284031215611b28575f5ffd5b5f5f5f5f5f60c08688031215611b63575f5ffd5b8535611b6e81611b04565b945060208601359350611b848760408801611b18565b9250611b9260808701611b2e565b915060a08601356001600160401b03811115611bac575f5ffd5b611bb888828901611b3f565b9150509295509295909350565b5f60208284031215611bd5575f5ffd5b5035919050565b63ffffffff81168114610911575f5ffd5b5f60208284031215611bfd575f5ffd5b81356109b681611bdc565b80516001600160a01b0316825260209081015163ffffffff16910152565b60408101610f208284611c08565b5f60208284031215611c44575f5ffd5b6109b682611b2e565b5f5f5f60608486031215611c5f575f5ffd5b833592506020840135611c7181611bdc565b91506040840135611c8181611bdc565b809150509250925092565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b0381118282101715611cc257611cc2611c8c565b60405290565b604051608081016001600160401b0381118282101715611cc257611cc2611c8c565b604051601f8201601f191681016001600160401b0381118282101715611d1257611d12611c8c565b604052919050565b5f6001600160401b03821115611d3257611d32611c8c565b5060051b60200190565b5f60208284031215611d4c575f5ffd5b81356001600160401b03811115611d61575f5ffd5b82018084036060811215611d73575f5ffd5b611d7b611ca0565b6040821215611d88575f5ffd5b611d90611ca0565b83358152602080850135908201528152604083013591506001600160401b03821115611dba575f5ffd5b818301925085601f840112611dcd575f5ffd5b82359150611de2611ddd83611d1a565b611cea565b8083825260208201915060208460051b860101935087841115611e03575f5ffd5b6020850194505b83851015611e25578435825260209485019490910190611e0a565b60208301525095945050505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215611e79575f5ffd5b813560ff811681146109b6575f5ffd5b803560038110610aea575f5ffd5b5f60208284031215611ea7575f5ffd5b6109b682611e89565b5f5f83601f840112611ec0575f5ffd5b5081356001600160401b03811115611ed6575f5ffd5b602083019150836020828501011115611eed575f5ffd5b9250929050565b5f5f5f5f5f5f5f60a0888a031215611f0a575f5ffd5b8735611f1581611bdc565b9650602088013595506040880135611f2c81611bdc565b945060608801356001600160401b03811115611f46575f5ffd5b611f528a828b01611eb0565b90955093505060808801356001600160401b03811115611f70575f5ffd5b611f7c8a828b01611eb0565b989b979a50959850939692959293505050565b5f5f60608385031215611fa0575f5ffd5b611faa8484611b18565b915060408301356001600160401b03811115611fc4575f5ffd5b611fd085828601611b3f565b9150509250929050565b5f5f60208385031215611feb575f5ffd5b82356001600160401b03811115612000575f5ffd5b61200c85828601611eb0565b90969095509350505050565b5f5f5f5f6080858703121561202b575f5ffd5b84356001600160401b03811115612040575f5ffd5b85016101208188031215612052575f5ffd5b935060208501359250604085013561206981611bdc565b9150606085013561207981611bdc565b939692955090935050565b5f60208284031215612094575f5ffd5b81356109b681611b04565b5f602082840312156120af575f5ffd5b5051919050565b5f8151808452602084019350602083015f5b828110156120e65781518652602095860195909101906001016120c8565b5093949350505050565b60208082528251805183830152015160408201525f6020830151606080840152611abd60808401826120b6565b60ff60f81b8360f81b1681525f82518060208501600185015e5f92016001019182525092915050565b634e487b7160e01b5f52602160045260245ffd5b60408101610f208284546001600160a01b038116825260a01c63ffffffff16602090910152565b5f60208284031215612191575f5ffd5b81516109b681611bdc565b606081016121aa8285611c08565b63ffffffff831660408301529392505050565b5f602082840312156121cd575f5ffd5b815180151581146109b6575f5ffd5b6121e68186611c08565b63ffffffff8416604082015260c06060820152825160c0820152602083015160e08201525f604084015161222861010084018280518252602090810151910152565b50606084015160a06101408401526122446101608401826120b6565b9150506122546080830184611c08565b95945050505050565b5f60c0820161226c8388611c08565b63ffffffff8616604084015260c0606084015280855180835260e08501915060e08160051b8601019250602087015f5b828110156122ed5786850360df19018452815180516001600160a01b031686526020908101516040918701829052906122d7908701826120b6565b955050602093840193919091019060010161229c565b50505050809150506122546080830184611c08565b60f884901b6001600160f81b0319168152818360018301375f910160010190815292915050565b634e487b7160e01b5f52603260045260245ffd5b5f5f8335601e19843603018112612352575f5ffd5b83016020810192503590506001600160401b03811115612370575f5ffd5b8060051b3603821315611eed575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f8235605e198336030181126123bd575f5ffd5b90910192915050565b8183525f6001600160fb1b038311156123dd575f5ffd5b8260051b80836020870137939093016020019392505050565b80358252602080820135908301525f612412604083018361233d565b606060408601526122546060860182846123c6565b5f8151808452602084019350602083015f5b828110156120e657815161ffff16865260209586019590910190600101612439565b61247e8185546001600160a01b038116825260a01c63ffffffff16602090910152565b608060408201525f6101a08201843561249681611bdc565b63ffffffff166080840152602085013560a0840152604085013560c0840152606085013560e0840152604060808601610100850137604060c086016101408501376124e561010086018661233d565b610120610180860152828184526101c0860190506101c08260051b8701019350825f5b838110156125c7578786036101bf1901835261252482866123a9565b803561252f81611bdc565b63ffffffff168752602081013536829003601e1901811261254e575f5ffd5b81016020810190356001600160401b03811115612569575f5ffd5b803603821315612577575f5ffd5b606060208a015261258c60608a018284612381565b91505061259c60408301836123a9565b915087810360408901526125b081836123f6565b975050506020928301929190910190600101612508565b505050505082810360608401526125de8185612427565b9695505050505050565b81356125f381611b04565b81546001600160a01b031981166001600160a01b03929092169182178355602084013561261f81611bdc565b6001600160c01b03199190911690911760a09190911b63ffffffff60a01b1617905550565b803561264f81611b04565b6001600160a01b03168252602081013561266881611bdc565b63ffffffff81166020840152505050565b60408101610f208284612644565b6126918186612644565b63ffffffff841660408281019190915260c06060808401829052853591840191909152602085013560e0840152908401356101008301528301356101208201525f6126df608085018561233d565b60a06101408501526126f6610160850182846123c6565b925050506122546080830184546001600160a01b038116825260a01c63ffffffff16602090910152565b5f60408284031215612730575f5ffd5b612738611ca0565b9050813561274581611b04565b8152602082013561275581611bdc565b602082015292915050565b5f5f5f5f60c08587031215612773575f5ffd5b61277d8686612720565b935061278b60408601611e89565b925061279a8660608701612720565b915060a08501356001600160401b038111156127b4575f5ffd5b8501601f810187136127c4575f5ffd5b80356001600160401b038111156127dd576127dd611c8c565b6127f0601f8201601f1916602001611cea565b818152886020838501011115612804575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b80516020808301519190811015611b28575f1960209190910360031b1b16919050565b5f82601f830112612857575f5ffd5b8151612865611ddd82611d1a565b8082825260208201915060208360051b860101925085831115612886575f5ffd5b602085015b838110156128a357805183526020928301920161288b565b5095945050505050565b5f602082840312156128bd575f5ffd5b81516001600160401b038111156128d2575f5ffd5b820180840360a08112156128e4575f5ffd5b6128ec611cc8565b82518152602080840151908201526040603f198301121561290b575f5ffd5b612913611ca0565b604084810151825260608501516020830152820152608083015191506001600160401b03821115612942575f5ffd5b61294e86838501612848565b606082015295945050505050565b5f6020828403121561296c575f5ffd5b81516001600160401b03811115612981575f5ffd5b8201601f81018413612991575f5ffd5b805161299f611ddd82611d1a565b8082825260208201915060208360051b8501019250868311156129c0575f5ffd5b602084015b83811015612a525780516001600160401b038111156129e2575f5ffd5b85016040818a03601f190112156129f7575f5ffd5b6129ff611ca0565b6020820151612a0d81611b04565b815260408201516001600160401b03811115612a27575f5ffd5b612a368b602083860101612848565b60208301525080855250506020830192506020810190506129c5565b509695505050505050565b5f60208284031215612a6d575f5ffd5b81516109b681611b04565b5f82612a9257634e487b7160e01b5f52601260045260245ffd5b500690565b80820180821115610f2057634e487b7160e01b5f52601160045260245ffdfea2646970667358221220383df0454ad9496b57e13a357e8f29ef958ab90c31374b06e0030e1fc9f1834164736f6c634300081b0033",
    "sourceMap": "490:16712:185:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1899:1243;;;;;;:::i;:::-;;:::i;:::-;;1867:53:175;;1916:4;1867:53;;;;;1677:4:336;1665:17;;;1647:36;;1635:2;1620:18;1867:53:175;;;;;;;;3762:401:189;;;;;;:::i;:::-;;:::i;10238:184:185:-;;;;;;:::i;:::-;10373:42;;;;10348:6;10373:42;;;:20;:42;;;;;;;;10238:184;;;;2475:10:336;2463:23;;;2445:42;;2433:2;2418:18;10238:184:185;2301:192:336;1037:94:186;;1091:40;1037:94;;;;;2644:25:336;;;2632:2;2617:18;1037:94:186;2498:177:336;9078:101:185;-1:-1:-1;;;;;;;;;;;;;;;;;9155:17:185;;;;;;;;9162:10;9155:17;-1:-1:-1;;;;;9155:17:185;;;;-1:-1:-1;;;9155:17:185;;;;;;;;9078:101;;;;;;;:::i;7628:146::-;;;;;;:::i;:::-;;:::i;10008:182::-;;;;;;:::i;:::-;10141:42;;;;10116:6;10141:42;;;:22;:42;;;;;;;;10008:182;8893:137;8997:25;;;;;;;8953:7;8979:44;;;:17;:44;;;;;;8893:137;;11267:140;;;;;;:::i;:::-;11348:4;11371:29;;;:12;:29;;;;;;;;;11267:140;;;;3730:14:336;;3723:22;3705:41;;3693:2;3678:18;11267:140:185;3565:187:336;9815:145:185;9927:25;;;;;;;;;9879:6;9904:49;;;:22;:49;;;;;;;9815:145;;663:177:186;;729:111;663:177;;11680:426:185;;;;;;:::i;:::-;;:::i;9648:119::-;9735:25;;;;;;;9648:119;;3037:250:175;;;;;;:::i;:::-;;:::i;1031:106:177:-;;;:::i;:::-;;;;;;;:::i;4199:85:189:-;;;:::i;4933:163::-;;;;;;:::i;:::-;5065:7;;5036:1;:10;;;;;;;;5065:14;;;5064:24;;4933:163;4810:87;4883:7;;4810:87;;1196:56:186;;1251:1;1196:56;;11455:177:185;;;;;;:::i;:::-;11587:37;;11551:4;11587:37;;;:17;:37;;;;;;;;;11574:51;;:12;:51;;;;;;;;;11455:177;9227:373;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8392:32:336;;;8374:51;;8362:2;8347:18;9227:373:185;8228:203:336;2064:101:20;;;:::i;10859:193:185:-;;;:::i;1430:57:186:-;;1486:1;1430:57;;1964:47:189;;;;;1441:85:20;1513:6;;-1:-1:-1;;;;;1513:6:20;1441:85;;4954:2556:185;;;;;;:::i;:::-;;:::i;8352:202::-;;;;;;:::i;:::-;;:::i;1218:52:175:-;;1266:4;1218:52;;4362:212;;;;;;:::i;:::-;;:::i;1688:67:186:-;;;;;11100:119:185;-1:-1:-1;;;;;;;;;;;;;;;;;11189:23:185;;;;;;;;11196:16;11189:23;-1:-1:-1;;;;;11189:23:185;;;;-1:-1:-1;;;11189:23:185;;;;;;;;11100:119;;1567:67:186;;;;;1875:45;;;;;;;;;;;;12006:6:336;11994:19;;;11976:38;;11964:2;11949:18;1875:45:186;11832:188:336;7822:482:185;;;;;;:::i;:::-;;:::i;10470:341::-;;;;;;:::i;:::-;;:::i;8672:173::-;;;;;;:::i;:::-;8801:37;;8775:7;8801:37;;;:17;:37;;;;;;;8672:173;3260:1646;;;;;;:::i;:::-;;:::i;2314:198:20:-;;;;;;:::i;:::-;;:::i;4320:454:189:-;;;;;;:::i;:::-;;:::i;885:39:186:-;;918:6;885:39;;1899:1243:185;3279:19:26;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:26;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:26;1713:19:34;:23;;;3387:66:26;;-1:-1:-1;3436:12:26;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:26;;13274:2:336;3325:201:26;;;13256:21:336;13313:2;13293:18;;;13286:30;13352:34;13332:18;;;13325:62;-1:-1:-1;;;13403:18:336;;;13396:44;13457:19;;3325:201:26;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:26;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:26;;;;;3562:65;2167:26:185::1;2186:6;2167:18;:26::i;:::-;2203:37;2220:19;2203:16;:37::i;:::-;2310:16;:68:::0;;-1:-1:-1;;;;;;2388:38:185;2421:4:::1;2388:38;::::0;;2437:50:::1;2454:17:::0;2473:13;2437:16:::1;:50::i;:::-;2497:69;2533:32;2497:35;:69::i;:::-;1091:40:186;2849:48:185::0;:78;;;:48:::1;2937:41:::0;:12:::1;2849:48;2937:41:::0;;:48;;-1:-1:-1;;2937:48:185::1;1251:1:186;2937:48:185;::::0;;3084:25:::1;:51:::0;;3119:15:::1;2849:48;3084:51;::::0;::::1;-1:-1:-1::0;;3084:51:185;;::::1;;::::0;;3647:99:26;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:26;;;3721:14;;-1:-1:-1;1647:36:336;;3721:14:26;;1635:2:336;1620:18;3721:14:26;;;;;;;3647:99;3269:483;1899:1243:185;;;;;:::o;3762:401:189:-;2390:18;:16;:18::i;:::-;3876:7:::1;::::0;4025:37;;::::1;4024:62:::0;::::1;4016:97;;;;-1:-1:-1::0;;;4016:97:189::1;;;;;;;;;;;;4123:33;4140:15;4123:16;:33::i;:::-;3836:327;3762:401:::0;:::o;7628:146:185:-;1334:13:20;:11;:13::i;:::-;7727:40:185::1;7763:3;7727:35;:40::i;:::-;7628:146:::0;:::o;11680:426::-;11856:7;11875:19;11897:90;11929:15;11946:18;11966:20;11897:31;:90::i;:::-;12004:95;;-1:-1:-1;;;12004:95:185;;1251:1:186;12004:95:185;;;13858:42:336;13916:18;;;13909:34;;;11875:112:185;;-1:-1:-1;12004:24:185;-1:-1:-1;;;;;12004:51:185;;;;13831:18:336;;12004:95:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11997:102;;;11680:426;;;;;;:::o;3037:250:175:-;3176:7;1266:4;3265:12;3254:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3254:24:175;;;;;;;;;;3212:67;;;3254:24;3212:67;;:::i;:::-;;;;;;;;;;;;;3202:78;;;;;;3195:85;;3037:250;;;:::o;1031:106:177:-;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;4199:85:189:-;2390:18;:16;:18::i;:::-;4249:28:::1;-1:-1:-1::0;;4249:16:189::1;:28::i;:::-;4199:85::o:0;9227:373:185:-;9315:7;9351:15;9338:9;:28;;;;;;;;:::i;:::-;;9334:260;;-1:-1:-1;9397:24:185;;9227:373;-1:-1:-1;9227:373:185:o;9334:260::-;9456:15;9443:9;:28;;;;;;;;:::i;:::-;;9439:155;;-1:-1:-1;9502:24:185;;9227:373;-1:-1:-1;9227:373:185:o;9439:155::-;9565:18;;-1:-1:-1;;;9565:18:185;;;;;;;;;;;9439:155;9227:373;;;:::o;2064:101:20:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;10859:193:185:-:0;10949:96;;-1:-1:-1;;;10949:96:185;;10924:6;;-1:-1:-1;;;;;10982:24:185;10949:84;;;;:96;;11034:10;;10949:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4954:2556::-;580:1:186;2960:30:189;2984:5;2960:23;:30::i;:::-;2505:21:27::1;:19;:21::i;:::-;5257:30:185::2;5301:19;5334:42;5390:30;5433:45;5459:18;;5433:25;:45::i;:::-;5557:29;::::0;;;:12:::2;:29;::::0;;;;;5243:235;;-1:-1:-1;5243:235:185;;-1:-1:-1;5243:235:185;-1:-1:-1;5243:235:185;-1:-1:-1;5557:29:185::2;;5549:53;;;;-1:-1:-1::0;;;5549:53:185::2;;;;;;;;;;;;5705:14;::::0;;;;::::2;::::0;;;:10:::2;:14:::0;-1:-1:-1;;;;;5705:14:185;::::2;::::0;;-1:-1:-1;;;5705:14:185;::::2;;;;::::0;::::2;::::0;:16:::2;::::0;:14:::2;:16::i;:::-;5684:17;:11;:15;:17::i;:::-;:37:::0;5676:68:::2;;;;-1:-1:-1::0;;;5676:68:185::2;;;;;;;;;;;;5996:33;6019:9;5996:22;:33::i;:::-;-1:-1:-1::0;;;;;5971:83:185::2;;6072:11;6085:18;5971:146;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5954:205;;;6142:7;;;;;;5954:205;6346:33;6369:9;6346:22;:33::i;:::-;-1:-1:-1::0;;;;;6321:84:185::2;;6406:11;6321:97;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6284:134;;:18;:134;;;6263:208;;;;-1:-1:-1::0;;;6263:208:185::2;;;;;;;;;;;;6567:37;::::0;::::2;;::::0;;;:17:::2;:37;::::0;;;;;:56;::::2;6559:91;;;;-1:-1:-1::0;;;6559:91:185::2;;;;;;;;;;;;6705:235;6759:15;6806:16;6843:5;;6883:46;6910:18;;6883:26;:46::i;:::-;6705:22;:235::i;:::-;7005:15;6992:9;:28;;;;;;;;:::i;:::-;::::0;6988:516:::2;;7036:24;-1:-1:-1::0;;;;;7036:44:185::2;;7098:11;7111:18;7131:40;7153:17;7131:21;:40::i;:::-;7173:17;7036:168;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6988:516;;;7238:15;7225:9;:28;;;;;;;;:::i;:::-;::::0;7221:283:::2;;7269:24;-1:-1:-1::0;;;;;7269:44:185::2;;7331:11;7344:18;7364:40;7386:17;7364:21;:40::i;:::-;7406:17;7269:168;;;;;;;;;;;;;;;;;;:::i;7221:283::-;5233:2277;;;;2536:1:27;2547:20:::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;4954:2556:185::0;;;;;;;;:::o;8352:202::-;1334:13:20;:11;:13::i;:::-;8505:42:185::1;8522:9;8533:13;8505:16;:42::i;4362:212:175:-:0;4468:7;1916:4;4547:18;;4504:62;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4494:73;;;;;;4487:80;;4362:212;;;;;:::o;7822:482:185:-;2390:18:189;:16;:18::i;:::-;7986:29:185::1;::::0;;;:12:::1;:29;::::0;;;;;::::1;;7978:53;;;;-1:-1:-1::0;;;7978:53:185::1;;;;;;;;;;;;1091:40:186;8122:15:185;:46:::0;8114:85:::1;;;;-1:-1:-1::0;;;8114:85:185::1;;;;;;;;;;;;8242:5;8210:29:::0;;;:12:::1;:29;::::0;;;;;:37;;-1:-1:-1;;8210:37:185::1;::::0;;8262:35;8223:15;;8262:35:::1;::::0;::::1;7822:482:::0;:::o;10470:341::-;10692:102;;;729:111:186;10692:102:185;;;20269:25:336;20310:18;;;20303:34;;;20385:10;20373:23;;;20353:18;;;20346:51;20433:23;;20413:18;;;20406:51;10643:7:185;;20241:19:336;;10692:102:185;;;;;;;;;;;;10669:135;;;;;;10662:142;;10470:341;;;;;:::o;3260:1646::-;444:1:186;2960:30:189;2984:5;2960:23;:30::i;:::-;2505:21:27::1;:19;:21::i;:::-;3680:15:185::2;3658:18;:37;;;;3650:73;;;;-1:-1:-1::0;;;3650:73:185::2;;;;;;;;;;;;3762:25;::::0;::::2;::::0;;;::::2;::::0;::::2;3741:46:::0;;::::2;;3733:79;;;;-1:-1:-1::0;;;3733:79:185::2;;;;;;;;;;;;3894:90;3926:15;3943:18;3963:20;3894:31;:90::i;:::-;3843:19;:31;;;:141;3822:206;;;;-1:-1:-1::0;;;3822:206:185::2;;;;;;;;;;;;4154:15;::::0;;4167:1:::2;4154:15:::0;;;;;::::2;::::0;;;4110:41:::2;::::0;4154:15:::2;::::0;;::::2;::::0;;::::2;::::0;::::2;-1:-1:-1::0;;4210:31:185::2;::::0;4179:28;;;;-1:-1:-1;4210:31:185::2;;::::0;4179:28;;-1:-1:-1;4210:31:185::2;::::0;4179:28:::2;;;;:::i;:::-;:62;::::0;;::::2;:28;::::0;;::::2;::::0;;;;;;;:62;4266:134:::2;::::0;-1:-1:-1;;;4266:134:185;;4251:12:::2;::::0;-1:-1:-1;;;;;4266:24:185::2;:52;::::0;::::2;::::0;:134:::2;::::0;4332:10:::2;::::0;4344:19;;4365:25;;4266:134:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4251:149;;4419:7;4411:38;;;;-1:-1:-1::0;;;4411:38:185::2;;;;;;;;;;;;4523:25;:46:::0;;::::2;::::0;;::::2;::::0;;::::2;-1:-1:-1::0;;4523:46:185;;::::2;::::0;;;::::2;::::0;;;-1:-1:-1;4579:42:185;;;:22:::2;:42;::::0;;;;;;;:65;;;;::::2;-1:-1:-1::0;;4579:65:185;;::::2;::::0;::::2;::::0;;;4654:42;;:20:::2;:42:::0;;;;;:63;;;;::::2;::::0;::::2;::::0;;;4727:37;;;:17:::2;:37:::0;;;;;:55;;;4792:29;;;:12:::2;:29:::0;;;;;:36;;-1:-1:-1;;4792:36:185::2;-1:-1:-1::0;4792:36:185::2;::::0;;4844:55;;4767:15;;4844:55:::2;::::0;::::2;3525:1381;;2547:20:27::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;3260:1646:185::0;;;;;:::o;2314:198:20:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:20;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:20;;26170:2:336;2394:73:20::1;::::0;::::1;26152:21:336::0;26209:2;26189:18;;;26182:30;26248:34;26228:18;;;26221:62;-1:-1:-1;;;26299:18:336;;;26292:36;26345:19;;2394:73:20::1;25968:402:336::0;2394:73:20::1;2477:28;2496:8;2477:18;:28::i;4320:454:189:-:0;2558:20;:18;:20::i;:::-;4438:7:::1;::::0;4632:20;::::1;4609:16:::0;::::1;4583:43:::0;::::1;4582:71;4574:106;;;;-1:-1:-1::0;;;4574:106:189::1;;;;;;;;;;;;4690:7;:25:::0;;;4730:37:::1;::::0;2644:25:336;;;4739:10:189::1;::::0;4730:37:::1;::::0;2632:2:336;2617:18;4730:37:189::1;;;;;;;4398:376;4320:454:::0;:::o;2666:187:20:-;2758:6;;;-1:-1:-1;;;;;2774:17:20;;;-1:-1:-1;;;;;;2774:17:20;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;5200:157:189:-;5281:7;:22;;;5318:32;;2644:25:336;;;5325:10:189;;5318:32;;2632:2:336;2617:18;5318:32:189;;;;;;;5200:157;:::o;14680:655:185:-;14844:9;14831:10;:22;14844:9;14831:10;:22;:::i;:::-;-1:-1:-1;;14956:60:185;;-1:-1:-1;;;14956:60:185;;14928:25;;-1:-1:-1;;;;;14956:24:185;:49;;;;:60;;15006:9;;14956:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14928:88;-1:-1:-1;15034:23:185;;;;15026:52;;;;-1:-1:-1;;;15026:52:185;;;;;;;;;;;;15144:141;;-1:-1:-1;;;15144:141:185;;-1:-1:-1;;;;;15144:24:185;:44;;;;:141;;15202:9;;1251:1:186;;15244:13:185;;15259:16;;15144:141;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15301:27;15318:9;15301:27;;;;;;:::i;:::-;;;;;;;;14792:543;14680:655;;:::o;13440:257::-;918:6:186;13538:14:185;;;;;13530:55;;;;-1:-1:-1;;;13530:55:185;;;;;;;;;;;;13595:31;:37;;-1:-1:-1;;13595:37:185;;;;;;;;;;13647:43;;11976:38:336;;;13647:43:185;;11964:2:336;11949:18;13647:43:185;;;;;;;13440:257;:::o;3014:117:189:-;3074:35;;-1:-1:-1;;;3074:35:189;;3098:10;3074:35;;;8374:51:336;3074:14:189;-1:-1:-1;;;;;3074:23:189;;;;8347:18:336;;3074:35:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3066:58;;;;-1:-1:-1;;;3066:58:189;;;;;;;;;;;1599:130:20;1513:6;;-1:-1:-1;;;;;1513:6:20;929:10:35;1662:23:20;1654:68;;;;-1:-1:-1;;;1654:68:20;;29068:2:336;1654:68:20;;;29050:21:336;;;29087:18;;;29080:30;29146:34;29126:18;;;29119:62;29198:18;;1654:68:20;28866:356:336;2081:405:37;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:37;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:37;;;-1:-1:-1;2438:4:37;2429:14;;2422:28;;;;-1:-1:-1;2393:16:37;2081:405::o;3380:133:189:-;5065:7;;5036:1;:10;;;;5065:14;;;5064:24;3464:42;;;;-1:-1:-1;;;3464:42:189;;;;;;;;;;;2580:287:27;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:27;;29429:2:336;2704:63:27;;;29411:21:336;29468:2;29448:18;;;29441:30;29507:33;29487:18;;;29480:61;29558:18;;2704:63:27;29227:355:336;2704:63:27;1830:1;2842:7;:18;2580:287::o;15819:484:185:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;16002:19:185;-1:-1:-1;;;;;;;;;16002:19:185;16089:30;16219:77;;;;16230:13;16219:77;:::i;:::-;16144:152;;;;-1:-1:-1;16144:152:185;-1:-1:-1;16144:152:185;;-1:-1:-1;15819:484:185;-1:-1:-1;;;15819:484:185:o;399:154:171:-;472:7;523:2;:6;;;538:2;:5;;;531:13;;506:39;;;;;;;;31330:2:336;31326:15;;;;-1:-1:-1;;31322:53:336;31310:66;;31432:3;31410:16;-1:-1:-1;;;;;;31406:59:336;31401:2;31392:12;;31385:81;31491:2;31482:12;;31155:345;506:39:171;;;;;;;;;;;;;498:48;;;:::i;12713:555:185:-;13015:197;13069:5;;13015:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13098:15:185;;-1:-1:-1;13137:19:185;;-1:-1:-1;;13015:197:185;;;:28;:197::i;:::-;12994:267;;;;-1:-1:-1;;;12994:267:185;;;;;;;;;;;16534:222;16642:27;;:::i;:::-;16699:25;16688:61;;;;;;;;;;;;:::i;16986:214::-;17091:26;17147:22;17136:57;;;;;;;;;;;;:::i;3137:125:189:-;3213:14;-1:-1:-1;;;;;3213:23:189;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3199:39:189;:10;-1:-1:-1;;;;;3199:39:189;;3191:64;;;;-1:-1:-1;;;3191:64:189;;;;;;;;;;;2558:245:37;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:37;;;;;;;;;;;2413:290:170;2568:4;2592;2584:40;;;;-1:-1:-1;;;2584:40:170;;;;;;;;;;;;2692:4;2641:47;2669:5;2676:4;2682:5;2641:27;:47::i;:::-;:55;;2413:290;-1:-1:-1;;;;;2413:290:170:o;3355:1247::-;3494:7;3517:5;:12;3533:1;3517:17;3513:59;;-1:-1:-1;3557:4:170;3550:11;;3513:59;3605:2;3590:5;:12;:17;;;;:::i;:::-;:22;3582:53;;;;-1:-1:-1;;;3582:53:170;;;;;;;;;;;;3669:4;3700:2;3683:771;3709:5;:12;3704:1;:17;3683:771;;3750:9;3758:1;3750:5;:9;:::i;:::-;3763:1;3750:14;3746:698;;3901:12;3895:4;3888:26;3965:1;3958:5;3954:13;3948:20;3942:4;3935:34;4022:4;4016;4006:21;3990:37;;4068:1;4061:5;4057:13;4048:22;;3746:698;;;4260:1;4253:5;4249:13;4243:20;4237:4;4230:34;4298:12;4292:4;4285:26;4364:4;4358;4348:21;4332:37;;4410:1;4403:5;4399:13;4390:22;;3746:698;3723:7;3728:2;3723:7;;:::i;:::-;;;3683:771;;;-1:-1:-1;4538:10:170;;4530:35;;;;-1:-1:-1;;;4530:35:170;;;;;;;;;;;;4583:12;3355:1247;-1:-1:-1;;;;3355:1247:170:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:336:-;-1:-1:-1;;;;;89:31:336;;79:42;;69:70;;135:1;132;125:12;150:159;214:5;259:2;250:6;245:3;241:16;237:25;234:45;;;275:1;272;265:12;234:45;-1:-1:-1;297:6:336;150:159;-1:-1:-1;150:159:336:o;314:::-;381:20;;441:6;430:18;;420:29;;410:57;;463:1;460;453:12;478:169;551:5;596:3;587:6;582:3;578:16;574:26;571:46;;;613:1;610;603:12;652:848;819:6;827;835;843;851;904:3;892:9;883:7;879:23;875:33;872:53;;;921:1;918;911:12;872:53;960:9;947:23;979:31;1004:5;979:31;:::i;:::-;1029:5;-1:-1:-1;1107:2:336;1092:18;;1079:32;;-1:-1:-1;1156:67:336;1215:7;1210:2;1195:18;;1156:67;:::i;:::-;1146:77;;1242:38;1275:3;1264:9;1260:19;1242:38;:::i;:::-;1232:48;;1331:3;1320:9;1316:19;1303:33;-1:-1:-1;;;;;1351:6:336;1348:30;1345:50;;;1391:1;1388;1381:12;1345:50;1414:80;1486:7;1477:6;1466:9;1462:22;1414:80;:::i;:::-;1404:90;;;652:848;;;;;;;;:::o;1694:226::-;1753:6;1806:2;1794:9;1785:7;1781:23;1777:32;1774:52;;;1822:1;1819;1812:12;1774:52;-1:-1:-1;1867:23:336;;1694:226;-1:-1:-1;1694:226:336:o;1925:121::-;2010:10;2003:5;1999:22;1992:5;1989:33;1979:61;;2036:1;2033;2026:12;2051:245;2109:6;2162:2;2150:9;2141:7;2137:23;2133:32;2130:52;;;2178:1;2175;2168:12;2130:52;2217:9;2204:23;2236:30;2260:5;2236:30;:::i;2680:195::-;2761:12;;-1:-1:-1;;;;;2757:38:336;2745:51;;2849:4;2838:16;;;2832:23;2857:10;2828:40;2812:14;;2805:64;2680:195::o;2880:260::-;3074:2;3059:18;;3086:48;3063:9;3116:6;3086:48;:::i;3145:184::-;3203:6;3256:2;3244:9;3235:7;3231:23;3227:32;3224:52;;;3272:1;3269;3262:12;3224:52;3295:28;3313:9;3295:28;:::i;3757:504::-;3832:6;3840;3848;3901:2;3889:9;3880:7;3876:23;3872:32;3869:52;;;3917:1;3914;3907:12;3869:52;3962:23;;;-1:-1:-1;4061:2:336;4046:18;;4033:32;4074;4033;4074;:::i;:::-;4125:7;-1:-1:-1;4184:2:336;4169:18;;4156:32;4197;4156;4197;:::i;:::-;4248:7;4238:17;;;3757:504;;;;;:::o;4266:127::-;4327:10;4322:3;4318:20;4315:1;4308:31;4358:4;4355:1;4348:15;4382:4;4379:1;4372:15;4398:257;4470:4;4464:11;;;4502:17;;-1:-1:-1;;;;;4534:34:336;;4570:22;;;4531:62;4528:88;;;4596:18;;:::i;:::-;4632:4;4625:24;4398:257;:::o;4660:253::-;4732:2;4726:9;4774:4;4762:17;;-1:-1:-1;;;;;4794:34:336;;4830:22;;;4791:62;4788:88;;;4856:18;;:::i;4918:275::-;4989:2;4983:9;5054:2;5035:13;;-1:-1:-1;;5031:27:336;5019:40;;-1:-1:-1;;;;;5074:34:336;;5110:22;;;5071:62;5068:88;;;5136:18;;:::i;:::-;5172:2;5165:22;4918:275;;-1:-1:-1;4918:275:336:o;5198:183::-;5258:4;-1:-1:-1;;;;;5283:6:336;5280:30;5277:56;;;5313:18;;:::i;:::-;-1:-1:-1;5358:1:336;5354:14;5370:4;5350:25;;5198:183::o;5386:1590::-;5481:6;5534:2;5522:9;5513:7;5509:23;5505:32;5502:52;;;5550:1;5547;5540:12;5502:52;5590:9;5577:23;-1:-1:-1;;;;;5615:6:336;5612:30;5609:50;;;5655:1;5652;5645:12;5609:50;5678:22;;5719:16;;;5755:4;5747:13;;5744:33;;;5773:1;5770;5763:12;5744:33;5799:22;;:::i;:::-;5841:4;5837:2;5833:13;5830:33;;;5859:1;5856;5849:12;5830:33;5887:22;;:::i;:::-;5954:16;;5979:24;;6069:2;6061:11;;;6048:25;6089:16;;;6082:33;6124:22;;6192:4;6184:13;;6171:27;;-1:-1:-1;;;;;;6210:32:336;;6207:52;;;6255:1;6252;6245:12;6207:52;6286:8;6282:2;6278:17;6268:27;;6333:7;6326:4;6322:2;6318:13;6314:27;6304:55;;6355:1;6352;6345:12;6304:55;6395:2;6382:16;6368:30;;6418:64;6434:47;6474:6;6434:47;:::i;:::-;6418:64;:::i;:::-;6504:3;6528:6;6523:3;6516:19;6560:2;6555:3;6551:12;6544:19;;6615:2;6605:6;6602:1;6598:14;6594:2;6590:23;6586:32;6572:46;;6641:7;6633:6;6630:19;6627:39;;;6662:1;6659;6652:12;6627:39;6694:2;6690;6686:11;6675:22;;6706:202;6722:6;6717:3;6714:15;6706:202;;;6816:17;;6846:20;;6895:2;6739:12;;;;6886;;;;6706:202;;;6935:2;6924:14;;6917:29;-1:-1:-1;6928:5:336;5386:1590;-1:-1:-1;;;;;5386:1590:336:o;6981:418::-;7130:2;7119:9;7112:21;7093:4;7162:6;7156:13;7205:6;7200:2;7189:9;7185:18;7178:34;7264:6;7259:2;7251:6;7247:15;7242:2;7231:9;7227:18;7221:50;7320:1;7315:2;7306:6;7295:9;7291:22;7287:31;7280:42;7390:2;7383;7379:7;7374:2;7366:6;7362:15;7358:29;7347:9;7343:45;7339:54;7331:62;;;6981:418;;;;:::o;7404:269::-;7461:6;7514:2;7502:9;7493:7;7489:23;7485:32;7482:52;;;7530:1;7527;7520:12;7482:52;7569:9;7556:23;7619:4;7612:5;7608:16;7601:5;7598:27;7588:55;;7639:1;7636;7629:12;7860:150;7935:20;;7984:1;7974:12;;7964:40;;8000:1;7997;7990:12;8015:208;8089:6;8142:2;8130:9;8121:7;8117:23;8113:32;8110:52;;;8158:1;8155;8148:12;8110:52;8181:36;8207:9;8181:36;:::i;8669:347::-;8720:8;8730:6;8784:3;8777:4;8769:6;8765:17;8761:27;8751:55;;8802:1;8799;8792:12;8751:55;-1:-1:-1;8825:20:336;;-1:-1:-1;;;;;8857:30:336;;8854:50;;;8900:1;8897;8890:12;8854:50;8937:4;8929:6;8925:17;8913:29;;8989:3;8982:4;8973:6;8965;8961:19;8957:30;8954:39;8951:59;;;9006:1;9003;8996:12;8951:59;8669:347;;;;;:::o;9021:1106::-;9136:6;9144;9152;9160;9168;9176;9184;9237:3;9225:9;9216:7;9212:23;9208:33;9205:53;;;9254:1;9251;9244:12;9205:53;9293:9;9280:23;9312:30;9336:5;9312:30;:::i;:::-;9361:5;-1:-1:-1;9439:2:336;9424:18;;9411:32;;-1:-1:-1;9521:2:336;9506:18;;9493:32;9534;9493;9534;:::i;:::-;9585:7;-1:-1:-1;9643:2:336;9628:18;;9615:32;-1:-1:-1;;;;;9659:30:336;;9656:50;;;9702:1;9699;9692:12;9656:50;9741:58;9791:7;9782:6;9771:9;9767:22;9741:58;:::i;:::-;9818:8;;-1:-1:-1;9715:84:336;-1:-1:-1;;9906:3:336;9891:19;;9878:33;-1:-1:-1;;;;;9923:32:336;;9920:52;;;9968:1;9965;9958:12;9920:52;10007:60;10059:7;10048:8;10037:9;10033:24;10007:60;:::i;:::-;9021:1106;;;;-1:-1:-1;9021:1106:336;;-1:-1:-1;9021:1106:336;;;;9981:86;;-1:-1:-1;;;9021:1106:336:o;10132:518::-;10273:6;10281;10334:2;10322:9;10313:7;10309:23;10305:32;10302:52;;;10350:1;10347;10340:12;10302:52;10373:58;10423:7;10412:9;10373:58;:::i;:::-;10363:68;;10482:2;10471:9;10467:18;10454:32;-1:-1:-1;;;;;10501:6:336;10498:30;10495:50;;;10541:1;10538;10531:12;10495:50;10564:80;10636:7;10627:6;10616:9;10612:22;10564:80;:::i;:::-;10554:90;;;10132:518;;;;;:::o;10655:409::-;10725:6;10733;10786:2;10774:9;10765:7;10761:23;10757:32;10754:52;;;10802:1;10799;10792:12;10754:52;10842:9;10829:23;-1:-1:-1;;;;;10867:6:336;10864:30;10861:50;;;10907:1;10904;10897:12;10861:50;10946:58;10996:7;10987:6;10976:9;10972:22;10946:58;:::i;:::-;11023:8;;10920:84;;-1:-1:-1;10655:409:336;-1:-1:-1;;;;10655:409:336:o;12025:790::-;12146:6;12154;12162;12170;12223:3;12211:9;12202:7;12198:23;12194:33;12191:53;;;12240:1;12237;12230:12;12191:53;12280:9;12267:23;-1:-1:-1;;;;;12305:6:336;12302:30;12299:50;;;12345:1;12342;12335:12;12299:50;12368:22;;12424:3;12406:16;;;12402:26;12399:46;;;12441:1;12438;12431:12;12399:46;12464:2;-1:-1:-1;12535:2:336;12520:18;;12507:32;;-1:-1:-1;12615:2:336;12600:18;;12587:32;12628;12587;12628;:::i;:::-;12679:7;-1:-1:-1;12738:2:336;12723:18;;12710:32;12751;12710;12751;:::i;:::-;12025:790;;;;-1:-1:-1;12025:790:336;;-1:-1:-1;;12025:790:336:o;12820:247::-;12879:6;12932:2;12920:9;12911:7;12907:23;12903:32;12900:52;;;12948:1;12945;12938:12;12900:52;12987:9;12974:23;13006:31;13031:5;13006:31;:::i;13954:230::-;14024:6;14077:2;14065:9;14056:7;14052:23;14048:32;14045:52;;;14093:1;14090;14083:12;14045:52;-1:-1:-1;14138:16:336;;13954:230;-1:-1:-1;13954:230:336:o;14342:420::-;14395:3;14433:5;14427:12;14460:6;14455:3;14448:19;14492:4;14487:3;14483:14;14476:21;;14531:4;14524:5;14520:16;14554:1;14564:173;14578:6;14575:1;14572:13;14564:173;;;14639:13;;14627:26;;14682:4;14673:14;;;;14710:17;;;;14600:1;14593:9;14564:173;;;-1:-1:-1;14753:3:336;;14342:420;-1:-1:-1;;;;14342:420:336:o;14767:453::-;14968:2;14950:21;;;15006:13;;14262:12;;15021:18;;;14250:25;14313:16;14307:23;14291:14;;;14284:47;14931:4;15087:2;15079:6;15075:15;15069:22;15129:4;15122;15111:9;15107:20;15100:34;15151:63;15209:3;15198:9;15194:19;15180:12;15151:63;:::i;15225:399::-;15439:3;15434;15430:13;15421:6;15416:3;15412:16;15408:36;15403:3;15396:49;15378:3;15474:6;15468:13;15528:6;15521:4;15513:6;15509:17;15505:1;15500:3;15496:11;15490:45;15598:1;15558:16;;15576:1;15554:24;15587:13;;;-1:-1:-1;15554:24:336;15225:399;-1:-1:-1;;15225:399:336:o;15629:127::-;15690:10;15685:3;15681:20;15678:1;15671:31;15721:4;15718:1;15711:15;15745:4;15742:1;15735:15;16000:265;16191:2;16176:18;;16203:56;16180:9;16241:6;15851:12;-1:-1:-1;;;;;15884:35:336;;15872:48;;15907:3;15956:19;15977:10;15952:36;15945:4;15936:14;;;15929:60;15761:234;16270:249;16339:6;16392:2;16380:9;16371:7;16367:23;16363:32;16360:52;;;16408:1;16405;16398:12;16360:52;16440:9;16434:16;16459:30;16483:5;16459:30;:::i;16524:346::-;16744:2;16729:18;;16756:48;16733:9;16786:6;16756:48;:::i;:::-;16852:10;16844:6;16840:23;16835:2;16824:9;16820:18;16813:51;16524:346;;;;;:::o;16875:277::-;16942:6;16995:2;16983:9;16974:7;16970:23;16966:32;16963:52;;;17011:1;17008;17001:12;16963:52;17043:9;17037:16;17096:5;17089:13;17082:21;17075:5;17072:32;17062:60;;17118:1;17115;17108:12;17157:1035;17560:48;17598:9;17590:6;17560:48;:::i;:::-;17656:10;17648:6;17644:23;17639:2;17628:9;17624:18;17617:51;17704:3;17699:2;17688:9;17684:18;17677:31;17751:6;17745:13;17739:3;17728:9;17724:19;17717:42;17814:4;17806:6;17802:17;17796:24;17790:3;17779:9;17775:19;17768:53;17541:4;17868:2;17860:6;17856:15;17850:22;17881:60;17936:3;17925:9;17921:19;17907:12;14262;;14250:25;;14324:4;14313:16;;;14307:23;14291:14;;14284:47;14189:148;17881:60;;17990:2;17982:6;17978:15;17972:22;18031:4;18025:3;18014:9;18010:19;18003:33;18053:65;18113:3;18102:9;18098:19;18082:14;18053:65;:::i;:::-;18045:73;;;18127:59;18180:4;18169:9;18165:20;18157:6;18127:59;:::i;:::-;17157:1035;;;;;;;:::o;18197:1466::-;18625:4;18673:3;18662:9;18658:19;18686:48;18724:9;18716:6;18686:48;:::i;:::-;18782:10;18774:6;18770:23;18765:2;18754:9;18750:18;18743:51;18830:3;18825:2;18814:9;18810:18;18803:31;18854:6;18889;18883:13;18920:6;18912;18905:22;18958:3;18947:9;18943:19;18936:26;;19021:3;19011:6;19008:1;19004:14;18993:9;18989:30;18985:40;18971:54;;19060:4;19052:6;19048:17;19083:1;19093:474;19107:6;19104:1;19101:13;19093:474;;;19172:22;;;-1:-1:-1;;19168:37:336;19156:50;;19229:13;;19274:9;;-1:-1:-1;;;;;19270:35:336;19255:51;;19353:4;19345:13;;;19339:20;19398:2;19379:17;;;19372:29;;;19339:20;19424:59;;19467:15;;19339:20;19424:59;:::i;:::-;19414:69;-1:-1:-1;;19518:4:336;19543:14;;;;19506:17;;;;;19129:1;19122:9;19093:474;;;19097:3;;;;19584:6;19576:14;;;19599:58;19652:3;19641:9;19637:19;19629:6;19599:58;:::i;19668:369::-;19887:3;19865:16;;;-1:-1:-1;;;;;;19861:36:336;19849:49;;19941:6;19933;19929:1;19920:11;;19907:41;19831:3;19971:16;;19989:1;19967:24;20000:13;;;19967:24;19668:369;-1:-1:-1;;19668:369:336:o;20468:127::-;20529:10;20524:3;20520:20;20517:1;20510:31;20560:4;20557:1;20550:15;20584:4;20581:1;20574:15;20880:553;20983:5;20990:6;21050:3;21037:17;21136:2;21132:7;21121:8;21105:14;21101:29;21097:43;21077:18;21073:68;21063:96;;21155:1;21152;21145:12;21063:96;21183:33;;21287:4;21274:18;;;-1:-1:-1;21235:21:336;;-1:-1:-1;;;;;;21304:30:336;;21301:50;;;21347:1;21344;21337:12;21301:50;21401:6;21398:1;21394:14;21378;21374:35;21367:5;21363:47;21360:67;;;21423:1;21420;21413:12;21438:266;21526:6;21521:3;21514:19;21578:6;21571:5;21564:4;21559:3;21555:14;21542:43;-1:-1:-1;21630:1:336;21605:16;;;21623:4;21601:27;;;21594:38;;;;21686:2;21665:15;;;-1:-1:-1;;21661:29:336;21652:39;;;21648:50;;21438:266::o;21709:302::-;21786:5;21845:3;21832:17;21931:2;21927:7;21916:8;21900:14;21896:29;21892:43;21872:18;21868:68;21858:96;;21950:1;21947;21940:12;21858:96;21972:33;;;;21709:302;-1:-1:-1;;21709:302:336:o;22016:311::-;22104:19;;;22086:3;-1:-1:-1;;;;;22135:31:336;;22132:51;;;22179:1;22176;22169:12;22132:51;22215:6;22212:1;22208:14;22267:8;22260:5;22253:4;22248:3;22244:14;22231:45;22296:18;;;;22316:4;22292:29;;22016:311;-1:-1:-1;;;22016:311:336:o;22332:416::-;20706:19;;20734:20;;20823:4;20812:16;;;20799:30;20845:14;;;20838:31;22401:3;22508:100;22602:4;22595:5;22591:16;22584:5;22508:100;:::i;:::-;22640:4;22633;22628:3;22624:14;22617:28;22661:81;22736:4;22731:3;22727:14;22713:12;22699;22661:81;:::i;22753:432::-;22805:3;22843:5;22837:12;22870:6;22865:3;22858:19;22902:4;22897:3;22893:14;22886:21;;22941:4;22934:5;22930:16;22964:1;22974:186;22988:6;22985:1;22982:13;22974:186;;;23053:13;;23068:6;23049:26;23037:39;;23105:4;23096:14;;;;23133:17;;;;23010:1;23003:9;22974:186;;23190:2773;23534:56;23580:9;23572:6;15851:12;-1:-1:-1;;;;;15884:35:336;;15872:48;;15907:3;15956:19;15977:10;15952:36;15945:4;15936:14;;;15929:60;15761:234;23534:56;23626:3;23621:2;23610:9;23606:18;23599:31;23515:4;23668:3;23657:9;23653:19;23707:6;23694:20;23723:30;23747:5;23723:30;:::i;:::-;23801:10;23790:22;23784:3;23769:19;;23762:51;23883:4;23871:17;;23858:31;23920:3;23905:19;;23898:36;23990:2;23978:15;;20706:19;24010:3;23995:19;;20734:20;20812:16;;;20799:30;20845:14;;;20838:31;24076:2;24070:3;24062:6;24058:16;24052:3;24041:9;24037:19;24024:55;24140:2;24134:3;24126:6;24122:16;24116:3;24105:9;24101:19;24088:55;24186:101;24282:3;24274:6;24270:16;24262:6;24186:101;:::i;:::-;24324:6;24318:3;24307:9;24303:19;24296:35;24351:6;24381:12;24373:6;24366:28;24425:3;24414:9;24410:19;24403:26;;24494:3;24478:12;24475:1;24471:20;24460:9;24456:36;24452:46;24438:60;;24521:12;24551:1;24561:1275;24575:12;24572:1;24569:19;24561:1275;;;24646:22;;;-1:-1:-1;;24642:37:336;24630:50;;24703:71;24767:6;24753:12;24703:71;:::i;:::-;24815:2;24802:16;24831:32;24855:7;24831:32;:::i;:::-;24904:10;24891:24;24876:40;;24976:4;24968:13;;24955:27;25037:14;25033:23;;;-1:-1:-1;;25029:37:336;25005:62;;24995:90;;25081:1;25078;25071:12;24995:90;25113:27;;25229:4;25216:18;;;25167:21;-1:-1:-1;;;;;25250:30:336;;25247:50;;;25293:1;25290;25283:12;25247:50;25346:6;25330:14;25326:27;25317:7;25313:41;25310:61;;;25367:1;25364;25357:12;25310:61;25410:4;25403;25395:6;25391:17;25384:31;25442:61;25497:4;25489:6;25485:17;25477:6;25468:7;25442:61;:::i;:::-;25428:75;;;25538:66;25600:2;25596;25592:11;25588:2;25538:66;:::i;:::-;25516:88;;25653:6;25645;25641:19;25636:2;25628:6;25624:15;25617:44;25684:68;25745:6;25729:14;25684:68;:::i;:::-;25674:78;-1:-1:-1;;;25787:4:336;25812:14;;;;25775:17;;;;;24603:1;24596:9;24561:1275;;;24565:3;;;;;25886:9;25878:6;25874:22;25867:4;25856:9;25852:20;25845:52;25914:43;25950:6;25942;25914:43;:::i;:::-;25906:51;23190:2773;-1:-1:-1;;;;;;23190:2773:336:o;26375:598::-;26550:5;26537:19;26565:33;26590:7;26565:33;:::i;:::-;26669:11;;-1:-1:-1;;;;;;26705:45:336;;-1:-1:-1;;;;;26617:33:336;;;;26702:53;;;26689:67;;26804:2;26793:14;;26780:28;26817:32;26780:28;26817:32;:::i;:::-;-1:-1:-1;;;;;;26877:37:336;;;;26874:45;;;26948:3;26925:17;;;;-1:-1:-1;;;26921:44:336;26871:95;26858:109;;-1:-1:-1;26375:598:336:o;26978:363::-;27080:5;27067:19;27095:33;27120:7;27095:33;:::i;:::-;-1:-1:-1;;;;;27149:33:336;27137:46;;27231:4;27220:16;;27207:30;27246:32;27207:30;27246:32;:::i;:::-;27323:10;27314:7;27310:24;27303:4;27298:3;27294:14;27287:48;;26978:363;;:::o;27346:271::-;27542:2;27527:18;;27554:57;27531:9;27593:6;27554:57;:::i;27622:1239::-;28026:57;28073:9;28065:6;28026:57;:::i;:::-;28131:10;28119:23;;28114:2;28099:18;;;28092:51;;;;28179:3;28174:2;28159:18;;;28152:31;;;28224:20;;28260:19;;;28253:34;;;;28357:4;28345:17;;28332:31;28394:3;28379:19;;28372:36;28452:15;;;20706:19;28484:3;28469:19;;20734:20;20812:16;;20799:30;20845:14;;;20838:31;-1:-1:-1;28532:102:336;28628:4;28620:6;28616:17;28608:6;28532:102;:::i;:::-;28671:4;28665:3;28654:9;28650:19;28643:33;28693:86;28774:3;28763:9;28759:19;28745:12;28731;28693:86;:::i;:::-;28685:94;;;;28788:67;28849:4;28838:9;28834:20;28826:6;15851:12;-1:-1:-1;;;;;15884:35:336;;15872:48;;15907:3;15956:19;15977:10;15952:36;15945:4;15936:14;;;15929:60;15761:234;29587:431;29645:5;29693:4;29681:9;29676:3;29672:19;29668:30;29665:50;;;29711:1;29708;29701:12;29665:50;29733:22;;:::i;:::-;29724:31;;29792:9;29779:23;29811:33;29836:7;29811:33;:::i;:::-;29853:22;;29927:2;29912:18;;29899:32;29940;29899;29940;:::i;:::-;29999:2;29988:14;;29981:31;29992:5;29587:431;-1:-1:-1;;29587:431:336:o;30023:1127::-;30199:6;30207;30215;30223;30276:3;30264:9;30255:7;30251:23;30247:33;30244:53;;;30293:1;30290;30283:12;30244:53;30316:49;30357:7;30346:9;30316:49;:::i;:::-;30306:59;;30384:45;30425:2;30414:9;30410:18;30384:45;:::i;:::-;30374:55;;30448:58;30498:7;30493:2;30482:9;30478:18;30448:58;:::i;:::-;30438:68;;30557:3;30546:9;30542:19;30529:33;-1:-1:-1;;;;;30577:6:336;30574:30;30571:50;;;30617:1;30614;30607:12;30571:50;30640:22;;30693:4;30685:13;;30681:27;-1:-1:-1;30671:55:336;;30722:1;30719;30712:12;30671:55;30762:2;30749:16;-1:-1:-1;;;;;30780:6:336;30777:30;30774:56;;;30810:18;;:::i;:::-;30852:59;30899:2;30876:17;;-1:-1:-1;;30872:31:336;30905:4;30868:42;30852:59;:::i;:::-;30934:6;30927:5;30920:21;30984:7;30977:4;30968:6;30964:2;30960:15;30956:26;30953:39;30950:59;;;31005:1;31002;30995:12;30950:59;31064:6;31057:4;31053:2;31049:13;31042:4;31035:5;31031:16;31018:53;31118:1;31111:4;31102:6;31095:5;31091:18;31087:29;31080:40;31139:5;31129:15;;;;;30023:1127;;;;;;;:::o;31505:297::-;31623:12;;31670:4;31659:16;;;31653:23;;31623:12;31688:16;;31685:111;;;-1:-1:-1;;31762:4:336;31758:17;;;;31755:1;31751:25;31747:38;31736:50;;31505:297;-1:-1:-1;31505:297:336:o;31807:720::-;31872:5;31925:3;31918:4;31910:6;31906:17;31902:27;31892:55;;31943:1;31940;31933:12;31892:55;31976:6;31970:13;32003:64;32019:47;32059:6;32019:47;:::i;32003:64::-;32091:3;32115:6;32110:3;32103:19;32147:4;32142:3;32138:14;32131:21;;32208:4;32198:6;32195:1;32191:14;32183:6;32179:27;32175:38;32161:52;;32236:3;32228:6;32225:15;32222:35;;;32253:1;32250;32243:12;32222:35;32289:4;32281:6;32277:17;32303:193;32319:6;32314:3;32311:15;32303:193;;;32411:10;;32434:18;;32481:4;32472:14;;;;32336;32303:193;;;-1:-1:-1;32514:7:336;31807:720;-1:-1:-1;;;;;31807:720:336:o;32532:1207::-;32641:6;32694:2;32682:9;32673:7;32669:23;32665:32;32662:52;;;32710:1;32707;32700:12;32662:52;32743:9;32737:16;-1:-1:-1;;;;;32768:6:336;32765:30;32762:50;;;32808:1;32805;32798:12;32762:50;32831:22;;32872:16;;;32908:4;32900:13;;32897:33;;;32926:1;32923;32916:12;32897:33;32952:22;;:::i;:::-;33019:9;;33037:22;;33118:2;33110:11;;;33104:18;33138:14;;;33131:31;33196:2;-1:-1:-1;;33178:16:336;;33174:25;33171:45;;;33212:1;33209;33202:12;33171:45;33240:22;;:::i;:::-;33321:2;33313:11;;;33307:18;33334:24;;33417:2;33409:11;;33403:18;33450:2;33437:16;;33430:33;33479:14;;33472:31;33542:4;33534:13;;33528:20;;-1:-1:-1;;;;;;33560:32:336;;33557:52;;;33605:1;33602;33595:12;33557:52;33641:67;33700:7;33689:8;33685:2;33681:17;33641:67;:::i;:::-;33636:2;33625:14;;33618:91;33629:5;32532:1207;-1:-1:-1;;;;;32532:1207:336:o;33744:1536::-;33875:6;33928:2;33916:9;33907:7;33903:23;33899:32;33896:52;;;33944:1;33941;33934:12;33896:52;33977:9;33971:16;-1:-1:-1;;;;;34002:6:336;33999:30;33996:50;;;34042:1;34039;34032:12;33996:50;34065:22;;34118:4;34110:13;;34106:27;-1:-1:-1;34096:55:336;;34147:1;34144;34137:12;34096:55;34180:2;34174:9;34203:64;34219:47;34259:6;34219:47;:::i;34203:64::-;34289:3;34313:6;34308:3;34301:19;34345:2;34340:3;34336:12;34329:19;;34400:2;34390:6;34387:1;34383:14;34379:2;34375:23;34371:32;34357:46;;34426:7;34418:6;34415:19;34412:39;;;34447:1;34444;34437:12;34412:39;34479:2;34475;34471:11;34491:759;34507:6;34502:3;34499:15;34491:759;;;34586:3;34580:10;-1:-1:-1;;;;;34609:11:336;34606:35;34603:55;;;34654:1;34651;34644:12;34603:55;34681:20;;34753:4;34725:16;;;-1:-1:-1;;34721:30:336;34717:41;34714:61;;;34771:1;34768;34761:12;34714:61;34801:22;;:::i;:::-;34865:2;34861;34857:11;34851:18;34882:33;34907:7;34882:33;:::i;:::-;34928:22;;34993:4;34985:13;;34979:20;-1:-1:-1;;;;;35015:32:336;;35012:52;;;35060:1;35057;35050:12;35012:52;35100:76;35168:7;35163:2;35152:8;35148:2;35144:17;35140:26;35100:76;:::i;:::-;35095:2;35088:5;35084:14;35077:100;;35202:5;35197:3;35190:18;;;35237:2;35232:3;35228:12;35221:19;;34533:2;34528:3;34524:12;34517:19;;34491:759;;;-1:-1:-1;35269:5:336;33744:1536;-1:-1:-1;;;;;;33744:1536:336:o;35285:251::-;35355:6;35408:2;35396:9;35387:7;35383:23;35379:32;35376:52;;;35424:1;35421;35414:12;35376:52;35456:9;35450:16;35475:31;35500:5;35475:31;:::i;35541:209::-;35573:1;35599;35589:132;;35643:10;35638:3;35634:20;35631:1;35624:31;35678:4;35675:1;35668:15;35706:4;35703:1;35696:15;35589:132;-1:-1:-1;35735:9:336;;35541:209::o;35755:222::-;35820:9;;;35841:10;;;35838:133;;;35893:10;35888:3;35884:20;35881:1;35874:31;35928:4;35925:1;35918:15;35956:4;35953:1;35946:15",
    "linkReferences": {},
    "immutableReferences": {
      "96597": [
        {
          "start": 2579,
          "length": 32
        }
      ],
      "100958": [
        {
          "start": 1564,
          "length": 32
        },
        {
          "start": 2369,
          "length": 32
        },
        {
          "start": 2669,
          "length": 32
        },
        {
          "start": 2841,
          "length": 32
        },
        {
          "start": 3528,
          "length": 32
        },
        {
          "start": 4418,
          "length": 32
        },
        {
          "start": 5163,
          "length": 32
        },
        {
          "start": 5341,
          "length": 32
        }
      ],
      "100962": [
        {
          "start": 1461,
          "length": 32
        },
        {
          "start": 2733,
          "length": 32
        },
        {
          "start": 3693,
          "length": 32
        }
      ],
      "102219": [
        {
          "start": 1340,
          "length": 32
        },
        {
          "start": 5641,
          "length": 32
        },
        {
          "start": 6389,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "GENERATOR_GLOBAL_TABLE_ROOT()": "1bdc0deb",
    "GENERATOR_MAX_STALENESS_PERIOD()": "790961ea",
    "GENERATOR_REFERENCE_TIMESTAMP()": "612abcb0",
    "GLOBAL_TABLE_ROOT_CERT_TYPEHASH()": "3ef6cd7a",
    "MAX_BPS()": "fd967f47",
    "OPERATOR_INFO_LEAF_SALT()": "a2c902f5",
    "OPERATOR_TABLE_LEAF_SALT()": "121409ea",
    "bn254CertificateVerifier()": "b8c14306",
    "calculateOperatorInfoLeaf(((uint256,uint256),uint256[]))": "538a3790",
    "calculateOperatorTableLeaf(bytes)": "a2f2e24d",
    "confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)": "eaaed9d5",
    "disableRoot(bytes32)": "c3621f0a",
    "ecdsaCertificateVerifier()": "ad0f9582",
    "getCertificateVerifier(uint8)": "6f728c50",
    "getCurrentGlobalTableRoot()": "28522d79",
    "getGenerator()": "1e2ca260",
    "getGeneratorConfig()": "b0cb3a24",
    "getGeneratorReferenceTimestamp()": "7551ba34",
    "getGlobalTableRootByTimestamp(uint32)": "c5916a39",
    "getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)": "c3be1e33",
    "getGlobalTableUpdateSignableDigest(bytes32,uint32,uint32)": "401c370f",
    "getLatestReferenceBlockNumber()": "31a599d2",
    "getLatestReferenceTimestamp()": "4624e6a3",
    "getReferenceBlockNumberByTimestamp(uint32)": "23b7b5b2",
    "getReferenceTimestampByBlockNumber(uint32)": "193b79f3",
    "globalRootConfirmationThreshold()": "c252aa22",
    "initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))": "06f51875",
    "isRootValid(bytes32)": "30ef41b4",
    "isRootValidByTimestamp(uint32)": "64e1df84",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "renounceOwnership()": "715018a6",
    "setGlobalRootConfirmationThreshold(uint16)": "2370356c",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))": "9f7e206f",
    "updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)": "9ea94778",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBN254CertificateVerifier\",\"name\":\"_bn254CertificateVerifier\",\"type\":\"address\"},{\"internalType\":\"contract IECDSACertificateVerifier\",\"name\":\"_ecdsaCertificateVerifier\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CannotDisableGeneratorRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CertificateInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GlobalTableRootInFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GlobalTableRootStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConfirmationThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurveType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGenerator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGlobalTableRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSetProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProofLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TableUpdateForPastTimestamp\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"GeneratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"bps\",\"type\":\"uint16\"}],\"name\":\"GlobalRootConfirmationThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"GlobalRootDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"NewGlobalTableRoot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GENERATOR_GLOBAL_TABLE_ROOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENERATOR_MAX_STALENESS_PERIOD\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENERATOR_REFERENCE_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GLOBAL_TABLE_ROOT_CERT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_INFO_LEAF_SALT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_TABLE_LEAF_SALT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bn254CertificateVerifier\",\"outputs\":[{\"internalType\":\"contract IBN254CertificateVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"name\":\"calculateOperatorInfoLeaf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"operatorTableBytes\",\"type\":\"bytes\"}],\"name\":\"calculateOperatorTableLeaf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"operatorInfoProof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254Certificate\",\"name\":\"globalTableRootCert\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"confirmGlobalTableRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"disableRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecdsaCertificateVerifier\",\"outputs\":[{\"internalType\":\"contract IECDSACertificateVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"getCertificateVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGlobalTableRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGenerator\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGeneratorConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct ICrossChainRegistryTypes.OperatorSetConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGeneratorReferenceTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getGlobalTableRootByTimestamp\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"getGlobalTableUpdateMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"getGlobalTableUpdateSignableDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestReferenceBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestReferenceTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getReferenceBlockNumberByTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"}],\"name\":\"getReferenceTimestampByBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalRootConfirmationThreshold\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"_initialGenerator\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"_globalRootConfirmationThreshold\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"generatorInfo\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"}],\"name\":\"isRootValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"isRootValidByTimestamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"bps\",\"type\":\"uint16\"}],\"name\":\"setGlobalRootConfirmationThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"generator\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"generatorInfo\",\"type\":\"tuple\"}],\"name\":\"updateGenerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"globalTableRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorTableBytes\",\"type\":\"bytes\"}],\"name\":\"updateOperatorTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CannotDisableGeneratorRoot()\":[{\"details\":\"Error code: 0x332415fa\"}],\"CertificateInvalid()\":[{\"details\":\"Error code: 0xc108107cWe enforce that certificates are valid according to the confirmation threshold to prevent unauthorized global root updates\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"EmptyRoot()\":[{\"details\":\"Error code: 0x53ce4eceEmpty roots should never be valid. We prevent them to avoid issues like the Nomad bridge attack: <https://medium.com/nomad-xyz-blog/nomad-bridge-hack-root-cause-analysis-875ad2e5aacd>\"}],\"GlobalTableRootInFuture()\":[{\"details\":\"Error code: 0xb4233b6aWe enforce that reference timestamps cannot be in the future to prevent manipulation and ensure temporal consistency\"}],\"GlobalTableRootStale()\":[{\"details\":\"Error code: 0x1bfd4358We enforce that new reference timestamps must be greater than the latest to prevent retroactive updates and maintain chronological order\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InvalidConfirmationThreshold()\":[{\"details\":\"Error code: 0x0e66de06\"}],\"InvalidCurveType()\":[{\"details\":\"Error code: 0xfdea7c09\"}],\"InvalidGenerator()\":[{\"details\":\"Error code: 0x6446f917We enforce that the generator has a reference timestamp of 0 to ensure proper initialization and prevent conflicts\"}],\"InvalidGlobalTableRoot()\":[{\"details\":\"Error code: 0xc73a136aWe enforce that the provided global table root matches the stored root for the timestamp to ensure data integrity\"}],\"InvalidIndex()\":[{\"details\":\"Error code: 0x63df8171\"}],\"InvalidMessageHash()\":[{\"details\":\"Error code: 0x8b56642dWe enforce that the message hash in the certificate matches the expected EIP-712 hash to prevent certificate replay attacks\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidOperatorSet()\":[{\"details\":\"Error code: 0x7ec5c154\"}],\"InvalidOperatorSetProof()\":[{\"details\":\"Error code: 0xafa42ca7We enforce that merkle proofs are valid to prevent unauthorized operator table updates and maintain cryptographic security\"}],\"InvalidProofLength()\":[{\"details\":\"Error code: 0x4dc5f6a4\"}],\"InvalidRoot()\":[{\"details\":\"Error code: 0x504570e3\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"TableUpdateForPastTimestamp()\":[{\"details\":\"Error code: 0x207617dfWe enforce that reference timestamps for operator tables increase to prevent retroactive operator table modifications\"}]},\"events\":{\"GeneratorUpdated((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet which certifies against global roots\"}},\"GlobalRootConfirmationThresholdUpdated(uint16)\":{\"params\":{\"bps\":\"The threshold, in bps, for a global root to be signed off on and updated\"}},\"GlobalRootDisabled(bytes32)\":{\"params\":{\"globalTableRoot\":\"the global table root that was disabled\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"NewGlobalTableRoot(uint32,bytes32)\":{\"params\":{\"globalTableRoot\":\"the root of the global table\",\"referenceTimestamp\":\"the timestamp of the global table root\"}}},\"kind\":\"dev\",\"methods\":{\"calculateOperatorInfoLeaf(((uint256,uint256),uint256[]))\":{\"details\":\"The salt is used to prevent against second preimage attacks: attacks where an attacker can create a partial proof using an internal node rather than a leaf to validate a proof. The salt ensures that leaves cannot be concatenated together to form a valid proof, as well as reducing the likelihood of an internal node matching the salt prefix. This is a standard \\\"domain separation\\\" technique in Merkle tree implementations to ensure leaf nodes and internal nodes can never be confused with each other. See Section 2.1 of <https://www.rfc-editor.org/rfc/rfc9162#name-merkle-trees> for more. Uses abi.encodePacked for the salt and abi.encode for the struct to handle complex types (structs with dynamic arrays) while maintaining gas efficiency where possible.\",\"params\":{\"operatorInfo\":\"The BN254 operator info struct containing the operator's public key and stake weights\"},\"returns\":{\"_0\":\"The leaf hash (keccak256 of salt and encoded operator info)\"}},\"calculateOperatorTableLeaf(bytes)\":{\"details\":\"The salt is used to prevent against second preimage attacks: attacks where an attacker can create a partial proof using an internal node rather than a leaf to validate a proof. The salt ensures that leaves cannot be concatenated together to form a valid proof, as well as reducing the likelihood of an internal node matching the salt prefix. This is a standard \\\"domain separation\\\" technique in Merkle tree implementations to ensure leaf nodes and internal nodes can never be confused with each other. See Section 2.1 of <https://www.rfc-editor.org/rfc/rfc9162#name-merkle-trees> for more. Uses abi.encodePacked for both salt and bytes for optimal gas efficiency since both are simple byte arrays without complex nested structures.\",\"params\":{\"operatorTableBytes\":\"The encoded operator table as bytes containing operator set data\"},\"returns\":{\"_0\":\"The leaf hash (keccak256 of salt and operator table bytes)\"}},\"confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)\":{\"details\":\"Any entity can submit with a valid certificate signed off by the `Generator`The `msgHash` in the `globalOperatorTableRootCert` is the hash of the `globalTableRoot`, `referenceTimestamp`, and `referenceBlockNumber`Per the `BN254CertificateVerifier`, the value that the `Generator` signs over is given by `calculateGlobalTableUpdateSignableDigest`The `referenceTimestamp` nested in the `globalTableRootCert` should be `getGeneratorReferenceTimestamp` (ie. `GENERATOR_REFERENCE_TIMESTAMP`), whereas      the `referenceTimestamp` passed directly in the calldata is the block timestamp at which the global table root was calculatedReverts for:      - GlobalTableRootInFuture: referenceTimestamp is in the future      - GlobalTableRootStale: referenceTimestamp is not greater than latest reference timestamp      - InvalidMessageHash: certificate messageHash does not match expected EIP-712 hash      - CertificateInvalid: certificate verification failed against confirmation thresholdEmits the following events:      - NewGlobalTableRoot: When global table root is successfully confirmed\",\"params\":{\"globalTableRoot\":\"merkle root of all operatorSet tables\",\"globalTableRootCert\":\"certificate of the global table root, signed by the `Generator`. This is a `BN254Certificate`\",\"referenceBlockNumber\":\"block number, corresponding to the `referenceTimestamp` of the global table root\",\"referenceTimestamp\":\"block timestamp at which the global table root was calculated\"}},\"disableRoot(bytes32)\":{\"details\":\"Only callable by the pauserCannot disable the GENERATOR_GLOBAL_TABLE_ROOTReverts for:      - OnlyPauser: caller is not the pauser      - InvalidRoot: globalTableRoot is already disabled or does not exist      - CannotDisableGeneratorRoot: attempting to disable the generator's global table rootEmits the following events:      - GlobalRootDisabled: When global table root is successfully disabled\",\"params\":{\"globalTableRoot\":\"the global table root to disable\"}},\"getCertificateVerifier(uint8)\":{\"params\":{\"curveType\":\"The curve type\"},\"returns\":{\"_0\":\"The certificate verifier for the given key type\"}},\"getCurrentGlobalTableRoot()\":{\"returns\":{\"_0\":\"the current global table root\"}},\"getGenerator()\":{\"returns\":{\"_0\":\"The operatorSet which certifies against global roots\"}},\"getGeneratorConfig()\":{\"details\":\"The Generator's config has maxStalenessPeriod = 0 and owner = address(operatorTableUpdater)\",\"returns\":{\"_0\":\"The operator set config for the Generator\"}},\"getGeneratorReferenceTimestamp()\":{\"details\":\"The `Generator's` referenceTimestamp is hardcoded to 1. See `GENERATOR_REFERENCE_TIMESTAMP` in `OperatorTableUpdaterStorage.sol`\",\"returns\":{\"_0\":\"The reference timestamp of the generator\"}},\"getGlobalTableRootByTimestamp(uint32)\":{\"params\":{\"referenceTimestamp\":\"the timestamp of the table root\"},\"returns\":{\"_0\":\"the table root at the given timestamp\"}},\"getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)\":{\"params\":{\"globalTableRoot\":\"the global table root\",\"referenceBlockNumber\":\"the reference block number\",\"referenceTimestamp\":\"the reference timestamp\"},\"returns\":{\"_0\":\"The message hash for a global table root\"}},\"getGlobalTableUpdateSignableDigest(bytes32,uint32,uint32)\":{\"details\":\"Calls into the `BN254CertificateVerifier` to calculate the signable digest\",\"params\":{\"globalTableRoot\":\"the global table root\",\"referenceBlockNumber\":\"the reference block number\",\"referenceTimestamp\":\"the reference timestamp used when computing the message hash\"},\"returns\":{\"_0\":\"The digest to be signed by the Generator\"}},\"getLatestReferenceBlockNumber()\":{\"returns\":{\"_0\":\"The latest reference block number\"}},\"getLatestReferenceTimestamp()\":{\"returns\":{\"_0\":\"The latest reference timestamp\"}},\"getReferenceBlockNumberByTimestamp(uint32)\":{\"params\":{\"referenceTimestamp\":\"the reference timestamp\"},\"returns\":{\"_0\":\"The reference block number for the given reference timestamp\"}},\"getReferenceTimestampByBlockNumber(uint32)\":{\"params\":{\"referenceBlockNumber\":\"the reference block number\"},\"returns\":{\"_0\":\"The reference timestamp for the given reference block number\"}},\"initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"details\":\"We also update the operator table for the Generator, to begin signing off on global rootsWe set the `_latestReferenceTimestamp` to the current timestamp, so that only *new* roots can be confirmed\",\"params\":{\"_globalRootConfirmationThreshold\":\"The threshold, in bps, for a global root to be signed off on and updated\",\"_initialGenerator\":\"The operatorSet which certifies against global roots\",\"_owner\":\"The owner of the OperatorTableUpdater\",\"generatorInfo\":\"The operatorSetInfo for the Generator\",\"initialPausedStatus\":\"The initial paused status of the OperatorTableUpdater\"}},\"isRootValid(bytes32)\":{\"params\":{\"globalTableRoot\":\"the global table root\"},\"returns\":{\"_0\":\"The validity status of the global table root\"}},\"isRootValidByTimestamp(uint32)\":{\"params\":{\"referenceTimestamp\":\"the reference timestamp\"},\"returns\":{\"_0\":\"The validity status of the global table root\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setGlobalRootConfirmationThreshold(uint16)\":{\"details\":\"Only callable by the owner of the contractReverts for:      - \\\"Ownable: caller is not the owner\\\": caller is not the owner      - InvalidConfirmationThreshold: bps is greater than MAX_BPS (10000)Emits the following events:      - GlobalRootConfirmationThresholdUpdated: When threshold is successfully updated\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"details\":\"We have a separate function for updating this operatorSet since it's not transported and updated      in the same way as the other operatorSetsOnly callable by the owner of the contractUses GENERATOR_GLOBAL_TABLE_ROOT constant to break circular dependency for certificate verificationWe ensure that there are no collisions with other reference timestamps because we expect the generator to have an initial reference timestamp of 0The `_latestReferenceTimestamp` is not updated since this root is ONLY used for the `Generator`The `_referenceBlockNumber` and `_referenceTimestamps` mappings are not updated since they are only used for introspection for official operatorSetsReverts for:      - \\\"Ownable: caller is not the owner\\\": caller is not the owner      - InvalidGenerator: generator has a non-zero reference timestampEmits the following events:      - GeneratorUpdated: When generator is successfully updated\",\"params\":{\"generator\":\"The operatorSet which certifies against global roots\",\"generatorInfo\":\"The operatorSetInfo for the generator\"}},\"updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)\":{\"details\":\"This function calls `updateOperatorTable` on the `ECDSACertificateVerifier` or `BN254CertificateVerifier`      depending on the `KeyType` of the operatorSet, which is encoded in the `operatorTableBytes`Function silently returns if the `referenceTimestamp` has already been updated for the `operatorSet`Reverts for:      - InvalidRoot: globalTableRoot is disabled or invalid      - InvalidOperatorSet: operatorSet is the generator (not allowed for regular updates)      - TableUpdateForPastTimestamp: referenceTimestamp is not greater than latest for the operatorSet      - InvalidGlobalTableRoot: provided globalTableRoot does not match stored root for referenceTimestamp      - InvalidOperatorSetProof: merkle proof verification failed      - InvalidCurveType: unsupported curve type in operatorTableBytes\",\"params\":{\"globalTableRoot\":\"the new globalTableRoot\",\"operatorSetIndex\":\"the index of the given operatorSet being updated\",\"operatorTableBytes\":\"the bytes of the operator table\",\"proof\":\"the proof of the leaf at index against the globalTableRoot\",\"referenceTimestamp\":\"the reference timestamp of the globalTableRoot\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CannotDisableGeneratorRoot()\":[{\"notice\":\"Thrown when the generator's global table root is being disabled\"}],\"CertificateInvalid()\":[{\"notice\":\"Thrown when the GlobalTableRoot update fails\"}],\"EmptyRoot()\":[{\"notice\":\"Thrown when the root is empty.\"}],\"GlobalTableRootInFuture()\":[{\"notice\":\"Thrown when the global table root is in the future\"}],\"GlobalTableRootStale()\":[{\"notice\":\"Thrown when the global table root is stale\"}],\"InvalidConfirmationThreshold()\":[{\"notice\":\"Thrown when the confirmation threshold is invalid\"}],\"InvalidCurveType()\":[{\"notice\":\"Thrown when the curve type is invalid\"}],\"InvalidGenerator()\":[{\"notice\":\"Thrown when the generator is invalid (via a non-zero reference timestamp)\"}],\"InvalidGlobalTableRoot()\":[{\"notice\":\"Thrown when the global table root does not match what is in storage\"}],\"InvalidIndex()\":[{\"notice\":\"Thrown when the provided index was outside the max index for the tree.\"}],\"InvalidMessageHash()\":[{\"notice\":\"Thrown when the table root does not match what is in the certificate\"}],\"InvalidOperatorSet()\":[{\"notice\":\"Thrown when the operator set to update is the generator\"}],\"InvalidOperatorSetProof()\":[{\"notice\":\"Thrown when the operator set proof is invalid\"}],\"InvalidProofLength()\":[{\"notice\":\"Thrown when the provided proof was not a multiple of 32, or was empty for SHA256.\"}],\"InvalidRoot()\":[{\"notice\":\"Thrown when a root is invalid\"}],\"TableUpdateForPastTimestamp()\":[{\"notice\":\"Thrown when the table has been updated for the timestamp\"}]},\"events\":{\"GeneratorUpdated((address,uint32))\":{\"notice\":\"Emitted when the generator is updated\"},\"GlobalRootConfirmationThresholdUpdated(uint16)\":{\"notice\":\"Emitted when the global root confirmation threshold is updated\"},\"GlobalRootDisabled(bytes32)\":{\"notice\":\"Emitted when a global table root is disabled\"},\"NewGlobalTableRoot(uint32,bytes32)\":{\"notice\":\"Emitted when a new global table root is set\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"GENERATOR_GLOBAL_TABLE_ROOT()\":{\"notice\":\"Dummy initial global table root to break circular dependency for certificate verification\"},\"GENERATOR_MAX_STALENESS_PERIOD()\":{\"notice\":\"The `maxStalenessPeriods` for the generator\"},\"GENERATOR_REFERENCE_TIMESTAMP()\":{\"notice\":\"The reference timestamp for the generator\"},\"MAX_BPS()\":{\"notice\":\"The maximum BPS value\"},\"bn254CertificateVerifier()\":{\"notice\":\"The BN254 certificate verifier\"},\"calculateOperatorInfoLeaf(((uint256,uint256),uint256[]))\":{\"notice\":\"Calculate the leaf hash for an operator info\"},\"calculateOperatorTableLeaf(bytes)\":{\"notice\":\"Calculate the leaf hash for an operator table\"},\"confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)\":{\"notice\":\"Sets the global table root\"},\"constructor\":{\"notice\":\"INITIALIZING FUNCTIONS\"},\"disableRoot(bytes32)\":{\"notice\":\"Disables a global table root\"},\"ecdsaCertificateVerifier()\":{\"notice\":\"The ECDSA certificate verifier\"},\"getCertificateVerifier(uint8)\":{\"notice\":\"Get the certificate verifier for a given key type\"},\"getCurrentGlobalTableRoot()\":{\"notice\":\"Get the current global table root\"},\"getGenerator()\":{\"notice\":\"Get the operatorSet which certifies against global roots\"},\"getGeneratorConfig()\":{\"notice\":\"Get the operator set config for the Generator\"},\"getGeneratorReferenceTimestamp()\":{\"notice\":\"Get the reference timestamp of the generator\"},\"getGlobalTableRootByTimestamp(uint32)\":{\"notice\":\"Get the table root by timestamp\"},\"getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)\":{\"notice\":\"Get the message hash for the certificate of a global table root update\"},\"getGlobalTableUpdateSignableDigest(bytes32,uint32,uint32)\":{\"notice\":\"Get the signable digest for confirming a global table root update\"},\"getLatestReferenceBlockNumber()\":{\"notice\":\"Get the latest reference block number\"},\"getLatestReferenceTimestamp()\":{\"notice\":\"Get the latest reference timestamp\"},\"getReferenceBlockNumberByTimestamp(uint32)\":{\"notice\":\"Get the reference block number for a given reference timestamp\"},\"getReferenceTimestampByBlockNumber(uint32)\":{\"notice\":\"Get the reference timestamp for a given reference block number\"},\"globalRootConfirmationThreshold()\":{\"notice\":\"The threshold, in bps, for a global root to be signed off on and updated\"},\"initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"notice\":\"Initializes the OperatorTableUpdater\"},\"isRootValid(bytes32)\":{\"notice\":\"Get the validity status of a global table root\"},\"isRootValidByTimestamp(uint32)\":{\"notice\":\"Get the validity status of a global table root by timestamp\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"setGlobalRootConfirmationThreshold(uint16)\":{\"notice\":\"The threshold, in bps, for a global root to be signed off on and updated\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"notice\":\"Updates the `Generator` to a new operatorSet\"},\"updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)\":{\"notice\":\"Updates an operator table\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/multichain/OperatorTableUpdater.sol\":\"OperatorTableUpdater\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"src/contracts/interfaces/IBN254CertificateVerifier.sol\":{\"keccak256\":\"0x754622fcf72aeef0258e0c975d3fb6879a9ee204767c01adaf76288d31066fe2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a06a3c12dcbe6b99dc080b0f47e3485eed28dbe6eb2653c7dd66e73b94ae617c\",\"dweb:/ipfs/QmddRK2Lo5su9fCgmawZeWhTsjHMhJyA67s8K6X5pHYCtg\"]},\"src/contracts/interfaces/IBaseCertificateVerifier.sol\":{\"keccak256\":\"0x920b561911f8c7125e90b0f83bb00f547c9d6abb93e6c65a563ccbb932dc42c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b4860e482342f53c9770e913b2ea27b85faa1783b129161c9f804a928866a26\",\"dweb:/ipfs/QmTEihDACSTx5DaUcCoXqhwc2UeZtkEA9BxTnNbXguf8rN\"]},\"src/contracts/interfaces/ICrossChainRegistry.sol\":{\"keccak256\":\"0xa1c7deb4a8cae1c3a99e2d0d93f041dd807f68eb00e9aba256fcfd964d085178\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b9e5adb44f9cf9c47b96e84b2c8acf8e43fb6a533455acb6d5b3eba767f4e506\",\"dweb:/ipfs/QmS2mhQakzQUWvcxhAx3bXncMRcSUhp4FuokEfNBa65dS6\"]},\"src/contracts/interfaces/IECDSACertificateVerifier.sol\":{\"keccak256\":\"0xcb235587500fd217ca183b1e74eb77152c93187bd7cd2a7ea88b2d1a72dbcc2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fc4a601bad41f5fd3f0efd04634364c046705a18c116e39d2124fa0589594b9a\",\"dweb:/ipfs/QmaNai7heqtbuG1QeFLPzqT2AoDKe5UgGE76tLoWzkgZA7\"]},\"src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0x73c064cefaffe11b80dd55aba654c608da3484bbc573f575e352f267c4f58aee\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6f4d3e24ab3b99701ec2ee825e2575b168e5dcb2646800599eb18fba61685053\",\"dweb:/ipfs/QmT9LGAftNAQPZugfNsdYu8DWeXqAVCuDqHKUbV2rY9NT1\"]},\"src/contracts/interfaces/IOperatorTableCalculator.sol\":{\"keccak256\":\"0x0d15fae28a379f1b6b98a4446e2782b79f0441bb0476626a83de519a9c3366d0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9abd5cf881a5c747e6f5d9ad2acd7bba453a3ed0cf60f880e00246db31d61cbc\",\"dweb:/ipfs/QmcQvqk1BBQ7JJQzce5jBz46xZ8xovu9LyALnWuPFd9Ftd\"]},\"src/contracts/interfaces/IOperatorTableUpdater.sol\":{\"keccak256\":\"0x3dac237e962f6ec156b5bc4fbcde6a9ca95f7646125c3d0612904b9c41096c44\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e7e8e2ea35dc556d574eb92abcb417157edae470da772caf825ad6fd4ecfdc35\",\"dweb:/ipfs/QmSUQKmWj9jF3chiethUhoDvknfwxrEENgvVy5wXYWkkrm\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x072bbd4fbb3ab7a2e25092cb23df2e0d86ed65c4410e6eb642daacb4a2ad88f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f73e3c229d7a186b4bcde7069879c62f775101338868c34e6a0ece8b0471360\",\"dweb:/ipfs/QmddqLU8Z3WcAwnpLFYMgYXuLyy99Z9WH11gCfXTkpu9bZ\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/mixins/LeafCalculatorMixin.sol\":{\"keccak256\":\"0xafad22d64633200e17a5ce27dc82cf933670d5bd361e7e0cad624f1ade0d6726\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cc46bbd93cf32d3124bcf8a26a0bcc107a89471ee4b89c43f6a1303ca1bc3bab\",\"dweb:/ipfs/QmNNgchPAL36SnzeWP3WevixgJcAT9tZ7mfuf28yJ5KwVS\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/multichain/OperatorTableUpdater.sol\":{\"keccak256\":\"0x2dde2180dd3635ebe558ccae8d5af7bc2d86688534ff7cfe7512836f41097440\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b81c27a742f2b357c366ecb123ee10e3401893c23551809910e4f271d7cf9247\",\"dweb:/ipfs/QmcDE562A2majE9DUZ7Becti9KJajSRTB3EiWrq2JmxG1q\"]},\"src/contracts/multichain/OperatorTableUpdaterStorage.sol\":{\"keccak256\":\"0x641dc556d338281c51226e608b9a995b460b2577092a46add46046ffd0d13791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d17a711799fa1e4358c0b74fc72c049768e61bf78ea1f324309b5331ddd0926d\",\"dweb:/ipfs/QmVA21GJM4HDeLfJ7s1KJ141y3An3hBn84i8M4yurw4ojx\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99\",\"dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBN254CertificateVerifier",
              "name": "_bn254CertificateVerifier",
              "type": "address"
            },
            {
              "internalType": "contract IECDSACertificateVerifier",
              "name": "_ecdsaCertificateVerifier",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotDisableGeneratorRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CertificateInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GlobalTableRootInFuture"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GlobalTableRootStale"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidConfirmationThreshold"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCurveType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidGenerator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidGlobalTableRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidIndex"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMessageHash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSetProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidProofLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TableUpdateForPastTimestamp"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GeneratorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GlobalRootConfirmationThresholdUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GlobalRootDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewGlobalTableRoot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GENERATOR_GLOBAL_TABLE_ROOT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GENERATOR_MAX_STALENESS_PERIOD",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GENERATOR_REFERENCE_TIMESTAMP",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GLOBAL_TABLE_ROOT_CERT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BPS",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_INFO_LEAF_SALT",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_TABLE_LEAF_SALT",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bn254CertificateVerifier",
          "outputs": [
            {
              "internalType": "contract IBN254CertificateVerifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
              "name": "operatorInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "pubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "weights",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateOperatorInfoLeaf",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "operatorTableBytes",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateOperatorTableLeaf",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IBN254CertificateVerifierTypes.BN254Certificate",
              "name": "globalTableRootCert",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "signature",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apk",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]",
                  "name": "nonSignerWitnesses",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operatorIndex",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "operatorInfoProof",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorInfo",
                      "name": "operatorInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct BN254.G1Point",
                          "name": "pubkey",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "X",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "Y",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "weights",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmGlobalTableRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableRoot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ecdsaCertificateVerifier",
          "outputs": [
            {
              "internalType": "contract IECDSACertificateVerifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IKeyRegistrarTypes.CurveType",
              "name": "curveType",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCertificateVerifier",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentGlobalTableRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGenerator",
          "outputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGeneratorConfig",
          "outputs": [
            {
              "internalType": "struct ICrossChainRegistryTypes.OperatorSetConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "maxStalenessPeriod",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGeneratorReferenceTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalTableRootByTimestamp",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getGlobalTableUpdateMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalTableUpdateSignableDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestReferenceBlockNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestReferenceTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReferenceBlockNumberByTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReferenceTimestampByBlockNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "globalRootConfirmationThreshold",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "_initialGenerator",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "uint16",
              "name": "_globalRootConfirmationThreshold",
              "type": "uint16"
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
              "name": "generatorInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorInfoTreeRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "numOperators",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "aggregatePubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "totalWeights",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRootValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRootValidByTimestamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGlobalRootConfirmationThreshold"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "generator",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo",
              "name": "generatorInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorInfoTreeRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "numOperators",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "aggregatePubkey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "totalWeights",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateGenerator"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "referenceTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "globalTableRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetIndex",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "proof",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorTableBytes",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorTable"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateOperatorInfoLeaf(((uint256,uint256),uint256[]))": {
            "details": "The salt is used to prevent against second preimage attacks: attacks where an attacker can create a partial proof using an internal node rather than a leaf to validate a proof. The salt ensures that leaves cannot be concatenated together to form a valid proof, as well as reducing the likelihood of an internal node matching the salt prefix. This is a standard \"domain separation\" technique in Merkle tree implementations to ensure leaf nodes and internal nodes can never be confused with each other. See Section 2.1 of <https://www.rfc-editor.org/rfc/rfc9162#name-merkle-trees> for more. Uses abi.encodePacked for the salt and abi.encode for the struct to handle complex types (structs with dynamic arrays) while maintaining gas efficiency where possible.",
            "params": {
              "operatorInfo": "The BN254 operator info struct containing the operator's public key and stake weights"
            },
            "returns": {
              "_0": "The leaf hash (keccak256 of salt and encoded operator info)"
            }
          },
          "calculateOperatorTableLeaf(bytes)": {
            "details": "The salt is used to prevent against second preimage attacks: attacks where an attacker can create a partial proof using an internal node rather than a leaf to validate a proof. The salt ensures that leaves cannot be concatenated together to form a valid proof, as well as reducing the likelihood of an internal node matching the salt prefix. This is a standard \"domain separation\" technique in Merkle tree implementations to ensure leaf nodes and internal nodes can never be confused with each other. See Section 2.1 of <https://www.rfc-editor.org/rfc/rfc9162#name-merkle-trees> for more. Uses abi.encodePacked for both salt and bytes for optimal gas efficiency since both are simple byte arrays without complex nested structures.",
            "params": {
              "operatorTableBytes": "The encoded operator table as bytes containing operator set data"
            },
            "returns": {
              "_0": "The leaf hash (keccak256 of salt and operator table bytes)"
            }
          },
          "confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)": {
            "details": "Any entity can submit with a valid certificate signed off by the `Generator`The `msgHash` in the `globalOperatorTableRootCert` is the hash of the `globalTableRoot`, `referenceTimestamp`, and `referenceBlockNumber`Per the `BN254CertificateVerifier`, the value that the `Generator` signs over is given by `calculateGlobalTableUpdateSignableDigest`The `referenceTimestamp` nested in the `globalTableRootCert` should be `getGeneratorReferenceTimestamp` (ie. `GENERATOR_REFERENCE_TIMESTAMP`), whereas      the `referenceTimestamp` passed directly in the calldata is the block timestamp at which the global table root was calculatedReverts for:      - GlobalTableRootInFuture: referenceTimestamp is in the future      - GlobalTableRootStale: referenceTimestamp is not greater than latest reference timestamp      - InvalidMessageHash: certificate messageHash does not match expected EIP-712 hash      - CertificateInvalid: certificate verification failed against confirmation thresholdEmits the following events:      - NewGlobalTableRoot: When global table root is successfully confirmed",
            "params": {
              "globalTableRoot": "merkle root of all operatorSet tables",
              "globalTableRootCert": "certificate of the global table root, signed by the `Generator`. This is a `BN254Certificate`",
              "referenceBlockNumber": "block number, corresponding to the `referenceTimestamp` of the global table root",
              "referenceTimestamp": "block timestamp at which the global table root was calculated"
            }
          },
          "disableRoot(bytes32)": {
            "details": "Only callable by the pauserCannot disable the GENERATOR_GLOBAL_TABLE_ROOTReverts for:      - OnlyPauser: caller is not the pauser      - InvalidRoot: globalTableRoot is already disabled or does not exist      - CannotDisableGeneratorRoot: attempting to disable the generator's global table rootEmits the following events:      - GlobalRootDisabled: When global table root is successfully disabled",
            "params": {
              "globalTableRoot": "the global table root to disable"
            }
          },
          "getCertificateVerifier(uint8)": {
            "params": {
              "curveType": "The curve type"
            },
            "returns": {
              "_0": "The certificate verifier for the given key type"
            }
          },
          "getCurrentGlobalTableRoot()": {
            "returns": {
              "_0": "the current global table root"
            }
          },
          "getGenerator()": {
            "returns": {
              "_0": "The operatorSet which certifies against global roots"
            }
          },
          "getGeneratorConfig()": {
            "details": "The Generator's config has maxStalenessPeriod = 0 and owner = address(operatorTableUpdater)",
            "returns": {
              "_0": "The operator set config for the Generator"
            }
          },
          "getGeneratorReferenceTimestamp()": {
            "details": "The `Generator's` referenceTimestamp is hardcoded to 1. See `GENERATOR_REFERENCE_TIMESTAMP` in `OperatorTableUpdaterStorage.sol`",
            "returns": {
              "_0": "The reference timestamp of the generator"
            }
          },
          "getGlobalTableRootByTimestamp(uint32)": {
            "params": {
              "referenceTimestamp": "the timestamp of the table root"
            },
            "returns": {
              "_0": "the table root at the given timestamp"
            }
          },
          "getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)": {
            "params": {
              "globalTableRoot": "the global table root",
              "referenceBlockNumber": "the reference block number",
              "referenceTimestamp": "the reference timestamp"
            },
            "returns": {
              "_0": "The message hash for a global table root"
            }
          },
          "getGlobalTableUpdateSignableDigest(bytes32,uint32,uint32)": {
            "details": "Calls into the `BN254CertificateVerifier` to calculate the signable digest",
            "params": {
              "globalTableRoot": "the global table root",
              "referenceBlockNumber": "the reference block number",
              "referenceTimestamp": "the reference timestamp used when computing the message hash"
            },
            "returns": {
              "_0": "The digest to be signed by the Generator"
            }
          },
          "getLatestReferenceBlockNumber()": {
            "returns": {
              "_0": "The latest reference block number"
            }
          },
          "getLatestReferenceTimestamp()": {
            "returns": {
              "_0": "The latest reference timestamp"
            }
          },
          "getReferenceBlockNumberByTimestamp(uint32)": {
            "params": {
              "referenceTimestamp": "the reference timestamp"
            },
            "returns": {
              "_0": "The reference block number for the given reference timestamp"
            }
          },
          "getReferenceTimestampByBlockNumber(uint32)": {
            "params": {
              "referenceBlockNumber": "the reference block number"
            },
            "returns": {
              "_0": "The reference timestamp for the given reference block number"
            }
          },
          "initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))": {
            "details": "We also update the operator table for the Generator, to begin signing off on global rootsWe set the `_latestReferenceTimestamp` to the current timestamp, so that only *new* roots can be confirmed",
            "params": {
              "_globalRootConfirmationThreshold": "The threshold, in bps, for a global root to be signed off on and updated",
              "_initialGenerator": "The operatorSet which certifies against global roots",
              "_owner": "The owner of the OperatorTableUpdater",
              "generatorInfo": "The operatorSetInfo for the Generator",
              "initialPausedStatus": "The initial paused status of the OperatorTableUpdater"
            }
          },
          "isRootValid(bytes32)": {
            "params": {
              "globalTableRoot": "the global table root"
            },
            "returns": {
              "_0": "The validity status of the global table root"
            }
          },
          "isRootValidByTimestamp(uint32)": {
            "params": {
              "referenceTimestamp": "the reference timestamp"
            },
            "returns": {
              "_0": "The validity status of the global table root"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setGlobalRootConfirmationThreshold(uint16)": {
            "details": "Only callable by the owner of the contractReverts for:      - \"Ownable: caller is not the owner\": caller is not the owner      - InvalidConfirmationThreshold: bps is greater than MAX_BPS (10000)Emits the following events:      - GlobalRootConfirmationThresholdUpdated: When threshold is successfully updated"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))": {
            "details": "We have a separate function for updating this operatorSet since it's not transported and updated      in the same way as the other operatorSetsOnly callable by the owner of the contractUses GENERATOR_GLOBAL_TABLE_ROOT constant to break circular dependency for certificate verificationWe ensure that there are no collisions with other reference timestamps because we expect the generator to have an initial reference timestamp of 0The `_latestReferenceTimestamp` is not updated since this root is ONLY used for the `Generator`The `_referenceBlockNumber` and `_referenceTimestamps` mappings are not updated since they are only used for introspection for official operatorSetsReverts for:      - \"Ownable: caller is not the owner\": caller is not the owner      - InvalidGenerator: generator has a non-zero reference timestampEmits the following events:      - GeneratorUpdated: When generator is successfully updated",
            "params": {
              "generator": "The operatorSet which certifies against global roots",
              "generatorInfo": "The operatorSetInfo for the generator"
            }
          },
          "updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)": {
            "details": "This function calls `updateOperatorTable` on the `ECDSACertificateVerifier` or `BN254CertificateVerifier`      depending on the `KeyType` of the operatorSet, which is encoded in the `operatorTableBytes`Function silently returns if the `referenceTimestamp` has already been updated for the `operatorSet`Reverts for:      - InvalidRoot: globalTableRoot is disabled or invalid      - InvalidOperatorSet: operatorSet is the generator (not allowed for regular updates)      - TableUpdateForPastTimestamp: referenceTimestamp is not greater than latest for the operatorSet      - InvalidGlobalTableRoot: provided globalTableRoot does not match stored root for referenceTimestamp      - InvalidOperatorSetProof: merkle proof verification failed      - InvalidCurveType: unsupported curve type in operatorTableBytes",
            "params": {
              "globalTableRoot": "the new globalTableRoot",
              "operatorSetIndex": "the index of the given operatorSet being updated",
              "operatorTableBytes": "the bytes of the operator table",
              "proof": "the proof of the leaf at index against the globalTableRoot",
              "referenceTimestamp": "the reference timestamp of the globalTableRoot"
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "GENERATOR_GLOBAL_TABLE_ROOT()": {
            "notice": "Dummy initial global table root to break circular dependency for certificate verification"
          },
          "GENERATOR_MAX_STALENESS_PERIOD()": {
            "notice": "The `maxStalenessPeriods` for the generator"
          },
          "GENERATOR_REFERENCE_TIMESTAMP()": {
            "notice": "The reference timestamp for the generator"
          },
          "MAX_BPS()": {
            "notice": "The maximum BPS value"
          },
          "bn254CertificateVerifier()": {
            "notice": "The BN254 certificate verifier"
          },
          "calculateOperatorInfoLeaf(((uint256,uint256),uint256[]))": {
            "notice": "Calculate the leaf hash for an operator info"
          },
          "calculateOperatorTableLeaf(bytes)": {
            "notice": "Calculate the leaf hash for an operator table"
          },
          "confirmGlobalTableRoot((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),bytes32,uint32,uint32)": {
            "notice": "Sets the global table root"
          },
          "constructor": {
            "notice": "INITIALIZING FUNCTIONS"
          },
          "disableRoot(bytes32)": {
            "notice": "Disables a global table root"
          },
          "ecdsaCertificateVerifier()": {
            "notice": "The ECDSA certificate verifier"
          },
          "getCertificateVerifier(uint8)": {
            "notice": "Get the certificate verifier for a given key type"
          },
          "getCurrentGlobalTableRoot()": {
            "notice": "Get the current global table root"
          },
          "getGenerator()": {
            "notice": "Get the operatorSet which certifies against global roots"
          },
          "getGeneratorConfig()": {
            "notice": "Get the operator set config for the Generator"
          },
          "getGeneratorReferenceTimestamp()": {
            "notice": "Get the reference timestamp of the generator"
          },
          "getGlobalTableRootByTimestamp(uint32)": {
            "notice": "Get the table root by timestamp"
          },
          "getGlobalTableUpdateMessageHash(bytes32,uint32,uint32)": {
            "notice": "Get the message hash for the certificate of a global table root update"
          },
          "getGlobalTableUpdateSignableDigest(bytes32,uint32,uint32)": {
            "notice": "Get the signable digest for confirming a global table root update"
          },
          "getLatestReferenceBlockNumber()": {
            "notice": "Get the latest reference block number"
          },
          "getLatestReferenceTimestamp()": {
            "notice": "Get the latest reference timestamp"
          },
          "getReferenceBlockNumberByTimestamp(uint32)": {
            "notice": "Get the reference block number for a given reference timestamp"
          },
          "getReferenceTimestampByBlockNumber(uint32)": {
            "notice": "Get the reference timestamp for a given reference block number"
          },
          "globalRootConfirmationThreshold()": {
            "notice": "The threshold, in bps, for a global root to be signed off on and updated"
          },
          "initialize(address,uint256,(address,uint32),uint16,(bytes32,uint256,(uint256,uint256),uint256[]))": {
            "notice": "Initializes the OperatorTableUpdater"
          },
          "isRootValid(bytes32)": {
            "notice": "Get the validity status of a global table root"
          },
          "isRootValidByTimestamp(uint32)": {
            "notice": "Get the validity status of a global table root by timestamp"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "setGlobalRootConfirmationThreshold(uint16)": {
            "notice": "The threshold, in bps, for a global root to be signed off on and updated"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateGenerator((address,uint32),(bytes32,uint256,(uint256,uint256),uint256[]))": {
            "notice": "Updates the `Generator` to a new operatorSet"
          },
          "updateOperatorTable(uint32,bytes32,uint32,bytes,bytes)": {
            "notice": "Updates an operator table"
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/multichain/OperatorTableUpdater.sol": "OperatorTableUpdater"
      },
      "evmVersion": "prague",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IBN254CertificateVerifier.sol": {
        "keccak256": "0x754622fcf72aeef0258e0c975d3fb6879a9ee204767c01adaf76288d31066fe2",
        "urls": [
          "bzz-raw://a06a3c12dcbe6b99dc080b0f47e3485eed28dbe6eb2653c7dd66e73b94ae617c",
          "dweb:/ipfs/QmddRK2Lo5su9fCgmawZeWhTsjHMhJyA67s8K6X5pHYCtg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IBaseCertificateVerifier.sol": {
        "keccak256": "0x920b561911f8c7125e90b0f83bb00f547c9d6abb93e6c65a563ccbb932dc42c3",
        "urls": [
          "bzz-raw://1b4860e482342f53c9770e913b2ea27b85faa1783b129161c9f804a928866a26",
          "dweb:/ipfs/QmTEihDACSTx5DaUcCoXqhwc2UeZtkEA9BxTnNbXguf8rN"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ICrossChainRegistry.sol": {
        "keccak256": "0xa1c7deb4a8cae1c3a99e2d0d93f041dd807f68eb00e9aba256fcfd964d085178",
        "urls": [
          "bzz-raw://b9e5adb44f9cf9c47b96e84b2c8acf8e43fb6a533455acb6d5b3eba767f4e506",
          "dweb:/ipfs/QmS2mhQakzQUWvcxhAx3bXncMRcSUhp4FuokEfNBa65dS6"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IECDSACertificateVerifier.sol": {
        "keccak256": "0xcb235587500fd217ca183b1e74eb77152c93187bd7cd2a7ea88b2d1a72dbcc2a",
        "urls": [
          "bzz-raw://fc4a601bad41f5fd3f0efd04634364c046705a18c116e39d2124fa0589594b9a",
          "dweb:/ipfs/QmaNai7heqtbuG1QeFLPzqT2AoDKe5UgGE76tLoWzkgZA7"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IKeyRegistrar.sol": {
        "keccak256": "0x73c064cefaffe11b80dd55aba654c608da3484bbc573f575e352f267c4f58aee",
        "urls": [
          "bzz-raw://6f4d3e24ab3b99701ec2ee825e2575b168e5dcb2646800599eb18fba61685053",
          "dweb:/ipfs/QmT9LGAftNAQPZugfNsdYu8DWeXqAVCuDqHKUbV2rY9NT1"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableCalculator.sol": {
        "keccak256": "0x0d15fae28a379f1b6b98a4446e2782b79f0441bb0476626a83de519a9c3366d0",
        "urls": [
          "bzz-raw://9abd5cf881a5c747e6f5d9ad2acd7bba453a3ed0cf60f880e00246db31d61cbc",
          "dweb:/ipfs/QmcQvqk1BBQ7JJQzce5jBz46xZ8xovu9LyALnWuPFd9Ftd"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IOperatorTableUpdater.sol": {
        "keccak256": "0x3dac237e962f6ec156b5bc4fbcde6a9ca95f7646125c3d0612904b9c41096c44",
        "urls": [
          "bzz-raw://e7e8e2ea35dc556d574eb92abcb417157edae470da772caf825ad6fd4ecfdc35",
          "dweb:/ipfs/QmSUQKmWj9jF3chiethUhoDvknfwxrEENgvVy5wXYWkkrm"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BN254.sol": {
        "keccak256": "0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc",
        "urls": [
          "bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc",
          "dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x072bbd4fbb3ab7a2e25092cb23df2e0d86ed65c4410e6eb642daacb4a2ad88f4",
        "urls": [
          "bzz-raw://6f73e3c229d7a186b4bcde7069879c62f775101338868c34e6a0ece8b0471360",
          "dweb:/ipfs/QmddqLU8Z3WcAwnpLFYMgYXuLyy99Z9WH11gCfXTkpu9bZ"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/LeafCalculatorMixin.sol": {
        "keccak256": "0xafad22d64633200e17a5ce27dc82cf933670d5bd361e7e0cad624f1ade0d6726",
        "urls": [
          "bzz-raw://cc46bbd93cf32d3124bcf8a26a0bcc107a89471ee4b89c43f6a1303ca1bc3bab",
          "dweb:/ipfs/QmNNgchPAL36SnzeWP3WevixgJcAT9tZ7mfuf28yJ5KwVS"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/OperatorTableUpdater.sol": {
        "keccak256": "0x2dde2180dd3635ebe558ccae8d5af7bc2d86688534ff7cfe7512836f41097440",
        "urls": [
          "bzz-raw://b81c27a742f2b357c366ecb123ee10e3401893c23551809910e4f271d7cf9247",
          "dweb:/ipfs/QmcDE562A2majE9DUZ7Becti9KJajSRTB3EiWrq2JmxG1q"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/multichain/OperatorTableUpdaterStorage.sol": {
        "keccak256": "0x641dc556d338281c51226e608b9a995b460b2577092a46add46046ffd0d13791",
        "urls": [
          "bzz-raw://d17a711799fa1e4358c0b74fc72c049768e61bf78ea1f324309b5331ddd0926d",
          "dweb:/ipfs/QmVA21GJM4HDeLfJ7s1KJ141y3An3hBn84i8M4yurw4ojx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446",
        "urls": [
          "bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99",
          "dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 185
}